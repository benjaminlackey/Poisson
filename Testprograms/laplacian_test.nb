(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    899731,      18227]
NotebookOptionsPosition[    889742,      17917]
NotebookOutlinePosition[    890132,      17934]
CellTagsIndexPosition[    890089,      17931]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"ChebyshevT", "[", 
  RowBox[{"3", ",", " ", "\[Xi]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4763921675969553`*^9, 3.476392177394105*^9}, 
   3.476394420103013*^9, 3.476398925291464*^9, 3.477071847892427*^9, 
   3.477072677862564*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "3"}], " ", "\[Xi]"}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["\[Xi]", "3"]}]}]], "Output",
 CellChangeTimes->{3.47639217897013*^9, 3.4763944205067263`*^9, 
  3.476398926065872*^9, 3.477071849003529*^9, 3.47707267898936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", "=", 
  RowBox[{"r", "*", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], 
   RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"y", "=", 
  RowBox[{"r", "*", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], 
   RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"z", "=", 
  RowBox[{"r", "*", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"z", "-", "z0"}], ")"}], "^", "2"}]}], "\[Equal]", 
   RowBox[{"a", "^", "2"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z", "-", "z0"}], ")"}], "^", "2"}]}], "\[Equal]", 
     RowBox[{"a", "^", "2"}]}], ",", " ", "r"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.476988429315804*^9, 3.4769885839259243`*^9}, {
  3.476988622359989*^9, 3.476988636309658*^9}, {3.476991549449979*^9, 
  3.4769915661996117`*^9}, {3.476991700801725*^9, 3.476991776050613*^9}}],

Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{{3.476988515313909*^9, 3.476988540112289*^9}, 
   3.476988585531389*^9, {3.476988626343286*^9, 3.476988637043745*^9}, 
   3.476991517131886*^9, {3.476991550359202*^9, 3.4769915671365957`*^9}, 
   3.4769917257805433`*^9, {3.4769917589914207`*^9, 3.4769917767741127`*^9}}],\


Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
  RowBox[{"Sin", "[", "\[Phi]", "]"}]}]], "Output",
 CellChangeTimes->{{3.476988515313909*^9, 3.476988540112289*^9}, 
   3.476988585531389*^9, {3.476988626343286*^9, 3.476988637043745*^9}, 
   3.476991517131886*^9, {3.476991550359202*^9, 3.4769915671365957`*^9}, 
   3.4769917257805433`*^9, {3.4769917589914207`*^9, 3.476991776777473*^9}}],

Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{{3.476988515313909*^9, 3.476988540112289*^9}, 
   3.476988585531389*^9, {3.476988626343286*^9, 3.476988637043745*^9}, 
   3.476991517131886*^9, {3.476991550359202*^9, 3.4769915671365957`*^9}, 
   3.4769917257805433`*^9, {3.4769917589914207`*^9, 3.476991776780252*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z0", "-", 
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x0", "-", 
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"y0", "-", 
      RowBox[{"r", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], "2"]}], "\[Equal]", 
  SuperscriptBox["a", "2"]}]], "Output",
 CellChangeTimes->{{3.476988515313909*^9, 3.476988540112289*^9}, 
   3.476988585531389*^9, {3.476988626343286*^9, 3.476988637043745*^9}, 
   3.476991517131886*^9, {3.476991550359202*^9, 3.4769915671365957`*^9}, 
   3.4769917257805433`*^9, {3.4769917589914207`*^9, 3.47699177678624*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "z0", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"y0", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "-", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{"y0", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{"x0", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "-", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["a", "2"], "-", 
           SuperscriptBox["x0", "2"], "-", 
           SuperscriptBox["y0", "2"], "-", 
           SuperscriptBox["z0", "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"z0", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x0", " ", 
                  RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
                 RowBox[{"y0", " ", 
                  RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}], 
            "2"]}]]}], "+", 
        RowBox[{"x0", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "z0", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"y0", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "-", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{"y0", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{"x0", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "-", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["a", "2"], "-", 
           SuperscriptBox["x0", "2"], "-", 
           SuperscriptBox["y0", "2"], "-", 
           SuperscriptBox["z0", "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"z0", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x0", " ", 
                  RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
                 RowBox[{"y0", " ", 
                  RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}], 
            "2"]}]]}], "+", 
        RowBox[{"x0", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.476988515313909*^9, 3.476988540112289*^9}, 
   3.476988585531389*^9, {3.476988626343286*^9, 3.476988637043745*^9}, 
   3.476991517131886*^9, {3.476991550359202*^9, 3.4769915671365957`*^9}, 
   3.4769917257805433`*^9, {3.4769917589914207`*^9, 3.4769917783820744`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
    SqrtBox[
     RowBox[{"24", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", "\[LessEqual]", "\[Theta]", "\[LessEqual]", "\[Pi]"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476991615635446*^9, 3.476991669521472*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
  SqrtBox[
   RowBox[{"24", "+", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]]}]], "Output",
 CellChangeTimes->{{3.4769916542014112`*^9, 3.476991670610374*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{"5", "-", 
    RowBox[{"3", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", 
     RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476991983546445*^9, 3.476992046806343*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
+QhtJYyjRepHg9LNsH239giyQFrUsGYtsgd7svp7gXEnLXqwMc86ip+vYg91
SMYKLSqTjnF9h92aVxdMz0+HLoy0mx/Hrh2TSzbdT4fMjCS/DOD967shVFlh
QIc+7lp7/RC7veFZ804HOlSeOd5Jhf2Ry6gm0J8O7VjyDfDA5+OuaxuwmkKH
jLNuJc/j8wseCOW1qaFD3KdVZK5iE7FRul0D+P0LQUyl+PwXUk9InKemRwH+
crpc2MdSzns3UujR84qyYWMcL03VOukNxvTobV6XXCOOt/Oc7mfOPqRHj1pI
X5dwPD5FyYfbX9GjI1f188jYuh/JCXPf8evNU477P5GJ0dzDzSe1GZD3eAH/
FM4HSR35+iFzBrTCbNFWgfMl61uxx7MnDOjkCP/PFzifluIHWhpLGZBLMP+V
DZx/P6PsgOt+RkQ9Oux3NZZM3D5vL7XnLCNqd9jI7cD5G+kPVXocGNHQzwUq
/XdkwvtPXJRuGiNSnBSa5cL5P7y4an94BxPyZi4bI+N6QWI6UbMGmNAzfuK3
WgiZUKmuKym9woSsG/wbDHF9qZjoVTn+hglNnCG33XqB64ff6E0rTmbkKP5R
kscL76/dgW/tm8xoMdUqVh/Xw5/Z945LiLAg+lQbze92ZKLlYPkB64MsKP16
tbK2LZl49eG63NJdFqRyO5yOzxLXC6+Pj/lHWBBlb7G84mUyUX/sw82zzawI
TFw8ZHaUTDBQrvZHTLMiO3UBpYMEmaAqu5zXycaGuj8x36BVJxNpbu3i5ifY
kMu3UCsXFTJhV53BY13KhtIfWUwO4Pth2rayfH8yO5LR81nKYiET2TE5tlZV
7Kijm2uzg4FMCEw1nX79lx0JJZfvXaUhE5av1N3nhTnQakcSHXmdjxA8qef8
MpgDKekK+3wb4yNyL/p5f1bjRNW3fU7u/cpHNMrO+VyR4kKV2fcHvrryEfmz
tDQ/lLjQqGrs+vR9PqLWzLz0COBC60c7Y9jv8BGbraBe3JgLXR8If77Xmo84
TC70rA7iQiyVdWMr5/iIwa/LVZ9XuVDFk7FzDbJ8hKvoc5vmRm4k/su72bSR
l2CZeCNC6uRGFIWFEya1vMTheAlRuRFuJEkIXj1VwUsIGhSMOdHwIN7uclvO
PF7CuFFwcuw/HnTbaFB51zteQhO8ptKN5UGJBw8/i8D9Sj9dkF6cPS+aHLzH
+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
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-8., 2.0833333236410807`}, {-5.682481075483791, 
   5.682482184051034}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.4769919933070717`*^9, 3.476992047297016*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SphericalPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "+", 
      RowBox[{"3", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", " ", 
     RowBox[{"2", "+", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", " ", "1", ",", " ", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476988368506834*^9, 3.476988417258492*^9}, {
   3.476991886244698*^9, 3.476991897214045*^9}, {3.476991933516513*^9, 
   3.476991943948269*^9}, {3.476992081899728*^9, 3.476992087077898*^9}, {
   3.476992123832498*^9, 3.476992187798057*^9}, {3.476992221347047*^9, 
   3.476992225282262*^9}, {3.476992271349311*^9, 3.47699228696276*^9}, 
   3.476992318502781*^9, {3.476992350640663*^9, 3.476992384291449*^9}, {
   3.476993787983183*^9, 3.4769937907781153`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
dmM81/diHapPWWWo6tYNdyW1ghLSOzGeSy/Or1ww993CKb2Qcv+kzrGadozn
4oDrPn79jIDm130w6pJwpnttK8Zz8cf5FY03XtQRHIDDnYF+L743YzzXuuD8
yilH706bNQiTK3untZo0YjxXPeD8miMjnkersEjX6hVqSdE1GM9VJzh/0InD
r1a4s4jGhrEKb6UqMZ6rPnH+VAh5vaCGReLdDnqmmZVgPFfd4vwCd/Lmjp/C
QyalPmSHfM3DeK79gvOvOGoc4zHUf8c8uSfzoygD47n2Ec5fElNXYHWYh8zI
drf1aAnFeK79i/XJFQ+ceK59jXXOlQ/Gc/UTnJ9LL8Zz9Rmcn4snxnP1N5yf
a70wnqvv4fxc9YDxXP0W5+eqN4zn6sM4P1c9YzxX/8f5ufYLxnOdCzg/137E
eK7zCOfn2u8Yz3VOYV/i6icYz9WvgNOvuM5N/F6uPobzcJ2n+L1X4m/+ebEh
E8Y/2VxX5/ET++G687vn8NkHQ4TC7i8xzyLY2Y7ba/T5WHGeFqzcHIck2H1c
zkjdKQnfn7nG8R1ef8PDHo+mBPDTfxbl8OcTjnN9LzB8L3C+l2se/F5nPtvu
v9ohRvd/PnFTZg///VWmkIrH4iVhRscD0oKjzcNwXE2w6PLsgRxoy7R2f3Qj
G/W2XyzZOFsp0mhpc3LjDMl3GK9NsmYvdP8JvfO/jDhmm4nxk1lLHffvjzIK
uHtbTqTkNcbfql5Tvf9FPsSvDbtWHZKK8aMW5J9KmRlj1OTrN1JI6jnGO095
tD91ViHE2vIq/lFJwPixrXtGdOyLNbq+/qWRnfdDjNe0aDypZfgLSiWnrri5
5T3GW6Tudn4u+tFo4azbKerTzmH86t6HJmavf0GeQG717G3uTPH4u1V102Xx
nxd/gb5WwLOn1wKAIR+Mf20tJeuTXgiHJ5p7B22LAQa9GP/k5t3bu84VQPLW
EdujOz8BA8/hv/M36hLoCMwDuUv5adeWZADDemG888MvpTlrfoBX5oQNS3m/
YzxXPWD8OleZ5BnXsmGl402LrTy5GK9mP8ZukPUNIqr33bulnofjM9XN35uJ
v4NJQTK8frvCsT5HWBju2jsyCGqzBM59M4jE/XLHOWmoPm8ZCXsYXFdmD9/r
uebHdeGKx79n4/penJ+r/lEXVz6YZ5vNxwffyzyM6sb47zM/ch/nH7HjmLm2
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
YaPgXMc735CzstLUosD1HfB+//UjceGpyHlMS0qbvlgz3PGtmvjBKxE5H9l1
a6yHZBXskOETefY2GjnnO8eJTZxRBFMMFr8km0OQs8y4iNh5lemQYrKr7Kav
L3JeUdr+cdwxP8MzOk0JEqMd/8k55Ppv164pFUB9Po/hcHYw7+G7pdYG1Of7
GA5nHc3SsoVxvUB9RsdwOK8SnzI3bCeL/oyL4XDm3X0xseMqD6E+42M4nA/e
dBHyXMNDqM/4GA5nOj9CfcTFcDg3h77q5YvqBeozOobDuaj8Svq12x1AfYbH
cDi3PA1yUJ7VDNRnSAyHc9OOPQmt5lVAfQbEcDjPOf5bI9a1CKhP7xgO50V/
PI5tnpYB1Of1GA5nTl7U5+YPDJxZ3PWsSNUzcNfzDqqegbueB9z+q2fgrue9
VD0Ddz33Ov9Xz8Bdz1+pegbuer5L1TNw13M8Vc/AXc8+VD0Ddz27UvUM3PW8
gqpn4K7ncVQ9A3c9R1H1DNz1vJ+qZ8N/ceb0Z0OqPyPnzXR/tqf6M3IWpfuz
BdWfkbMt3Z8jqP4M3P35ENWfkbMp3Z9HUv0ZOb+h+3MH1Z+R8zS6P9tQ/Rk5
T6P78xaqPwN3f75B9Wfg7s9FVH9Gzt10f86m+jNyzqT7sw7Vn5GzEN2f86n+
/E/OPbTfWET5DeQ8h/YbmpTfQM5s2m+8pfwGcg6j/UYx5TeQ8zvab5yg/AZy
tqL9xivKbyDnZNpvrKP8BnIeTfuNuZTfQM5GtN/4S/kN5DyT9hvfKb+BnBfR
fmMP5TeQ82jab1hTfgM519N+I4DyG8h5Hu03rlB+45+ct9H+GSj/DNz++R7l
n5HzXdo/b6P8M3I+Rvvni5R/Rs6vaf/cQvln5HyB9s+jKf+MnOfT/rmY8s/I
OYX2zyMo/4yck2j/rEf5Z+S8nPbPMZR/Rs4utH/WoPwzch5F++dUyj8j5yDa
P0tT/nm4b9D+uZfyz//kbEffByup+yByPknfBzdT90HknEbfB2up+yByNqDv
g8up+yBy3k7fB+uo+yByfkLfB9up+yBytqDvgz7UfRA5O9P3wTjqPoicT9P3
QTZ1H0TOf+j74CfqPoicBej7YG/If/dB5Lyavg/eoe6DyNmavg9OoO6DyNmR
vg9ep+6D/+TcRr9vTKTeN5CzCv2+kUW9bwz3Z/p9YzP1voGcden3DXnqfQM5
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
AK4FU1MGvZswzxWnNwpqDulqFVjqWPW2AfNs2i2w+nNeGZwXbC909MnAPJ/n
hW+HohaY++EA7wWtX5hnxL1ZpoOD3TAvPSlnqX0Z5pkR5WO2iD0A03T9+qCl
EvPcobCs7c4BFsl1WHha/XIV5hlUKDvr3jwWeW40acuFeVWYZ0KK4kv53n5Q
s655k21XiXm2B+Web3pXDqGOv7OS+BMwzyP3dwb5v2kFkfmG7yxUszDPX4cl
X3wZ0wvZauWWZZ4/MU/Zg2rBfsJD53tS3pU5NYWYZ6SQ20dQ5yEO61fn8ub9
xjzfmex3UGpikXlyk43mnv6NebKOzZd+ajIIbTvN7oyaVYh56haMPKOuOuQz
No9x3qUbgHlai/+8tkexDXxCxTRkBsMxz6etfGu03/ZCl8XRh2bBbMzzlEaT
3KANi5Qlr7WIiknAPN8ezR/v4sxDYGJClLZwEuYp7rLOcPESHnLUoSJ67pdE
zLNWy227cu0gWJg++qplmjD8dxd0nk+oPIE7TycqT3x3fUbnGUflie+up+k8
E6g8gTtPZSpPfHeVoPO0pPLEd9c6Ok9dKk/gXvcAat2Be90HyX/rjnn+ptf9
E7XumKccve6nqHXHPD/Q676FWnfgXncdat0xTx563cupdcc8m+l95ETtI8zT
n95HetQ+Au59ZEDtI8zzK72PtKh9hHna0/sondpHmGcwvY+8qH2EeSbS+0iJ
2keY5z26L72j+hLmqU/3JUOqL2GednRfaqL6EubZRvelDKovYZ4idF9aSPUl
zPM33ZfOUn0J81xJ96U6qi9hnn/oPr+P6vOY51S6z7dQfX74dwG6z/+k+jzm
GUP3+R9Unx9ed7rP/6H6POYZQfd5barPY56z6T4fTvV5zPMWfW5aUOcm5vmb
PjftqHMT8zxMn5sG1LmJeV6jz82X1LmJeYbS56YmdW5innfoc/M0dW5inl/o
c7ObOjcxz9O0D/lJ+RDMs+n/+xDMU532IS8pH4J5ytA+pJnyIZgnm/YhupQP
wTyNaB9iQvkQzHM57UPEKB+CeXbv7L7WblMObq5eD/Ze+IvvDyKsa4OxHxrh
8XwdmcSVLfjO4H6uVv+YeBt4X510zWJiJ74zBCmf3KJy/i9cPChXnLi5HOdp
EztwQ29FC6wvCwoNZDfiPF8+fb4oo94JfwreLJ8p3Ybz2K+/xx+kUwNymSGr
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
qemjABm/SbdIc0UJ6jI/4lpb8H0QXnhV8lWGFqIumR9Owlmv20G/62yMtHMO
6npjU2n2+GANnEm5bz+P5wvqchR2n34wOQ9sthh8SJ0WjbqajgiNep7aBbI7
k870WXqhLskg080n/aTJZ1/j11evpKMu3YNfXykP3ddWr1tg3pIWirquWr1x
f+4gTmTGbjuTvyAOdYmrm7xtURMk80rFD5UNJKCuyaEqoUP7kPSz8j7Of5CA
uvwCd7WLT+2AJcqa+m7JbNTVf09YNEq1FtzEXfms10egLvOg71kvTufDjCql
k/k+L1FXt+GSTWoPuyDnTqLz+KgUPHesK1JdH9+TJhKf581NSPiJPvmJ594r
s6fKEBeJWdKLzErQ3yovf2Bydrk4yRKfYqa9MQ99Wkyj3NSTCoJEavZ9l0a/
b+g3RPzWBf9P1wGtyMkmDxLwfCmyGJh0d14HxEkla1bIh+L5sqmc75GlaS1Y
7FRzk5/ig+dLzsz5OnVB+RDSGPxJ1/o0+g3bYh2jtVWdEKx6/WKHUcGwvzVL
7JozQ5rcyq0hU140DN83r/UlhYUO+bFtpQk1a1pQ17GjIRKRd8XIj4OTbnhN
qkNdloej1ubeFiCBN6xDD9mXo64XirUF/6vDTRsG9P+GFqIu107e8jF57TC5
yU5ff2sW6lKYn7MwtKAGjho+m2m3NXHYRyXclptpnQ+3bGU/Fh8KRl1LhSWz
f0Z1gNXdK5p9X8pQV4aa7SqfAUlybqteyvUdXagrP/utmk6CFAk+/bJA6mUv
6nqoZ/Ja2lyU9Gil/F2f3o66blicWPvcj59YluqKDgz5W46uUxdcLvyvb4yU
2/57qG+grosdO1ZEstrhksm4zc7+v1GX/MIX+rzl1ZATnbuvYV4W6toYdVNl
nmseXG0t2Tg78iPq8igxeZCu2A69Oil7DWWG7yPaTo+/qTSLk9zKRftUTrPQ
5+jFbmg3c5IghwZ9D3fNGL4vSLrdnm94UphsnGTv8066H3WtOjNqbcECPnLx
7JQkt9Z21HWt7HTc//r85DOS4DSnEXXFiY369Tm6FfLC1T56vChHXeJuRkKL
dlQBWXSvCg7moS4t0p20bdJPmHv6q++kqcmoS2zx27WJ/K3w6uHq0EtfG1HX
4WVdU4KWiZL4ncYzew7yo65dE2r6Qz1EiS9PVuu+WcN+vqjGe2ukliCxjf+8
KKqIB/1b5qr4iDvneMhJq64x3ga9qGtm2MLO+UPnsruh3oqhcxl13dR6u7RW
qgVMp+0o0ZGuQV354xYHL91VCdq9kw2V1P6grl9tR2yCNuYCb5bq7Ms30lHX
WOE9rpdvNkEtv7X1/xH25WE1de/7p0lzmqUk0aTIlAi1ljlTSCRDpowlhDJn
JsmYkKSUSkgkY7VPk4pKc5rneZ7n+p3z7nOe47O/175+7z/nup7rvOvc697P
cD/PWtk9Djw9P2HRjUuyasJY1VIw17BfGPaVP7s88eYklu58P5w1/FMU9nU4
dttzLxsB/HmW4JKaXEHYV/Fahzy+xGGkulNtHbNhBPZVI3JKjq2XCmZMm7JP
tAf2dax8xtR8oVakmHjMPbu1GfYVtcauwLanAp27aDsj8Wk57Ksei1UV3GhA
AQ6vvx3z5ultLzED5VC1AXSnXGPQ9bYA6G2zzbGLik8J4PldIq02o8RhXxZO
eREh8wVwZPqcZtU/ErCvibs8tm+dx8CFd0IXWdvw9Pat2hCjtY196Fzfo8aZ
Q3ygt63uOCmx9arR5V+XWHoV9pW8wy7Zfl0DOiCfGTCapce5+6LgJ2jwwzkm
pY9g0uwL9CGlvwC7+UbXg+z3/PqtcSmVVOede/6tK/jMtp9P9o79156k61xx
tFEU+y7JMl05JAPnFEHvdxcozhDH6bfuZhRf4dnfxT5ifK0WxYd/q00aCJaF
84sra86saXOWwMbipounfeSdh86JnPlDb6MIHjkRcmWVEe88dNdlvr8mYyRw
xmaNgNPpvPNQyvMC3Uvpm5g0zxH08FrzIBfvG8ko9NAS5+HtvPPEZZMKg9nv
T7HfkbGI/f4ULs+UuAA+lZ6ImbDfK/3kj8IOlwsSwFtbxMbLbLv752zlf+23
I80yJidK4eFbObF1DaOBt4eju7c2V4/GqRt2eG1IkQJ779D15s4OKbxcT0x6
xUtp4M2TUZ6a8EIa25nHnt3UJwV2W2eZ6AnLJPHtRSpulmY83vwOp8v2rZLG
S0fEdfevkgQ7Ja6ZNHENvA1uWPDn8TV+HDDt1YE1xUNw7kDJh8CP1onuLPb7
xEddtnGx0hIBHlQMa9rY9qYVqgv+tcubnzr+5pIMtnf5ciLaUBx4OHXVR2/G
gAy+Mfny70Xtojx/S41JLn0vgwOWK5cEX5MAHtaXa58pD5LFFRdNVGMaRcHe
1pgbPOuPNPY+Lfbp/Tjeua1E1tLNG+bI4m25m+VktoqAnZLPmTT5HPjpMssP
fHpSEFe3hOstW9kL/FDqIPBTmnDpI/s98rHROwYM1gkADzMSA5LYdtVT/gH/
2rfX39jSsVgO5x18tfR1hxDwIHqmLHziKzkc6vv7VvFdQbCvN4w6f8NFDt+y
29DHmCkMPLg07UgMXsfiW4WPv2ezINjV11+b9MZPFvssPTZLRox3Prv9xKab
b2Ll8Ab7onVhDbzzR0odZ9LUcdDJW4Mrjdjv3yn+se/vnTntwA9F/4AOz/xk
pSZYIovtJt1kBusOElwe+IznTWfbPZY/F//X7q2lqc70lcfCyR/V5Vj9L5eH
Ex/em3jXsvbrgflPXR2C8y+/Q+qTTYfk8ZB5W9y2vXzAg9be1qMX7ijgsoju
jjGfB+FcTGQdcbxBUR4Pjj723tSZD3gon+x0spm1vmK81aE1s/rhvIyi3wga
/Qb8XIiMV2S/P6gpP9IhyLUG+KHoXuBHZ0Cu4HiIHP6o23tVYGIb8DAiuLmK
bb/mbZrI/4/9yf2qrW0PFXB2m8PM2/s7gYcHug7PJQgFXH/48Ga0tg3sEsxN
lXcFFLFSw4aJA2e7gQePHam/KrYqYqdrSW8va7SC/VGijZmNugIeKtzXcXZm
D/Awg9D3mOirgFeED45WkWwEO0W3EzS6HfjR0JX/PhAojP2mrH3ya0sW8EPp
d4Cf9ik7hhaMkce7Htww5Gfk8vxkajrDmGUXkR1jMDKSA/aEas/CxwqKeN2K
44+VXpYAD5cPutuP1lDEVxoaVQaHM8C+82Dtj1GPFfG0e/fvtRypAB7cxs96
8OaTIjYTWxNW3JUE9pBw/orASAX8yyzrSGZ+Fe9c9dYd/Ru1Crhrg5mPrdg3
sFP6NYKmXwN+tKRHfRuVIIxz7jzxdZ/2A+bYlD4X+gsKD4jLA4U3sFN4gPMp
Cm9gp/AA51YU3sBO4QHOsyi8gZ3SpyOaPh36iJfR+nrs90+ddZDXul9TCvxQ
5hvADyWOgAdK3IGdEkfAAyXuwE6JI+CBEndgp8QR8ECJO7BT5jOIZj4D/Ox1
bevufjAKd+tJZ7Dfn8XlhzLXAn4oeRh4oORtsFPyMPBAydtwLkDJw8ADJW/D
eQElDwMPlLwN5wiUuRyimcsBP8cWnmyduEwIj/6c35hp1gX8UOaZwA+ljmMu
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
fnkoP3gsgeUNjyv2zWoiikysTDaz8gmlXhM09ZqgqdcEt15ru20Zv3yUAg7a
IlVkerqLEFYKm+/Nyj+UOk5w6/id+8vO7f0oi3+0toa8Ueog1tyRrY5m5SXv
bV+TZ02TwXEfNUZmubURe5Lf37qgUkusCfNabSY1GrunjT437WsLodcYKsnO
V6E72oZ1msTxmGdzdH1lCwnNzg7VEFbepug0gkanETQ6jaDRaQRXp129z8/w
vCiH/eYIvo3zrCASpr8Ji2Pl/6W3Q3fmbJTGbibz5kfblhJmzktW/GblfwpO
xMVJWQfRrIO461CeI+I+Rwr/iMs/hWfE5ZnCJ+LySYlTxI1TSjwibjxS4g5x
444SX5gbX5Q4wtw4osQL4sYLJS4QNy4o/o+4/k/J/4ib/yl5HnHzPCWfI24+
p+RnzM3PlDyMuXmYkm8xN99S8irm5lVK/kTc/Empv4hbf09ts/NXq29Ebr8j
t1wtrEQtd56ZsPMkpS4jbl0us7InbkryY4ccRtl3iX6U3jZT77XO/6nXmFuv
Kf0m5vablDqOuXWc0odibh9Kqe+YW98p/Snm9qeUuo+5dZ/St2Ju30rRA5ir
B1IvzqiSOCyJV0xrvdE/Twj3Cawcc5eVJyk6AXN1gvSGPSkzMoSxw6STL5nT
+PCokVvy7DxJ0WmIq9P+yNuP+Ti7BTFijilMkWtC+yICShx3/R/9hmj0G+bq
N8q8AtPMKzB3XkHRe5ir9yhzDMydY1B0IObqQMp8A3PnGxR9iEEfhrtXoU5R
HHRy8YGYqSL4jcSs0HOsPEzRjZirGxMXCFSz3w+1J9DHcHC/AA7NJ66ns/oy
yr0CmLdT9Dbm6m3KXAvTzLUwzVwLw1zrf3U75up2yrwLc+ddFD2PuXp+vqar
KPs9TcSMgrvs9zSVCmcZX7/bQNX5mKvzKXNRgmYuyqSZizJp5qJMmrkok2Yu
yqSZizJp5qK8c/n/nZMTNHNyJs2cnEkzJ2fSzMmZNHNyJs2cnEkzJwf8lHMT
gubchKA5N2HSnJswac5NmDTnJkyacxMmzbkJ4Kec8yKac15Ec86LaM55Ec05
L6I550U057yI5pwXcfFTzv0Rzbk/ojn3RzTn/ojm3B/RnPsjmnN/RHPuD/gp
90AQzT0QRHMPBNHcA0E090AwzT0QTHMPBNHcAwH8lHtBiOZeEKK5F4Rp7gVh
mntBmOZeEKa5F4Rp7gXBucxLok10u0U5yjD1/RXRXkUsOvookK3fJH1Pei26
0Y+U04+dZsSNEBWnnU3Y+k0dr1Rc9UAQ/7gye26frwhzo/+ILlu/DT87H34i
QxQ7R1T8uNggxaz9mZfK7runzRZavKSxErnMXShadr4C1p8kvDl0gukw2vvm
Wmr+7EFY33deytJ9Z4Xxmg6ftJmlQrD+3e8Sg5GnJbHa5np9j5PisL53n+Aa
j+k1aPzmY5HaP0phfcOXGlVLWLrU00jDeLptAdg/2KubCSQy8JgA53UCc3rh
d88Z1jxk69UnrxaLsecPXHvyS6QdNkoMH+rPihNJ4Ac8f45INbB1rMkXxlz2
/IFrP9cyO8mP1UcUTR1X1ndfGHCiq8X/vef0w6ZqefZcgmv/MakhP+xZPVr/
9lzizfYswNleE7Zl5UIBvNE+v27m+mbAo3fm7pj8QknsZuEtfuRyD/yuaEz8
N6koWTyz+uDuB5eHCO76tWfSHHM/NSDBF+KG+1Ynw/rn8yV8IyQEcX/gvi0H
z1TC+pLbrgfuVBqNg+Nrmk/FtMD6pyfkH1C8KocXDfK9ym3ugPVnszxl9Y5G
1LCwvHX7tQhYf9WtnreKNwVx7ec7JS/9smB9/3v6mu9zWXXqQuZsA75SWD99
yzKm9qAc7vW5NbNXsZJufUSzPqJZH9Gsj2j4QTT8IBp+EA0/iOb5Iprni2ie
L6J5vrA+xc9hfUpcgJ3i5/C7lLgAO8XPAQ8lLjDXTvFzzMVJiQtMkx8QTX5A
NPkB0+QHWJ+S3xBNfkM0+Q3T5DdY/9u3MrWY/GrUZh0mn7m9gTg0dvQ4dp9I
6V8Ibv8i7+Q99jPLvmX+0fRpLPv8WKvPbPuFCypegQf4sEi7R2zKHAYz0P/h
N/a5D6UPJbh9aPgSu3FHLgniYn1blXiPIWKfn6Uc+xztceHRjfqhbSi8TLu8
LiEabT0wZhb7+3p729VFgzuRod+kNbIq2ajpYHk6+3f9Pgjass+bXvgZfGK/
X0Zy2qZu9u9S5oSIOyd0+SGahG8IY+sdYdMzr7WjkEOJG9i/S5n3Iu68V2ne
mOgcVh10lv+ozq6D6LbwKH9WHbSN1P6icCAGddzxm7ZF7CdxoU859v6AGv6x
4f5s09sF6Of0LonlF0qJ9d+9FrP78XkDm7tGUCcyeVA7YI96ifFd93ZIeY/H
73L8xK6f7kXXWxNnnzYbIj5t38BXx+rHL9gwx09g9Yl2ujX90ck9hIBqoZgT
q088XKUZxf57ugYfSbO6s+2Ew/07Xux1nh8xy2PX8bCf8tXs+71v1+d8YNdx
Cn6Ci3/28DzhPXuH0HzFp/a7NWqI8c5Vx9nrUPghuPzMzz8sKMbi33TgpIGc
SjZRqjg+js0/5bkQ3OdSuOTaicX1DPzxKr79a1kZEb3ftpPd52ZPDy1h2/Vf
h/ex7Z0f+ovYdsq5IcE9N6Q8X4L7fJ9w/OQz6ScE108Glx/zW7V5BAlZHxy2
uvyHuCcy7yZ7X8PXHHJmtvHjaI3tys/FMolSnfVp7LkH5TyX4J7nUtZBNOsg
7jqU/SKa/SLufin8Iy7/lOeIuM+R8twR97lT4ghx44gSpwji9H/9CnH9ihK/
mBu/FD9HXD//zvHzeNLPEdfPKfkEcfPJAo7/Y9L/Edf/33L8/yrp/4jr/9z7
LQfJ+y2Ye7+lVUxd1kQoDSVeda7fn5dCfFp15w37vJ5iR1w75b4E4t6X+Lxa
Lz7NNQad3mgkM2n2T1Q7wfko+xyQYie49hX1J5bPHs5C7Qu7Sh7fySRmh0nc
YM95lsi82um0IgEtvsDfrJzCJK76yv5i80O5Nwh/F0C59wh2yr1NsFPunYK9
SFrNJe58MnIvMf4+7OeFEuWZCezfbbGdUTHevAq9e/ZH+7t9OBq3+sts9nOp
Vjmx4HlyAbKu8xUKsYlAi3MOXGbj1+/RKfFh2UvzjCI+sOxfeuPOs+2DcShl
zddfqD7WiF9SNBwdvXE4nr3+SZmtvzIyYk1yvdcP/wwKN1k8xLkH+79/BwFz
G8rfa4Cdcm8Hce/tqKpMXjvxxw+kf9FUwsKTiUw3xF1knyNT7ATXTrkfBfd1
Kfep4H6vautm3ZJlCahijqyeaclvwvD3bDP2ee6QH7mvdhNz9r6iuPsa4vDQ
QPJAcHmo4vC5neST4PI5jcNnGcknweWT8rwImudFcJ/X0v/1K8T1K4ofIq4f
Uu5HIe79KMp+EXe/lHt6wBvjf/+7SH6IYL6Lt3FqfBsax+TXFDXtItp8U26v
WZdH1EkvumDZ1ogUJl9wl7RoI16//BJ1L6qKiDc7+FVPrhq971jokm1fT5hr
nCoLc2wgRtvgxos6JUglsuKEd2A5UXX8TYr8mWYi1eRkXevdTNSdpdv63C6X
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
XxvuPjw4i+x3RtxC9jsjHiPrjPiQrDPyShIPM/Jfss7I68k6Q15EPxl6S96L
EU+S92LYPcRi94ifYthhxGKHyfMMnBELzuR5ht8EFr9J+GfoG0WvFx1xrtFK
SIWyf2fpjbdLIXEaY53kBaK4DnIL10FY1gmdRWvLJu0ciNudj6hMs97QjHTw
dzTv31s4/tPRBmvGJbccu91A1ldnzj6ms7cZbjzfLljeWY3W4fkw8/g7s5fk
dMDk1osS5xSqyfNBQUH8Yt0tkGZSe8Ospow8LyBQMlH2VwMoqtwPyzMrQuV4
vsrMe0W9MRsLQUGvberRFfFk3oXF850HXH0aoKtj7q3nqj/JfC1H/B16CP4O
3QR/Z7fMs39nl2EXXN5jZHIXlRB+kpOLdrQsawOjJV9bd9gVEn6u43kvIrx5
L4Qfqf6jZXGLqyGzG5SVD2cgFzwvpTBWZuFXkSKY5JaTt/1QOOFzB+5vrMX9
jTSfHR5JYy2PdoOVnMCCmyK5hB8ZPG9Hnjdvh/CzZPevA0ZuTTDmkobwQsE0
wo9QopP2If0amK94OsW6OYHw4zF0h2/1xBKoXSQeL3wjksxxYquzVOO5ImcY
c0Xc8ffI8/D3yDSfrxaouNoFtYOXbMairdkxhM9pib5mlZLNcP6h5dJzsyII
nzEz3FIShWvh1LuefPRPCOGzL1qvKOxxCehfVk8+GPSB8Pk8MFXh4vSfkNax
aOPDdX6Ez82ht1VWVrST80/6dzf3LVfRWtT8p86CfxfPs/lzXop/t9YxwomK
LiHr9O82yuaVTd/2k6zTv8uQF9A4MPQKWPQKWPYFsOwLYNkXQL9X2p3x8+8p
5sG2BMMO1+gMMs9ktF/kVMshtdC3e+Tdcc0lQOubD/7+9AL+/pTeF4x9DSz7
mvAjguenCfHmpxF+9nZKpp37XA4XuvQ/1I0rBBpngY9z09eq5cDEip4rZjt+
ED4n4z5SU9xHSvPJsD+EH8b8OsLPzoRRbd/G18C75fIZ2wfo0fz8cO9+FWdc
CvnpO3e0NBQTfgJyNZ48PpAH98IvVlGbcsmcIkc8H4ZizIdJwt8V6uPvCml+
pgs89pr6vA5e9/ONvW3QRPgxyLzZfOFpBbg+fUo5na8l/LhxIkvucItAamhv
7MZjZYQfnaOB0O75E5Sj65K6ivMJP7v7ni0uL0mGc3L+14NV04HWQ8bvIpbf
RSy/i1h+F7H8Ltl3S/65kr9KuRMmKqydVnW6HUXjOgVzriCLXBCLXBCLXAg/
WcOPlSSvTYODbYHx49tTCD/lK/SDt7mHwx3xfcOXG4Qhup51XfXp6rE3e2DW
o3s1t11bkA2ua8xYJZi/pb4bhk5VO393Rgvhn6HPiEWfCZ+MOVeET5GI1/1v
dmZA0saRvaezvhM+O1w9QvK9IqEx8ouq9bcQwqf6+nFzxDN7wWfJVZ+A9Q3o
Ca6zLDabMyuuog/yY3ozo4saCP8yCXNCklT7YEuuxN5guwbC/048vysYz/2j
+UyTenhTWa0I1j5JPXSwOo3wObHiY6ripCw4/t3lpt2qWMJnof/R8Pp/o+En
13SWpXEQ4ZNtHuDYOghZbZ8NQzP2RTzYEEHoPJOcnRAVEAPhGmJZ9c/eEToz
feZt4Ph+A1XnxCWlc33JOsOPAIsfARY/Aix+BFj8CNlHRxeLyY16w6HMH43p
3SVeCDSeDP8LLP4XWPwvsPhfYPG/hB8GPqQ+m7O0U6x/z0DeyzmjLZFYCbQ+
5EUGpoYLc6iWgM8fU9UqCf+MuAVY4hbCJ0O+wCJfYJEvsOgzsOgzsOgzsOgz
sOgzsOgzsOgz4ZNtTh1j/wLL/iV0GPaHrMvhOqwqrsvT64z4ivgXtrr8kxX5
9xQmN4BX3lcHR91mEsdabfoC1XGtsPvciBO6o7qI3bjl2hn18E4bPP/Ar/ZE
tJvYDQZ9wk9mksWVS4ea4Lzk6VkiCo2Efta5OTnLCzrgzYUDht5z2gl9ur6/
DNf3Cf2/4wpCZyGj7k/TWRErddb6JIcyPLtw1M3UArJuZFMQk+5aROIuGp/K
0Z27En5xKKU7Ji/MW5LJ8+LKbbljT/FRdjdT7a/fTCH8zNO0XC3Z2QEPks92
3pKPJXHO6afm17n9f+r7NB0GfaK3Y3/HI3/q9TR9xu8Sfa57eGDErCV/nqf1
mTEXiOj5pSuTzuRs6iHvS8cVjHibxBvuT6emOlvFkudZ9I3oz4TFrftF9nbA
bck3N8wrsgkODPzJ+zL7Aej3YuRThI4/7hPow30CNB2G/pB1ht4Ci96S32XE
jSQfYcS9ZD2mT+Dzi80FsNH6W29iVgpZn77pst4N2TaIvVa8UmlyBWLhn+gV
w94iFntL/C8DN/I8w78gFn0g64z8kdgHRv4LLO8LLO8LLPuR4M+Il4AlXiJ6
y7AD5HlGfEieH8OY70GvM/STyCW7qNpnS0QjPBbNq5ydE0byZca+Js97T2mv
GVX+p++Ofl5e4sw/W2Z3knX6eYbdI/jMe+976UJzGXxo3SJ07Ew1yUcYdpjt
ecInI68h64y8jKyPytEIkjOrh2uPlPkvziok6wwcCD+M8wSyzjgPARb6ZP3/
ACxy5mI=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHn8F9P3x2fees8w8/ae7LIWssuWtbJmCUUppFKiQqWiIqUokVLITrtK
m6RIIpEiUdZkX0KRfd/5vZ5e9/f4/nE/c95nzty5M3PvWV7n3E+djj1aXFqK
oujJchRtpOP5SRRtlUbRWtFn6sRDcRTtq3aN6EFqu4heJJkzJFNP9GDxrlXb
R/SteRQdodZf196s/upIrq/oUaJri+4jeprkdlPrJvox8U5VP3vq92y1vdUu
E3+e+E3E312/HxZ9sui6okeqn531u7dkbhW9q+grRd8iehfRV4g+XWN5QLK7
qk1Q216tnfi9JVOVzNmiH9DxWPW5I88l/tb63Un8IaJrib5IdB/RhehzRE/R
8RjJ7yD557Io6lhEUU3xlou+UPR2op9RayGZAyTzvPgXiL8Zz6fxjBdvO7WB
oq9WqyX6QbW91Hqp/8G617aS7SL6UR1PUT976NwQyU5Uqy/6AmRFn6/jJzr/
qdqrkl/POxP/ch376XiVWiPx7yiZ/7HoXSrqQ62/ft9ecj+viz+D69R2Et1N
x95q6ib6KXY/qY4L9D0jtX90uFe8Pmo1RddRfwdXfM/71W5QuyvyeBl3P9Gd
9R72kMww0VHJc4j581d4F7yHw3R+N7U2EqkRnpdrBwX5S0QfovO7qp0m+jdd
M4AxxH6X9MO1k3QcWvK92uu+dSvu5w2N/Ri1RsyHMFfpk3dBP/S5ccnXc+0j
kv1d1/8s+lp9l230PTqLnq7jcXrnO6mfZmqr1MaLv0oyp+ncYtGviG7GXOAd
qo/BmgNn6PePoq8Vfbrom3SfEWrn6PqXJd9UvKcl/6KOrdX/4eK/L/nLJH+g
eM0l86va/pIZr7EdrXaL6JU6d67kj5D8C8xT0YeJ7qK+1+jYWu1NtbNZr5Jf
reNZak+K/p11I/k2+v2W2rnMa/H/FL+f+G31+yO1TmqrxU/Fu1btYv3+VjK9
RJ8p+mvRPUW3EP296MtEtxT9o+jLRbdi3mo8L+t4htoPeq5r9Fwn6fxw8W9U
O138V9Saqz2me43T8x2ldrPoqeLVoQ/RH+jay3XtQbr2ujDHWBdTWe9qH/GN
Sp7TzOfLA41y+0jX9tG19XXt71XN18xrp6bOTVabGplfQxP7m9TziPnAnJmi
Vluto2QW6rpGmlf7iZ6pvo6X7M4696zoM0UfKHox30z0/qIrYW2wLm4I9Im8
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
ajHJH/4fAyHTtQ==
         "]], Polygon3DBox[CompressedData["
1:eJwtnAnYFtMbxmdezQwzn3mtZa8sLZZKCFkje2XLvhapRNnjX5R2spOlXdot
FaGytai0SDvRpmwlIZLd//51z3U113ee85w5M+/MmWe5n/tUvWWHi9qXgiBo
UykI9C94OAqCt+MgqBUGwe2Sb0yD4NZyEAxWfy/J12RBsF7yXUkQXKoxJ0hu
I/kF6R+UvqHkGjr/ecldJXfW+btUBEFLXWS05A+lDySfLXlvnb+nxnbR2BvU
XV1yX807QX2HqL2DxlTR+Rdq/pM1Zh+NeVvnN5d8t8b8Lvm3PAgulnya9PtJ
3kvjL5J8quR9JZ8v+UbJPSS3kfyfzv9c8qzE9/CZzr9Jcj/p75e+nsb3kHyF
5OMkf6LxrSS/p+vV0T39LHmq5Fd1fh2df7fGfyR5g/RDNf5IyddJbqPzz5Z8
gn7ra5JXS14k+Xrp20ruL7mb5LmSf5Q8RvMdpvne1t9JOvZW+wpd72m1K+vo
qPb+6rtO15+v8efpepepr6XObyd5oObrofm6p9ZvlX6c5It53rsEQXvNcYHG
X6K/Y3UcrrmO5hlrXCude4aGlUNf/x4dn6l9jMZU1nwXaL4TNWZvjZmYeK6F
0h8l/Qo9v9bSPyv9A9Iv0fXaS56jeY/VmJXS3yb5Jekflf4LyR0kD5P8iOQW
mv9myQMkd5fcSPINkjtKvkLyAZKvkHy+5MMkv6/5r5T8oOYPNf/D0u+uZ3wT
z076GyTfIv0gje8peV/Jl0puIrkW61zynZJHS35K8hbNN03ytfpNU3nG0l8u
uZn0h0r/MuucdyLdEbrGftJfJn1T6WvzvUg3Qveyn/T/cb7afSN/O7Ult9P8
X2t8Z427TvKm3OvnGskfSB4q/c66/6s09/M6Z5b0zaQ/RnPsye/XfI+ofYfa
h2r8Q2q/qb6aat+mvj3UfkB9LdWupr5TNN/tOn+k+p5Q38eSU81/seY/XPrf
df/nS99Q+r2k/0jXu0TyWZIPkrxI4ys0/jKNP0bjM81/u3QXS1dF8qk6v6XG
36O+y9U3WuNzjb9O40fxaWv8HdI151vU+K+kryx9W+lbSO4j3RsaU0PtDlxf
+kj6JtIfqL7Rei7NdIwP/T00VXuUjkPVPkx9N6m9WudfK/kjZLWP1JwbNNd3
Ok4t3se1ar8o/emSX5bcQvJwyY2YT/J1kodJHib5ZB1D1a6pOW9Ue2XsZzeL
96X7e12/93n1V5P+NP0dI/310r8k/bl6Hl9I/0rs33yU9E+rfbraz0g/Quev
kf4L9Q1S34kav0Ly0Njf3NmFvbtV7THcb2r7NFP9TdW3TH+XJl4bs6VvrfYa
je8veY7ku9Tuqb7vQ9vDWrree2W/B57/YM33jeSyxsyXPpT+Tx29Wa+Su6k/
5XtXe736uuq8XpJ/DP197aCxS3V+bfWVJHfX3511rND4ryTXV/tJnXOa5Kcl
f6f19K3G1+WdSK6q65dkf77E5mhMV833h44T9CyrSf5R4xrr2KSxB6jvLek2
6Pwz1bdZfa9L/k5yPckbJQeSq2m9dNTYf3nn6KWro+M76SPJyzX+MF2vkuS/
df3Fkg+U/KfG15H8meRndM8NeIcav0ryp5IHsEYkr5a8QvJAyRtyv/9DEj+z
H6R/Q3INyX0kX6e/S/jmNXaa5D80f1Xd3926v63quxpbGds3vo9PVfs73qf0
mjq4TO3Z6uus9mTpm0v+MPb3/hbPRHPV1/GCxv+CP5J+gY7/4Quln6/2PB3t
JI+TfL7a7xTraYLkP1M/7y5q/6a+GWp/r/vvo3Hb1LdYfxfpeCiwPdpL+sll
+wX8wf66dh0dj+n6d0o+XmMHSHeBxveXfE/m9dVD/R0kN9TfQdJfKP0A4gPJ
QyRfJHmg5OMkvyD5fMkvSP5H97dE5x+k/r/UN0J/z9QxWrrauua5ie0dtuJl
9Y1L7e+/Vf9z0g/R3wY8T+kOkdxD+sHST9N6GK9zBun+Vkr+RHM8Jvm8xPEN
tvMVnXNOYnvUXvJYyc/o/BEav1DnT1PfTtK1U/t36Q7W/E9LP5z51DdV+lv0
d2jiazdDZl2p70e1N+s4Q7rhOmoV9i3l3Uj/p9q76bhP7ZcS255rNP4hzf+V
5v9cfW9JHir5ZeyHxi2QfJL6X9RRo4if7macjqMlXy55nX7vixq/Tde5UvL/
pPtH7Tn4Xsn3Sv5D8mzJKyR/q0U4lutp/o/Vdx/vQfqP1P5c+pvVPlq6HyRv
0nGn9L+o7x21l0pfT/Kjkk+V/KTkzZrvQ83XKrG9+iWzPF5yPd3jMP2eVyWv
0pwLdc6r+jtOurrSvYDNlv4V6Veq/xPJt/J+dNSX/nzN10v9IxOvjVuk/1Xz
zyzbL+APZuMfE8cmxAPXSR4k+SDJp0j+XuOflXyAjq7EOPo7OPG73aX4Pk8n
lgn9vV2kdn/pq0tfT/IRrH8dB0pONKaNxtfXmO+l26hjitqvS39kEe+20vWG
EQ+pf4rkPoX9PUX6unxzam+UvjfPVfMdqb+Pa85G0j0l+UHJiY5PJa+TPF7j
f9PRQOevU9/tao/W+csjv+N3Jf+Ov9axReO/kTyK71lztJI8Ab2OY3X+eo0P
8JUa+2vo31RJumUaf6jG76C+bdJdqOOn0P6vn97PSOkXqW86ayByvEqsOAv/
gm9U328av5OOOzTfGOyr+uZK/0TqeCjQOe/xGyW/JHmB9B+whiR/IjmU/n38
hf5GOpar/SXzqf1z7Ge5RHK31PnIr+p7TX2dpP8v9rVWSl9L+r91D6cV76+B
5H8ln1msh9s0/geNn0Tso/E9pR+i+abrfiZgczR2reT1GjOW541vVHuy2os1
/hbJ30keInmB5Fc0/kuN/1p9L6uvveabwXqX/CTrXfp12C/Jr0juJf1QyTNY
N5LrS75eclvJ5xC/pc5PPtD4upp/iq43WceugW36cmIbydNDx9OLNf/PGv+i
zk+Jz1PH2/M07jiNacB1pasoOX/5THJLnT8jdHy+VPKjkjPpTlXfibL9leS/
v1LfbSXndfizE0Lnd9jq1yQ3K9lmE8v9o+t9lDimmy7dxWpPLOLVOYltIrYQ
Pde7PrHvxIeO0v1PLzsOI/5aLnmL5Nd03Rybp/nDXbzuWG+f6/wb8Jmh7ftz
Rf6JH8V/7q72/zT2X7X3DR3bE+OTG24lRyR+0t+gZBu9n+TekktqH6zxz2u+
bWXnTPhbxmPPR4X2ufOk/6HsPID4/yPidb7ZkvOffSoc/6xVH4n2Kawdzb9L
yfZwLX5JurLa52j8EM33QdlxA/ECuQs5DLnXL5FzD3IQcuFf8Qka/xPxjNqx
5thR1/u3bL+CP/k8df71sa5zfOh4Ett8ptpXl/ztT5fcuGQbQHxBjkhu2Fx9
Hye2udjaiyS/j29X3+uhfea0xDaSb4tvbGPi+AbbScxyqa7/Vmy/i7/FDvL9
XBz6G8Z+7i3dfawdyQ8QZxLP8GwK/7MP8U643VRtz6+asOZCx0jkZrPUd2nJ
OdpTkeMj7r2SjoVqP62+ToHHvEvskjg2IkYCB8Cn4kvBA8inGkseGRqT+DCx
D8FWYDPIFYZpzLkl5wysl7MSx+7Mh235m3w49nje+9c67iz5/ROvkdOQy1xQ
cvxFLngSa1PyVGIlfF7omIe1SXzHWNYoeepifHvJ+erZer7vl53nkN8MiRzP
MdeOJedSU2K/O3Kq73PjDTyTSH0LpLtKY96Vrkvg9Xt54liUmPR4zf9O2XHd
gCJ+OTZx7EYMd410B6fOzf/VnNcSK6eO9f+T3FDtd8uOA4n/Wqh9lPpOkH7H
2FgJmMnxuCJslNpTyo4ziS+X6O9QzfNw4N+M7SIfYu1iw8h/qkl+kG9dY3aT
fK/G/B06RsKWYlMb4nJi64mfhrD+A+e3JxIDhM7friYWTZ37/xMZiwCTOFfy
rhp7KOu5bD+Nfz5M8ttl50HkPyXiJbWfDZ3fkSuTM2PLd5HucLUnlZ0nkh8+
rvUyUfLhkh8LjaWBqR2lds3Y/pl443HJJwfGPsBAiBWIGciHJmX2z/eWjJWA
mYCF/RY5fiW+eS50Pol/rps4ViNmIx+cgs8IHZNcRa6UGtv4W+d/K91W9T2p
c/aV/h6dX13tbhq/BzZB8jKwuZLjzd4aP541gd0Ijb2BwYHl7KOxIyLn1435
7YFxCnzjGaFz7oeL+KWmzn8oNK64iHcUOociP61V6A6UfLbkWRqzR8kxIvb+
lMS5PxjAZs23uWy7UKn4/sEYwRbB8+ZKvoJvJDT+N59vS/I7ofEs8JDfye/V
t5POWcOzl/y45N0lr9bf+xNjG2AcvWLnno+Qj+j8HrFjqb7kD0V+sK/kTuH2
ECg4h1hb91ZZ514YGhsEI7xTulrYWh1LwGpKjvHJn3/TmH6J/f96yb9KfkJy
lZKxSjBL/A9+aGMxnjyb/Pre2Llw99D4UrfYuf3DofEfsDgwubvUrh0bWwRj
vFvyofjS2LlaD42vHBhrA3O7R+3DpOui643DR/FciGclPyb51dj4bt3U+WU/
7IjOuVD6/8qO84nvWTedY2NTrB/uFyyMa5G/v4etSowdkI/fzL3hnzXmGfXd
W+ABT2nMPaHXUZfYa4U1A160l/ruDY137672bolz27tCf4d9NKZm4O+xR2b8
4L7Y7+8a/V2v+b8gFiRmKfCR7uQB6tuDtRA7Nr+bNRUZf6oaGqOrrfv9VOP7
qu/IwNhuS7V3CIzx3po5/m1OXCT5Sv1dqzlu4nx8QuT8es/QOTXr6+zIa414
nfcJlse9gtfcFjn/rhwaw2N9nqO+GoHxkTwx/tMOf67jCunXYPdCr+k9i9+D
++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
mj6SR+Ze/60jY4nDcq93MMWnyB9ycw/hIILtYS+o1cEj5nkvzc3vA/uBW/Be
bi7BguL9LsuNBZErw81Yl7ueP6d43u/mXu/kmKz/yblzRXLGhyVXqnDsM6x4
H+/kXn9wBngfU3Jzb+EgwcWBkwO+D87/uOTRcC6lvxNMTPJYyZdJvjuyvSH+
PE3ywNhYOZg5zxdOFvaJeLWR5P6x42PyQ7C7p2K/31c1XyvJD0ZeX6/BcZbc
LbI/JF4FOx4b254R38JXHBw7tyfH5/4qivXxis6/UXJXnf+Q5FG57REcZ7B9
/Ce1M3ifj0pemBsL7lB8n5Ny59bk2I9I/iQ3fwzs+AnJYyRfKvmuyNySqbnX
O98jXKwPcq93OFnUtn/JjYdQ46Y29VVuPhNYE7HUxNS1AmIquBCfpuYWwIkA
GwAj6CX5mNhcZTjL8B3gPTRSexn5RsmcXLAZMBqwyhNjYz9gQNQaToqNJYAp
wCU+AYxC5y7NXJvsVXKtaI3ub0zgmhG1CmoWPSUfDQaDf8V/lMyhPRv/W9gv
Ygi4vORo5Gb1YmNJYEpgGyfH5jLDaYY7XT82tgrGChf8qNjYKxhsN8lHxsY6
wDzAYhvGxlbAWOAfwEPg+zsl9XrMY79Pchxym9GxuYPzc9cOwZ7BqhbkrgWD
WfF+yZHIjUbGxg+nZuYWNC7wwcmZsT8wQL5vMHnsxV/F9zUzc31hduLvo1lq
/7JX7PXSNPV6rhJ7PVJfxR6UC3t0cur1tHNsfzc3d62Femmvsn0cvg2eEvjM
hNT1IWoPYLNgtGBZF8T+Xpuk/p4qS+4reVZm/t6thf/APoNVnR8bWwNjozbI
+wYbAyMD+zsL3E+2Y8fM2Oh9GvMXvjgzNkuNF//6Yu7cBowSfzk0d+6yvUas
se+nrt2Q0/Qt/Pd2Lnzo3Oe91LUgciDiATir8NdeSBw/DMmda1GT6Szd6NTc
NTgW5Cpvpq6tkLMQPwzOnbtQm+ueGe+Ca0wNGP88KHfuQ22EWuSXuflUYH3k
Zu+mrkWRo5ErjU2NPZEzkduNSc0tJMcjd3ojda2BHKpTZjyMXASOCPaBeI54
+vLY8QMYB9hGnDg+IGclV90pcTwCh3KVxl8bmw8GHgb2/URorBHMESz3zNjY
IvEOWOwZsf0N9Wv88d6xuXRw6qh3U/fGv7LHYySxRmL/CcdxjcZfH7v2Ss22
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
exPgpJCffp2Z247N/z/Sdkzs
         "]], Polygon3DBox[CompressedData["
1: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
Qu14tlDZC3eQXnytPevjOen5F+fgGW2/AVcrCDw=
         "]]}]}, 
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnHXcFsXXxh/u3Ud2Hnb3WUIRaQlBQcUERUAkRLHF7u7CwEQMTCwMEBsb
sRMxsDuxu7DAABUD8L2+XPP7+P4xnz332dnZ2dmZM9e5ztm7816Hb31Yra6u
bmJ9XV2i45NpXd26WV3dVB1fVHlF5RFV2K+oq1tf5VJV+lrH7cu6ukelv1Tn
X00tX6HjGyovSd5QxzdVXpY8KOqf1LXddN0+uv7FxPXfjPqrdXxX5TvV7xfb
fIgONdbVraRrXpZ8dl5Xt7/k5STvrfOfqcyljnQHqnSVvJ50r6nMVDuLpdtL
93pe+s2le19lofR7S7euysXS/6jjjqX7fGm8lvseLv2upfvUXccj9Pst6a/U
79mp+9+ioa6uucoduratxu8f6U+W/gUd/1DpE8fwd5UHpO+oOoslT1P9XdXe
OioXxXZaqizRuc6qU1N5UXVW1DFVeb/mNn9TWV3lOPXneJWFksdE+c/UfXtb
5QOulW6XwmM7POrp88ax/x+qzh06fqOypvRH6ThHZS3JbyZu73fVWTXU1VXq
267SnaA2L1H5S+duU/ky9ZhfF8eW8Tko6v+Q3FR1Dy7d/l96d3+qP5/V/D6G
MSdqfq8bx/78rfObl/79p+ov1O9PpX9FdUZI9xHjrPlwn/TXSrdL7nfEu/1X
8iLpf6z5WYfHcXhH9baS/Lfk5XXtNNW5WrpZ0u2aei7tqTbG6PplJC+nOjeq
zhTJ5+p4hPSLde0X+r2z6uc6fq6yk+RmOnbV+Gyu9dJZ8mcqO0rfoOM6aufQ
3Pd9QroteCbJL8X3eBNjzhxTne+lf0O/N0s9PlupzdaZn32s6uyu/n2Qepw/
iHN4FelO1bmPGAfpPlVZVvK+0u9Xem3cHPVfJ35fX8X3cnCUu0kexbimfvap
UabN49WvvdVOU8lNdJ8lKvMwFDouVpkreWv1M1c/35Rck+5flZ8kf6njO7r+
GF27heospzqf1NzPj2N/GPO9Sv/+tanXHevvaF27m679QfU7ae7XqcyQvCj1
+jhf1w7Q+ZNL62vS3amyjvT3J15vE1hruud7qe0K8+cq7q36B0j/veS7VL4I
ngf0B5uH7eN5PwqWGYeNMtdhnmwrfavM8/Cd2Db2arbOXR/f7wzJl0t+nHet
Zzmp0nzSdU0z2zps3mD9nq9nfkx1nlb9ydg7yW/FNcy83VV1OmUeh/fju+e9
t8y8fqm3Sua5xX03Vf1Mv1+hb8F61uNmGqcn1YfHWSPSP6djpbKN9M9I/2zq
MXlGx41YK9I/Xfn3t3GcBkv/icb8Mekf1e/vJT8ueSbvS9fO1fFelavU/jH6
vU1iPW1vLfnUzPfdU/Kmav8JXfuYfgeNzyzJT3Gv4OPc+O7oL+tinvRPx3m7
nOo/Vfn3+arzvI5HSF/fYHmFaHexleclXmcvxLXGuD0W7cyn+r0D9088hh/G
8d0y87pgrTys8ktsc4D6PLPwuG2s/jRTvdfVzqPSHa5zP0o/WsejVX6VPD5e
e7jan5Ba14Xx1fnXCre5s45rq1yYeOxoYyv2L9W5nbWU2D5jk/+Ne8qC+FxH
prbb6IfqXYwtvV+8wZorPSa8N+Z5prKBdPcWltF/F9/pmCijPz7WZw68qrpH
6pqf9Luz7NijandH6cfq9zyVPSQ/kPo88i6Z+0l/V1T9maq/k/TfqtwqXWsd
B6nNU1SukNxJdWaozg6J7fMNqvOX+n+exnZXtbW2dKdJ3kpyd/YOlWmqs5KO
c1RuietxH/XxQc2HT6Ldmhrt2Mdqe5TOnZR43LupnCL5H+l2Uh8eT7wnYyvA
NiN0r7+1Hp+q2V5iN7Gln6jcGG0Cc+YmxkrHA9TOw7rv56nHYV5cUz/EdcB7
PF33OST3c72n39tIv6jmZzkk9XPxDnmX7I9tVL+Z2l1X8vKSG0rbtEYdty69
P3eXvhX7o/QrMh8lDwFTSW4pebjkZVTvOJV+7E3St5B+mOQVJOeS+0perHKE
6qys41rSP6F+HiJ5vJ5pDb2bIRqPb6VfvdF2bAl7bG47vybjJ/lg1X9ax+Gq
sxcYQO9qy8L2ua2ORek+fC95IPY02urRqd9vF+mbq85Q9pfUzwf2uE76CWq3
LVhL8jm550+D5FrpcZtUGAsyB8AaYA5wyED15XzpV5Bcqs4ypZ+xmeSk9PzZ
QHXOU502ie1Pk9L7YD/pT8q9d3+nskfqOticrHTf/ox7J/VbSx9KP8tlzO3c
2CArjEe7xr14fO651Fftn5jb5nzP/pe6nz+o7JX6eb/TtX1U7wmNVVON2Stx
nOfrfLMGz+U3pRuhOkfyrnXcV79/Vf3+7Jt6f+2D19rukjthq1TnGNWpYScl
7yP5F9U/WOeHqF4P1Uml31v6n6U/NNofbP95vB/mkPbgXHXGqk7Bu5B8tOQm
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
nun/ASJ9wrs=
         "]], Polygon3DBox[CompressedData["
1:eJw1m3e81MTbxS83uZBcMsmiKEgTpYgUBUWwIB1pKoqCAmLBiogCdkBRRIpi
R7B3sStFwYoVe++9947+bCj6ni8n7x/z2ZzMZDabzDzlnGc3G3fM8KOrq6qq
/o6qqmJ9LsiqqlpXqqqGJlVVm+rcGcIthXsLNxAer88FaVVVrQYvUesbqqqa
qv9jnbtE/WPVf7aO66jvDrXPdDxZrbH6DhD+QMdHqKXC+wonGj9U+DHhS4Qv
1Pe10nxDdL6Fzp0g3ER4O+FIeKbwpsK9hCvCn+vaY9U20fGBun6d7mek+vfV
ue/1wyZr/EbCE4X/Fd4l8fhvNL6J2kL1t1H/rjrfUvgfXT9CeKTGfKfx2wnv
JtxQ+Dz1n6/xmwsP1vjmwt3Vv7dwI/VfINxLeEPhd4UXCo/SZyON/UhzvST8
kfBRavV1PFr3e4nma6vxu2nMZjrXP6+qul/4Jo1ppv6D1V8IHyL8k+b4Xp9t
1Vpr7JHq/1DHR/I++C7hWRq/mcb30Xwb6NxAfR6v/m913FTtcM1/r/r76fzG
wsM1fi/h5sKfa/7Hdbynxvynvl913bvq761zF6t/Kr9P+Dod91bf8mrjvur/
p57eofA7wr2EF2jMyRr/Rerv51kfpPt7S/07q/9C9Z+oc+8J9xFeKDxN+AXh
ehp/lvBRwg8Jb6v+6cJjhJ8T3kF4rvCRws8L7yg8T3iC8Fb6PEjXv8W71P3c
o+Nlau303R3UXtL4nTR+W507RmOOF95EuKuuqxa+WvgInrdwD+HP9D57CNfX
+K10/f36XKnWUcdbqz2g4+3UbtTYLsIb6NkdpfHn6dwuOtdJ8xyg4zd1/Lfu
Z6TmT9U/Ruc+rva8l2nMrMjzX6v+I9V/mM711Ll71X+3Wnv1dVK7Rv3j1X+o
+ndW/9vCPYUvEj5J+Erhw4THCe8ovItwXdZr6veT6f4O5fkJb88eVP++wlto
/Br1XyV8uPDBwjupf2t9Hqyxb+t4nfp3TLzePo68hh/V+K4a31nnDhQ+Vs8r
F35T+HXhHYTHCDcRvki4oa7fW8fP6fhy/Z7Run60+rfU+V81/zDhPRgv/Inw
KOFRwu2EfxE+THi/8n3V0Ry/a/7dhYdpzg/Uv41+333CJwr/yHrX+LGl/eD9
DlT/g8JL2EP6/uOFHxCer/5J6u+j8f2Fq4Sf0Hw7JLZXH0XeY3sKzxT+U8e3
6vo9NX64xjfT+c80/q3U73utjvdU/x+6v2HsKZ37UOc66vvu4f1yv5rjGV3f
XXg23yP8rPD2wnOEx3M/uv5UtXexz2oH6/oV6u+u/nrCL6pvO+GaWj0zfd87
wt2EqzX/ZuDU74+9sJfw26n3B2txuHBvfV8/jf9X+/dxneuv6yewHjTmCt6/
vm+l8DHCXwrvpP5M+HXhBcK7s1+Fhwu/outnCDcTPkE4qP9fjd9HeLTwD+rf
Q/17CjfV/X8qfJxwY/Zj+T6v0/hFwrsLby58Umb/srmuryt8g/rP0j1VarR+
WN+F1rz6j9T4AbxvfXbU2Kt1jEO7QdefrfEbaHwfnftT/TPwZew1fo/6rqjY
r+HP5uva/XXcXX2R8Pb6vpkaE+v6C3WuPbYJX6Ljq9T2ymz/G+vcF/o9nVjn
avXYq/QH28u1er6Pqj/Ve7pD/cep72yNOZ99o/4dhGuE98A3CL+ssU/q3O2a
f76+v6G+fw/hm4SP0fdNwm8K18WO65rzsRVq57L+Eu/tWPPNEd5buD32UG2R
7meu5ss132WR3/Ppar9Fft+HqH8/9Q/Utc8In6m+vXT9lpFjhHfVf5q+/y6d
31xj6ujzHPXfF9tfse4uwOdEXn+M20bt+sjjF2MriQd0vInaz3ouGwqfy2+L
7Gf7qK2I7G976vgPjVmm46Vqf2nu09VWYGsJWNR/tnBTHV+n/pQ4RLiNcCu1
A0v78LzOryZ+Kf37K8Iv4EPLeOFV4ReFJ5Tr9bXU/vo14auEZ2rOQ8rnNwN7
I/yDcDfh0/W8qmv8Dg4q9/sLqd/fftg/9ffWvTwiPDRzPLERPkHveJE+J2iu
geoLGrNWx2eqHSbcSPhS4gXhQcK5cBPNdbyuv0znR+rcEM3fif2bej1HWl/X
6fhQHc/CX+n7Oqv/ep3blxhB4wcKPyX8kHC1xl+T+redEdvfTi39Kf61lb5v
bsV2G3u9Sv3TKvbP+Nun9dlN7f3I8U6i+W4jJtPxWbwj9W2Seu88qvaycF+1
LyLHi9tq/87RfLU696Kex42avx3xQWr/NRBbW+4d7vdh3f/W2Odav/9+6v+f
+h9W/wPqHyD8u/Ajwg8Kb6P5Z2t8qvlf0Ln52FPhozXus9JfbsHvFe4gXE/z
3qLjKTqep/l3TX0t9/aEztVR/1XYVB3PZI8EP1/eG+/rnsz3dwX7RmOGBccb
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
p7XwRTo+Q+0r4VbCl+r4nNxaQXvh83R8uVpHHTdRG6C5bwvWRtBEZqtvkVpb
HQe1eegh2IMaayzoH4cSX7E+hE9Rf0/1ryP+UJshPAB7rL46Nc69o8L2sElp
P+LC2jWcwIUaf0FuLvGv2FzA/sLDYnMC5NJo3mj15NQnq++k3NzSH7H59rHB
XHKEhgGfp3aAcAc4eB1/ndlWoyHMIdbK/NvQPPAfNYW5CXL0eeq7LNiWYdNi
jc+EfxY+PHZ82LgwXwaXdrLGnxvM9Y1lv2t8odYPf1TycW2CtZcTYuutTYK1
k2NYQ8KNhf8Sniic5H7/j+t4As9DuGmwVjNJuL7wJsG58dGx9eXWwdrU8WoN
hFthk3V8XOz4fOPCfCe1ArN1v4dqzEfqOzi2rU41/rHYNnuu+i8Jtt3gqfg6
4a+E948d/18UXD+Aln+q+i8O5rbGwS8IX4MPFx4vXBdtiXyrxDXCARtPbCQc
Cdcvn/dhsbmjA3VuZGwOCf9ftzB3Qr4GF1RdWCuHE5qQO/+g9uHz2Hoo74R3
8YHaOOGDcmuF18fmpzqw3vCP/B58g/BdOv6KZwbfnrsWgJwAPbUfGi3+TW2y
jl8I1laxIejFL7MGdPyL2mG5n+9Gun5x7PoKninP8mO18cJVuZ/9J+V6ocaC
2oopwrtjC7AxqWPIYcKPErORW5V8yQZqt5Pvsl7gQtT3d2wNoUHZD5fyj9o8
3eskff+Y2JzH3prvCXIU1q7O7ZHb5mBrbhdeBvehc8t0/K3aMejhwdz2jNh8
d8+y/3u1A3Q8I5jrI+a4pLQfDSNrOtifwcFa1Mbl/hwazP03Lu3VjsFce73S
nvUM1o5S4YWlvauJrClRK0HNBPbj/sTx1r+5ufNQxlto0KyPZYnjM/wj/bcK
N8S2BWurJ6pdUdrDoyNrhtiXE9V+0/g/Y+ufbYSvxB6pjdDx+5qvs46fjV07
QA0Beie651jWTjCXScyI3re5zl2m41dj851ty/neil3bQ40P+iU65j46/jz4
3T6nNip3Pgv391JsezlVbX/N37zGejjr+32+K3b+PTf4XVNbxHoiH/kG/xtb
uxxUlHpVYu4Ye4Q+DIcMd4p9gUuGQ0VbaBSsH6AxoE3sVLh+i9wDrR37g/6E
DoV2vnkw14aGjrZSG8y3o7HA1Q4prKfB2cJ1Yg/gKuE84UZ3LpzLwJGiRWB/
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
aQ==
         "]], Polygon3DBox[CompressedData["
1:eJwt1nfclXUdxvFb5jnwHJ4HFIEYMhUHexgJgkiyRFNfMdWQTQxlTzUzEbAC
ZGQOSEUZCoIgS4OKpWCZsdwiU1GGAlksfX9fN39cr3Nfn/v6jft3fqtar/vv
HFooSZIlVJTa5ZJkQqkkOVMkSQpKJEndbJJswFphK7BRmSR5FrspL0kO0Hz+
fPEkeUMlI+Rqy82Vq4rfIzdEpml+kvT3/Cl19e4euXNyy2TK0N8Lq1+mKDbA
+6/lHqTeyhbBN8o0oAvaGIYVx7bzLSinbB+sKLaJb0g/yD2ujUk0UD11sXPY
FH4yDcLqRb+xvsoWU3Yz34gS9Q3HMti7/I1UChuBZbF/8i0pHxuJlcD+xbei
AmwUVhJ7j7+JSmO/wXLYTr4DVcZ+i+Vju/lb6QpsJlZa/z7haxQkyZP8o1Qg
twfrRFXlZsnMpJG+4wYsD5sROexjvrqy0/nmyhU2pv2M6Vey4+hhPA/fIdee
Kinbnn8fnyaX5z9fJreeb6S+CzIP0t1yE/jx1Mv7Gtgx49dA2S+xpsr+DW9B
zfgh9L4yd/MVo21+LPX0XF3Zo8rWV/Yw1kTZDfEt1JIfRjuUvSbGBRvDj6Z7
PVfDvlG2kbLHsRbKbsFvocH8Jfg6mZoX+9eQP4Y3l9ss0ybms29rjP0g81DM
U2215h+JsffcNMZQ7nq+N72N3cWXjz7y/WgbViXGD+vFnzfOr/Pl6XPtto15
q53J2i1mTBfIXSWT4Gsz6fqIddJE2R60QX0dZMrSI8qVktsl05GqePcn7FK5
z/ha/t85fBcqLPcWdiWd0G5H7CS9xhehrVgH/jtayheiLVg7/gS9GuvK+t2E
tee/pSWxDmgz9gJfVbuH+e5UX1+ex67ADvHdqB52vX6Mx+/1Tft8w/3Ulj9O
r8T608ZG9bXmD9JLsU6xVdjN/CF6GbuEVmM9Yk3HuMR6oYNY99gPsPUx7nQA
6xZjgP2Vr0j7sV9gZ2hlrF3agd3Jn6NVsU5pF/YXvoqyB/muVNd3tMEO0wK+
MK2Ru4s/T6tjPdNubC5fSdn9fGe6Ttl5WGXsAN+F6mALsKuwb/je1BzrjBUy
Xm/Gf0nH1VeXn4T3Nn6HjF0tuo2/EPuuTAXaK3ejXBGsv9wRmQn0M2yKbF/s
y1gv9Gf+Mu1+HnPDfHmKn01lsE9jfWCzYh0oexq7WdntynWiXfxOWuz5Udm+
+rxMtj52mn8g9ixsQOzF2Fb+ajqlfwux2thRvk/s0XJNtDE45qs2PlFnP1rE
Xy13LOqPfVZuMXYNdpzvF/ss9jrWEPueH063Yf1jz8a28LXppHaXYw2w//LD
Yq+UewYri53y/ILfp/k9fnfTq/rwu2jHu9v596ii/j0R50C8k62j3zU814x9
R26gTJJL95/Yhzrj9/H/z0vXfDnsDmwQViiX7j+xT3bHevL/k/sMuxy7Pc44
bOLFXOxXfbA5/Oxcuqc3x0Zjv459LZfumbF3dsX+o64O+rfcc87+Ml3fd2Ad
sRVYKWwGtglrhy3EimNTsFPxP+LL1bUNb429xVeXO49NpoHaf1euEzWQeZkq
yO3n99GoOHPk1uIrYuyUPcGPoKzc7pj3WJ73z2CPyb8iVz7OC75/7DFy87HL
sb18D/pe7glsai49n+tjQ9SxJ+aVXM7zs9gkuQ9iDmGlsOewx7HXlLuS2nke
jM3wbg1flzpjY7CnsLV8PeqCjcWexj7kP8ilc+IxbCnWmT9jvS3ki8V+4N1S
rBa19TwImya3IMaAmmE9Ywyxd+LsuNjGOOxF7FDs4fr9PL+eb2wMVmN16Jdy
o/E5+NA4s6hyNj1D4yztFnNF2X8bl5Jy7aLPsWaMQb7nudGu3DasVtynsFnY
WOxtrEbcB7AnY15h72A1Yz/BZmJjsIfirkdVsb70EfaR3LVyBfw8uSnYduxK
rBg2GxuH9Y0z1VityaRnY5yRR7Ejsov4TXF++t6sTDn8izij49zG1sW3qu+7
TDpWMWYt5Sph32bSe2fcP2+NvZ5Ke344zqM4+/nlVBybyV9LrbS5n16UOeuc
WWnMXuJ/or6vsaHUPs5c5Vbm0jkbc7eesuvizJM7G/Ms5mrsfzIVsCMxHzPp
/GqDLYo7kuepytWmifq8DZufTe/PcY/+gt9Lq7DpmXTtdOfPyi7m8zLpf7o1
9jR6PpvOyRiDjfw/6LlsOjdijizky+nLPv6+TDrnNmObaF42neMx13/vO1rK
Tcymd+q4Wy+JMw87KTM+9hK5N7Fq2LlYQzQAK6RvJdT3YSY9U+JsmSjXTG44
fyD2NGwC9lPsAX4//QpLlM3EWsqkZ1mcaVPlbpAbm03vonEn/RirhzXmm9DU
WPtYi7hLZNPzLc65AvVVV99XccZgI7ClcQeRO4VNiHuIsj/nS8oO9f6E3KTY
nwvSu3Hch8vkp3frW/yWlhspd1rmD3Rdfnr2x3lfmi8Td0WshNwQueNxJsS3
FKTnaJydl+Wn97E+Ben9LO5kZfPTM7cnNo3/Y9zp89N7ea+C9I4f9/pL89Nz
+A7PZ+kNz/m0U/s/Aow8vOo=
         "]], 
        Polygon3DBox[{{3907, 3225, 3224, 3906, 2431, 2432}, {3215, 3343, 2266,
          2430, 3905, 3214}}]}]}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{657, 1, 628, 228, 2581, 16, 629, 2586, 31, 631, 2592, 46, 
       3105, 633, 61, 3106, 635, 76, 3107, 637, 91, 3108, 639, 106, 641, 2655,
        121, 643, 2662, 136, 645, 2669, 151, 647, 2676, 166, 3115, 649, 181, 
       3116, 651, 196, 2926, 356, 660, 211, 653, 355, 1503, 212, 358, 1504, 
       213, 360, 1505, 214, 1800, 362, 215, 1803, 364, 216, 1806, 366, 217, 
       1808, 368, 218, 370, 1506, 219, 1507, 220, 1508, 221, 1509, 222, 1510, 
       223, 1511, 224, 1811, 372, 661, 225, 656, 487, 2724, 210, 2710, 195, 
       2696, 180, 2682, 165, 2675, 150, 2668, 135, 2661, 120, 2654, 105, 2640,
        90, 2626, 75, 2612, 60, 2598, 45, 3133, 681, 30, 3120, 662, 244, 658, 
       15, 655, 382, 1347, 14, 1345, 13, 1343, 12, 1341, 11, 1339, 10, 1337, 
       9, 1647, 241, 8, 239, 1334, 7, 237, 1332, 6, 235, 1330, 5, 233, 1329, 
       4, 1637, 231, 3, 1635, 229, 2, 1812, 373, 657}]}, 
     {GrayLevel[0], 
      Line3DBox[{1276, 683, 1277, 3134, 698, 1280, 3141, 713, 1282, 3149, 728,
        1284, 3157, 743, 3715, 1287, 758, 3716, 1289, 773, 3717, 1291, 788, 
       3718, 1293, 3207, 803, 1295, 3228, 818, 1297, 3236, 833, 1299, 3244, 
       848, 3725, 1302, 863, 3726, 1304, 878, 3727, 1306, 893, 1275, 2199, 
       894, 1061, 2200, 895, 1063, 2201, 896, 1065, 897, 2485, 1067, 898, 
       2488, 1069, 899, 2490, 1071, 900, 2202, 901, 2203, 902, 2204, 903, 
       2205, 904, 2206, 905, 2207, 906, 2491, 1073, 1270, 907, 1267, 1072, 
       3292, 892, 3278, 877, 3264, 862, 3706, 1273, 847, 3243, 832, 3235, 817,
        3227, 3226, 802, 3205, 787, 3191, 772, 3177, 757, 3703, 1271, 742, 
       3156, 727, 3148, 712, 3412, 949, 1269, 697, 1228, 948, 2053, 696, 2051,
        695, 2049, 694, 2047, 693, 2045, 692, 2043, 691, 2041, 690, 946, 2039,
        689, 944, 2037, 688, 942, 2035, 687, 940, 686, 2361, 938, 685, 2359, 
       936, 684, 2577, 1276}]}, {}, {}, {}, {}, {}, {
      Line3DBox[{1329, 1638, 1816, 1639, 3916, 1925, 1652, 1824, 1653, 3924, 
       1926, 1664, 1832, 1665, 3930, 1927, 4074, 1676, 1840, 1677, 1928, 4075,
        1688, 1848, 1689, 1929, 4076, 1700, 1856, 1701, 1930, 4077, 1712, 
       1864, 1713, 1931, 1724, 1872, 1725, 3941, 1932, 1736, 1880, 1737, 3950,
        1933, 1748, 1888, 1749, 3959, 1934, 1760, 1896, 1761, 3965, 1935, 
       4083, 1772, 1904, 1773, 1936, 4084, 1784, 1912, 1785, 1937, 4085, 1796,
        1920, 1797, 1800}], 
      Line3DBox[{1330, 1640, 1817, 1641, 3917, 1331, 1654, 1825, 1655, 3925, 
       1351, 1666, 1833, 4052, 1667, 1364, 1678, 4022, 1841, 1679, 1377, 1690,
        4026, 1849, 1691, 1390, 3980, 1702, 1857, 1703, 1403, 3988, 1714, 
       1865, 1715, 1416, 1726, 1873, 1727, 3942, 1429, 1738, 1881, 1739, 3951,
        1442, 1750, 1889, 4061, 1751, 1455, 1762, 1897, 4064, 1763, 1468, 
       1774, 4041, 1905, 1775, 1481, 4002, 1786, 1913, 1787, 1494, 4008, 1798,
        1921, 1799, 1803}], 
      Line3DBox[{1332, 1642, 1818, 1643, 3918, 1333, 1656, 1826, 4050, 1657, 
       1352, 1668, 1834, 4053, 1669, 1365, 1680, 4023, 1842, 1681, 1378, 1692,
        4027, 1850, 1693, 1391, 3981, 1704, 1858, 1705, 1404, 3989, 1716, 
       1866, 1717, 1417, 1728, 1874, 1729, 3943, 1430, 1740, 1882, 1741, 3952,
        1443, 1752, 1890, 4062, 1753, 1456, 1764, 1898, 4065, 1765, 1469, 
       1776, 4042, 1906, 1777, 1482, 1788, 4045, 1914, 1789, 1495, 4009, 1801,
        1922, 1802, 1806}], 
      Line3DBox[{1334, 1644, 1819, 4049, 1645, 1335, 1658, 1827, 4051, 1659, 
       1353, 1670, 1835, 4054, 1671, 1366, 1682, 4024, 1843, 1683, 1379, 1694,
        4028, 1851, 1695, 1392, 1706, 4030, 1859, 1707, 1405, 1718, 1867, 
       1719, 1418, 1730, 1875, 1731, 1431, 1742, 1883, 4060, 1743, 1444, 1754,
        1891, 4063, 1755, 1457, 1766, 1899, 4066, 1767, 1470, 1778, 4043, 
       1907, 1779, 1483, 1790, 4046, 1915, 1791, 1496, 1804, 4048, 1923, 1805,
        1808}], 
      Line3DBox[{8, 380, 2942, 23, 389, 2950, 38, 397, 2958, 53, 2605, 405, 
       68, 2619, 413, 83, 2633, 421, 98, 2647, 429, 113, 437, 2966, 128, 445, 
       2974, 143, 453, 2982, 158, 461, 2990, 173, 2689, 469, 188, 2703, 477, 
       203, 2717, 485, 218}], 
      Line3DBox[{1337, 1648, 1515, 3919, 1338, 1661, 4017, 1522, 1355, 1673, 
       4021, 1530, 1368, 1685, 4025, 1539, 1381, 1697, 4029, 1548, 1394, 3982,
        1709, 1557, 1407, 3990, 1721, 1566, 1420, 1733, 1575, 3944, 1433, 
       1745, 1584, 3953, 1446, 1757, 4035, 1593, 1459, 1769, 4040, 1602, 1472,
        1781, 4044, 1611, 1485, 1793, 4047, 1620, 1498, 4010, 1809, 1629, 
       1507}], Line3DBox[{1339, 1516, 3920, 1340, 1523, 3926, 1356, 3971, 
       1531, 1369, 3972, 1540, 1382, 3975, 1549, 1395, 3983, 1558, 1408, 3991,
        1567, 1421, 1576, 3945, 1434, 1585, 3954, 1447, 1594, 3960, 1460, 
       3996, 1603, 1473, 3998, 1612, 1486, 4003, 1621, 1499, 4011, 1630, 
       1508}], Line3DBox[{1341, 1517, 3921, 1342, 1524, 3927, 1357, 1532, 
       3931, 1370, 3973, 1541, 1383, 3976, 1550, 1396, 3984, 1559, 1409, 3992,
        1568, 1422, 1577, 3946, 1435, 1586, 3955, 1448, 1595, 3961, 1461, 
       3997, 1604, 1474, 3999, 1613, 1487, 4004, 1622, 1500, 4012, 1631, 
       1509}], Line3DBox[{1343, 1518, 3922, 1344, 1525, 3928, 1358, 1533, 
       3932, 1371, 1542, 3935, 1384, 3977, 1551, 1397, 3985, 1560, 1410, 3993,
        1569, 1423, 1578, 3947, 1436, 1587, 3956, 1449, 1596, 3962, 1462, 
       1605, 3966, 1475, 4000, 1614, 1488, 4005, 1623, 1501, 4013, 1632, 
       1510}], Line3DBox[{1345, 2022, 2023, 3923, 1346, 1526, 3929, 1359, 
       1534, 3933, 1372, 1543, 3936, 1385, 1552, 3938, 1398, 3986, 1561, 1411,
        3994, 1570, 1424, 1579, 3948, 1437, 1588, 3957, 1450, 1597, 3963, 
       1463, 1606, 3967, 1476, 1615, 3969, 1489, 4006, 1624, 1502, 4014, 2027,
        2028, 1511}], 
      Line3DBox[{1347, 1649, 2024, 2026, 2025, 4101, 2021, 2016, 4098, 2017, 
       1360, 1535, 3934, 1373, 1544, 3937, 1386, 1553, 3939, 1399, 1562, 3940,
        1412, 3995, 1571, 1425, 1580, 3949, 1438, 1589, 3958, 1451, 1598, 
       3964, 1464, 1607, 3968, 1477, 1616, 3970, 1490, 2018, 4099, 2019, 2020,
        4100, 2030, 2031, 2029, 1810, 1811}], 
      Line3DBox[{1503, 1625, 1917, 2014, 2013, 1491, 1617, 1974, 1909, 2011, 
       4068, 2010, 1478, 1608, 1971, 1901, 4095, 2008, 2007, 1465, 1599, 1968,
        4036, 1893, 2005, 2004, 1452, 1590, 1965, 4032, 1885, 2002, 2001, 
       1439, 1581, 4087, 1962, 1877, 1999, 1998, 1426, 4078, 1572, 1959, 1869,
        1996, 1995, 1413, 1563, 1956, 1861, 1993, 1992, 4093, 1400, 1554, 
       1953, 1853, 1990, 4058, 1989, 1387, 1545, 1950, 1845, 4091, 1987, 1986,
        1374, 1536, 1947, 1837, 4089, 1984, 1983, 1361, 1527, 1944, 4018, 
       1829, 1981, 1980, 1348, 1519, 4086, 1941, 1821, 1978, 1977, 1326, 1512,
        1938, 1813, 1633, 1812}], 
      Line3DBox[{1504, 1626, 1918, 1794, 2015, 4097, 1492, 1976, 1975, 1910, 
       1782, 2012, 1479, 1973, 1972, 1902, 4096, 1770, 2009, 1466, 1970, 1969,
        4037, 1894, 1758, 2006, 1453, 1967, 1966, 4033, 1886, 1746, 2003, 
       1440, 1964, 4088, 1963, 1878, 1734, 2000, 1427, 4079, 1961, 1960, 1870,
        1722, 1997, 1414, 1958, 1957, 1862, 1710, 1994, 4094, 1401, 1955, 
       1954, 1854, 1698, 3978, 1991, 1388, 1952, 1951, 1846, 4092, 1686, 1988,
        1375, 1949, 1948, 1838, 4090, 1674, 1985, 1362, 1946, 1945, 4019, 
       1830, 1662, 1982, 1349, 1943, 1942, 1822, 1650, 1979, 1327, 4071, 1940,
        1939, 1814, 1634, 1635}], 
      Line3DBox[{1505, 1627, 1919, 1795, 4007, 1493, 1618, 1911, 1783, 4001, 
       1480, 1609, 1903, 1771, 1467, 1600, 4038, 1895, 1759, 1454, 4082, 1591,
        1887, 1747, 1441, 4081, 1582, 1879, 1735, 1428, 4080, 1573, 1871, 
       1723, 1415, 1564, 1863, 1711, 3987, 1402, 1555, 1855, 1699, 3979, 1389,
        1546, 1847, 1687, 3974, 1376, 1537, 1839, 4055, 1675, 1363, 1528, 
       1831, 1663, 1350, 4073, 1520, 1823, 1651, 1328, 4072, 1513, 1815, 1636,
        1637}], 
      Line3DBox[{1506, 1628, 1924, 4070, 1807, 1497, 1619, 1916, 4069, 1792, 
       1484, 1610, 1908, 4067, 1780, 1471, 1601, 4039, 1900, 1768, 1458, 1592,
        4034, 1892, 1756, 1445, 1583, 4031, 1884, 1744, 1432, 1574, 1876, 
       1732, 1419, 1565, 1868, 1720, 1406, 1556, 1860, 4059, 1708, 1393, 1547,
        1852, 4057, 1696, 1380, 1538, 1844, 4056, 1684, 1367, 1529, 4020, 
       1836, 1672, 1354, 1521, 4016, 1828, 1660, 1336, 1514, 4015, 1820, 1646,
        1647}], 
      Line3DBox[{940, 939, 3614, 1174, 954, 3617, 1177, 963, 3620, 1180, 972, 
       3625, 1183, 3626, 981, 1186, 3629, 990, 1189, 3632, 999, 1192, 3635, 
       1007, 3638, 1195, 1017, 3641, 1198, 1026, 3644, 1201, 1035, 3649, 1204,
        3650, 1043, 1207, 3653, 1053, 1210, 3656, 1062, 1065}], 
      Line3DBox[{2035, 2362, 2495, 2363, 4226, 2036, 2371, 2501, 2372, 4230, 
       2057, 2380, 2507, 2381, 4233, 2069, 2389, 2513, 4181, 2390, 2081, 2398,
        4261, 2519, 2399, 2093, 4234, 2407, 2525, 2408, 2105, 4236, 2416, 
       2531, 2417, 2117, 4239, 2424, 2537, 2425, 4240, 2130, 2435, 2543, 2436,
        4250, 2142, 2444, 2549, 2445, 4253, 2154, 2453, 2555, 4211, 2454, 
       2166, 2461, 4271, 2561, 2462, 2178, 4254, 2472, 2567, 2473, 2190, 4255,
        2481, 2573, 2482, 2485}], 
      Line3DBox[{2037, 2364, 2496, 2365, 4227, 2038, 2373, 2502, 2374, 4231, 
       2058, 2382, 2508, 4174, 2383, 2070, 2391, 2514, 4182, 2392, 2082, 2400,
        4262, 2520, 2401, 2094, 2409, 4264, 2526, 2410, 2106, 4237, 2418, 
       2532, 2419, 2118, 4241, 2426, 2538, 2427, 4242, 2131, 2437, 2544, 2438,
        4251, 2143, 2446, 2550, 4204, 2447, 2155, 2455, 2556, 4212, 2456, 
       2167, 2463, 4272, 2562, 2464, 2179, 2474, 4274, 2568, 2475, 2191, 4256,
        2483, 2574, 2484, 2488}], 
      Line3DBox[{2039, 2366, 2497, 2367, 2040, 2375, 2503, 4167, 2376, 2059, 
       2384, 2509, 4175, 2385, 2071, 2393, 2515, 4183, 2394, 2083, 2402, 4263,
        2521, 2403, 2095, 2411, 4265, 2527, 2412, 2107, 2420, 4266, 2533, 
       2421, 2119, 4243, 2428, 2539, 2429, 4244, 2132, 2439, 2545, 4197, 2440,
        2144, 2448, 2551, 4205, 2449, 2156, 2457, 2557, 4213, 2458, 2168, 
       2465, 4273, 2563, 2466, 2180, 2476, 4275, 2569, 2477, 2192, 2486, 4276,
        2575, 2487, 2490}], 
      Line3DBox[{690, 1080, 3562, 705, 1087, 3569, 720, 1094, 3576, 735, 1101,
        3583, 750, 3170, 1108, 765, 3184, 1115, 780, 3198, 1122, 795, 3213, 
       1129, 3590, 810, 1136, 3597, 825, 1143, 3604, 840, 1150, 3611, 855, 
       3257, 1157, 870, 3271, 1164, 885, 3285, 1171, 900}], 
      Line3DBox[{2041, 2368, 2210, 2042, 2377, 4102, 2218, 2060, 2386, 4103, 
       2226, 2072, 2395, 4105, 2234, 2084, 2404, 4111, 2242, 2096, 2413, 4117,
        2250, 2108, 2422, 4124, 2258, 2120, 4245, 2430, 2266, 4246, 2133, 
       2441, 4135, 2274, 2145, 2450, 4136, 2282, 2157, 2459, 4138, 2290, 2169,
        2467, 4144, 2298, 2181, 2478, 4150, 2306, 2193, 2489, 4156, 2315, 
       2202}], Line3DBox[{2043, 2211, 4162, 2044, 2219, 4168, 2061, 4104, 
       2227, 2073, 4106, 2235, 2085, 4112, 2243, 2097, 4118, 2251, 2109, 4125,
        2259, 2121, 4130, 2267, 4192, 2134, 2275, 4198, 2146, 4137, 2283, 
       2158, 4139, 2291, 2170, 4145, 2299, 2182, 4151, 2307, 2194, 4157, 2316,
        2203}], 
      Line3DBox[{2045, 2212, 4163, 2046, 2220, 4169, 2062, 2228, 4176, 2074, 
       4107, 2236, 2086, 4113, 2244, 2098, 4119, 2252, 2110, 4126, 2260, 2122,
        4131, 2268, 4193, 2135, 2276, 4199, 2147, 2284, 4206, 2159, 4140, 
       2292, 2171, 4146, 2300, 2183, 4152, 2308, 2195, 4158, 2317, 2204}], 
      Line3DBox[{2047, 2213, 4164, 2048, 2221, 4170, 2063, 2229, 4177, 2075, 
       2237, 4184, 2087, 4114, 2245, 2099, 4120, 2253, 2111, 4127, 2261, 2123,
        4132, 2269, 4194, 2136, 2277, 4200, 2148, 2285, 4207, 2160, 2293, 
       4214, 2172, 4147, 2301, 2184, 4153, 2309, 2196, 4159, 2318, 2205}], 
      Line3DBox[{2049, 2214, 4165, 2050, 2222, 4171, 2064, 2230, 4178, 2076, 
       2238, 4185, 2088, 2246, 4188, 2100, 4121, 2254, 2112, 4128, 2262, 2124,
        4133, 2270, 4195, 2137, 2278, 4201, 2149, 2286, 4208, 2161, 2294, 
       4215, 2173, 2302, 4218, 2185, 4154, 2310, 2197, 4160, 2319, 2206}], 
      Line3DBox[{2051, 2215, 4166, 2052, 2223, 4172, 2065, 2231, 4179, 2077, 
       2239, 4186, 2089, 2247, 4189, 2101, 4122, 2255, 2113, 4129, 2263, 2125,
        4134, 2271, 4196, 2138, 2279, 4202, 2150, 2287, 4209, 2162, 2295, 
       4216, 2174, 2303, 4219, 2186, 2311, 2198, 4161, 2320, 2207}], 
      Line3DBox[{2053, 2321, 2322, 4228, 2369, 2324, 4173, 2325, 2378, 2327, 
       4180, 2328, 2387, 2330, 4187, 2331, 2396, 2333, 4190, 2334, 2405, 2336,
        4191, 2337, 2414, 4222, 2339, 2340, 2126, 4247, 2431, 2432, 4248, 
       2433, 2343, 4203, 2344, 2442, 2346, 4210, 2347, 2451, 2349, 4217, 2350,
        2576, 2468, 4220, 2469, 2470, 2353, 4221, 2354, 2479, 4224, 2356, 
       2357, 2491}], 
      Line3DBox[{2199, 2312, 2580, 2570, 4155, 2355, 2187, 2304, 2564, 4148, 
       2352, 2175, 2296, 2558, 4141, 2351, 2163, 2288, 4269, 2552, 2348, 2151,
        2280, 4268, 2546, 2345, 2139, 2272, 4267, 2540, 2342, 2127, 4223, 
       2264, 2534, 2341, 4235, 2114, 2256, 2528, 4123, 2338, 2102, 2248, 2522,
        4115, 2335, 2090, 2240, 2516, 4108, 2332, 2078, 2232, 4259, 2510, 
       2329, 2066, 2224, 4258, 2504, 2326, 2054, 2216, 4257, 2498, 2323, 2032,
        2208, 2492, 2579, 2578, 2577}], 
      Line3DBox[{2200, 2313, 2571, 1266, 4283, 2188, 1223, 2565, 4149, 1263, 
       2176, 1222, 2559, 4142, 1260, 2164, 1221, 4292, 2553, 1257, 2152, 1220,
        4291, 2547, 1254, 2140, 4290, 1219, 2541, 1251, 2128, 4289, 1218, 
       2535, 1248, 4280, 2115, 1217, 2529, 1245, 4278, 2103, 1216, 2523, 4116,
        1242, 2091, 1215, 2517, 4109, 1239, 2079, 1214, 4288, 2511, 1236, 
       2067, 1213, 4287, 2505, 1233, 2055, 4286, 1212, 2499, 1230, 2033, 4285,
        1211, 2493, 2358, 2359}], 
      Line3DBox[{2201, 2314, 2572, 2480, 4284, 2189, 2305, 2566, 2471, 4282, 
       2177, 2297, 2560, 4143, 2460, 2165, 2289, 4270, 2554, 2452, 2153, 4252,
        2281, 2548, 2443, 2141, 4249, 2273, 2542, 2434, 2129, 4238, 2265, 
       2536, 2423, 4281, 2116, 2257, 2530, 2415, 4279, 2104, 2249, 2524, 2406,
        4277, 2092, 2241, 2518, 4110, 2397, 2080, 2233, 4260, 2512, 2388, 
       2068, 4232, 2225, 2506, 2379, 2056, 4229, 2217, 2500, 2370, 2034, 4225,
        2209, 2494, 2360, 2361}]}, {
      Line3DBox[{2581, 3061, 3062, 2992, 3048, 1512, 2936, 3063, 3064, 2993, 
       3816, 4071, 2725, 2937, 2805, 2994, 4072, 2726, 2938, 3780, 3916, 2995,
        2727, 2939, 3781, 3917, 2728, 2940, 3782, 3918, 2729, 2941, 4049, 
       2806, 2730, 2942, 2807, 3741, 4015, 2943, 2808, 3919, 2731, 2582, 3920,
        2732, 2583, 3921, 2733, 2584, 3922, 2734, 2585, 3830, 3923, 2735, 
       3121, 3831, 4101, 3122, 3102, 3119, 2736, 3120}], 
      Line3DBox[{2586, 3103, 2809, 2996, 3049, 3050, 4086, 2944, 3065, 2810, 
       2997, 1942, 3051, 2945, 2811, 2998, 4073, 2737, 2946, 3783, 3924, 2999,
        2738, 2947, 3784, 3925, 2739, 2948, 4050, 2812, 2740, 2949, 4051, 
       2813, 2741, 2950, 2814, 3742, 4016, 2951, 2815, 3743, 4017, 2587, 3926,
        2742, 2588, 3927, 2743, 2589, 3928, 2744, 2590, 3929, 2745, 2591, 
       4098, 3098, 2746, 3133}], 
      Line3DBox[{2592, 3104, 2816, 3000, 3052, 4018, 3817, 2952, 3066, 2817, 
       3002, 3818, 4019, 3053, 2953, 2818, 3004, 1528, 2954, 3785, 3930, 3006,
        2747, 2955, 4052, 2819, 2748, 2956, 4053, 2820, 2749, 2957, 4054, 
       2821, 2750, 2958, 2822, 3744, 4020, 2959, 2823, 3745, 4021, 2593, 3746,
        3971, 2594, 3931, 2751, 2595, 3932, 2752, 2596, 3933, 2753, 2597, 
       3934, 2754, 2598}], 
      Line3DBox[{2612, 2757, 3937, 2611, 2756, 3936, 2610, 2755, 3935, 2609, 
       3973, 3748, 2608, 3972, 3747, 2607, 4025, 2840, 2839, 2606, 4056, 2838,
        2837, 2605, 2836, 2835, 4024, 2604, 2834, 2833, 4023, 2603, 2832, 
       2831, 4022, 2602, 2830, 3007, 4074, 3786, 2601, 4055, 2829, 3005, 2828,
        2600, 3068, 4090, 2827, 3003, 2826, 3067, 2599, 3824, 4089, 2825, 
       3001, 2824, 3123, 3105}], 
      Line3DBox[{2626, 2759, 3939, 2625, 2758, 3938, 2624, 3977, 3751, 2623, 
       3976, 3750, 2622, 3975, 3749, 2621, 4029, 2856, 2855, 2620, 4057, 2854,
        2853, 2619, 2852, 2851, 4028, 2618, 2850, 2849, 4027, 2617, 2848, 
       2847, 4026, 2616, 2846, 3011, 4075, 3788, 2615, 3787, 3974, 3010, 2845,
        2614, 3070, 4092, 2844, 3009, 2843, 3069, 2613, 3825, 4091, 2842, 
       3008, 2841, 3124, 3106}], 
      Line3DBox[{2640, 2760, 3940, 2639, 3986, 3755, 2638, 3985, 3754, 2637, 
       3984, 3753, 2636, 3983, 3752, 2635, 3793, 3982, 2865, 2634, 4059, 2864,
        2863, 2633, 2862, 2861, 4030, 2632, 2860, 3981, 3792, 2631, 2859, 
       3980, 3791, 2630, 2858, 3015, 4076, 3790, 2629, 3789, 3979, 3014, 2857,
        2628, 3075, 3076, 3978, 3013, 3074, 3073, 2627, 4058, 3071, 3072, 
       3012, 3126, 3125, 3107}], 
      Line3DBox[{106, 512, 1413, 107, 513, 1414, 108, 514, 1415, 109, 1931, 
       515, 110, 1416, 111, 1417, 112, 1418, 113, 1419, 114, 1420, 115, 1421, 
       116, 1422, 117, 1423, 118, 1424, 119, 1425, 120}], 
      Line3DBox[{2654, 3995, 3760, 2653, 3994, 3759, 2652, 3993, 3758, 2651, 
       3992, 3757, 2650, 3991, 3756, 2649, 3798, 3990, 2872, 2648, 1720, 2871,
        2647, 2870, 1718, 2646, 2869, 3989, 3797, 2645, 2868, 3988, 3796, 
       2644, 2867, 3019, 4077, 3795, 2643, 3794, 3987, 3018, 2866, 2642, 3080,
        4094, 3827, 3017, 3079, 3078, 2641, 3826, 4093, 3077, 3016, 3128, 
       3127, 3108}], 
      Line3DBox[{2655, 3109, 3110, 3020, 3054, 4078, 2761, 2960, 3081, 3082, 
       3021, 3819, 4079, 2762, 2961, 2873, 3022, 4080, 2763, 2962, 3799, 3941,
        3023, 2764, 2963, 3800, 3942, 2765, 2964, 3801, 3943, 2766, 2965, 
       1731, 2767, 2966, 2874, 1574, 2967, 2875, 3944, 2768, 2656, 3945, 2769,
        2657, 3946, 2770, 2658, 3947, 2771, 2659, 3948, 2772, 2660, 3949, 
       2773, 2661}], 
      Line3DBox[{2662, 3111, 3112, 3024, 3055, 3761, 4087, 2968, 3083, 3084, 
       3025, 4088, 3056, 2774, 2969, 2876, 3026, 4081, 2775, 2970, 3802, 3950,
        3027, 2776, 2971, 3803, 3951, 2777, 2972, 3804, 3952, 2778, 2973, 
       4060, 2877, 2779, 2974, 2878, 3762, 4031, 2975, 2879, 3953, 2780, 2663,
        3954, 2781, 2664, 3955, 2782, 2665, 3956, 2783, 2666, 3957, 2784, 
       2667, 3958, 2785, 2668}], 
      Line3DBox[{2669, 3113, 2880, 3028, 3057, 4032, 3820, 2976, 3085, 2881, 
       3029, 3821, 4033, 3058, 2977, 2882, 3030, 4082, 2786, 2978, 3805, 3959,
        3031, 2787, 2979, 4061, 2883, 2788, 2980, 4062, 2884, 2789, 2981, 
       4063, 2885, 2790, 2982, 2886, 3763, 4034, 2983, 2887, 3764, 4035, 2670,
        3960, 2791, 2671, 3961, 2792, 2672, 3962, 2793, 2673, 3963, 2794, 
       2674, 3964, 2795, 2675}], 
      Line3DBox[{2676, 3114, 2888, 3032, 3059, 4036, 3822, 2984, 3086, 2889, 
       3034, 3823, 4037, 3060, 2985, 2890, 3036, 3765, 4038, 2986, 3806, 3965,
        3038, 2796, 2987, 4064, 2891, 2797, 2988, 4065, 2892, 2798, 2989, 
       4066, 2893, 2799, 2990, 2894, 3766, 4039, 2991, 2895, 3767, 4040, 2677,
        3768, 3996, 2678, 3769, 3997, 2679, 3966, 2800, 2680, 3967, 2801, 
       2681, 3968, 2802, 2682}], 
      Line3DBox[{2696, 2804, 3970, 2695, 2803, 3969, 2694, 4000, 3772, 2693, 
       3999, 3771, 2692, 3998, 3770, 2691, 4044, 2911, 2910, 2690, 4067, 2909,
        2908, 2689, 2907, 2906, 4043, 2688, 2905, 2904, 4042, 2687, 2903, 
       2902, 4041, 2686, 2901, 3039, 4083, 3807, 2685, 1771, 3037, 2900, 2684,
        3088, 4096, 2899, 3035, 2898, 3087, 2683, 3828, 4095, 2897, 3033, 
       2896, 3129, 3115}], 
      Line3DBox[{2710, 3100, 3099, 4099, 2709, 4006, 3776, 2708, 4005, 3775, 
       2707, 4004, 3774, 2706, 4003, 3773, 2705, 4047, 2925, 2924, 2704, 4069,
        2923, 2922, 2703, 2921, 2920, 4046, 2702, 2919, 2918, 4045, 2701, 
       2917, 4002, 3810, 2700, 2916, 3043, 4084, 3809, 2699, 3808, 4001, 3042,
        2915, 2698, 3091, 1782, 3041, 2914, 3090, 2697, 4068, 3089, 2913, 
       3040, 2912, 3130, 3116}], 
      Line3DBox[{2724, 3117, 3118, 3101, 3132, 4100, 3833, 2723, 3131, 4014, 
       3832, 2722, 4013, 3779, 2721, 4012, 3778, 2720, 4011, 3777, 2719, 3815,
        4010, 2935, 2718, 4070, 2934, 2933, 2717, 2932, 2931, 4048, 2716, 
       2930, 4009, 3814, 2715, 2929, 4008, 3813, 2714, 2928, 3047, 4085, 3812,
        2713, 3811, 4007, 3046, 2927, 2712, 3097, 4097, 3829, 3045, 3096, 
       3095, 2711, 2013, 3094, 3044, 3093, 3092, 2926}], 
      Line3DBox[{3134, 3709, 3710, 3408, 2208, 3556, 3671, 3672, 3612, 3657, 
       4285, 3293, 3557, 3409, 3613, 4225, 3294, 3558, 3410, 3614, 3295, 3559,
        3888, 4226, 3296, 3560, 3889, 4227, 3297, 3561, 2367, 3298, 3562, 
       3411, 2210, 3135, 4162, 3299, 3136, 4163, 3300, 3137, 4164, 3301, 3138,
        4165, 3302, 3139, 4166, 3303, 3140, 3884, 4228, 3413, 3728, 3304, 
       3412}], Line3DBox[{3141, 3711, 3712, 3414, 3834, 4257, 3563, 3673, 
       3674, 3615, 3658, 4286, 3305, 3564, 3415, 3616, 4229, 3306, 3565, 3416,
        3617, 3307, 3566, 3890, 4230, 3308, 3567, 3891, 4231, 3309, 3568, 
       4167, 3417, 3310, 3569, 3418, 3835, 4102, 3142, 4168, 3311, 3143, 4169,
        3312, 3144, 4170, 3313, 3145, 4171, 3314, 3146, 4172, 3315, 3147, 
       4173, 3381, 3419, 3316, 3148}], 
      Line3DBox[{3149, 3713, 3382, 3421, 3836, 4258, 3570, 3675, 3420, 3618, 
       3659, 4287, 3660, 3571, 3422, 3619, 4232, 3317, 3572, 3423, 3620, 3318,
        3573, 3892, 4233, 3319, 3574, 4174, 3424, 3320, 3575, 4175, 3425, 
       3321, 3576, 3426, 3837, 4103, 3150, 3838, 4104, 3151, 4176, 3322, 3152,
        4177, 3323, 3153, 4178, 3324, 3154, 4179, 3325, 3155, 4180, 3383, 
       3427, 3326, 3156}], 
      Line3DBox[{3157, 3714, 3384, 3429, 3839, 4259, 3577, 3676, 3428, 3621, 
       3661, 4288, 3662, 3578, 3431, 3623, 3840, 4260, 3579, 3432, 3625, 3327,
        3580, 4181, 3433, 3328, 3581, 4182, 3434, 3329, 3582, 4183, 3435, 
       3330, 3583, 3436, 3841, 4105, 3158, 3842, 4106, 3159, 3843, 4107, 3160,
        4184, 3331, 3161, 4185, 3332, 3162, 4186, 3333, 3163, 4187, 3385, 
       3437, 3704, 3705, 3703}], 
      Line3DBox[{3177, 3389, 3438, 3388, 4190, 3176, 3335, 4189, 3175, 3334, 
       4188, 3174, 4114, 3846, 3173, 4113, 3845, 3172, 4112, 3844, 3171, 4111,
        3453, 3452, 3170, 3451, 3450, 4263, 3169, 3449, 3448, 4262, 3168, 
       3447, 3446, 4261, 3167, 3445, 3626, 3444, 3166, 4110, 3443, 3624, 3442,
        3165, 3678, 4109, 3440, 3622, 3439, 3677, 3164, 4108, 3387, 3430, 
       3386, 3731, 3715}], 
      Line3DBox[{3191, 3393, 3454, 3392, 4191, 3190, 4122, 3851, 3189, 4121, 
       3850, 3188, 4120, 3849, 3187, 4119, 3848, 3186, 4118, 3847, 3185, 4117,
        3467, 3466, 3184, 3465, 3464, 4265, 3183, 3463, 3462, 4264, 3182, 
       3461, 4234, 3894, 3181, 3460, 3629, 3459, 3180, 3893, 4277, 3628, 3458,
        3179, 3680, 4116, 3456, 3627, 3455, 3679, 3178, 4115, 3391, 3441, 
       3390, 3732, 3716}], 
      Line3DBox[{3205, 3395, 3468, 4222, 3885, 3204, 4129, 3856, 3203, 4128, 
       3855, 3202, 4127, 3854, 3201, 4126, 3853, 3200, 4125, 3852, 3199, 4124,
        3478, 3477, 3198, 3476, 3475, 4266, 3197, 3474, 4237, 3897, 3196, 
       3473, 4236, 3896, 3195, 3472, 3632, 3471, 3194, 3895, 4279, 3631, 3470,
        3193, 3683, 4278, 3684, 3630, 3682, 3681, 3192, 4123, 3394, 3457, 
       3734, 3733, 3717}], 
      Line3DBox[{3207, 3719, 3720, 3479, 4223, 3336, 3584, 3689, 3690, 3636, 
       3663, 4289, 3337, 3585, 3481, 3637, 4238, 3338, 3586, 3484, 3638, 3339,
        3587, 3900, 4240, 3340, 3588, 3902, 4242, 3341, 3589, 3904, 4244, 
       3342, 3590, 3489, 4246, 3343, 3215, 4192, 3344, 3217, 4193, 3345, 3219,
        4194, 3346, 3221, 4195, 3347, 3223, 4196, 3348, 3225, 3907, 4248, 
       3491, 3349, 3227}], 
      Line3DBox[{3226, 3490, 4247, 3906, 3224, 4134, 3861, 3222, 4133, 3860, 
       3220, 4132, 3859, 3218, 4131, 3858, 3216, 4130, 3857, 3214, 3905, 4245,
        3488, 3213, 3487, 4243, 3903, 3212, 3486, 4241, 3901, 3211, 3485, 
       4239, 3899, 3210, 3483, 3635, 3482, 3209, 3898, 4281, 3634, 3480, 3208,
        3687, 4280, 3688, 3633, 3686, 3685, 3206, 3886, 4235, 3469, 3736, 
       3735, 3718}], 
      Line3DBox[{3228, 3721, 3722, 3492, 3862, 4267, 3591, 3691, 3692, 3639, 
       3664, 4290, 3350, 3592, 3493, 3640, 4249, 3351, 3593, 3494, 3641, 3352,
        3594, 3908, 4250, 3353, 3595, 3909, 4251, 3354, 3596, 4197, 3495, 
       3355, 3597, 3496, 3863, 4135, 3229, 4198, 3356, 3230, 4199, 3357, 3231,
        4200, 3358, 3232, 4201, 3359, 3233, 4202, 3360, 3234, 4203, 3396, 
       3497, 3361, 3235}], 
      Line3DBox[{3236, 3723, 3397, 3499, 3864, 4268, 3598, 3693, 3498, 3642, 
       3665, 4291, 3666, 3599, 3500, 3643, 4252, 3362, 3600, 3501, 3644, 3363,
        3601, 3910, 4253, 3364, 3602, 4204, 3502, 3365, 3603, 4205, 3503, 
       3366, 3604, 3504, 3865, 4136, 3237, 3866, 4137, 3238, 4206, 3367, 3239,
        4207, 3368, 3240, 4208, 3369, 3241, 4209, 3370, 3242, 4210, 3398, 
       3505, 3371, 3243}], 
      Line3DBox[{3244, 3724, 3399, 3507, 3867, 4269, 3605, 3694, 3506, 3645, 
       3667, 4292, 3668, 3606, 3509, 3647, 3868, 4270, 3607, 3510, 3649, 3372,
        3608, 4211, 3511, 3373, 3609, 4212, 3512, 3374, 3610, 4213, 3513, 
       3375, 3611, 3514, 3869, 4138, 3245, 3870, 4139, 3246, 3871, 4140, 3247,
        4214, 3376, 3248, 4215, 3377, 3249, 4216, 3378, 3250, 4217, 3400, 
       3707, 3729, 3730, 3706}], 
      Line3DBox[{3264, 3531, 3708, 3530, 4220, 3263, 3380, 4219, 3262, 3379, 
       4218, 3261, 4147, 3874, 3260, 4146, 3873, 3259, 4145, 3872, 3258, 4144,
        3529, 3528, 3257, 3527, 3526, 4273, 3256, 3525, 3524, 4272, 3255, 
       3523, 3522, 4271, 3254, 3521, 3650, 3520, 3253, 4143, 3519, 3648, 3518,
        3252, 3696, 4142, 3516, 3646, 3515, 3695, 3251, 4141, 3402, 3508, 
       3401, 3737, 3725}], 
      Line3DBox[{3278, 3406, 3532, 3405, 4221, 3277, 2311, 3276, 4154, 3878, 
       3275, 4153, 3877, 3274, 4152, 3876, 3273, 4151, 3875, 3272, 4150, 3545,
        3544, 3271, 3543, 3542, 4275, 3270, 3541, 3540, 4274, 3269, 3539, 
       4254, 3912, 3268, 3538, 3653, 3537, 3267, 3911, 4282, 3652, 3536, 3266,
        3698, 4149, 3534, 3651, 3533, 3697, 3265, 4148, 3404, 3517, 3403, 
       3738, 3726}], 
      Line3DBox[{3292, 3669, 3670, 3546, 4224, 3887, 3291, 4161, 3883, 3290, 
       4160, 3882, 3289, 4159, 3881, 3288, 4158, 3880, 3287, 4157, 3879, 3286,
        4156, 3555, 3554, 3285, 3553, 3552, 4276, 3284, 3551, 4256, 3915, 
       3283, 3550, 4255, 3914, 3282, 3549, 3656, 3548, 3281, 3913, 4284, 3655,
        3547, 3280, 3701, 4283, 3702, 3654, 3700, 3699, 3279, 4155, 3407, 
       3535, 3740, 3739, 3727}]}}},
   VertexNormals->CompressedData["
1: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
CLygbz7SaF2BtjLGkXzWGXolU6Y2COL9r7JVxkrRbouiSoxzWEoQm/W/bvg1
mvAhLroAne/eRfK5YmfHwYM/moH91oz/I/ps9I8li+Tzb66LzCoDpbDHtHJ4
rVAySsv6QOJcvz1HQ0MgHgQYAje7b/RC3B8X+HxB06TnvA6h9Oe4LPaBD1x4
uIDzsJKE0ZhyCmoxbtwvuTwALBwW+Bw2B+rmb2yyLuQrpxVs1V7E2VX3cOTo
CT/pQ6dObR2wM1jEmTnFRIb5UBWcNDn6fWRTFPqiPkLivOFcBpvUqU54eVpl
3oQ9BY11+pA437NzUwmHAWi1Z86JZ/mMxIUkhjDODHxqzn3lI/B72nXCe1s2
GuiVIf1Gya929rqIMTgVta6zeN9XxGf14gnG2W8te6MRgb/rzXc/2yKzUaPw
GNkHx1UajiwTGgK5I6Fy5UcQWuHKW41xFrRdZ2cU1QNXvylfiBhIQwYD30k+
/2m9GBbZ3ALMCpWuZ3cnIX62OhLngt4dnyO7ymDqwcPAsfOvkYX1KxLnpVNi
yVdWv4O6D6FH3yo7IdbABT4rqmptoO9NRBav6+sHbj2AzPwFnAMdDVzMZlJQ
UdwR7h0KLrCT6oOS+z4aiVvfzdIZfvdZzOLUIs67CG9H5+gnbcc/vbuprvcw
DWcdbaPMVOMqaF/6quIHk6B0aNqCPjsw8Yda23fC9rT63ee3SEhv2VJJ4my9
nTlh+/0BmExMDbx24rh04aZbpD6/0Hxqb7lxFGQF9FXMTY5Lbzj3muSzgoVf
l/jvMSjJt9wz43xcenZY1R3j3GD6WkRqlvA11as+rTA9Lm3JfioG4yx0wGjW
12wIzvpoXIudlJM2oHckdaN5XuK7VVsPeJc89clOlZXe8vg0yeejhmxPz+xo
Be4C9QupfHulmTl2kLqRxlHPUMNXDnTUf58d40ici5qmnvhfeQcj1SahCRfW
SEtfW+DzI56b/o/WJKEKFtHkDZvps5rWL+BcHM/tqS6WijQ+eGpnrGDKKkla
wPm82I53Y5l3s/5Jbm3zNGjOpOHcf9EkAvOZaZJdleCz9KI+iy4l+czppNdB
8BlofP47pkby+Y5JPpcpewqMUnzeteT3ScxnXZ+tfO9YPsM+is9DDekPMJ/N
D/Ty+2zLhj6Kzz++R6zGfBZMrCgm+Az8FJ9vb7Oox3x2pjfZ3B6ZDXUUn8+d
5SD5HJsTbkbwGWh8lt3ISfK50H+5FsFnoPG5Pzg1FPNZOKkjhOAz0Pis1CCe
iflcwwYpBJ+Bxud1//aQfLa3mcR8BhqffZRWkXyu1To0SPAZ0fjc8OEKyWdz
uR88BJ/RLorP1+/tJfkcrviwkeBzFg1nKY+/862EPvcGzOwi9HkR5yIuy3VY
n28GSDQT+gzdlD4rFRv2YX2u64kKI/QZaPqM9uttwPr8bP3rPkKfIYnSZ9br
ZfJYn2dcfqYT+gwslD6Lbc4zwvrs1tBnROgzpFP6rMd3Vw3r84ODhecIfYb/
KH0W5GM6hvV5mku1jtBnoOlzTvpJUp+trnelEfoMmpQ+38nUPYD1uUlWIJzQ
Z6Dps02QCxPW5xGt+mXrhJLhI6XPJW30Z7E+D41q7SP0GdZR+nzDb2k31ucO
O7XHhD4jTUqf6dKtb2B9ZtF6qULoM7Ki9Fn30B41Up+VL1cT+ryIs9Xdzdex
33DlPahA+I1FnLe+Fw7CfmPV1IYawm9AAOU3jBl+xGC/IXZVTJfwG0DzG4bv
dHqx3wj+L7ef8BsgRPmN9Sk/ArDfUCjVNyH8BtD8RuyRVwHYbzA941xN+A2g
+Y3lXHQPsd/gO/JBlPAbEE75jd2nf63EfuOS3vlMwm8AzW/cqb7yC/sNvhtm
JoTfgC7KbyjuHf6L/cZL19owwm8AzW9I2d4Nxn6j2neFCuE3gOY3OGePemK/
QVeSXUD4DRCi/IaDHzvpN0rUw6IJv4FofuPJnb1D2G/0LlFNI/wGqqX8xlU1
67kOwm+YWO6dJ/zGIs4x+qUnsX/WtGEPJPzzIs77nN4dw/75HPtEIOGfgeaf
7bIjWbB/9lkq4Er4Z6D553gPul3YPxfabZYh/DPQ/PN/jBam2D/nifiVEP4Z
aP6Z4Unac+yfv9k6TxD+Gewp/6wrkbQB++fjlftYCf8MJyn/PNe5tBb7Z4bN
TC6EfwZ3yj/nnam2xf7ZtDVIjvDPcJ3yz1PvZf6oEP7ZXz35IuGfgeaf7wUl
0WH/PGj5ToPwz3CN8s8Gx88qYf9MvycMCP8MNP+smjz+Bvtno/JpN8I/oyWU
f05RoxfB/tlHoO8+4Z8RK+Wf+Zc/7sT+WSyT7QLhnxdx3jQcLYjnwb6jf/KI
eXAR5+bVTBZ4Hqyed2sh5kEYoebBkKwzz/A8qK20L5CYB6GImgfnh568xvPg
g1VvBIl5EGjzoOsEKyeeB4OdczmJeRC8qHnwXYTrLTwPfj1y4i4xDwJtHjyh
qB6A58FE8PAj5kEYoubB5TJ0BXgefCL0pYWYByGFmgcvCbsJ43mw4KewLjEP
Am0ejD8c9xXPg1eWGfsR8yDQ5kEL9ppOPA+aS05EE/MgTFPz4DtBxnV4HmRk
Zn9KzINAmwelXRST8DxoHR6eSMyDaDU1D/68axqO50HdVfxWxDyImql5kGGD
6HI8D6bEBSoR8+AizpJTCdF4v8Eht1at64jnIs7sGjrkfoP1v41GS66UAG2/
IXpHORnvN07tE6k5MdUEtP1GIe9oEN5v3PrC9iRcvgto+40iTSEuvN/wcM4U
iMvrhcvUfmNHAF083m80P3j1gm1HP6yl9hsCq7Us8X7jt7aBsLpxH9D2GxMc
Ui14v/FUdJrdMKsbtlL7jU8OOkN4v1Ffa23B6tIOV6n9hsL9c5vxfqOnSZEr
gtAZ2n5D4FI9H95vyL3nzV6uVQC81H7jmEimD95vJPe2sA5ORQFtv9HqfScP
7zcGefY0Ly2PQfnUfmPXNJ8V3m/8Ut9UZVmQiHypPpg7Ln4U7zfm7YUVAiUs
FnE+Ls0hiPd17qZ8qRbrvBdxZhtWcsb7OsZd9gqHNcthN7WvO8x4KQDv67o2
5knXbGwDPmpfty6zwALv6yomm9TGrXogktrXFRrE8OJ93YsY04Hp8wNA29cZ
XmZsx/s6rZEPN/N7B2EPta+L0VT+D+/rCv32L3nBMQgPqX1dsuMcD97XZcXL
SP9d2we0fR3f9vAavK+rF/eVKtTvBNq+LupAMiPe15nETjtM6jbAaWpft3Ft
URDe19XEbL2+Y30RzFH7uv6ALbF4XxdT8M7mm0cMcZ8FPqsdDk/A+7oPo+Wi
5zLikDu1r3vxkh7wvs6pMlDu4rtkRNvXrQ0Iq8D7ujmXKt9yB6tFnNXVRzlt
PT6CnIjAwFUHhH6tdlvyKWQMNJdNGMvxVsBZL8EoqZZa1FJwLdAlfBgeP4EA
92wXadEY43WG+70W5xq/hBcXUGMpCBZyOxQsq0dmj+6Q8ZEdex3L4hpB40LQ
REx1Bwoy9I8w/NsLK42jzJrY6gncq3++z+xEjBeCye/yOkkVRU3tMMEgszLN
pRe5hnqve3u7FQbyHwatuNEKLyfc/jIk9KGJjUPkd+eky6wXyjrBWcmN30tg
AMkIez8YDCiAeUujI+HT7VBeLctWbjSI/G4XOePvYdNsLbVsXVCZP3vvm+0A
6uwwSS8pT0eu2j+aS0U74Pyl1ZoG3wbR6tywN/j7bt5PipFxHVBc+UJ4JLQP
/bsvLaeTU4+efrjuWdHZBvGxfB43qvvRjvrH5PfN9OI3thW2QJubjfBMfxfa
U1x6b2xrN2JoHcze09oIpoY+WmuGu1F4syP5XVNG1kH4SC1w+Vcw8KMWpJ+S
J1jBOojuSJp5zW4NRZddLQ+e9YuEiSIG5oifY6h3/pL9bwazLK4918xFDC0X
5yCuF6xVK0ozYOn5kiqXygxktvcp+Y5bJcYz6UWqIXVqnO743mqUbvaAfJfv
5uPq9LZtoMJy/Q2PYxvS/NZL4p88eXXwOOErUvxeSzkQ9790M5kb4yxffden
am8viG/yVbkp0Yv6S46SeHJlJhiN2vdC/KSUlff9XsTz38sEjNsuvnNrvjR1
Q2MR54lNbd0of/0zEp/mNslb+j4doPOlIhaedyDrb4ftMA5cOkbHVI81wg2b
enGv442oasNvEoe9Y0ejfGwRPBqNvezj+xH5PFzIq5g59s+dxlpwU2iX+M1f
ga6k3yDzGkioUnCq7IC1B2Gfb3IjivmhSOYVEaV6d/ZRL8DJa7y32tpRsKri
WpxXl9LHROctAyByVuPyzapOtCT5rz3O62/Pr7CkOwPwLVBtwxRHFwoa7MzE
eaVt3lbEHtIHDWcUkXViB1p9RVUG53X7sguLZ28XtK1x1/Qva0GMO6+S71vw
wmvJg4wW4LDVUvgjW4uOfL69DeflLhY/bnEsG4bLFe1Cm5LRn8BnZF4KoalG
WawNwNEeGPTtShHi2SBD5rXnVFSk29Mu+MNGf7JcswapWD4l82LyKI0Rf98P
tfn3OnP/NSL1PAN+nFfOGsmmjR5DcJyR0cRqfSvap25B1sXcviumL0eGwOqR
2I+kB62oRO+XB86r9mdbqFjPAASzyA9wKzUj5eBuMq+J90+vj1T0QJhf57R4
XR06tVXVAee1+QkvW4VyOxy5vEROqqwCyVhvIPPi6D/Mx2f8FZQzT4tFOr5F
a1hdyby6PhWxq31pBKu8oc9VUznonmkimVfZrp6od82EHxCje63zXxnyOMgV
SfKwaIVdoPYgTOUf5ewlJNUTLLhwXrKrNsPszRFQebuqaMWvGqKfCD3FeVUX
pH5oIuZHKXHWktNHapGwQWgyzsvq3+iGE5GED6/JE0kKq0a6jBsVcF5ap85k
2Sn1wUzE3zBb3Qq0xSyJfC+ONLOq5usd4JUTt1ZyphB9OGxA5vVYwTUpan8O
RPW67/ZPD0U6hS5kXpfVfj3R6W2CsugGDweFNGSSFEXmdb9xCtF97YEfyycZ
M8a/otwJX/K9Rs288q0ch8DPNFvp2/g3FBDuyY7z8lMq/3Q9YRT8GG9x7En9
jtRGmu/ivO5of54K4B6Dr/kGFTmri1DRSH8WzsvwdY6ScM0wbOazeXWRpxAp
SvYewXkp8HY3uyr1Q0HERV9hwTykPcBuj/PqMPXJExDsBLdfgk0MAQjprPlI
1tdVVZ2T08E5INwXcm6H5SOk/m+Bh3RSPILDd5vhczL9uMbJUBS9dy4A51UX
fr6zTrwX6Ma2d+4yjkE50XnhOC9r+Y/ZnWuGYYdt//bvqxPRiThrDpyXVnSP
Y96ZMfD9fEVsaiQJnfHXtMN5Rb7jr96eNQavJNxCTHYkI1vb2Fc4r09Wv8Ti
TEZgyZpW4Zb6RLR+by6Z15nQE4d6i/uhc6/dG7gWh27GHCfz2jHw/mD+o05Y
6bQqzlU8EhX3rSffyyngnzLO68bNgAQiL6Dl5bJ1cCvOKz9K1+LcyVB4Q+V1
cvOPDpxXyLoPh3YbxwAtL/MHp8m8SrmL1Im8QJ7Ka2e7ogPOq5z1ey+RF6hR
eRmeWk/mtZx12ysiL6DlZcz7k8yLR9RqB5EX0PLSdeuWxHnJMyyfI/ICIyov
rlhNMq8ilfY/RF5QROU1/+5cIubhKbaPsgQPQZfiIUtm2WPMw/rOkQiCh0Dj
4eMxsSzMw8KxM4IED4HGQ4dS6VzMw5lmcyuCh0Djocmobxrm4TZTLmGCh3CW
4mH6H+FJzMNBNTaO3NVFQOOh8ecqkodjXKohBA9BieLhQUbXBsxDM8eqCoKH
cJni4YPvK0gextQPjhI8BBoP/zwz5cG68Z/O6+OEbgAHpRtZbqGkblzaUZVF
6AbQdCNPoz8C60ZDxamPhG6AO6UbTuf3WWHdAItHYoRugBelG/eDJw5j3TDe
9LWW0A34SemG4Pi7RKwbQdnRnYRuwA5KN9bF/+DFunHRdYscoRtA042Z5Ih0
rBsfnZNTCN0Amm7o6SyvwLrx3uLRHkI3gKYbV8dWDWOd38Es7UboPMxQOm/9
drUB1vn44JfxhM4DN6XzW3VsI7DOaxqdUCV0Hv4/Og80nWe72VCDdX7J8Acn
QudhL6XzbJK3zbDOiyfIjhI6DzSd9xESDcI6L1pm9IfQeVCidN7vRtEVrPNj
I8PMEnV1QNP57y70zFjnAxw1TxM6D8cond9yP/kl7svC53KNib4M3lRf5jqn
O4n78lZv/yNEXwZaX546WSuD+/KaTClZoi8DrS/LN4Za4r68/eGbTURfBlpf
tj2jEov7cnlPlz7Rl4GR6stvwx4F4L6sZv9ciOjLEPC/+zLQ+vL+FqYVuC9/
dffRI/oyLKf6cul+7n/3ib7MJ093hujLcJTqy+rKJd+xjxpXZmkmfBTQfNRh
xV3p2EedMHvPQPgooPmoyikhNeyjtNbujCV8FNB8lL3G3l7so2Sdq44SPgou
Uz5KY4WMB/ZR9oeL1AgfBX2UjzqqK30N+6jhsXh7wkcBF+WjBEKFWbGPYgs8
okT4KMj73z4KaD5qRoztEPZRQZb7pAgfBTQfdcc5hxX7fFbBryOEz4eflM9/
S69/A/v8yuPF0YTPB5rPn8p3Vn19JAU42AwORLh+gSV0C/GirfXe2P8fe1zJ
Q/j/xbnMVc3lHvb5DUdf/iB8PtB8vvh/Cup4LtCaKHYk5gKgzQX3zz/6jn3+
l9ev2AifD26Uz6+cabqG5wKbY8G/ibkAaHOBXR8/M/b5BnZSGwmfDzSff7OL
zRvPBQaaA3PEXADj1Fywxzy1Cfv8FEk6B8LnQxfl87OWCx/Cc4HOpcg1xFwA
tLlAW85OFvv8jbLHRAifD7OUz0/bpV+L5wKeOdlLxFwA7NRcYMh9zhD7fE/X
Yuzzgebz2eR9bfFc0Pvnux8xF4AQNRdMS9rYY59fZ2W4lPD5YED5/E0vnFPx
XHB47tBlYi4A2lxQG/bKG/t/zwDvA4T/RzT/f+KFcYPUpmAkPplfLvYuCn0p
XPjef/+0Jn4v3ug+ceK9EAP1XpJL8+eUjn+DsaGwo278ZWjcqpGclysPnfZK
3FYLPzdV7LgW0oIG2EvIvUSV6Rhdo3srQGHL9Y3G3ah41z1yXlacYiufX9kJ
Nntvz7Fv7EfVPS8H8Lws7LOiSViwC7QOm6wNCxhADsUu5nhezu0UgDqPTtA4
EfMnurwfneITfofn5ev9NRt9TNvBY+ddtpUzPcg1LYXcz28oZDs4JNYIjJdy
KhofdKD/Am6Qe7aWdfE9ON+RU/XFRL6QTeWrkqQf/ta6CKZcPWP57YqQ0n9T
ZF4SD848MBFohD6JT2UxQo0o+csfMq/P2qNmbEydsIZR5MGflZ3o9pwjuQ+X
06uY41HqAUHhxIOup3rQ5Wgecq91YYz7P/mAXkg4WHhjPKgXRbmaOuC8argF
vrf19cAQY5DOzaEe5BU1EovzUp47KO+h1wUtE2+Hkw26UEwmO5nXaYvsEvXh
VhAdaVl+bqIVifmfJ/N68kSttoCnDETV39w+q/QNyQX/I+8fnnNMsDSwBbyS
R5htd9aiVIMY8v5/xQ8oRt3ohr2rJRIt/VrR340z5J+buLubXxBY3w8rbqu8
7WXtRK4jL8k9c8XePy8fPx8AidbpiVPCXShJ1MEZ358nbaDqTUk/6Gna1DT6
dCI7D4NkfP+04FUMOlM9IHPHjGHz7XaUUnyY3GOsteGYyHDqgEhdiVK/g43I
QCeD3GOsU3l6uJ65AvirbBqZw74itiWM5L7L/3dUQ6dkO3g2XPgTmVGBUhSM
yPsLhwzPfNHthfeF7JPmlvWo/bnJKL5/5T73vbdMB8Fca+/X/zqbUWCM2SC+
f0atNd8Z1mEQuN/JZ/amFa0+deo2vr/rsgnPNXuH4P2ScuGi1BZ0k3luAf+G
8fAozn7waMjte6TSiBS/jZP3L9/OQj8n2gVNvHeEWGaq0S36aFd8/4QLdz63
ilXCtmcvLPbvyEAd+TMk/jppQRfS1DqA/VJf0ZvmQlTim0bef3Bw+BRvbx+8
C37R11pTgRQ5K8g9f1ekWVrzgWFwFjETr2GrQbzmo+T90z2O3yyYHIGC+24i
OheIeURL8yW+v8mcfH0k0wgYeG0M642tQU6dZ6Px/RVsVWvVUgYgfmfYby+R
KqSzc5LkT/nDLwFb7LtBZ7zlqMzzUnQlypbE/2PGj92//laC8Rsmp7BHiUhi
10JdH71k1bl7TScUJm1KOmqFkLTrLvL+H+lm50uG+2Fuw3Kpp8l56JhTN8kf
11d5ImtNR4A9Sm5c81UhcudeSu7PnVcH+y6TGoMaU9eVNqJFKF0q4hS+f/WF
WxpFJ0aBbshZdl6LmFM0jF7j+wvfajIYKhsEw+Cum9znviGdWmcS/38Xugz1
LveAfWmje3fgV2Sw4ih5f8a+//4u16kCk8ggOkOR5yhKYGEv/aVPcJWeeSc0
uocvObAhEk3uGCDvr2t+st/p1gCkjZXsSNoUj8xKysn7N86c8ytaNQqqj7I7
ivcmoXdl8iT/57kVrpzrGgNgtMtPPZKM5ubDdpL70n8FDksGRuHYndVvjJKS
0MuYP+T+fyqxy/Kt9hD80ja3llVPQKoca8n7X7CsdxMhfJH0sh3tEzPRSOiD
Flm/AcFZf/D9WxTXahL3h0jq/i10C/fXlTJmIO4PP6j7x3M59eH764uothL3
B9r9+98+9cX3F3lgdKhkbxIkUPd31eC8jO8/LaNx8uORZKCne03e3/qMLnl/
NYH+KuL+EEDd/09RJ3l/4WuSd4j7wxnq/i+X85L3r7a9/+jHTDTQ7r8iM28X
5k8gU+Rzgj9A48/bJfIdmD8vZZ81E/wBKYo/zHHFc5g/J7LazxD8ARp/li27
tQvz59ZePr4LrwqBxp+76eLemD9dJukSBH8gi+LP0iIJdcwf3ed8WgR/QJXi
z7HwN/qYP0u5Zp0I/gCNP2+bm0j+nHK55kHwB2j8eXTdKxPX766TMvZE/UIn
Vb+JGcXncf227VBvI+oXSqn6Pd5+XAnXb8aEwF+ifoFWvzzvj6Xi+r2ZsuEo
Ub/ATdXv6Ye8ZP1e9LPZQ9Qv0OrXsel4La7fPzJdb4n6hftU/d6zEqnG9RuS
zbbUW6QKdKn6DXcyJev3rPYxOaJ+4TJVv8zHD5L6ud/+dROhn0DTT06Puhqs
n9ZlJ5miMiqApp9FX+RJ/byYZPCL0E+g6efkPjcRrJ9XIkVLCP0Ef0o/lRNv
c2P9bDg7IkjoJ7BT+qn3Y8wN62fz8zJxQj/BiNJPrhrtUKyfFSvrfhL6CUr/
Wz+Bpp/b96+swP2LZXfqXaJ/wXGqf204NrUB9y8j3bi1RP8CWv86ky8uh/uX
2r3nn4n+Bf+o/sU7zHoW9y+Dg3Xvif4FtP7VZ3/kBe5fQb+P/yb6FyRS/Wt/
pUQ57l/KPoaNRP+Cu/+7fwGtf0ltvDmM+9eqY1GNRP8Cfap/SXf/9xL7hzKG
qmTCPwDNP0iNFN7D/gH1Hakh/APQ/IPJZR8D7B8MYp88I/wDWFD+4flZ8Rns
H1zPKAHhH+AS5R8GftSsw/6h5upKK8I/QDblH3TXu+Ri/7Ced78+4R+A5h84
X2cew/4h78b2H4R/AJp/cHX8l4f9w5FXYWyEf4B9lH94ZJkyjX1dYubgccLX
Ac3XKZusf4Z93fUKiz2Er4N+ytc1ClyabSB8XWuGmAHh66Dof/s6oPm6+SPG
ddjXhb3ezEP4OqD5uo+D+ySxr1Ox05ojfB2cpHydy85ibuzr4js/cxK+Dtwo
Xyc16iOBfd3MzqRKwtfBVsrX5XCus8N77N37uS1EDC0X/zziYuGLs17oE4QH
reS+kvkZuaxemL+GXpgy1yVWwvHLsKTBrwbdddMh54gP9LWc44It8Jj/pOX5
mnaktz6A3AN8vlR81NOoE27/enJh/ngPquo8T85fz1ivSYmnfYZNma7BV3I/
IVfnhXn8XZG0d6V3Ddw8PdRw9kMlmjdXIM/P4HN1+FfZDvtE/Hbr7mxBcH4L
ef737Vt/M8j2gOWuN6fozTrR88ITnPh8q6PJLUNPv0BFksvsP7kU5M63cP7M
asO9CkvrQeBXgKxzZyl6buVEnq9v3XI9O70TKmLUZYa46tFfuUpy3jG2LS52
i+uDeg/bLe9vtSIuyOXD55t1ZhladmXDzdz5Q5HnExHd8gV8JDXvfLP73QBX
Xdc7KGV8QxMdouT5Hbm/0muPdMPOSwlna5wqkTzzafL8LYxjQiHEuzqWvc8L
vFaH9oIXOTeNGexRTm79Cp6bAn+v2xmFPh5Z2C+9qDYxOqzXBJUtzTeUuL+g
zf455PkT8/t+KVzqgZA1Fka3eAvR0vCXJD7vO9JuCtEPQfLZOCW6jDJke3uY
PH/18i3bHlrnwECpgP39688R+6YFfB54/vzOI9MMSn43ppOPJaJr4urk+dyi
Hx+qrOwFvRHGBt+Ln5CdaxN5fyGRV6rNTUNQonKvVHn5F/TeUJA8X27XrvGS
2Bza349yTBVcmIO45KLee7g1w/DjqbJiDgnph+tUyPN/TQ3OXpHtBZeoTIZ2
sePS9LdmyPP3tU0eOCYwvHjOmVtyvP/j/kC7/1P9EfL+Kcmiv4n7gx51/4zZ
BPL+RTeeNxL3B9r9V3m8JO8/s7kT3x+Sqfv7u7xQxPgzp2uycu+MgjQK/8Yo
XhL/nDkeYwJ/2EThr2N6+CfGPzE3zobAH2j42/PPGmL8UzlPXCXwBzsK/7dx
HwwwfxLWuB0h+APzyxb4oytS+RXzR+OilQ/BH5ik+HNN5VUa5k88y5A2wR+g
8Wdz//R2zJ8vziOFBH9gH8Wfi3f/NWD+p05zrJiVSwEPiv+W0etEMP/1Vg2f
IvgPfhT/d7Ocu4b5r392jxLBf/hH8X+Tolkh5r/e7rGdBP+Bxv+WY37iuH4F
NrtHEfULblT9cgZJuuD69XFX7SbqF2ap+uVUF76H61emlGMfUb9Aq9/IJPFx
XL/uPCXniPqFAKp+D6c2yWP9kasX20LoD9D0J9lucDnWn3EVoWWE/oANpT+x
y6RWY/351thkRegPXKP0h9HngBTWH7tgB21Cf6CG0h9PIUvmaIOvUPHidphm
cz6qZPAI/ygwBpn+W029gqtBzu98cXtAAypisFVbYTkE/9oaepps8uD9GuH+
Avpc5CT2iIxf6mdW2M1cD4U7R/d91q9FOmP8Z3G87+781Sx8BfA7fXi8NesL
SvxqT8afvzwgUTDXCJ1vjx3K+lKJUH0seb5+b/CNh9LfwcspHx1WSEch6S5k
fFt/cELb1Ra4xW4/0W5agt4m2ZPx2dqXQnkbiuBQE7ft62fJqJ7/MRlfe1fb
I16kDQzEvfZ/zs1F+z/cJO+jZpSwz7yzGNZbvOgLaoxAZ7K9yPg3Oz0aDXe2
g/n09V/uFz4ih81j5Pn9YW1H/lMvgexGd92vuY7IM8ydjF/pqCbw2qgdlg7l
ZGh880Yu2rzk+byzxl51u0tA2fXtmr3rA8DCx42M37nk4Mc959rB7Uzpki8b
4uABMJHxRebXuzXMioFDYWRt36p4EJ1diD9j4lG8sqENZn3f3wyV+QLBEZfI
+5zQ9iy/z18Ec9zHRflsUuEKuJLxOavEuAIutcL2vOLmTOFCqBpmI8+vZGlw
PiZVCFYvHo8wT3+GCmsnMv5adY3aN0IfEhWuySl9KweBmXHy/MH7djXaDfmg
uFw15YLRV/huu4Dn9ordnk+fN4Cf3z6vlLBq8NByJeP9v1Zwq8zlgORfN1Xu
e3nwZYkjGb9hViOr/motiCp3Oj5kr4e1zgvnP1svqFKZFQ1a/5zulqe/Qxp6
/22M6CPmOmnlW+dESkHJ9MZN5qxKlKs2/7MzagQUk2u34PO/OB+SJ85HiDrf
ouJQlvS1cqB78dlwTUgFOpdUS8a3zS/9hn93vrf0DvG7iIv63XNhsjI3X1bA
dOKhA9z65aii+ycZ//jC53qc76P18klEvqiQyjeg0YrlZUYlrNu3LkZfvBR9
sssm44u4BZ9jHG7ol7oQOCB3CgeWNypt6jlVkNKkfHG3ZRG68SWajHeo1nuG
8f/ztbqRwB/R8J/ezaIlk1QNMB3Ksd6rAI1sHiLjTfXen8PvMnSiQ5p4F7SV
epfzF7Undj6sAdtEkeYp1zxkyv6JjC9bNViJ+dByeFSA4AOi8cF/mvPQvGQt
yF6M6XpH5FUwGknG52hpc2OeiG53KiF4gmg8eXr036Oi6lqIu0vHkmyQheil
C8h4mf3ifZifdAETg72r4hGNn68eCKwuPF0Hl3j6Ppwp/4hWnxsh41fuWl6J
eRvQ1XaE4C2i8TbNw3lS/V0d9PV/vdTMnYR+3G4i4znvi/jgejnxi81TdH0A
sqTqJVztNsvv4Tpgc7nuuO15BDKb/E7G/zzoTNaRKdPDWrQhDj2k6khn1tH/
EqE/5vMhxbX2z9BDz3Ey/ptCPFm/ZQ6v0on6BS+qfu9IvyfjexVL1xPxRL9f
iP9/6hpodb1R5RZ5n5VB//B9wJS6z/x0vBjWk1m6jllCT0CV0pMzHx78wPly
6XJZEPkCLd+VV5hInamI/MzsceEj2FM6E3zgJivG8xHz6zYCT6DhGXR5JAjr
27X7WR6EvgFN32p+iTrj9+odc9pCvBcsod4rtvzbM6x7fhs2niR0D2i69/OW
jwTmQ4aXwQzBB6DxQVG7WR/rLfN/Bd8JvYVgSm+NhZxGSL7tDhki+AZmFN8u
3eKKxTpc3Pd8eYdpCcRROgxK6hcwnwWcmdcSfAYany/ZSzNh/Z//GDFH6D8k
UPpfeierHteLPKu4KVEvYEDVy7EpJhHcFwzOBRwn+gLQ+kLRwMQKXI/zkxVJ
RD0CrR4H9ru2437UcKNphOhH4Ej1I6VP/47iek+Pe3mQqHcop+pdSKEtH/ep
HxkJ+4k+BbQ+lXlj20esJ+/b1cwIPQFNSk84pKyUsV7l9761I/QKaHr19HPu
Ctw3jSaDw4m+CRVU36z4MmeKdexqyjjWMcijdEzrw1p93E8DxqsriX4K36l+
mme5gunQvSiwXteXbCyeiFRCF85PL2uRVuX3RIwVtjz3JV+A5GRGYPu/MSQ4
nbTmKUs4GvLyv/eKPRwaqf2zC10NO/5+7ZClA/EdNVHf53cekS+ICENtqjO/
j1+JQPJ9C9//n98F2u8O2F6WxL/rVRewnvhdRPvdL59tT+NzdlypnyDOAdo5
71XLEgPvP5EOVGERUo39v3//6oPdi9WX9dyls7hHTRRvuC9+55eXuXyyNQ4C
n5TxfeuORSbKC7+bM/rijpq4lzRfcbLppm8ui/FMdWJZL8USYTzJ0dzmfhTy
l1mI92tbPyHR6i2tfXLj/IPgh4vx87Hl9p7hSeB45dlMbmwYqjZciOe8ITiQ
tNVXOmpZ7aZcdvvFeDOroWrnj8mwLXjFXO2IP9IRW4j/VFzsxb/ET3pHRNqf
RAXzxXiX9nmLZsP3wHTt53spJlckTvHhv/5nnNO3/KRlDQ71jrmeX4w/fjxe
8kfqe/g7OPDj6tPr6PG6hfiscQ0yni7JgXPc9fzin1s5sxzlFQ9+D6PgX2Ta
7ghvJreQ8aLLgj3xff6yPmFPUjBfjH8yulJ1B/97ML138e4nZx+4z0XxR3Vl
P8434FbGTiLfxfiE4E3xZgeTQYL7VamBeAi40i/E554ZGMN4nj7szPAw+OFi
/LnKzSPRU4nw3bqiLve/CHDYsxDPyFJyG7+XRLu9HfFei/F3h3t4y1LfQf8l
zZrvOdEguGMh/jTnshWYDxc32FsTfFiMn9N4wsjXHgs2CkvHozrjCP1biLen
W8N0WDUS5O9a3fMKSAT2awvfP7uOz4hkeCF9eW3e0aXP0ZkfC/zsixz0TnV1
R9pJgveXfn8BcxML3+uK2xTlbU2yNISLNq39/X/n+i6p9avx+RUOHneJ8xHt
fM0ufQUc/9n95GYifvHvszU2L2HYQ/yu8gF2DuJ3gfa7xfKxHzD/X0+lbiP4
v5jX57feLvg+/aGCzsR9EO0+kYfP7l+TZ5aVrJS3W6nq//77WY2Pr6Otd8eh
0AO+SyxqkyGh9n6iRssYkmMpVLzmH4u2S/9oZvhG8Lp24e+pyr7isR3Tf4Pu
JITZ06+Oh6DTDN/FB8fQDf4WDoznteJ3nQSeiIbnk3Nrt+J3ma6cLCTeBW2j
3oXussw4ft+jg7IlxPsi2vum0DcmYp4U346LJXiC3CiesPnmqGG+TZ/NUCH4
hmh88/pWR/L2B2fJK4K3KJrirdHvuyT/maHv9bWn1+ERxf/1mSvIOuLl824l
6gj2UXV0AbZU4Xo8vc6eo27EH65Q9ZjpL3QP17Xe9Fa6vNgwoNW1TGt6OtYH
vrWOdoQ+AE0fQq8fOId1Zs+LW1sJnQGazpgwqrzBOGfIcjAQOKNECucN3qPH
Mc5le662EjgjGs7a7NXmGGehVkVnAmdEwznt5AZx717zrHCmR8phA+aL7zj5
/LNn/1EfFOt+Kjow2Rf2Ty28e07PCyTl3YluNwQ0OeQ3ITXZnaKMLL3w48Il
JqEruRAux7khMaMM/cyWm7vqOwqHxflv6phXQXV//mFthVb0bKKEo8ByEMpa
vXwvTjbCv/1yBz3+daP939bIRTN3w5ldqq+eMLVDg3FCvMnvfuQLqsuuTtbB
f9nRWU4SHbDchv1YeukgejQTUHWHOw2aaxjFLvxtB+eHLf4B5oPo/XedvuJV
BUjOjrEdjbTCKYUHs75c/aik8HmZwKtmdF/6n6t/UwPce/WfyYct3WjP511X
V0APOpxa+WneuQpa0kQYhvVb0ekl68b1DAfReCyr8vm0Qtjef0P86PJqtKF1
7qbhhxG0b/aqmpFDBhTqaEuEGuYh1u8MR+wujqH17M91Xm2IAC51jSch6gno
s3Y/6ykCZ9/6l1yvn1qDlNNb7amz99HqeuHzLgTOV7ZXPUsM7QU5XcOezbv/
ZulZNh1xDe1FW3/9mvy5IobQwQPCEYNxqO1y0QW+AcKPdeRFvEwoACFF+l7l
+8VotM+YxNm0wZnpsUcdyN2X2/hSvAndFeomcZ7OuvXFTK0dZu90uic1dqL5
bX3HMM6irjGVlUZdcCz4Q+OESS+6Nm5Pj3HO0Hh8Ob6xG2J034xZELjd/JrX
inHWjV5zaolPN6wRrX+S+LUP3dmycQLjPK5zdUQzsxNeG8kEbg3vQc+6Ciow
zhezfrwZVWuDvodMkjNrO1FtuJguxvlJbss3pTd1cLQ0V4RVtQk1bv0xhnFO
du3QPShUBs6fj82ozFUgXb4DRhhn0To1QYXoL2ByxC85/nAOonvKSOL8N9uw
bN+VaNgkzC8QKBiHeAf6SJwzdzxd/8TZDs42Xd0ncMcR6dYt4Dx9MYTtyv2L
oNjp239QVw2yp+9p/SW+i/Jyn3reGwd1S6ryX7PGoFoKZ+8V+e9O2heDSQWL
14EPBSjmrBGJc3nOWq/vok3AXZrBO+pTh7zVGkmcf231aGeu74SU1LD0exrt
KEyyhMSZpzA1pfhmL3DtlWWzMOtCztyGSzHOyyxr3TjX9IPMG76/3q3dSGBM
ogvjfChbCmmhPnjrff1J4/Nu5C29ZhjjnKQguGx9aA8c+BYh2og6kY4jcw3G
ufR93G9Tzk4YWm2iWKjZhtB5G5LPJa5S+QdPNoGf5QfFj2/r0Akpd5LPbT8Y
d3//WwEqvnSszCJlqMGbmcQ5xeXt8b8Hc8Dn3KVZvbdf0G7uv4Bxdst4U/hm
Sxx4RiV3fb0WjTxsF/gsUu7EV2vpCPz58Q+bn9oh3poFnMMan1/ac2UzBHIm
GstnCCGejrFxrCed58e+SK1NhDe54gITCREIUTh/Un5052paGaz8zuatpJeL
vK9okjiPdZxdd+B4Kxiz+LDIW1ehnU3XSJyf9KsHXvnTDRtjb1zc9qcRtYwt
OY5xbjObYar91Q/+5uzLfZjbUV9jDAPGWa/rcNp40SDMFrdL1Ut2oHb/aJLP
t38/edVgOggHv54sD5tvR63+Ux0Y58HYw8McHP3A6s+o8OxXKxrZwFWJcR5r
k7MO2tQNbK1yles7G9DdI3wkzo0Xg5O+XiN0RuSG/NDTKrRdU4fE+QbLcr6d
jNUweZ49qiqrEP0cESJxfnw2QOa6fh40qUxcufAoAx0XoSf5PEV3z+7imQQY
1L5unET0r+PeCzhv2rLEiFXtPlROufd4elqjSxSfy+0ci4V2VkAji0js5zEd
lJ9xw9enahR18shKKOglQaRXVOf7769QBYVztdJqeChYAbbLBH3+nUNIfvQs
iXP+5tufL2u3w794fSWJwRLE90qEE+Mc9NPCVzGhF+7+4br0Kr0a7eavl8E4
12Q7WCXODkJRXovLn5h6FBWzgxHjrBwZzbfyzzAEWgY6ON5tRFW2pwcxzruq
PFZaPh8G2StNCk4bG5HKWGY/xtkuVzfElmkQnvqY+Q4U1qGNDqxVGGf1KpXp
0pwe+N7zj/lWVxWKWSp1DeOcMHyUp8ukHULuSf++ylSK7H9fJnFW35y/4b+o
Grj6dt/aswU5SP+7AInzLSvDxt0C3+DVRpv3moIpKHV0juTz1IFDxy+MJcLD
0/yfdkyGoBcHF3BWZ4lh/FD+AMQ6X2Vc4jNHyymcC7r9xryOqILzh9UKH19o
w3ae27uxbiScvc8eqEn4m0tTO1M8/FAxhXOZ/tDDq+sqoZ6jdmP/0RTUV3yC
xLnyD3DKynaA4bHqA7UKuWizHysXxvn7Vr2fXSN9EOM0ffUnfzEK5golcb54
ROh17p1h4E+xLtuRXo746OuYMM5nwpZ30XuNws4KzYcSvypQTodNJsZ56Ssj
ialto7BHYFWIw8cKxOgSMINxfrSb7xef1RCMP92mKr6lHO3nHCvHOJ8Icl5z
71cvqFxuT+H88x3lWF0lcX5VpKaVoN4Bbnu21p3UzkXpITOkPrv8znTaU1sL
aSu7Bk7WpKPupC0kznu+yP6FGwWQeftJKUdiHDrBtYrk8+Cb7MK9LUlgbSpq
92TWF60WW8D5xYCWNl3fQwjefPudhYcBEqT6IEcSw4w/uyAoB00f45L/D32w
8PuBdePva3ZWidFksDsRFP6gwHlRn+NelMr2xVRCYE/7ywGbSLT+tDmJ89eY
PSy85R2wpHrlmILDB3RXsoPUjTfBflwJCf2QLptxnckgE/VGtpD6vGVL+y3N
yyPgfScyTar3C+qGw6TfqGeXuOP2ZAxE7PzdH239ijZoZDPZEDjnrXrDJbJ+
DFpsli/Z1ZuNYi6Zk/rc8vLOrNPZYXj4wLo7VfkLOqxwkMR59rWGvVFCH8jk
fEzfdjQDKambkLrxg7FWZ01nB/QUDCdN+3xAs+wPST4LLD9nvoXo46Y7TdbQ
rX+LuJfykDjzrd8Of0QKQXay+Ev03yCU9e0fyedZiR2KbcbJ8Ehg2deafc5o
j9pCHwzue/v3hKcz6G+TTBYqP49KKT776jG8V8wRhFNx1yr/rNmE4ntaJjHO
N7MVudduer/479/rKJzXCcef42iqhGVa+x/W2O6Unnh1lcT5heKQItN8B5zL
WW5y3f+w9GOuZhLnfOUw0U/j/SArs71F7uth6cibEbIYZ4NtUUcy40Yg6i67
+5UxZempFD/Sb1xO088LaxqDO9zjiZdZT0r/KxFow3w+Df9aBUzGoMjfMi5n
yUnpfEkPUjd0M0q+CrwahoX/H5ZO+viE9BsPMx5aVBF1lB/8NuZ38CFp32W/
Sb/xTvLgjMjqzsW8Dp3iInFmFZpT31dSBzZbGI4W8EtIj5ot6MbG9I+XNMwL
wejTwYO2XzZJO+9e0GcVRmEx45BkmNmzPa/UmUN6peoCn2c2yf5cV+gM1zje
hLu110lF1S7gvJyrIPK7lwao3mXM3U5/5LAtZ8iSOeyrKT4nKpB8Bhqfqx4p
kHxWrixMI/gM/BSfD2wSZsZ89s7h3K7o8AFsKD6XjzKTfA65bPyQ4DPQ+Gx7
tsQM81lw2LaG4DOwMd8g+SzDJELy+dYuXg+Cz9BU9XgF5nNybign5nNy6+8N
BJ/hrvx6ks861bf+YT4zSzDQf1T+AtIUn6ub6u5hPltOH6sl+Aw0Pm+2vkLy
mWW3dRHBZ/hH8flHowrJZw2+WQ6Cz0Dj84DTTynM51Xnwhhi/gYBovjMyFCu
gPns8qm2huAziFJ8dtGYmcF8DuOPYBcuPw80PrtrOiZhPmuKPbyR1MEHasta
f2I+u1D6nHeF1GcoonBmsTtxH+vzlLmMJKHPkKagS+J8fuvptVifJW7T7yb0
GRhSJck+6COg8wPrc3C5oQOhz0DTZ3R3ktTnZffnygl9hgCrpaSvm/9o3or1
ed+hgleEPoPGEs0BzGebSaW9WJ/rypM+EfoM+VqjfzDOwZvnJ7E+O9innCf0
GQ5Q+mwRc4sd67OIE2cFoc/w4bUNqc8jQ3oXsD6/PVXURegz0PT50dWf97E+
x6LxYUKfobC0iZxTgrakzGB95i4xGSP0GfxM6Eg+B3k1fcP6PLv1giehz9Cw
ZYDEWRv0L2F9NqxYmkHoM9yj9Fm9PHka63PimwqBSYHN0HCmmNSNY2sX/MYm
T9JvQCONz/TOB7HfKO+XzCP8Blz/fIrE+V2zAOk3SmMENQm/Ad2510k+L6sv
9cR+w2yS1ZjwGyBC+Y3dlb63sN+4S6cTQvgNcGLcT/I5oUyYE/sNWW+9UMJv
QAXlN4ziG5dgv5F4jNmI8BuQoZffi3HupEsNwH5j7kRfNOE3YAPlN46oF01g
v7Fr9D8Bwm9ALOU3qjWecWG/4YOKeK8xlUJIkSTJ5+oDxrzYb1zmCxIk/Aas
zDtK8tlaRqEO+40dXHvzCL8BP5l+knx+NrhSBvsNod7lNYTfAJrfONX/kR77
DZ4L0cWE34AnFJ8ZZ7z++t+uBBWO/j41MV3ka/ZDdUvEKBKSW/DPfOmkf4YR
CuelgztvY/+84gyTP+Gf4ajZgm68nClfjf3z+nc2HIR/hiWdnSTOrHwHX2L/
zKO0W5fwz7C7biuJ884X15Zg/7y+RHk14Z+B5p9dfre+x/7ZyPStLOGfoYfy
z8+MbUKwf25b87OC8M/QTvnnIX7PAeyfn3RoqBL+GYYo/zyn+JT0zzZra6sJ
/wzPfNaQ+ixXPhiD/fObVt2zhH8GQco/n103xY39c2vcvTjCP8Mk5Z8bOpaR
/vns+xd6hH8GA75pEufkE1o22D9HfNC/Tfhn+Nu4oBvtH98aYv+8dPPFYcI/
wxeKz75FhgkZYaeREeKRuLf7MgwfWLcR+7p+1oV58PtsJZ4HoYfCef6uaDSe
B4PyIvyJeRBo8+DbX/ue4Xnw2Jq/W4h5EFT6HpE47zayqMfzYK3s8mxiHoTt
xfvI/ca3Nt9EPA/eiBLhIuZBeEzNg/Gh+U/wPPjrcBSdT2s33LSJm8Q4B85v
ysTz4JNns8+IeRBo86Byzyl6PA/qyEvuJ+ZBoM2D7hm3JvA8yKz94jwxD0Ih
tz7J56cPDNLxPFi48cJ5Yh6E49Q8uHaCYxeeB+V6brIT8yDIeDGROPsZzcjg
efDoaRu662+/wC5qHvRwff0Fz4OCq3hHiXkQ3Kl58MCOQ+vwPMgS4OdGzIPg
TOF8ruHbRTwP5pTKbpjU2wq6f7+R+nyA2m/cWdhvQCuFs1pldhTeb6TyvO5S
vl8M16OtF3BO1lmO9xtfhR5vfineBA+TPEmcRYtGM/B+gwfd9Epq7ITQVaKk
3xjkuViG9xt/EzxbJkx6gbbf2Fn3RgvvNyqH6SctuPqBtt/IXJGsjPcby1U6
niZ+7QOmoKIujPO1rSFDeL+R31n0cmt4D7hS+41xj9vheL/B5dKF9xsg6byZ
7INGx2Kz8X6jqVV8L6tqE5z7+X7B14nc0sL7jR6ZY7MqcxXwdHqhD762U92C
9xujB/+kxh/OgTO2C31Qr0KsEu83WpuStwQKxsH/Z78BtP3G6mc5HjvYq5CC
034zVdvz6EDonjAB11H0undhX5dTT+7roFxmYV+XKlw6vf1KLsDB1O2JGWVA
29fl3Lt0Ge/rrm49I6ut0Aq0fd3Mvno3vK8rmzQ+5PGvG2j7ultjooF4X7dF
eybR5Hc/+FD7uv2jiil4X7eCh1M+vXQQaPs6iXVSO/G+TujtgeAA80FIovZ1
e56/rsT7upy7ZfR+xLuUUvu6LVt/PcT7ujn9j2YftnSDCLWv8/Guj8f7umTr
9pXD+q2gSu3rLu+RlMX7umnT0f1Hl1cDbV93In4A8L6O88Crw6GGecBC7euE
lQe08L7ObOvfZyHqCZBF7ev+Lrm1Eu/rks8c1Z06ex9o+7oM5PryUcyM9FB8
0pDYAQbYZ3+X3Jfefmu2fqQhFdprymviXLOQ92DrnHPEGPyw4uw3VFIC+7m4
iHfSZ1DR1fbfs0T8+56C1d+m08Eo9HfF1n/pSLSpiYw/zMKxYx3faVgT2fI+
mf80Kqfi6fMeh8w8yQLPtY8CWltTkfGDhfiQQw2jdw6fgfd+F+6pqiqhb1R8
v9bWUYvPX0A1vyxGRTEZlR1biB+0EMr/PKcG+7df2JBTL4eKqfhiybA8/rZs
YEj3OvoxLhZFuy7E0znrH/10Xh2upN7e8KgZFuO/X//l6xn+FYaK3msnHAxF
zpsX8o2sU2rSltGAJPeB2vM6YqiEim/8O/qteFkO5G1IushPzHFWqQ1kvKKA
U07vJw3458kjdHEpL6qg4tnZjMl4/eLdpUQ8WFPxJ51ryd+1ujp0hfhdeET9
buvZJ434dyPYJruJ3wXa75at58rBeZUcar9I5AW0vKLVxaVxXi6jP48SeUEB
FS8xyNyPcVOIdcsmcIN1o3VkvHyRYw7GrWHV2u0EbkDDofyX0XP8Ltz7z0cQ
7wIm1LuMa9Cz4/e17kFVxPsC7X35GWa24fc90MP5kXjfxXuGmvzmxfxxu2pQ
R/AHHBlayHgVVrY+zJ81OayRBH/gOxXft/GTZmFwOdzndthSKVGLjrqZjxjV
DgNfyxmLbTNpoHVH8M7hukykf6KZPMck++Rn4T8l8CvtsmzfuTqkPRVGxo+K
CEq1LmmEZwONzquvdqDqILZNIU590MK3a8DDqg48niYdVZfrRBp5XRvx98uP
4+m7Xdqh47bP2IH1vUjv18SFiJ3tcDZq6pdcbQs8leoemTzUh9Q7bMjv6Hdg
l0hoJ3ztsyp90NuPnH55axhIlEKF4aa6dSXtoP6yap+78CDi/WB4Bn8Pu+bZ
tUGgCz6Z2iod8h9AdKbh7zSTo1Gz5L6N9HId4FhofvNUzyAqDjZ1xN9H7gvq
9Qp0QtbXV7PLZfpR2DjDWOSLaoQuy7EWEj4zsO9dz1f7AXS8OY38zriZk2sg
pQ3W+2YFXtjbg0KWJZSv/duB6l/u1BoOkYcXo8tPrd+ptsjbA8ZKG2+vrEZO
q/rLN5guQS7f3urTXxtFu04s/SlbfZKoO0tO04Oqi3Vt2cpdxB1UBV6r8j3k
XlWhmMeKJM6MVo6XRasy4doM/brK2TS0UmKBD7H6WbXmya2wMsd2282PrUjx
hRSJv4BgTl/wwy4QHQ1szX/chXj5ws9jPEMT3K8I/+0BxXUuNz7N9aBdPn8V
MG5i1oYzq/x7QXyMxeDDy150oA+RuKmkGMg03OiBWrrTv06b9CArh5J+jMNw
x1ShcGonzLNYndn7qRPR+f4twziw8CW2L92vCnTjB4frGk4iGt+y7dm1N++r
hTz5a246YeVog8IBMq/P+5z+M1/1BdqPp4qwvf6ArEsW+HYn4/2NqSsdoBF9
Ld2eqRE9K7Bf4FXWC91nPL3wyyhzwNqtHW05V0zmFfWNCTl09UPAxthL+yM6
UWPaJMmHiNc2aZv9BmCFgyWfjFAXElazfo3z+iP6Mn3dkX6YzDUwqhLqRNrH
XIdwXomrX18pFOmB8OXR+/Iy29DIyDcyr7oG9ll+YTVwzk3/vilSHpVRefXy
2nzUOl8P7qfDbzoFfEddltZkXrvlCrODNLOh4e4XSe2UBLS0qZHMS9806AIb
axd8Wfuj83tFNTJkdd1M1sV82ynxQ/2w4+ityTc2jcjmoTjJ/xrXtlZGxSEo
ExDwmCpvQf+OhJPvJeWu+7mQeRjkzjDk5kS2osM/C+JxXo/VYE/T80F4c2Dv
7X0sLahF8QGZ10Vn61d9kn1Ar+LKEaLTgPhXfyDzyjjQmXzs01kwT/v0sW3s
2CJvV4gLPwiabYATVdyMD/Vy0K+aV2RehjFlUQonv8IaO461Uk6RqJJpQWds
Ev8PW18eTfX3vV8pGkhFlKI0IKTSRGI3ICqiJEJzmhCKEJWkJCmplKFBlHlO
ynDM8zzP8zyLSil+55x77/u31nd9/mqtvV7r1d77PPvZz3Purbt2R+axdjga
96l1ukEhshxlX0Xqemk2FmfX2AMLQ/2u7VcvQ75i0vS8eEe0vLevGoDL3+tK
JhIr0CLn55qkrrJV3C/Wfh8ApXNGeWK6lcjw1v1AUtfy6W/R8Jl+8Lnx03jn
hgpk90hkgM7jgtnLGvK7ofFeyfjiu6VINiOBzuO66TU7NeuPwjEbtlkx4bL/
1bUs/12w+rI6OFdmkx/36guyDH1O6/IKleyzb0mFNeiwZsfXF4g9jHFezrIC
585u74BRxxO/Flilok81mhSHLjs+5db86QU7jjcFN2yz0PHUObqkLu2btVKW
ZwaBp/KO9rZruWju8qb9pK6ddxoyNOWGwGZtu9C/DXlI8xFXJKkrReJW2rjn
ALwOecfhmpGD7j3upfO11TXb0LqhB9xvWQbMu5eJOv6co+cVvXrVU73H2hCc
tcXv1Oi6//Z15vcVy98F14HKkgXFBqFvUQjPSlrXeLKl7S6eNIgyW7ZS8/py
BRBgnFek581HOgEdWDcPLNqUF4AWDY8LkboGxP9euuXcB1KZO41NH4Qjey5n
ikOHovXacjPx3mtMbZieEoka1ZcdInXBht5br1uGYDv/qXlxEIU2V874Seri
6S8s9pAZBDHHN3lmByNR65B1P6mrY9qaQKkLvbD/UYP3iGwYSpoWROvSPqu/
jOR/c1GbzYnQt8DK/0fiul5yLj7nnj/E5wKscxEu035I8o80npWI84e4tUDP
pX488SLJ39ZLywjnDwLvA/VJ/gKZalok/1xhWf4ZKZEwKXPjPMnfV+o8zf8X
2w0lnD9IMfO3PcrIf3R/M8kf2pj57zP/EEDyt9Bex/VdNgwSmfkXvSlLJTok
IMwsGesQYOmQ+SIRT8h55WSNJ+DzAtZ51f4rozgMtoMGjEMITdOk9ZaF+9H5
Ghn8xY/nC1TUGOcVXWR3huDwTuwf3oVWqcDC4VsLlWyCQ+FbUr8xDoGFQ7u/
IRIEh3dHup9iHMI8Jg5PeiOKw89H1gljHMLKaw2U5zVuWCYTHHqfmr4W4xCE
9EVGSL2/w6TPExy+veaZgXEI7Uwc/j7PJkfm6+/iSUE8X1DIrEvRr/ku4Q1r
Hx0uzBsQ7HuM1hUecjOJ8KGzbfAxzIfA4sMg0+2UN3xOm0xh3oBnDX5UJ9z4
czCG8EbhiMgDzBsANiW0LkFOfQ/CG/w2d/sxb8ASJm98KeZ5SniDf2BFJ+YN
0GXyhqDz0W+EN2Sev3iIeQNW87ZR3gjIDllCeOPMMlt2vrulsP6xFeUNzlmj
4YQPrdmfpWM+/K8ugcWfYgjPT8pkWGGehyez1Rn6p9RAmOyvqU79bXh/AWt/
GZ9R0CE8z6bwaRjzPDw+YkLPa97EVlXC80O762cGWNeC8yo3PVKXlQhUE57v
Te7xwzwPh/ZZHyF15dnNiic8r2celI95HrYzeX7nCV5JwvMCBbPsMc/DhrNO
tK7hpcOvCM+7X7WVxDwPvg7a9LxerP2tTfbvAfNrL/D+BWtFI5q/wlsbHaIr
RjdvFsK6AjbxNv6v/Qus/TtSJXyS7N+WbXqDeP8Ca//2nd71jezfi9Wc5/D+
Bdb+XfeoL5Ls3y8HJdbg/Qtag/FBJP+8lH2xZP8u095gjvcvnGLuX/GDIQZk
/3688WQn3r/A2r9rTq7oJz4lJebwPexTgKWXgrq6G4jeMJ8w+I71BrD2svLq
nGyio+wcOdywjoIrpla03uHIIBOib7uCz9phfQsn5/xPHQUsHXXZ7UcH0VHy
MhebsY4Clo5aP32XPtFRXGU2xlhHQdH8cl1S76GjVT+IjopURVewjoJ3eR/c
SL0nCxV2Ex31Yn/qT6yj4NmFbFrvYsPN2URH5e6S1cI6CqYzddTp4t5Rog+d
WgyJPvxP5/+Zc1WP6HYVp+3CWLfDLqZu13d4LEN0+JbJZw+wDgeWDo8r3BVH
dPvLkkklrNuBpduT1pbNIDq8pvTLINbhwNLhykrnG4hur0izVsK6HVi6Pf75
nCaiw7Xuc5ViHQ5X/hzSIvW6XeIYIrrdTlJoGOt2YOn20rtX6ogOLxh5pol1
OIyaMHT43udGRUS3T8RkyGLdDizdvljnylmiw2t39U1iHQ4sHW5R/0eA6Pbd
K9eZYN0O6Uzdnqk5zEN0+JUvEl5Yh8Nbpg4/9/AwG9HtEy9i+7FuB5Zuz6uQ
mJKx6kA23KolO6L/KhRJLOpz+9aFThecPUx0u2RXjQbW7f/N+yPBTSvfv8wE
U9PpUzHSheivG+NzK/9Wo+/sTyqgV15xhVppPQoUjKf3G/I8t/rfNmP/8i2+
LnAc68zOI/QeKXn5xEKVzBZoeP1YZXNaF7rp60jvkT6qHzXhXNwGIR1JaUl3
e5DbpqQ+cr+RslrosFVZK6hdWT+NR6IHjXOW95H7jR/fmxoK1rTAyRVW7Yf7
OpH8mnF6z7+6cI+tXkAuTB7SPRMSkos8lpvRPCO8PB4pmtWAxm6ZhWctapDK
hTKa516Zsj+73reA14fRiGV+Lejd5BWaZ66o8rbpf9pBcouxr+G/dvT9sPXU
GZzn0pDSg7yOnSCySTP6q1MnujlrJb0n59O0rgvf3glX1rz6rCLXiZIM1/eQ
PL1ODLKbyrXDcs+Nr2IV2lGuZTi9h5l/4Uso54ZCOFfgNv+eVyZ63HKQ8f2u
1hrrosJ6WOuhUhfhXoHCZ/+jeSrmZr9R+InxE3Peka+rAf30uUzvi5KSVzgc
Tu6CbUVLDVfmtqAtV+ppP00XS+V8ut0DE6JtUuuXtqGAH/GVJE9z+zpfdrEe
yJKybHeuakWb7gjR+/wqh9bdLt2d8H3rBmUHsRYkqriZ3ufbPOvbJ+ZSDHt2
x6ib86Yi6TjG/eGZT8sVBV42geT5Tzssdpcg6YwRmqeDnNuOFW0dwCkZGTnV
U4V+nauhn6PdlxPfmja3F0xP5MDq6/WIa5vNDJJn4dcdzvI/+mDjV4GDc1wa
EVusdjXJ009sGRJ70QcX/H1j5q9uRCoCVzpInpqSXvvXC/XA9ZpNfn5mdciu
YRG9P9T6KM1rG1QCR29KZIqd+IZUxaxpniPz9j46Ut8Mm9cdTLgmnoNS2FfR
z6G6RftXVht0Add1nTYp0xIkdZiL5vm9winwVEEf7PlnaPsGlSMX90F6b5+/
dW/f9JoBEN8ZNXJeuRKZBO35RfKs7t38ysR8APh4v7RW/65AxatP0O8J+BnG
zCoo7oX1mZ5fVrBhnZT7k+KTT2K1QYhRKTx6MxzbOScCbVipTPPcHTEVFvii
BRZ7Binc8ElC3X8X0zyvjYnOiTrRDf2D7acrtmWgJc+X03PPlZH2/zvZD8Ih
JQXp8jnIuPcsvSe0u7g0a6nwELxUmCEvvjQPJXfz0n4efzLUKxQ7CFNz9n+b
k5CLBtYG9ZI8RaWuvH36qw/arGast9DJRnkF9jRPIxEz9fTCUvCP3Jb368EL
tH+3Ic0TrIM6VEZbwKHwGGeMix/aUzeD5hn12vC4WXM3KE14Ob+1CUErHAXp
HFUnFMgavB6Ad1VJ3GojEegdtyb9fsus1VI9FZlDcLPnyb/zG6NQx2eHIpLn
s1ETm/e6QxBeX9DaNhKJrmfxtpM8M8OPxVm69MPGSOek08ciUL88Fz139TIp
mmdBw7mZ4w9egMZZRp4+yRdpnhIayUo4T9jLzDPk1iTN03+znsw7mxCo3H2Z
nruBkTLN09SvXBXnCeuc9WmeHJvXdJM858rHmhlujIJ2Zp7anGzWJM9qB6Xl
7SOR0MDH9ovkmRFT/oXkmfsI/cJ5Qg8zz8vvXumRc1csOpuBzx2k5Rn8GeHY
H0LOfd4iTX187lCUOkDzDN9ZM5ucu+O9+Dv43OGPlDn9XOn9o3sfyLl7P/jU
h88dujQD6Lln3RlPI+cuUp1uic8d5Ez76byXqGr1kHMXaVOsxucOX56to+f+
/HaRDzl3m+1u+/G5Qz7z3KV39y8ic+R1rLIMzxGw5qjzxBI6RwuXh+XhOQKO
1UfovD/QfbmUzNH+xPEJPEewbxpQfJY8aPQjc2T8bfwJniNw4POj37dR2abS
Sebo2NxznIbKlXCZOUeic32fkjlyKlWdV/O7AvKZc2RsMT6dzJGt7Zs8PEeg
wpyjS5FLlAgv7TpQqId5CW48M6B5xlnsAMJLuvY7VTAvQcyfDTRP5e5F2wgv
cWxbmYh5CTx0dSg+X8ekbyC8NGfZoyOYl4CbyUtqAiOOhJfqnHt1MS/BxqRn
kyTPF39PfCO8dOCATAbmJVjNLUV5flNjqBLhpY7rcrGYl4DFS4eLff0Izw+p
hy7BPA9W387RPP/1rLIgPH9k3vMWzPPA4vmEQiNvwvOb+U1dMc+DwszzNE+9
9hYbwvMLEgTMMM8Di+fnia1PITx/N2GHLOZ5sLWW6CZ5nlhs8IbwvJjzgj7M
87Az0bWR5JlvIi5PeP6EiO1BzPMgxuT5S7I7b5K9aTav9Rzem9DAqU/znNA8
4kz25pjUKDfem/De5SrFZ9pdxt4U06V7E1h7s6zTcgvZm1LiO/3w3oSR/703
gbU35aUCa8jebJl/8QvemzCqKUn7qWy0ZhbZm8f3/HmN9ybkMffmqZgbK4gO
mXo6ZxLrEMgzvknz3He6aoDoEMvZUauwDgGWDhF0b+gmOiTonGAj1iEweU+d
ztED+YPcRIf8lipQxToEfI850c8NTyQtMSI6ZMraOwPrELjZGEk/z3qh56xB
dIjlWOR0rEPgnqEE3Zvln57XER2yzWhDJ9YhoMDUIZGGfPF5YqXYj86xShgv
R9HbTKnOfCoy598243rYXPbQW+ByMzKzt6K69G4ZxxUunlZYWFAv/K6pHam/
n0990GiQTm7ej3IoMIo32ihZig6KbqTvWZF2267gQjP0t96pvG9ej9pb/1Fd
evqQxY+o+nZgV7/PbcLXirTZZ9P3bJ+Y32d9tApKut0K4qYXIlM7ZfqeIa2z
IyZ7W8Gby+uTtW0VKm0MpPce1/3f2j2U7QJl48VjuQ0NaOF8feo3M5ttk6/L
YR2VE5L9ZH4WskzSpe9RnDu8tgi1QcX07V8H5pWiU0NStC5fAZHLCoI9IB8k
rDb2vRKV3tpA3+O+R+1xhU8tzLzTUr1fGaGymEMMP/J8m4xURTvcyNBfd88m
G82crKbvkWTj6/xp1wufh5SOVa8sQhNqDvQe49LwEe5zFnUQYaBjEfEqHH36
YUzfM6V72qHDrgP0pqUsnxEfh46W/qD9SX5zQsNBqw8sTD8o1JkjtHimFc3H
p6F6Kj6xDna/9P0820lSQW+TIX3PvRBjTsfYDlzfzXjxkJ0Ki8OW03w4+4Le
3/PuA8via0sP1hxUcC14T33Qyn9q80k+nAG7w3A+wMpH/0LdXZLP2YlaWZwP
aDPz+dTdqE7y+Whw+znOB6zenKP5yJ3QdiH96b/M1on7A6z+nNVfQ/tzs1VL
HPcHWP2ZiVRofzJcOS/i/sBWXwnqO960lcWT81L4tagBnxdYMM9rj47uKnJe
12a6ZOHzgksvzel7xp75G5Lz+vMw9zA+Lzj4xof2mcPjXDfBT45NfQXGD7Dw
o/Y2t4/g58Sb49EYP/Apk4e+x/BWig3Bz/TfLdPyGhpgWrDbMfKe07dlUwme
kxyXWmI8gxoTz3mr/t4geD4V9rod4xnOKbjT/jgr8IwSPIeJxPJgPMOYohHt
z9yT+nS+Djbl38DzBaz5WlkqOUnm65eIH5kvqBvmovmIuKvT+ZJ0fkvmC1jz
1T0hfnXTvHKwrRFas6y9Gu29evTB8699cOjnRSvhM1VwZtoOu4DsCnRP+AON
HxFctn451MIFeR3JV3KlaPixDo3naaf5SrvXQ8bpN0ONb/JRlMl2Gj9q6lUJ
hxthzGzuvX2b0tHt8Xc0fnowb5PYtSZQzAoVT4qJRQUi0jTO03WlYvZwE5zI
jnCZvucZEv8WQuOOyZbW2pl4rw099eI/Fgw2k+do3PqHkHvvz0awOpvZdOAd
Ai35ifskXtM7/HPSsQHs0/h0Oa2yYfOqdfT5toq6HP6bdfA8Re7HOo1iQKsr
aJzdnVOtvrkafiyZui/DXQ5Pj4TTuKVt8aGm9AporhjJ+nS+Ct6t86LxBWVX
wgT3CYBVe/JVi+FVEBsR9Yt8bju+JTmKxJuMd5ngOPrMjHtf0vWb0bsczHZb
h8wbEwZWnJ+zQGntoQLwEtT+WCVdikq2GxU8zB2Acts95c+7l4CE4FTfjfOr
/3vPxCKhmVPlRXAmkcNNZlkJWtR9hj7PVdx0lOSpOWCThvNEBzP0aJ69Wep1
fktKQM/vjqxTbRHiWbGZPj+1aM42q42lsJJj++TsowWI/9s6Gjc3HlUnfRgo
tnTAfUCdIR30PW+cdDe5bCwDpxzxAwqBuUjY9RR9vvTtlMsz/nKYeWV3tF9t
FtL9LkfjXq4Pi0ifJT7mDeM+o60cvPQ9pvYu7wzay2HnkbtWnf3pqP0dN32e
XSqBvfVFBaSe4XSobEtBOWzHaPz3sX+/yTme3n5qPz5HxDrH3+sOzZaRqIQo
198WlfcT0WoFMfp83V2ZAO8PlWB3J1fj2oov6N6GBTTep/rpJcGJTsnVAIwT
xMLJK0G7z+aTlbCgLWVm8+sIVOV6iD4vc1rj7V65KlAYFJXe9e8DSn/IT+Om
BtYUh87PCz0xDpE1E4en8mb9RrpVMH/1xhtvopyRjs82+nxVZPo4iXt/Hj7+
NsoZdJnxpBBxivOfZrmTGOfAwvlxgcdvyN+7Pb39Mv57IYP596qJ3KF58sRd
nIXzhCWOajR+yVhZiszRwMcoRTxHoPasnr4n1/KRP+lD2DLrK7gPcOgW0OfF
L3/mIH1rOSvphPsGzlF/80n85vvGCjKnik/Pv8BzCgPH5tL3CHTEzyTn8ueW
kBs+F3D0kaTvMU6J9iLnyNNj7YjPEa4bM87LdZGPF+GBqGwJzqY3+cDigfeP
7Z0JTg5t+BSPcQLHmDjhiNm1heBK8NciFYwrWCaxmMaDGkwkCM9ExSZLYZ6B
ISbPrPrTJk1we23uTPY5RwuAj4nbaw/CawjO2e4IyWOcw8yyjTRu489vQXis
NTTnDuYxcGTymNFDjllkju5udiRzBCLqu+nzh6MG95J51FRKDMDzCC/CJWhc
oDnvMuHJhwuiRDBPQljiI/oeWHZC7d+PIZS4uD8pU+2rQhT9MxDtNvwjschn
GbDxjY3stfj//LDGXcx22r8n8OfkF4lpU1NJhfTPIfRra1wOmfeUM6eH8Lz/
9/xXG9tjAbtK4KBM1AbHH4Ko7Wm8ckLxIDrHzqar7L0Gfj1KS4n04/2PHzZb
bj4SdrYURhI0FsRuWwYnAxOnu3wcRF+5Dvwmn1f2PX9eudJf5b/7w970XLUG
7xi4Vlh9VpArGRYEMO4/eQNv6pL4mlH+UziOFjLjx3VAWK3nI1SlPazc8T4M
VbC+z/aI23etXDJ8Cqlccfd8FvJXMnv0RXoIsi6E+YpOfYKiOL1N+fmh6ImI
yr4l+Pmf4LC2f04wHM99Xn1wfvB//x7tfIW7ffRkMDj/1NhuzRuEHA8wns/Z
eXy5o08YqM5YOL578CMqYz4v/DEjcKdROGzcekdnZbk/OraO8fyqgMBDcdkR
cMd+nuAbbV/E+j6YtqTx8hGBSLjGIf9zQPg9ElvLeP6Vvt2YfOlqcBtrqNFy
4v+vn+slr3Ku6YsEaVufvsAkz//q7flyi/2xSBR0G/l5J0u+QnkPGe/RTP0w
b1lEFKho1fB6Kj79798X2POFHrtVFgW6wXzqQhseoRtXGM/HbXwyw5MnGg5J
52/OqLRArO/Jj/p/mw9C0WC+InRnQd159JeD8bz0JsbzaDN9/r/ve4svyFVV
nRUNe++//PfF4A60D+6jz6sy8ylk5PPf840JgdtXPIyCzwZzIh0Gn8GHPsbz
Z5j1brKm9QKrXg42VVOVkEjoe6ZSbXzABx6JMfK5Gcbos8992mcoZD4f3Dic
rngtAmzlNfszH3yAO7cYz7cdENMmuLU4p12AcfvfHvRQYZzvG3Z6vpDBfI+u
F++tnuxQaKs05v/DFgC5Soz3nNVm4Me2lOIHMpnP/50W0DbMHQQn1i3P6psR
Ak8UGM87nGXgNiWT4hZY/77mhGPe/LlF/rClMu5L+tVwcHRmPP9/9vV/eAi+
YTJEcDIe1N2LcfJf/m3RAZ4E/6PSv9dg/MNHJv4X1hxaRN5/lj3sM34/2s3E
/66GZT0kzy0mc1JxnugpM89ft/XukXoj+/y4cb2IVa/zlhlZpJ+8sS4duJ9I
/yQjnmKwwJycy30QzMLnglyY51I900aWnG+H8rvn+HyRL/N8g+Vd9xOczAl7
mY5xglg46ZDWpXh7EOrpVlh3Hlh4O7cLKG7lbHsvYdzCiVHG89UKJrMI/leM
FAdj/MN0Psbzrim2AmS+fh7c+A/PF+x7xoj/nzkF1pzO/l5C5/3k/vlk3oE1
7+KHht4Q3shVKdmMeQOagxnxxZL8Gwmv7tO5PIx59b9z4V3+TPqETiYYPVVK
312Yg3KE40GzahCud3pqNDpUwJhh8/qa6mpUuC/2hrRFH0wNJI/Z72sEzgan
T79vtqAxdjlDZ8FOaPj9xpz8P9X7vg7Ukt+v6Vuz9xP9/8C1nn19WN4MpdZr
htZu60V28958asd7Quqq2yHBs+2gNn7h2KlHXeh+0dZ2I8MC2JIv6sej0gL8
2l+z+Xp70a+jDtO2nn+LXP3NRvmG26FbWWnuBqlulH/X3zPo9Rtky32L3969
GdRzarY1FPcgOUOnufxYD276uz+Zg68dLPZviT0u3YXsVSSXmq8rRXevZGz4
EdwA0wU0q0RXtaChPbYa8h6dqD1r9psju0pBfu4V/i9G9chZWGnH3/V9SPXv
3Mhvyyvh1aGR4tMPa9BvqXk0PsJxyS53dxaoxwbMk19einrvvG3qXDWI+D+4
vNi3Ph+8/8opbVAqRrVVd2h8fkar8Zj3Z9B6pbTaqTwZodtR5096DaGqcV62
Kxu+gcpO+20u8kmovSGIxl0Muepq021gyb3K7GPV95DnnI3PDfF5CfJutlfc
fgduDfsvF/t2F4382kDj7N3iWoEVH5DM+Srnv21h8LJq2e3e3iGkP/27YRFH
AEpao5jokBwMcvmM+I+gmqnPvv5oSj/1HVtNBEwseiXf3TmEDs2b0fUhNwc2
Wr3KcNbPRIbBHygepF0ufzaoqIZHv56vb3tQgU5OClsRPAzr6enct24B//Uv
RtepNSJXzZrzBA93v6/w4nHqghNlRgr9hu1INniQnq8IWNnmiXfD+VpRmWlj
7WjKY2YxOcd30nesBTbg513s9mYvbUeSzcm85Lwu8XkIpqxogdeLeoXvRDag
KjcDel79y554FTjWwKTcuGD9ykpUFtkiS85lbtg1x649xWBf9Iv9kXQ+6vjN
6P9Bp27ZQ7JJEBxySubQlm+opjWc9nlihsxWpy93ITxY9MeBHXfQgvmMPuct
leB6lxCMzslucD3IGQCidxl9exLQ+i/LIBQJhH1l/2MRCDGVj77qdw+hC+45
Oedi80H+xWSJtGUqatENo317nPfS/Zh/HSzJNdR6n1mCwh9/pXPUsmPhE9Hr
bVB/Sha0Z9agfVecad/uFW+KVJfuhVmXrxhyVzejeq+oFtK3zC+RK6939UJy
/UCN08EWtGy27c5g3LcWB232PUU9IKzNc+nkq2Z07Ukfxbnqxbvh2xe0gajk
KaFSh2pUniisSfo24/GBjNRL9aCb2Bjdr1iKzEL4KZ7v9VlI6glg/XO1/NzH
fVkop9OV9s04zP9IdmkyNCYnqBv6fkYRa6Np3y5bOa9eX3kPtJr4VF/n2aCg
KQYO+yujvDObw1CyYc69gNoPMDLB6NtoTtnFlzoRSG2i0n/PLH8QfcPoW/k3
1HmOswhEbRd8Ez6ZgF44MfDmVsSVt7KjAQqbNx85rJmH9sZ/oH2TTN++4/Cc
DojcWjR7tmwZelx+i/ZtQbiDaveRfuD/NrU0srUGua6OaSN9O/nwsG0u/wAc
OMPJFvGiFvmYVo4TvLmtmhuR390HP0Ljr5fcqUFTqpuFSN8ujl8b3eXTDo53
l7ftqyxF27/vpHiL1L1cfv9rI3DUZ3pc5MlHXvWMvgWmR5eddS+De4rJz7Sx
/9oXGET79tetz1l8UyrsmDii9OltBAq/FUv7Zl26kH+t033gE5wXWfPyOgrr
ZPQtqonTejgyAlWcSgwZvPsGFicz+sYdzOHHERqJcvtOJHWLvAOnVS60b7JO
fB93nCqGvYaZQu3y0ch/MpLRt9n9SpNOTbDA8Ix71/1UJPnoL+3bsPEq8YyN
nZCia6IytCgXzRitoH0b6JLKTG0ZgKfVvmt3u5agb4uK6knfWq1s+M9FDEK8
k5fZR45S5N/eu53gjVtjU1um6QDc1lit2HygBM0XiaN4a379RjAzqQPeqbpy
/XPJQS4S0yjeNnPHRThuaYbUbI/5D+emobVvpuic2kw4zD7ysRzWSEqYW+yN
Q1mbnGnfJodU84M2psFAbHXtRZePKMU1hvZNT8Db91X6AxiQLcszGbiC7LgZ
c/r2gor5Ze9IVCOUd/tS5HPYVM3oW3StF7+KfxSaKV1+6333C1jnzcBb491p
JTXtxcC5ZtXil6YfkCdHOO3biMok3ybFZnDSS7z95UsUUiiMpn0zdeMxvtne
CenqnwzeH/uGCtpP0b5Fhevyp5UNQv6G6R32CSnI8NWcVtI3jT8/SwYChqD3
n88S0e2pqLdxWzbB24Sv3aYtJweB/5XTMnPrFBRWoEn7ZtiUKd5i0gnfcyRk
1Iu/otzSLIq30QLejtQvzWDEdzYyemc0ulw9neItfehUpataBSRmPjx7xiEA
jc+5Tfum0CFvz5ufBgJF8/lKsl4iF9sQ2re/5seOLnZ0grCKX1vYtuujD0y8
cVmO7ZsrEYXeVBgdGOy6B5G8y2nfcpttf6ngvy/6B9+x46vuw9RnRt9OSnXu
0l9YAp912+zWPF2pMH6b0bfznLeB82ozRPoY/qiQ2KYwMZxH+6bjnBOdt7IL
4uIcuEFJWUH5AKJ9s5lwWTCxZgi6CmavDY9RVuC4cpTuhdTYLZeP/cW6MrbG
PzhcWeHEZblvpG+vTmfyyIYPgldYQFGQtbLC6vlsS0jfUlpWe04EdsKX0AOe
PWOKCt9qNzHwhjqdCtuagdvl5ccgfhmFZ+vO0L6pzOqbEe5YAbNTx0p0jy1T
sNd6R/vGN09vsfy0dPBaoT5X2GyGQvSzSNq329Hcm8MznGBn5U6lUpdpCmPz
GHj7tezR8u7jUajtzefx63UzktY+YeAtZ8H56J8m0eik2hK9+LmzkhJTGX1r
MI8oJniLWPpABOMNWHjz8s2meBPfd/4Rxhuw8Gb2NMCI4I3nc+d1jDdg4U2I
3ZeP4E0jZmwc4w1YeBvdsbqU4C1Hv4gH4w3amHjLifyzgeBNXNJNCeMNQpl4
+7gwmOItbOM2BYw3YOHt4LaKdoK3imlbEMYbsPBmkl1eQfBW1vvXHuMNWHi7
2p1yh+Atq3hyI8YbsPD24u4ubYI3i6NHZ2C8AQtv8rdiKd5ML7TpYLwhFt6y
uSwp3kwdnulgvCEW3p7w+vsRfivaaiyN+Q1Y/Ka/6dhewm88cT/8ML8Bi9/C
O6bECL/tutd6DPMbsDH57fDl6lTCb3Xv9HdifgMWv0V+XcRL+G1ZYa4T5jd4
zeQ3ODO7mfCbSPtHXcxvwMXkN98ZIpTfVpwY58H8Bix+463hofwmWX2EH/Mb
rGHym0glYif8tpldxhnzG2Qz+e1Y9qxcwm8CgTG/Mb8Bi99e94+9Jfz2wH10
CPMbsPjN0ijHlPBbuJj4c8xviMVvtSO8fITfOKTfumN+Qyx+49Htbyf7lMdw
firep8Dap64DbzPJPp2l5WGI9ykoMvfp80cDMmSf3vtyfT7ep8Dap1+Mw/eR
fZpqOX0V3qfA2qdiJw/eJPvUaeIBB96n8Iq5T20yd4SSfXru9Wx7vE9hkrlP
q7tDR8g+DV7e3Iv3Kcgw9+msl8vKyD4V2H3HB+9TYO3TPR8DS8g+Vc0J9cL7
FFj7dNK99wHZp2fW2RzG+xRY+zRWoZKH7FPFpE0I71Ng7VNXKTsrsk/LT3yK
xPsUsfbpftE5H8g+FZ39NRXvU8Tap9krbNOJfruXLF+L9Ruw9JuS16Qr0W8V
nC56WL8BS7+Z1vi7EP12dQwpY/0Gykz99ldDK5Tot+NHTIywfoNmpn5rD1MU
IPpt0YH+NqzfYIiDod94l2dP7sb6Tbmo7DrWb2DG1G/D/N+DiX5b1muxDus3
YOm3DVFPk4h+E9+snYT1G5gy9dvp22dFiX47K+51Hes3yGXqNyn4o07025vV
ew2wfgOWfvMysRci+u3EpWQdrN+Apd+adt99SfTb2eJLrli/IZZ+K9oWdJ7o
twDR0HCs3xBLv0Ue/NhI/MJPk51F2C8Ayy9ku2uFEb9wb0PKVuwXgOUXHjx2
P0r8wtF1U7+xXwCWX1jsauVB/MKi6A97sF8All8oXfj1BvELIcbv5bFfgAmm
X7is12hG/IIn/4GD2C+ABNMv3O+qESB+oc9FTgz7BWD5hXQ7aQ/iF6qEp63G
fgFYfkFxnP0u8QudGxvnY78ALL/gP7t1E/EL0zR9d2O/ACy/ILPLV4r4hSts
yX+xXwCWX1h26egM4he2ngrzxH4BsfyCwM4nI8QvxAqN8GK/gFh+4bFj9kbi
uw/nlmRg3w0s360hmKdKfLeabuZm7LuB5bvVZtUPEt/tvpYvCPtuYPnux4OP
VIiPXmpia4B9NDgyfbSekc4g8cslVuHzsV+GVKZf3tPvGUt8cVmWRxL2xcDy
xfqG2euIL+4o7a7BvhgGmb7Yj10xgPjfjjHnaux/geV/azN/uRKfm26+WAX7
XGD53Mxnj6mfvVO4hPhZYPnZb1MSjsS3jp/ZuhT7VmD51nl1y04Sf+qkxJWO
/Sli+dMODQ21x2apoHo9d+npr/mwvC6E9me8rWq6WGoJpEjH224PqIPc179p
f6pDNU7MnayGnJF/F9ZbtoGh00uKqy6uaM6vttVglF8jYbOwDdjX3Che+qoT
77iul8Tvn9o6tQz7fWD5/carAleJrxdx37UA+3pg+XoLkzUniH9XdTwihv07
sPy79YvCMuLTXabW5WGfDiyfXhm7Yz/x4/HTZN2wH0csPy5/3W6R7nAGTPM6
d3j76lxUel3togOu6+sK652FOI98ybkDK+Vb0e3WUG/OFZ1QrhRueW6iHu4V
BIbPvdyCwl9tVnF/3Yn0/paf/jWvAkKXDP4cPlqLajMmqw5v7kPDsrePxD/P
Adlfhr1RUIKq2e/9FVw7iI5+LfhubhsL8QfyT2y0T0ZKBzIHw3D++h+uc3zn
MYF7nvmf9OQeov3zOaIOk3/XNhL9JPNqDlxK3D7dHGWihFmyNE9XwYfa/EHN
0JM0W+MJRzP68bWD5vmk6s4sr9Jm+Ln71+bvOo3o4arcfSTPtpi27SPPq+Hw
+p87JRZVofHJUZrnTbXkRn25QhDa6ezJa1+IPO0daZ4t0z7Ydo19AzahB+8S
rRLR2/IUmmei0RZLtkWWcD71UuCtrgeopYqd5vnynK9brkggmu71/Ub9+yDo
5srznN43hMy4Zoo9vJwPW2ZOa+HoSEVZtjto/u67udUbMlshVqpwV+bfWiTz
VYvmb3dWQz6zqBUi8jx3PIAaZFLpR/vc5Mzt+NmnDv60PVRYqF2GzNZANcmf
59jT62KrSmDn3naloLYc5LHcmeZvlHDjQ1pzEpy9oMd97uhXpBaaQfMvbnNN
HfloC9VrdseN8d1Ha/8x8g/++GtlU3gIeiIfLfE56yP8+5JL8zcPm8eRjXnD
0cL+z2+LQHgn9pjyxsDCRk++kkIwff7uymqNRFQtLUfrsnW3fxBj3w6pf1eb
hxhUIMHJVlrXtoUf9pRfbofGFiUOY98yFHbyMK2LX/zTX1O+RrjcH6Aod7kQ
eZdupHUliOtNKhWUQu6d2T4yKB1tXOtJ6zoYoFqcszgF1Fe+3tETGoPqmhn4
0W2W69p+xB4W/LqevKXMAUkvZODH+UNTj9aHcPRVdGI80dIXJOUY51IWbGdE
9ohgmukrcg+weJixfyOb+suvHyiGWT5PTmnJx6C5EXtpXQ1bvh/3KOkAA86e
OqU3hagn+wOta1pv9PrzXh3wII6rr0I+D+0TD6N1bRFvegDfm0Cz6JBA1MMM
ZPJEmNZ1M4Xj5BG+cpgxwWG52iAJiU29pXVxNJpXLD6TCn8qHGpEtoajWK4C
WpebsvRjz3EH8OG+4TJfzB41fmGc16wzps1t4xFoqf7pplFnL1CuY5zXnuLo
j0RXvH65IIL4dIvrjPPy/dkUfLqmGNSHeDf12fujxMh9tK5lQ659oeGdcPGt
kYl9SwqKdtWjddV6Vt1R1OuEm/37flprJqLUFmNa19Q8p7Qv7s3w8lCQ3iez
OOSV2U7nSGA733nvn+WwwuvMbCufKNQgYEnruhl4I/mOehqsvpo9FXvFD91O
zKJ1ya1+UVe29T6wH2hYUKtsi7pHGHWtW6/O+SorEmk0Xc9Of+UG8QGMun4c
3rmU6MwHTn9PER/NN8g4L505bJ7G3CVgNSfNij3bFOn/U6R13ama1WHG3wX8
01Xu9Ap+QAHR3LSuT032tx9+7ISSknHjUXMXJCw8TuvSnwzYUFvVDK/WzWKL
2f0ClXYq0vM658Sj9ORSBcT+fSxU9f01Sou7S+uKmVh+V7YS17X0UbHz1WdI
Oj2N1rU5YFJo29QDeLreg395kAVSymLUtUlSovWpbBQa3LBZaYeEHXyUZeBw
csOcceo7BsUEiM/t52Ccl9oTx/hb/cUQbLnzSO3x97D0EQOHXGzvF2eyd8HH
H5xj3ysj4IFIphepq3Bc7VXwzU6sr+byqO6LhcHn9rSuYzazQlenN8MBHS/f
OTXBsNKXi9bF7T1uVW5UAQF/Oeyc+D2w/npC6ypJPbTD9mcaWO1YpjB52gxu
T2PM18pTM3KuHngISouP/UuSMUaqRxjzdTTSZ/TmwShUPnz6gL3qJXQ1jHFe
gnq1UcSHXkv6wn/l1pqkIF5GXSpb5+09YFYMg8P7PizZEQVqIgwcin6aZzr9
VidcGNM1cDDPgA8DSvS8WoNy9J3rOqBrxku1k+VZkKGCaF2Wbe7zJnSawS+/
9usV02SwN6ihOPy3b/v349Pwed21GDHojYSTns9oXTyh3z69C0uDBPvBpKY5
XqDDlU7rkkqYtiKBxxk+2X8SSZhjgIoyGOf1d7Pf859TkaipULf/3NJH6Md5
xnlFi1T9IOcl5Kb4nPhE1nn1COvdD95VBKFqpU+iL8TDDMudtK4yn5sqA7c7
wPKm+vXqmSVwVULJh9TlLVX452JOO5wt33zj4sxSEGz7TveUxzS3k0KbmmDj
KrvnVXh/5g5o0PMy/NRxTUekHMLV4rkvRSbCvz9utK5fkfxugtPSQNLtDreg
RwAoWzDmK7vG4DS7ljOsP/w48Vj4fBDRYu5Tq56mJ0cjUavQFdOHgR7IdT6j
rqNql3nIfFkIKEQQH8ear197eNYmT+RD8OKY8A1sqbD5oDyty8BnS0Hswnao
1jn7IfhXJVzc7ELP6/TEi40N+9vg0uJr6QHJVTAwg0+V1BV5quS8B1cDXP+k
6du3tARO7eKnddXME52n0FYK6l2/l+SZpMNprQ+0LkPx96L2gymQuO5e6L3n
kaBxjcGHy+vyz03NdQZXOd6/4UMnoD6ScV68DotfJGtEoDDth5o3/d+hQ8MM
HMaGnnpL+JA3d2Ux8VksPlTMu7Y7aEUuiDnUGbuPZQDHYcZeXv5aY1r5jlbw
T5DKijGvh7x3hrSuRyO75aIutIDzU94Y9ukNMO/3PIpDT5kZdU6Ha8F6n8Sw
7IIK+GS7gdalY8XW+U6+BFKt8rsPeebAjI/2tK5e6WuWJ24nQ/uTVd059rEQ
gLJpXY80JNtX73gI8gozfiitMYEVdYy6PJ7mD0cOhCLDukXxJ1f4oxZzxnlZ
/eU7TfbX/YNd8cQHsfZXl9xrQa34TIh0kTS/fi0HBJ8w+NDb5nt9/cxm+Bf0
mzs8pBnKi4ZoXQblBzfdOdIIcrvt1LkrmmFafDPFYenScykb51fBb73xWyGv
qsF/1RJal0dt/PSNtoVwf5XqjwO7CsHdx4jWNfOUQcip64mg/n5vU/Dvb/B2
F2O+dMKd5D53PIB1e47eQkstwZKbgcOg57uP5PoEoTaxrhNLJQLRzBuM88rV
d5QJi0+FddtyODfdz4e2GyX3b+H8Nd3v7ubwLIXj43IvRHjrYMP9Bzz6ltj/
Ol24FvWzFuwddv6Yl9MKA0NltK4za+MfmcrWwPG+7pbiklZo2/6Intf04btr
XmuWARo/w135rg5UDJbRusw3oOdCjTkQFlN9YdeaEpj2j8GHXXG/0s9pfIX5
tWdc6tuTwDeLoQM3cFss+MB7H5ZtVVXiD7OFUOZ5CcuJAcm/R8RsNs4fBe5m
5D9xHAsfnP+e7zuf4fyRoggj/0GOjFnER7AXbrXBPgKxfITFd98bpC7bG0mj
uC60cEchrWuL6tVLxF9Icxmdw/4CsfyFN2/De/I7v22PDv378rATnbcup597
LlDLKiVxsbK4ahLXYMbn8rz8vVa2FS7Es4tw7+1BCRdM1GSPFMCW5RnGC/na
QFSzbluRTzcqVptD402XYhu/4rkYf7JLR0ClF70QUCrQuvwWTSi228xZ0A6L
BB/84OrpRgtzLF6Q+J769geGM1vg0xy+5X73e9Bbseq7fFtKkcLtNe4CYW1Q
IGQYE+fUhRLXm9iT+OrX5k/JeRUf12vG54UUDBzpeX1M4+Elvknv6s112Deh
WSzfFO4tRs5RPyOAE58juqW4iJ5jq9yX0lGOj+jSdmf2ns8RwN0uUNjfOYQa
4yz1yO+n3FRu/uqwoBqduBftTn6n4Ntr1yYyF0dOOXLhuUCeLxk+wvX4lq/k
d6Xthd9tv93dhjgVxwJI30avX2onccmZ5pwkPo8Z3z99ctlx3w5YYBXQN3mx
E/EdkVUnfTtZ4el66zzWUct/zP7j34GGn4EGibeyH9rEm9MBUa/a6kWvdGG9
m3+b9K3dc6nM+wtdwH3pb2tDfgdKMdWOIPG53Sf/nbBpB9v3f95UV3Wioo4b
tG/elnaiTuWd8DHtZO2CW+3o6WCRHYk3BnzeSuZ6VbzzQTzXyPhYDZ1rjr1d
OWSuO7R4buC5RjN28dC+ZZ+0X0B//yVHuD7mfTnqP36I9ifvXOUswofaP3rj
MB+iKI+rtD/PVLNUyO+Jz99qvsysqRlZiLt8JH1I7TtvTOLN3Y97TXH8CjO+
Lz/1eJxnNxgYe2VyCrQh+wn/A6QPx+9xsC/f1QMXEocW7sR+s+mwwUESZ1eJ
8i/s6IbzhdqTC3jb0Wtl5TzSBy/V6DERpV7Q0tTf9EehFemLXmM7iuMN4ybK
Dx27YPNMz4U9kW0odf8G2ofHe3xHWh16YGje3qcPZregF+petG/uipsVCJ+n
D34PwXyOdFwWUrz5zdNvJnx+5I5xD+Zz9GqDNO2PxO7Ib5l760HwzrSP+7OK
0alxBn4CDr0uJHtwh/6jN3gPokhzZ9ofq+I+K/I78lPq4d/Tsb977xMUSvpQ
O7HlJYmb61o9IPEaZrxV5uL31EV9cDayjGussBEFvIo5RPrA2SMly+HRB2xz
+M99661H45fOUlz1zLlSFHqnDyZ+5j7erdWMkkSnBZL+JFwq6Q543Q8CYYI8
NR/q0YItkyYkPt66+NUsvl6QWNpWt2ttM+p4H0n74D8r8Oe6sD64N+rfr369
Fv0+ddSRxIs3nt9C9rj54eEveI+jjVwr6B4XXHjMiOzx848OeuA9jp4W89L+
aERuuvDKoBE2/nLLixfPQav6S2l/lux6rkr0T1fEeROsf1DjmWNU/8h8KDjo
eaIXZN23SHeGlqHwJbH+pA+Vr8XOkPgD0yTUgeObmXFPSZlzr//1w807AQdX
5FSiIp5LR0gfBL6nGHGeGADrhzo94unlyF3d5zCJhxr5uyxzGYBnxk7zntyq
RjoDaTGkD2yOCb+mdAbhkovHW4Mt5ch146s+End64vv9mlA/XCm+bpXpVI06
dmXcJ33wSXh8dJHKAPBPM/v5XK0UqfgIOJD4J7vKv0S/2d7zMsb6DZ1u+cfY
m0JGZ4h+E0yrc8T6DU27qUf782z+wQXk94P09Wdef7s3GXH7raT9gbh8M6J7
c1XvAda96PKagxQ/3HLfX1vi8/UWGXmfNZyFvGxL35E+zPIa+kjiz+9sjM7E
8VBm/G2tQKic5iDoGLI97nyVj3oVd+wjfXD72GHU+WgQLtp0Z706k41kvycr
k7h5ydt643+D8N77wdGYwCK0/pX+TDJHheX23+fbDEFFsNfZGV8ykca+fQmk
P3ZiblOyzwfAaOjeisX7itGhl0N3SB9kjqgK7lEdhBUfXApyXNMwz5+i8Y3x
3w2IbpeyEJbDuh2paFXR+Qpt3s5JdLumbkE41u0oiq2a6vbVAboa5PePGhT5
nBKFQlC4Qh7tT5fnAT7id+blqiZgv4OWnEyifocz2edV66J+qF6hy563MAKJ
OX79QH/XL+e3N4kPufQI5eD4cWb8+ya1C0nsQ6Akv7imkDcWTZPvoP3ZFt3c
YiIwBF97ZqdH/QxCmQI3VEi80ETztlDBEDSODexQOxOPZp9KsSN9ED2yCL7/
HAKRNbfT9sj5ov6ZM6xIfPa6q4rfrg6C2/ThuF8pSUiiaQ/tw8eExsGbIYMw
v6nLanfbU8SpdOI2iZ9Yak79WoZdOAf2a+j8JWfan6WZJ6hfO/565iXs19Da
xwspfvayjX19b9QM80OeWOpmPYNIgwban7G3Ee3E554oUxjGPhdWdXJQ/Dyf
6U77cHt9/gHcB9Bi9uH3n220bwbJcptx30CKGZcvKWgmffB7NTwZ/TMI0sU8
aB+s2Z+eJ30bllppWcQbC66rM2jfLJwaFUgf+nPOCO2V84WkvKIbpA+6Ozxp
3+YdKliL+wYHewJo317YJ9A+tB1VebCn7SmcFNtP+6AxQ28v6ZvoBvu/uG9w
cPUx2rdY2xPUp1tOz4r9Ye4CBS8GGPqN8yb16dPfv/HEPh1WJeyl/eH662dE
fn/qr6UBkN+fKl8ZRfuT5lDWQ+43at7kudm3pABnjQ7tz/txbz8yR0sHWxrw
HAFrjgJfvfUg8ZBnvvl47sCDGU+buH2FzFHRssk2PEfgfiOczpEom2kwmbsO
T5lAPHcwv+Ig7U/XRbsRMkcKDqI2eI4gYF0wnaOLClw1ZO6GhW0e47kDzkhl
Ond3s8aWkTn6p1U8iOcI4jYeoH1YsHDTPzJ3P9ZFbMRzBy5xsyhvd6ksofcz
dRopi200EyGg5AHtj/3SpfR+xkf7jcknszjo2cO8n1E1iQzZ0AQDZi2i5Pez
TKOlnpP+uK3n0iX3Wls1r48ovSmErYv8aX9GRY7oEx5+uJytCfMw7GTysOXG
cWUS75S31sS8Dd7M+MQ6ucuEh6tVA39hHoa7Ai6Uh5P3DpwmvC0hdUQH8zY0
9DB42798xhjh4STD358xD4PD0ZeUhxdobXUmvC3OfpAf8zZErH9BeduAnf0w
4eEDnLO5XqiVwvcABg8rJPoMEd5OuXjkPuZt2DH6jfL20YtekuReLnHBuvEK
+Ty46ZZI+9Psl3CP3Mut3XBGMuphBvySF6P4ufvXq7zxbANUdz72a75aAGyR
uyl+TvutpveZvDHHr4UYVID8PIZv+sfc44M6dI9DA3OP6zD3vskhuvfBnxmv
Tnu4hezxGSUFFniPw3ItM7rHNQUCBsjeX97oLIT3PjxsfU/3vu2P+T1kjzt1
iS7Cexy6qgbpHj+ktb6A7H3DVW5ueO9D4zs5uvfjdZ6Nkj2+TNH1N97jMPhC
n+7xBcbSbmTvB6nP6MJ7H8YD4yh+dmtI7iL3sRWB+xYa+2IdXXCS9ie2Rfo3
uY8tupWtKXe5EPY/20H7M/4n+0zWZC2cvbrpV2JyKSyuNqb9kbrPo0rusbX1
HNQzcb3jaqcZ/LPi80WiAz1XlAxjHQgmTB24245PkcTrr3wWxroRWLrxofH7
aUQHXjp7YSnWgeBoYUJ14PDnf1pEN3YbzSvEuhEa1TyobuRkcxogOnBFaJgc
1oGwFeypDvSruf+W6Max8/9mLeRtB82AFVQ3PjuS2Ed04NxNQq+xDoSeZHva
hzqPJ7uIbnQ2frUE60Yw26FEdWMIX60suYevv9Gp+ABqYJ/ZR9qfR7NO3iL3
8IcvbVRZqF0GAimM/nAunDGb/P4auM/IT7hQCf6DzbQ/8ek3tcjnFMMumw8/
4cB7z6KJ9ie5ansz8REpo74LsI8Alo/YkjjjM4mvW1giR+LczPhw5gNn4iPs
xSS5sI+A1bK7qI9gu+TOR3xHiFHLMPYdADvVGPrwqLA08RFGK873YB8Bqlev
UR/BrWogQXyH7d4rrdh34LoCqe9QuH1xJfERe4eVWrGPgGMbMmgf+kdNx4jv
KJz8/RH7DjD56Uj7Vn82nI18ziJezyPzXacRYuXTqP4xv75cmnzOcmY3z16J
RVVgq/2T8s/Or7e/PvUph1ohXjXyO3FibAoM/PyQ3U4+b0rwWDW0Ep97FT/j
Xl1b0TuP+Na/ZosbsW+Fw0zfOo0zypPEncRDZsThuCEz/mtP1CXiW7242Xdg
3wonufopfv6Vvv5JfK4krBfDPhcOa1tTP2vJJ36RfE+YS1i1kS28C3qZ3xPm
3fvMivjZJw/P/8J+FhyUL1M/Ozq3uJb4X/OZP45j/wuHr56i/te3Vy2GfK9Y
RuX+97XbeoH1veIDEy8eEp/rNNMwAftcWBB1lvat/PSV28QXX78eL4x9MVwV
b6C++KWzhw/5vvGd7cP5fL29MMj8vvE1n79m5HO3Ee+PkXMvt8D6ZespDv23
/uAi3zeeO/f3zobiHtjB/L7xLTFXffJ53KdXBhPDR2vBfMcI7f/KOM884ot9
cgpnY1+MqjmXUV8svaXnJ/3+7YL3H9hqIhDr+7cJp0W1yOeejssMF5/+mo9Y
n3v27E/3VzdPhz+mAycDj+ahxVeYn7Or8Ak2hJfBCosnHrGatahNspLeY4z6
JajWx9SB7T5HG3HHViStaUnvK6bxWH0j5zhVvq2P3EvY+PdSHuCo0v1sGtAK
7woGRh+NdCNbzweBpJ9fbfej+2JtsNfBzyTbuwcpXnu5ivRnq1LSPJ1TrWC8
StBpnVs3enqmbw7pwx+L2am319aBRHqFuvbaVpSt00fvDX5KeFjtFs4GH+/A
7evWZqPRqzE0/zm1mW+z5aogfH4cPIIqtEmI8X2eoQ6FjEO6zeAYpbTmh14z
Es3YRfNX8JkoJHN6pmjrKnIPMHJ1Lp3Txd+efOma2QktG0dnWs3uRD6DlgEk
/1apypIF3p1gHR/45OvbTjTzed/UFpx/27444dLwDpitc+STVnQHclHIm03y
l562FH2Z2QyC6WpXD3E0o4UL79L8j+3XX3P8cB4MBQY++maZjsxq4mj+VaeO
Vd5Xr4UDzft/CcWUobHkHMb331Y/u9Z/txVC0+uX1H6rQ2sWL6f5/5NV1SM8
fPz3Wjbi359q+9I9vnHZi7L7g91w7vFOb+uQVrTq08MPJP9Fr5e4h73uAZlM
Tp1gyTaUt+oxL+n/YsmYhRtdu0GjyUVf81wrkng1RXGo/K2iefXqVvBWWvji
hEQdyvHcT/MfnW07bXSsADIOe8Q9NUhG7nVJNH+HQzPPLKiuhwNuX7kaHIpQ
XL4HzX+z+7OkvwfaoWWujsC69ZWoPayO5q/RlfWA7Nnl1hqJxEcL5yaHkPyP
D7JJCmr3gcvMW9skGxtQcm8jxY+X44H2zIX9sHldXs224EZ0qdU0n/T/V+Wl
+Jv9vZB/7aNH6uUGVDV2lvZ/msGY9K/WNtCV31J26VsFindqLyL5Rwhy+6pN
FMHYm/V2/I1f0Aq/LzT/jzKjjuvyGiHmXNspwYlM5OAzTvMf3Hq6aGMw5t8s
B9lCiWIkdn4N/b7EllOxx4iOmv1t7W/icysV8/3o78Lr/+FbuWEAbkuIpvhk
VaDBSqFwkn9geD2b9a8BKNpgtXyVQSVij1jQS/KXu7+z9XhSP5wvXvP3+rUK
lA4pNP9ZufazF8l1QN9zuRN7I4pQS5447f/kwjEF49BisLGcpb96Tig6UvSe
5v8+vNajbH4znDXecZDtRzzS3PmZ5m+4eV7nqdedMOZ34eb2kDS0RUyTgZ8v
Ye+ITrZ7mylO/OlQQPdbkn/P06mH/VjPtz66Kzp4KxdZ8nx+T/I3uNoX37Rr
CLYNJrws3ZKH1q+8c4jgx28Ve/yhPwPwNW3bDpcluchonslMkr9gMVew2ZpO
uD7zoL+Rchra1byI5s/l5jBDhr0EXlz3q1a3c0dXDRn8s/KF8Q/Nc81wM15l
1680X6T45hPNP+Lex89RC7ug1K4vsPFiEPKfCjpH8i+tnetF/ZF5xqJc7BMv
RBb5kvw/34nV+71wCFJ6fdY0ZUci/YCLNP/RccSm1DUEu/S/Pfq5Jwq9TY2T
JvlfWrz5RO/rQTgvyectci8SbR6PoP3vXDyrW8uzEz5+GE/b3hyI9H//oflf
LRan+ZdJSogcsnMHVv6fhYVp/jkeCxxw/qDEzD96rwjNv/vm6NKmi0HAyj9z
sZ8nyZ+HJwBw/sDKP+iw+nGSP7/pQArOHwyY+RdZr6H5R+v5FeH8wZuZf5VH
hwHJ/5TOYCLOH6SZ+f+UNugi+TvsfKst0xwIBsz8J0T75Al+GpK472L8AAs/
iua/XxL8/FJ6ZoTxAyz8LJpl1E7w0xq97TXGD2xl4sd3sf4bgp/H86yOEp81
zMRP/kI7J4KfytN79mL8AAs/H673xxH8iC4qLMD4gXVM/HRmCX4j+BGy6NiP
8QNXmPiJzt4URPDzSXzJZ4wf2M3EzxuNXe/I/E6TaLyP5xeEmPM7tZXzHpnf
pqjFV/D8wj3m/GrFjeeT+T3Ba6SM5xdY8ys60KxJ5veZ4eUlxAdVMef32PJc
XjK/kXNb8/H8Amt+/+xKmU7m1+RGmiieX2DNr5L7tyYyv+5uL+ZYXKuANOb8
xgvocpD5bRj7dBnPLzQz51dcrmbyO+ZPjeEX8Zg/gcWfZzIa9Ah/Hu6TX4P5
E74w+fNXuVMi4c/BvjVCmD+hjcmfykz+3MPgT2Dx5z53GVHCnze156lg/oRE
Jn/WKR5uI/zpGKzXgPkTLjL50+HVxBfCn1/Dtvph/gQWf0q1O2wi/Nm6xboa
8yew+DPn+IIVZH89nZ7wDO8vYO2vJUkcRWR/dSRyTV8RUwY/mPtLYm+xMdlf
kad3iuH9BauZ+8vL+JU22V8HNl6aQ3wEa39FfxEvIPtrp06BH95fsJa5v3Ku
33Yh+6v1b90pvL8gnbm/Lnv0zyf7K65vzym8v0Ccub9aFLbWk/3VJ2z0Hu8v
YO2vWg4dM6IfAp93KWD9ACz9sHXMx4voByWV5r1YPwBLPxT/WJZK9EPGyoui
WD8ASz+kTuXkEv2wDRmKEJ3P0g+JJ/5GEf2QXug4B+sHeMPUD2Zzf2QR/VCp
/PA11g/Q7M7QD1x3LZYT/TBX8UUI1g/A0g8/StcnEP1wx0rGHOsHYOmHr/PD
3xL9Nl3R5hzWb8DSb6fCNi8h+k26b5sX1m/A0m+CKlXKRL8pP/a8ifUbbGLq
N/e5atFEv7lccx8m+tyWqd+Sn32KJvrt7AfpH1i/AUu/mRUVJBD95pp8xxTr
N2DpN+2gG+xEv9Wd53bB+g3cmPrtvsgoIvrtr6zPIazfIIep3xb9uSz21KgV
bHRk5aeUO1BUVwTV7SafqmvZFDuAnXP31ummrSih8C2911L5tCHkcUgXZGx5
NB5l1ogC9y4PJvHVP4PY32A8jC+x8fc8V4UOKPbQ/NvvOyqvm94HHcd+rpgW
X4RWWinS9793VZCor+uDJfEX4w5yJCNrk1v0+V2rpBbtWdsPV23mrjLT55Dn
tvQJJPHLgzvo88JPC8jzwHo+IjVHkby/jN9tO34/CDPfr1ETPYvkc7EwOhDn
AweZ+XBblgWQ/BeWTc6INmsEVv4PN/aWknrLfhkq4HqBVa/chqrVpD8+0zbu
xv2BaGZ/Ll3YNHyrLh12bivQEZ2RhzpcGN9PSPB+nEJ82b50D2Xsy5A405d9
b7ddSH7XW+uBLDuJs/zaOmne8pt22SBVKr3qQVoWcl7I+Hx5WN99LvG/fDN3
52D/i1j+95uYkwaJCymsu0Xir5hxg+3ejxLf5oFJSaH3j9npaCKT8f2WkbOB
l8k9g2R6bV9icili3TNolW/zJ3E+ITcPEl/KjN9PTSvs21QI3mreI7l5CD2T
YnyPsebamlpyn2OzwMK1+WoBYt3nHBRdOpv8zvveHQOVTTg+FcGIDz6e6lPn
KYbRDdHvypti0ZcEZfqeN99nfib3ZoUuRxYlpqeja8x7M2EZswoSd734/FAC
jlsw47cFBJYWfy0Gx/Vd24R/ByHXWsb3JUKyJYzJ/eTcHHaxJ8e/INb95E5R
VUsS79Ce8/wxjiNmvPFG64zFc0og9sfkpyAPV/RakPm9C+Y98L8b9B4YBTPv
gW/w5MSTeNz2h1xHcDyNGZcRUZa9M1UMI03y/CeDPCD1L+M9qqZc9L5d/d2p
mEShEAhi3rdnfHi6n8RX3I1pT8ZxxIyHJ9z9vNenGLRib355tigcPKUY74nT
KJ9LPtcw46h+83ZvMvAyP9c4u9N0ZA6Ox/0/ur47HOv3fZ+Wkd20SpFR3lTS
zpUWKUlCJcoMiSIrTckKyS5FyN4787ZH9syejz0eiopUv9f9evT543scP39e
h+N+zvu6z+u8zuv1uo/nKf+k/4GIb1iOj4m7RaGKOiigPJv/2voJ3jefJdcZ
016jh98fqb3u7sjZWQk7lt8fIcg9iuMjXx4G5OLvbVuOe3+fq9qTXAN2W0z1
nRoKiK5JW2c+sSkDv6c7Y/88TqG8Hv69p3O7fdcex7uGiledI+J3l+NWgz/X
lf/5DBKLDNe6e0vAY5J2H6l3kyszfh/K9NNpMC2kGSaW34fqT2757ELE01pM
pNKJ+PBy/JPQOTNPVA5iLyXqVJ5VQPN5WXIducyKS/i9c0TMt8LnHG2gs/ze
mTEknAHH0YUuBgcifm05nqHXvB3f3+gzVr1z36ISuZTTeLgQcdcGr9+Sq11G
rI98Hx4n44uhKhx4nRvjFX/xe22N5XWkNH7L4fstDhd3GXjPlaJ5Bdq92e/0
sBnvt3GP3WViv2h4lzwZD9m3sR7vayZijTixLzS4vK8VrcU78f2f2fwnEZIr
ixC1kHbud/XX1pH5F9l1k8g/eqlNy9vjJUVHnGcNyvE/+D3pveU871Pxdsb3
o0rY/F6k3spBEx00/Yn5FRyD+RBb8Huc4APyvU87R0bPEcDnPnVojwtx7mj1
8rk3bfY+he+PRTiucN98OAWVeNI+V260OgPzM8Wz7SXBT3Q4gbb+tsWR75iH
iluGDhM8RLzLPPQwEc/F9+vqNiwJd1wLQW/cT5P/n+c+StZLEdP7aK0Yf/Qr
jLbO084usi50jxt/IuoCFS3XxXaJ72/w/UOlQcVnDBV3IceBpoc998PI+p0Z
eSse6+8BTwJoebu/XKem18g6BbRcp0ZaxuT9zLIz9XITz8JBYoS2r5pLJzdj
PfnNkKhO6AlQFGXIeM61IkusGx10N2MJ3YCCZd1gZjnWhO+vzp0Ss7p8LA3u
r6HhETqQOI71Tel7dyKhb2D3mrbf9x4dDVjH5hW36xM6BjbLOvYjzTwA3+9t
vJViKXgxD4wCaPd7ays4arDetuw+85PQW3BTPr9cd54rsK6e5VwzRegq/NPV
fF11AXz/+dwB/UmGoSIwnaSt8710twPW/wwRqUhC/+H15hM0nCZq77HOG1aM
hOLnzLzLOv/BeLszvgc+KJTDZI7KYPHOQfL/fc4r1OB+ZLBPQozoR3BdhrZf
v87virjvlNSOP8XPY32W+47ZSSoHvvfuejxa5YDgZ8j8TusXvOoXJ3B/VF5y
uk70R3DaSDuvk/RmTLgPig2ks+DnlmLLfVDOUvh0oGcMonulPJo8Gw+57rR7
JmmHWQ/qT8UjWZ2tkha+MZBRTIsLf1/9H47/Xiw5QsTRVS9a/H3b3FG8zsUF
WyqxDrKOosX3iccp6u2PQQUp51a/PZ2ArlT5k8/lQjwt1XHc/Ezj0pvTCfAv
Tp/hliOkHIkSv8/cvf02CX4wH5I5SsSD4zkCs05Fo9Twr792oES4rUSLP/uR
oCu9FImEr8b43GBMgt8U2jpXmzZcvHc0Bs3xC/0RVU6EtIdzi31DVMTblStz
iS4aDaut4O8SSYKrrrR4RzXFD68fMPvgL7E+usZNWz9JbjQd46EfrjQn8CCR
S7T494GN2vhznTJDfYnPRf8+V1es+gz+XNeM6dViyomI4wFt/fqcuIP4c7M2
6G8lPhd5WtLi4b/dPlgnlMLNqJKitcyVaCw5V3FpdBocVHUn6Saa4ciLpEIl
0Ta0l/lcQFkW4dv2Sp7Z/rIbQtac/yXF3o+Oq9yxk08aBsV3K9xufuyDPSz/
UYQmxhDVzEWN8VoDjB5beugkSoGu/gWZT3Ij6GFniB+9QQMs+I2fXpLvh5HR
2dBnE+NoNQ99/JC7PwTtnPv8fYYCEBQ8vUdyFCV686a9vxkAdnqnNBcJn3xj
7FBBruw40nN7y1egXY12zm5Vib5DgXOT2wY8/EfQ5BabO4NK1eg7fUH/Lf8O
6HRW+/0tjYJE/gwYFNynoDWzkvdyefvAMUO9+frbAfQybwsZ1/aYWNtxqAVq
5n/bXnfqQ0OKmnKsJ8dQuAFj69XMdpAKG706mNKNhnVYyHj6/YIADkot7BUw
02Rma0NbBw5P6oRMIlP+RdaHGY1we8eObVrvWtBBVg0yfvnn4mRJfTEAB328
VlctamWfm3WJmkYZdhV7B+grIGV3yp/YrCp07sbarzhu9bLvnf/fNOiNn335
52oBWtf4WJUlhIoEs1yvlNzNgstmPI9vaOehdeefkPEMLbZo5+hg2P53lVVd
ZBSa+sjJ5/2VirTsW7h4JcLAcSzt43PhCOSlRYs/q94RsmhiDsd+yRmcSHmI
mJtHlTL/UpHKGbTeZU0lNIk1NziklKKcPTkkH3qCXuVOCrXBu7zzPmPTzWhL
+TaSD87cwpl1LP2wd2r+ZaRnN3pbxkDywe/4h/T7p0bAK9yx5pw4BX3lng7A
585VazJTs2sUnPbfe903R0GV4QlV+HxPihYLHfcZgQ2pTl4P7lHQ2xVUI3yO
jNJXRAr9B4BqPr0KbelDvJF3b5HnxVB8NyuhG3hH8leL5raju0dqyXMZy556
qvamBV6ujz30K6sRsZgZkvl/HPx9oiK9Ct4kzYdrralAZuu+kfmn47iwWlYz
D8ZvfL3ywjIL3S18QObTzLLjo6FgBNQ+1HybtCcMfUum5W1K8Jvz+q4quDkn
k9A0VoiktRPJ/Gh0fD880dcBZr4zd1TlG1Db40V/nJ/Y8gdbt/0agBCLJvo0
wzbU+TDzAc5P+e03NxhGxqD6DZNhVGQfsvZmJPMzdVNlxHt0HBoKPDafUOxH
RT+FG3F+zD/HH+6Ccfh93OZBWV8falqrehPn59SLgobqFAoMPDhjxxvUQZzj
N5LPnBKPHD++6IObdjP3paAFTen7kfnx/suzyXVtGzgI73dpn6hFT4/fI/Mz
0HvrmFh7LVBf26kXtxSjgdIVJA9/SFkqnbtSAC0v1a8NrEpHfTmPyPxklm7d
A+FRMKYvov88ORgZFNHyc6SxqF1ZoBbi+OKPGTnloP63sWR+3DNcXLM4uuHY
Rb4LR159Rm8CbpD8uXDgj7SFIwX8LThD7hU2IjMJY5I/u/8cFH+2YhJ2pDV3
XAhoR6bGHG9xflauzcmh556COKVTkdV+HWijZdcIzs9f5nUinjqToB1zPH/D
TDsqtHxigPNzVfvZGor2MAzvM9kyZNGMqM/WGOL8HJnw21nQ3Q/89/N4TVXq
0RWOejI/2yOelV2m64CU7Wc+WhWVoy05d8j8pPDueNEYXw+ZAoJ1hnb5SMbj
L8kfhg3tNhlxhfD+1dmcIOEktFP3IZmfY8Lr/3sZEQPUpdGQK9cC0Ft3Wn4S
ZvSTTMvr4FxPW4RfbApKHggj81O0RWuCGtUD+gkN0acJf/jycy6ZnyunErd+
ihiCrl8LiVl3K5H/uQFafU1eMKS8nIJP1XsjajUaEPsnFZI/u47sNotLnoYL
TkovbzE2ojrG00dwfmyDbj86ODsFHk9eOqj5NyALl9D7OD/eC4HqMu9GQELV
t3VVfhUKiGMh81MtrzoU1zYAmeH7163eUYZKNjmQ+dHPiAm2v9MJRwLtGUT5
C1CvsCKZn1jZrkSuAMKnqfAbKMWloadbGEj+tIrO2339WAQt32QFjo2Go6pd
9mR+huXVbn/hiwP7Cna6nQ6e6MRLWn5WqTkLGujVg0SSjnB5VygSGssn89MW
wahyLKQXdr3aHpC9NwVZ3ZUn82MtNajDoTYMISKLlwpSs9BKidVkfiTmn13+
z24aNm11s3B1KURRd5+8x/mZ+abidTyGCobZutvHDxSh3cP+R4OI/PzWlmbK
GJwGC4sP4omlhWi99aIhzo+Hf6TMfY1RmFN/uo6PIRd9bN1B6s9KqyC6C/cG
QTTKfur6jQzUGFtM5oeeTXBl2LkuUL/UefWdXBIqqjQl8yN6yUbzlXAj6G1+
llU28BHd3bBA8id0K3fszJFiMNBsKp3b5ocGImn6E/zhbOFzuniQOakYHp/4
FIWvoeVn3cZ0Eb9X9eCsKu1Z9VNUZuBUBpkfP2pitNdcL7Q+T2q7/0haJi5B
lswPB/2Xe2Oew8Dib/a7vOCozPycC5mfhj3Gk3ZVhB+/a56jekpRZvpyFtmX
I2P1ouJ/U0G/V+N+5ElFGYE0wzLMn4ZrakybpanwTsC7lv3sORnrv1R9nJ/L
5ejeh8BRSBtbsOluOyLjGVlN6s+zfTN3nD4Owujqa2oNpbwyv1cok/nhz3ti
LOnXBYvFXbeEanbJuBiok/nZxpCrp63WCAYXLFdxBUnIfGKmJ/nz3ujU4/em
xSA7fV7L7SKfjKMzTX+KH1anTp6PhwfRpzyfM7PJUN/S8rMypX7TCePncFKd
qmFPaT62IXKxKAT/fhxlJckreXqxkwSvYMcyrxLWPlbGvMo6SVdM8Ar+8eqX
wnWSV9SXZ+8SvIJ/vFJtblDBvLrQM/OC4BXobUskeSWXw0LySmgXx06CVzBg
+R4wr0r9JRgxr/RXfDxL8ArMjBJJXuWe3kTyalKycy/BKwhb5pX45A6SV0VN
KQyaNzKgaZlXT/tLV2BeLRgv6hK8gn+8Gn8qQvIqlomjiuAV/OOVww25GMwr
k5v63whewT9e6b0NL8C8aonakknwCv7xyiDjZhzWpYHymWxCl0DKNp3Mz+47
9FNYl+hEMiMJXYIvuVpkfviVBEhd+hLqk0noEvzTJd1IdwOsSwWTMsmELkHJ
2KE3OD+Fhb+NsS7NrZCMJHQJzBYsCzCvlAXDbbEunZOqeE/oEmxMrrLE+Qku
CFfFutQ+c2OG0CWwThIgdSlYlZeCdemhj78goUtwy9+ZzI/chxRSlxraDrIS
ugRTDZvI/PyXvikJ65Im46QZoUvAJkgh83Ok5MMDrEuoNOIgoUvQU0/jlarV
HUOsS9WHfdgJXQJZbi4yP2khAfW4r+0smTEg+hqYvIgk86Pz31cn3Nfecp+5
QfQ1EDRbQ+an46XuXtzX1JvaEom+Bq+Wgsj8bE66KIz7Wq7S4Tmir8G4fT7Z
1yYCeNJwX7O4FFZB9DXQnq2awPlhfZO9Ffc1u7jeHqKvgYdSpR7OT0UoFz3u
a5zM+/YTfQ2ml/tavqi+MO5rtWtbJYi+BnRhyWR+DnP/LcB9jTcqNIfoayBZ
ZU3mJ9Bkpz3ua98X7UaJvgaMdrS+X//qnBXua1ERKyqJvgYxEtZkfq6IsIji
vmbxZCKT6Gsg57Hsi3J1HLAv0kl5lUr4IiA+kszP49KW/dgX3Xkzb074IqDc
3UvmZ/GoPy/2RUIRB1kIXwQMb8TJ/IgHfb6KfdGFWc57hC+Cf75odF/RIPZF
mvM8WwhfBNXLvohOwegQ9kVT03cfEr4IWpZ90ZT4B9IXNfm4PCZ8EVgMrSJ1
6VpU4nPsi5yzIx8Tvgi2p9wk89NiOMKFfVFZoZwf4Yvgny/6j47pCPZF6vS9
GoQvghL7XyR/zjXUXsC+aL+Hjhbhi+DKdRsyPwkzHySwL0o+4G9K+CLgvELL
j9udSTbsq2fMzNoIXw0bzGhz1kMVj3Tsq7mUdrwnfDWk5C+RvtHKciIJ+2rL
kzFvCF8NM/uAzI/sT80k7Ku3R55uInw18BkZkfzZITI8gX11InegH+Gr4cpB
h9+kb/S4vQ376g5XHT/CV8M/X/1A3lAA++pVpj1rCV8NR+TkSP6s3Sush331
rrfu6whfDbE2f8j87JjrscO+2n/ICwhfDfdv65P5MfeKHsO+miMwN4rw1aDl
PEvm59WvI3TYV8e/rtIifDX889X2zxveY189x2gRSvhqcMug5afJ43IInkNl
b4UVEnMoHPAvIvNT6f5jAs+hJd8yi4g5FHyWdpD8udbz6RSeQ9n7F/AcCkes
9Mj8JAmY2eJ5s3sD6wli3oR/82Z676tyPFfW5znPEnMlnPrTWIvz49NQqIzn
R7fduynE/Aheqe3aOD/tfCvM8Jz44u2FFmJOhHK7eZI/u7wO1+N5sPSM5HVi
HgQ6+U4yP7JSx5nw3Dd154UQMfeBVNQjMj8fLzL/h+e7WN7JVXFZVSB0lKbP
rJ4sl/Ecx3dH9Dkxx4H3T1p+3sLUejyvNa4cCiXmNfg3r4Uwxa9THioERkg0
XuypguOzIWR+IqwE7H6dbICkhrLFjMEOMGrWJPOjpcWU56HTBujGJk+e3wNQ
pm9F5sdu7ep2PBdHsQvRzaVR4N9c3K7cQ4fn3/gzro+I+Rf+zb+Gq6pd8Zx7
eu24NjHnwr85131ClILn2eqZmBRinoV/82ym7PtXeG5VypLyJOZW+De3liR9
Ccbz6eyxRRtiPoV/82mOFli5GJdC530q6+LxSsST8JVeZGwaOHYe1TuU2wmb
372xsq7qRz2pTNuKkofBfPHPNUu7XrDzdJ/5MjyA/sYzejZaU1DdTd5M7ett
oOhmxBRZ0IP+mh7jUpUndG8m4cVvsQa4bPGz2auyFU1u4Z7gCZ9E1mwhVkFy
pXDE95OUVFkN8jvw5AFDzDS6+v5erE11OqzPjNb0ZS1AT/n8d14m8C8ccXeU
XQgG/qyPdCtcoxCTfMI+PwL/bMNZwS1VFfDio1/Oq6+laMPpGRJ/14lSJ4cT
fRBkyKlxXK4Xee7aReJXflbKGnB6AEzK+380W/cRc2IPiV/h0BaFlEddEHXq
1mmvnx1IQsCbxC+5+JKl5EgzvC7udXnN14zU+0fHMX6Lv8YpSoqVsNZmIPvH
3c+IJd6FxD+fm7SvZkc27P/UpjsTl4vWHXxD4l+ZaqmmrBwGr1Uz1quvjEBC
DDT88UsPM3ViqoASTb87fk8Rsk4aIPG7vT14dsulAbh7wmaj2eUOdOIC43aM
v1+9eFjUlAIKu++Vdep3ornvz0j8WivuD+1b3Qe2L9pmGsJa0ZZn4ST+eVnK
7ApKK1BHC8/FrmlA/GJ7yfx/d3xUyVRXDfudti42vS5D72sek/hTjzFbF37P
g883NfyFoz+hBTUfEv9lJLZRVjYChHTk9LqYwlCGCg3/yup89esLNTBtT/1e
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
813BGlKE+soFowwJfRSo86odONxH1G2mQEROA+JqqNJU5R8Hwcjp8QKdYTjz
TkHUwrINlbHMT5+/NAi7XbZvu2c2Duza1+mFBrrQvOyJiamAFsgX52e6xDYJ
Znc4b9yN7EEvz5+473opAtIfr3/CtXcCbo903q7K6EZD3afjisbr0PHQce+I
9aNwiE9wm5NSB2K8btmMrPpQUBPb3O89g8CiOK/GutCMel5sdXfRGEFe6v3i
BiYdcOygx3B9TzUaDrFXryHyGTlye3XmvmqwYlBx1W3IR8pf97C/JPJ5eZfK
k5P+MeDwStwogvU9kg0K1vlI5NNV5/CJF4PxiH7A0HTt5Q/wPNCctZPIp97F
/SM/TVOR55Wx8fgj4RBpvfLSOSKfnPd5KfG3rPOZ1bw6XLyM/pfP6SOimuu5
GiHscLNhrEUueh2/Na2AyKcTj5UNx75+KJdXus23sQoliNDlG2wh5tXfYX8v
5owAVejj9ZyERuQRc7qmRmUQbm0rktvLQPixS7M/3nC0Imv5rXOnA1ugSF5q
6QGagkIf3hnp21/Qoe4oydOqEfCf5OtHuS2TcExvMGpvaiv6flxG6s50HTJl
cBd+7zQG+7IiUjdzN6MzyPTqEZs+ZLddeh3DVQr8cH0oU7iqHqneqQjsvT6C
NA1ljURXd8H5+zbnPdnLUJ3rFZKfac/vDB0bqwGWoc4dyW6ZKGOdDsnPzdtU
D3fvjYNU+iEvNyk/pP1HjeSn6CX+bztTEtGTrvmzd+cCYL3LUZKfpyLs0ssD
0xDDTNaXT4c+gJNaAclPZuvwTT8bbPLXsbl8fuOq+7986qhRPBXrG4FB3OL8
gQOp6JA4F1sPkc/ZyS+dqmP9cF3OQuTiuSLk+nndUCGRzzsWfsIJ6aNQ7NOn
3Xa0Eu3xnBW9cHkQEswTzCUlp+AdQ1lqU20NstjzaAvbuxZwv36dpWxhGuY2
1tbtD6tDZ63tlv5Ti4AAjiRWpTXT8FDOa61bTC261LX2QgS1DrEoCXKz+Y5D
t8b511bCVYj1HutMFpHPTTwB9S8lh0CEleGEWVgp6jdKj1fWHEG8K1Wv0O3u
hlW5dB18DXmo0fztWaw/wpN2DZ2idZC+88KazuZE5JAzLYr1Z+LLw079m/Gg
0sr13H2FB5q+8ITUn9fbTLe72Seh2vTP/AndnoAW3pH64z8XPixok462NOgN
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
4BVcmQfcR4bhxoVk1LHdUtiemOfavK/JZ3Sj4PJUUunUiiC0TlHtVBgxT4+I
J6mVbU7wZERMQ0HFCiU0Z0WT86T4AHUoPsAjFB8g45o7lTbfo2FvxUkmpdzn
6JNBoNtbop/rphuTa146w8gpgde7pUzRGrel9RrtEJvytnaBu5sngpDrVcTi
saQv4zU5vaEO/XArZKBYeyYJqu91k3jOC/t6+vbFDnjTzHlXxiAGBqpLSDyb
Og796BWtg7vaast5HENgVas7iefLq80mTOQKgNG05VqHix9It3wk8TwRf7s1
YVUcxNmg0XgOR8idEyXxrG60LantMA2eXp9l2jhWBWJNFz0xngsovrssiu8u
j+K7uzflsOlYejtkXYlanbnrExQdKCXxfPCn5A/N4lrYks3Rk3U+EXKvbibx
7HGvVyGzKR88j/nw7tYKBdXoQySeJ93tWqUNY2HPrc1tmk2P4L/RJTwXVGh9
w/Ip2rwllpAPbL2/JB/9MpGQ0sIJaLrKz/Kb2E8deXlLHuP59fGrGWrME3B4
1c+Ywc4maLM66E/imeKpm6B46ngpnjoOx/krR7bWgqLqF+NbiZlwFOZpGM+z
zVb3NwsS81R5tGAiFgMf+Jbw/OT0CpbVF2PgZR70TQQFgJbAEp5ny+w/Yv3W
yVokEPqFe+5L+t1ruK4X45lJ+XkvgWc4r/NNA+OZb50BB8bzEy9OCwLPwLdp
rBHjudxGgQPj+YCMFcPVsU5w5KnbhPGsRvHRvaL46PopPjqft5uvtEh+htKf
UVO+9YkQnmlM4vnsiFPw87EoONDaHM/I9Bp2DaiSePa/Fp+A8Zw7YqFD4BlY
KDyrUzx1G//hqVsdxn73xtYPwGqdbFXh9Q7UjJfwPBr6vQnb71ztnyzCfsGY
Wm9stOhN7H/8c7s9CP8D6N6Svuipe/nfK/7vvfxDiidzTnyJJ5OH4slcSd3L
G/9zL2/UmiM1PtUBni7uZ98o96K3kjIBIcT3Wrh2VnV/dj9c+hTIKhY+jLg+
GlvTGdRCNG24+prrACglv00R8BlBPp3NksJzL0CVyh/Y8E/+wKRNpo+fB7FP
KfDiOpDWhfSaW+y3JA3B7B3Jl94eQyC7WVw1hG4QVUxcdI3Urf3/7vcTqPt9
H4rH1ZLicZWleFwP/nPvL0Xd+4elrjs52zwBDo1y293Nq9CtiJ1uuP+161MF
nz+pAa/EPwHlv4Sk+uTSzsyP0MCU06P0tg8NCnLfXJOIzkXivDfu4PVO+Qg9
6MuZhKp1YXoeQwj1X/V1w+uVEKF5M+kNgePb14nzQWmQObmclFvtXrNxh3Ia
PPt4pEBD7owUTT3z+TKjWriz07wE918bfeYF0T98zNF0wP2/jzH4ELcwCanS
Oo7vZc9IbUkx+RKkGwj9Pyq98LiKJhx2xLjw+U35PTxurZbmyg37J+EaTahp
zSlFKdvFScN+lQr0nbrff0Td79tQ9/vqxejGu9cjMPz8kEdnyxEp3/cVRnnW
A6id4ikNoHhKUyme0j+JNdwyZu7A+uzSZbeBhmNc7+fyQwg9alH3/iH/3Puf
LT/Hmtw6CBF/tYNiLb9ASpeMA9av061aOSz/84YHTxHyh+QZL1K/7P/kAyTk
LuUDdFF8mzIU3+ZJim+TicoTOEvlCWhQeQIaO7UDMH7sw53VCfyAyoa8+7j/
9jzRMxi3OR0VbARugVaxlcStz59j5Ri32rYuGQRuYR2fjDyWZ7zTSiMcN+Zx
nhIi4kYUb8pNxo1xGbGSOO4VyCxuIOJeFK7cTMa90Wulo3dzVIKdw8Ar2XyE
bLLySfxUGZi9SK/sh/23uNP2hTWiS2ekHRUShsCA4hlTo3jG3lA8YzZjnyOx
v130LJ74ZdGMXKZNSX9rssccYX97Yed2L8Lfoqz/zpP+9l++LJ6AJb6s4o3C
qfj7kpsg0LlhrAqZeDq64e9Lzz88UUUUT9TlIw+c8P5x+g3fa2L/COouHOR6
16oVReP974D3gzFi/wt+LWPkelmcncLxemNfPkwh1gsGLAnkevPW3QrA6+Xo
FCsg1gtXvDMc8Hr/5Y3hpXhjihWjXXG8VMMh2EbES8DZf0UYr9diiFscx0sO
3e/6iHgJRsrd3PF6/+UzSby4xGeSM50ziuPDvIbrfkR8CHPyRY54veYUv8d7
it/jAMXv4VqbuArj85q0lSeBT7QmRonE54ZVjo6bUrqB6ddNs5dd8ci2rIbc
v1yzHnqM7VpLQtmDsGvEG5/lj+36+WR8lN9MNxEHxvVYO+2Xiv0oHfiFaM++
rPnGqO8QFA4qM5fkHZWanXlAysHnnsQj7Pc2GHNuIvweOEXvI8eNV17joezQ
AHPvJ87f9miBgwat5LijlzqOYD+cm/H6HOGHYTbmPOlP+pVveeH2dj6bNYn2
aP5LFdlejapv1funvvU5i1kM3pf174yWIPZlKDk4n2wfpS1bxc/aAXZ/NG2/
h1UhMWkNcv5czp8csBxm9DOeEXKAxA1NZPs7VL2qC1Wv+j/nCdIShf34PARm
slVETYrB2/sx2V79vUUZ7n/gRMAjon+g1xl+gfv/f5yf3SM=
    "]],
  Axes->True,
  ImageSize->{304.6288329154884, 432.},
  Method->{},
  PlotRange->{{0., 5.677591582380996}, {-4.7775281419322795`, 
   4.7775281419322795`}, {-2.075375986700521, 7.999999999999723}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-3.318190588008375, -0.42157545390583334`, 0.5117473578991143},
  ViewVertical->{-0.8061835090218814, -0.09794965578140497, 
   0.8859956928220474}]], "Output",
 CellChangeTimes->{3.4769937922742443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"SphericalPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "3", ",", " ", "5"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
      RowBox[{"3", 
       RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}], ",", " ", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", " ", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"Mesh", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"5", ",", " ", "8"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.476992421984334*^9, 3.476992442958756*^9}, {
   3.476993079948702*^9, 3.476993081146887*^9}, {3.4769938186980133`*^9, 
   3.476993822376913*^9}, {3.476996834988544*^9, 3.476996870217019*^9}, {
   3.477053507572288*^9, 3.4770535173778877`*^9}, {3.4770536989373093`*^9, 
   3.477053721937964*^9}, {3.4770546936351643`*^9, 3.477054713631536*^9}, {
   3.477066928435214*^9, 3.4770669355190287`*^9}, 3.477066970012047*^9, {
   3.47706702504574*^9, 3.4770670711636677`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyEm3lYTt0X95uLUpF5jAzxyBwK7ROZKfM8JGOPec48D5EpMxkyRwhlSNqn
FIUUDSo0z5pLA5W3Wnut+3qf9/1dnn/uq32f++zv/uy1vmudfTxt7VZOWKii
pKS0pp6Skmr156QPznesW2+3KN89sL3n4A6D3v6p+S+PXUl3DfFy82EXb2T+
eThggcWCLi77t33IYzf3fDh0YssH5qQ2y7tVi3UWR9MDf1/slccMLRZojzaK
ZK0CLjdz+7LN4n1aVcCoPrls9dySLXLAV9bdMS1e/8IeizapZy/7RGSzsXM9
eyzRSGSPn5SM6VXnoEWb4ak2s5v+YNssh2VeLUpmC3T4msIuThZBM+6sfK2W
yeab71h0+Woa2/+uUEet8JhFyAD422w6fO+rtCW5tdsJC5/B8PsVQ+F+d9rN
e2RreNJiti3MNzEZ5l/1u2iG3oxTFt3ngb7MFNB7VFLTMJtw2mIDg/W4pML6
Sou2vPFVP2OxaR+sf4kx8Cjea3t3zpozFoczgVdwJfBr2HxFlfeZMxYHzg1z
q+Hr/Sq9n+vyrRYLN24c2DJ1vgVybtJrc72Cei9ZUuGGgorcaww5/6Nsc2d+
0jvmv3GdtDvsMUPOJZWNqq4WhTMf33pqxdkvGXI2c16SHWEay9bMslzCp/oz
5Pz91rLg8PoJbN79ymOl294w5OzX6/RQ5cgk9tS7/NObme8Yco5d3sjq6MxU
lpJ897p3SghDziuDuo+ZfimdvX6WGfF8fxhDzi+8Kljrk5nMpuyjSULqJ4ac
x+x6Kx/p+4OVqnRMWKIdzpDzsOHbd8zbnc0GrtXKc61eB3LurR3ab/maHNZi
5HB+5WIEQ87KesPbuKvmMpeg/turBTPkXPigz6WadV8b+Sm35vfIeUJnlwxj
p40WVV073hzzdg1x/uM6vG7skqfs6aID7SvjHhHnbRkdo99YvWHy47xx/f39
iLOl+9aCZ9XrjE4K61XDBzkHaZ20ifaKZDbBvScOHPeJOMdMaK3d8EosGzXk
1Y1o80jivDJt972LveLZkojNY1smRhNnteNbw2I8Etnb409PDe/3jThnnhoc
s/pYMnsyc72LS/XvkPO+su0m9bunsof12vyWUxKI88HzAQHbDqWxFdf6BoaV
JxJnB+eF7Wv2a9fz0c9q9hk56/czW9VtQQZLWTKqi/PaZOKs0WTE4W3fMtjU
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
eC4kzn7wHMhfwXMhcZ4B5xq+L+GcgzhHw7kGbwrnHIp4hnMN3hXOOYjzfTjX
4KVwzkGc7eFcg4tzDuI8Gc41uDjnIM534FyD+8M5B3GOhHMNLs45iPNLONfg
q+CcgzgPg3MNLs45iHMOnGvwsXDOQZx7wbkGHw7nHMS5Ppxr8D5wzkGcT8C5
BleBcw7ifBbONXgRnHMQ5+bPNGrO6V6JczvibLnmac05na84tyPOLu0715zT
+YpzO+Lc23JizTmdrzi3I87v8jxrzul8xbkdca6b9KLmnM5XnNsRZ6s3G2vO
6XzFuR1xXvDTteaczlec2xHnd+Osa87pfMW5HXHu+qpHzTmdrzi3I84Dtso1
53S+4tyOOP879qO62YTTvuLcjjg7m1vVnNP5inM74uz5vFPNOZ2vOLcjzuEF
fWrO6XzFuR1xjjrjmLVqrDtbr+TraDpwD7vpdPFty6I8tr/M3WzOo20Woa5t
HVp0m0R9yK47X+3ve2ey5f+Yndm+1Y816anrtWlvErs5TPniii9prGd8XNp+
FkPjQ+dH/tnv8oOtef29b/lrf2bZKsRU+hnHVrlHv++9J4MNHbnHeE7TrzR+
0zrOcWuHHDZs3YJudUNfM9e1k+OStkWzYWtycnQTMtkwzZTIX+e/0Xgrnz0/
XcblsvjASV6TLwSwG98Xn3Z/9ol1jziU5ZKZxVyXeO7Zw7/TeGbQbasOzfPY
myGbx481CmR6AwzfRK8KZNYm2tE1OssvtDQdvi+Oxjtfe+rmtCOPySWJ+v2X
BLIs15gdw73cmUvCMytLpzym26ava2z1dcizKrS5t1PJD3bJoGxQcEYcXX/G
w+veYEM3Nt9h1OjywIvEOT2J/cqYn8jMtrRr+Wh9MnEr2Bza86xbEnvhZ1Vg
mJRCfGxevXvY40kyy1+z0XuydhpxmPNt18I521LYuoAZd5xz0mi9iUdSV51W
T2UfxvdZ8GdfOq3L4FPdERHK2cyh7kMty+r7on5rqXB0m1GpTPOxV/9Hn9NJ
f7Be+qYuba+zlDk2f3IX3yT9YalLnR3Kw1n7/Dqdd7fMIP2vvjtOcloZyU40
aT1Gr3rfUP+538tfX7oaxRpePTzCZtwP0h/Vz0aOOviFhS7UPHd1STbpb+LY
32N0h2jmGFkSXBMXqL9xpwXPvSaksvTWOwaP/ZZO+hvUiUpSWxfNLqzw/LZn
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
iqvpu1HP9JEOh4uHfuIbDBudq+m7UI9uVIlLp4ufqM9BPZfj7e+8GHODX4BP
0hOy2LmxPDOe99KXlGv6VdRjnfdhlPrDBOpnUI910tfr6zYn8m5hK11qnidQ
T/q7POMr9ZL46mDVhJp+EvUM3XWnwb1FSdS/oZ5VwIW3Ak6kpy/o4IGgi/Ts
Ff3AKNBFenqBDj4KdJGe9aCDJ4Eu0tNc1GsJdJEeN4gbvhDiiPQsgX3iSbBv
pCdB9BV55rX7RnrWwz7xENg30uMA+8THwL6Rnn9F3VeGfVP8uzXIK34N8ox8
8j7EMXeDuKb3JlcgjvltiGt6b1IJcczZ4dq4pvcm9hDHfO3V2rim9ybqEMfc
HeKa3pusA9/hs8CHSE8PyHPuD3lPeoIhzzmHvCc9bSDPOYe8Jz13Ic/5Psh7
0tMN8pxnQ96Tns7gy7wf+DTpaQI+yOuAL5KeePBBbgu+SHoWgQ/yMeCLpOcR
+CDfC75IeiaBD/I+4IukxxvqFl8FdYz0FEGd4A5QN0iPFtQJPgXqBukJhTrB
W0HdID1foE7wC1A3SE8DqBNcH+oG6VkE9ZKL+knzrod6yUX9pHk3Qb3kon7S
vPOhXnJRP2leFaiXXNRPmvdlYY8d6x7kMrl0dpMJd0KZvTTc8HaKH/Nf3XbH
3mlZbGB9l/2HLyTS+BnjCd8u10tm/drbe5mNz6TxT4caHThtEc70kwub7OiR
S+NOk4wKqla6cMuIhivmuufR+INu5zbuPR/Fh3qY9Ot/IYfGJ+/WdJqxOoV3
/nXlrqNpBo2PXW/vfHbUDz5gcEGnkc0SaFyjqq7vE4M83m1ISHHRiyAa/5Dv
EJs1N4+vd3zU494zP47jvaqCWzzsmM0DG+rObd34O43vnm+ZfDkglQ/UP3Nr
ukY6jVcMHmvNkmJ4uKm7ZbPsbBoPg7+Z5pDa72leU/g9c4T70bg3zMdMYX4a
HwP6WAjopfHhsB6uBuujcQnWz0cBDxo3AV58HPBT3Af48mvAm8bFfnCribX7
Q+O6sH/8O+wnrbcH7De/AvtP430hPvgbiBcafwDxxH0gvmhcPXKi8z+XXZhl
cL+cOzbzWcSzvZpvK/JYL4+xLULi81ipy419PXZ7sWzH7Nvdn7uwbnAdF7/j
eH0iXMfF7zhe3zwqdkq3wJO+PmPG764538M+2UKv/NPhuFO+mvn3Xtecv2Kf
/I+vR/ALz9O+LB3OxbFPDjYc8UJj6Bnf9eWp02rO8bBPNp9j1kVDdbvFwrHn
d2+QrOi5UszHzn7TmVo9vwXOK+ZjD76bfK6e3wLnFfOxI3fTa+a3wHnFfGzs
5p0181vgvHszD+3vPCyP+YcnBu1p7sX+PX0r53lZEKt/4taEb855LKnv4EFD
rb1oH93hOi5+x/H6sTfTBs7c68WNem8yVk1WnE9GegFXo/BnN9edOmOBPFsP
Pv4zfaiV78sDtX8Tf/E3m3j0dc33Fjgu7svmwzz0fmEc8PIV/Oh554bH9pr5
fMX8tI8LO6tpJLR6wrdrjdq6YFI23+Fud+3n3O9sfpcSXZPmnjz2xSCDke9y
+KvWljOTP0extebHX/tHenLb6YOUhiXk8on/RJ26XxbKPgAXLjhRHIr7MgeY
h+H9xX2ZA8zD8P7ivuwgzMPw/kr/3/+0JEcDu47Dd0TS9wd0R3eeE6MptfO0
vOs+K5XG9R6qqP1cqClVbL/cPd8zj8Zv5A1t2f+2hvRJamR+PLyYxifvm7bj
yBV1ycazV28Xx3Iaf6L6TmXYBDXJO+XTxNU5lTT+fFHAWefXKlLMsvgPG8qU
JByPFX/j9zj+Uvwe74fj48R8OD+Ofxb6UC+OV4r14Ppw3EisH3nguNP/xUuL
xuseujzGbNPdgf+L846QjOC1oyLY1YvXRjks8qH7Lut+wf5d5xR2eYpWH7/+
H0jHi9r15bDWC3OvehVEkO5RD+89mnuniD3d/2D1pT1faZ1y+CT/V83L2PxN
vT0d4hKIy+rrj3R3swpW3mW6ekRAMkOOcc49P95VU5K+BF8MOLQ0jSHn1Bt5
zVWfKkvpbwNyDN5lMOTsFfYzako3VWlO0eLYj9FZDDl7DGq0JWuJmhQ2qWNY
ixPZDDnP6p00OnieOq0DObdyrNv4cyMNqYfZ+4rlmbkMOfe8cN/Sb7eGlNC8
77G0XXkMOeO6Me7+xjloVNOQax/DWOjTSQ83fXxHnK84rf156kkCixvtO3ni
9VjijOtEPjjfmKZBk+xG5LMxrfJDppdlEufe9zf1syktYse+vzG3is4jzrq1
9ytlpc4rIyPuFBLn0nFNdIc7/mKNPmy3Wt/5J3HWXH68yz9TKxn+DjkPfdDL
9MKbP6xRrwbKbaeWE+eXt/cfj0tXkmYXZrg9L/lFnNPEfuE+I+eYl1cbGo1W
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
9JzIvc1j2fav73Y8ffObbfzSxehkW2UpebDThRt5hTTe/R/1GQu91KSNo9Qd
Cjt8Y89PttDJ71fKDO5/0FlspyI9ro2fYhqfN33Rnlbf1KUtnkY+h59+Z9p/
VCrt5xSyNUoX7LWXqErGbse3bln7k8Zzg8dHrPfRkL5vLE/Ymh7HVGdsXrX7
ZBYrqrc6w7S7mpQYs7LU1aaExsNL2+m6TNQUzxXxbHvHS1rXGiawbkJnS+cw
r+LkEhr/EHfrjNsVTalozovWxroJrCTqpXLRgUCmc+OyVk83TWmruA7jcK9V
fb/MMjXp+K/rfc90K6Xrh4ZkzPg3UmaFdRuGjIzxJp67Cj5mfG/0ix3d8nWi
Y49K4vZgVtSw+VW/2QfrLL2eE/8Qn0YdpMPBTpVMfcSdljsPKknIodWNiDa6
PlXsVZ7DB5NeyhKuN1Ge/cj24B+mtWX6lB03lCVc17vKQ/ZzldWlp+K+qL//
3KAN3fP+sKDM8Y/V4pQl1L+hk7N1/cynrFmbVx+bDfAn/VNN1nqYluSwi2of
j85rpCKh/hHtyx67GeTTvqF+8JV8tuzpykUDtqqR/tA+XkddbxWwq94HbB2s
1Ul/z7edrcpbFFJcoP4w3X2N61f8YdcvhD0zS1Wm57vOUqGx2tRCts08NMTO
SIP0/3Zo7N60y3VWb7F3qFypyNPHIj/7mg4fm31IlfRXCd/A/UT9NsIXtor7
o/6XIv9n2LQ/fkZDk/T7CV/COEL9+LvizIVfx3XVIP3HhL9YHbjZ8GG2Jum3
vKf9zWjkSb5z3qzjoxYq/Cf/yIsm991TufLqJvPLPir4X/1zyers4HReLPIA
9UfNNTt05UgGvyI4o44xtf6dyWOVFyobddYg/Y8C76va9c7ieSLPUD/qQh2o
/0iz/GUfD2Zx5IDX3fB/0KrJw8f8yQS7gU0XKXz1em09KOHylXTtgTl/KP4D
37ZfsMGmjDsIX0H9L1fNMFntVs4x3lD/Bg336x89fnEVwQH1W9bLyrSw+82b
Ct9C/UrwPbfKHzQkQU+hf++Y3a/3v/zN+4l4QP3veicGNVjry9/DJ+nnoJvf
hHWQfqFbfgProPwVumUfWAfFgRLoljfBOsivhN/KQ2Ad5EtbYR4+6avrpI/O
qqRfxLG8H9ZB+/QYuPNbsA+kX8SNXAxxRPpF3MjXIY5Iv8hPOQbiiPTHQNzI
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
s68NbakpPxDxgPqN772sSJkbzDvDpyL+QbcMdU2F9L8F3fIWWAfpF3kij4B1
kP7JoFvWg3WQfuG3cj1YB+kfCPPILZx6FtyzUZw/iziWW8A6SH8WcOcc9oH0
i7iRr0IckW8L/5TrQByRb4v8lBMgjiiORdyIPuAn+XA+xI3sD3FEftscdMs4
H+oX+SP/gjiiOBNxzxtAHpD++2K9z0VdxfuJvJUPi3qH+oUvyHNE/UT978W8
OqIOo36Rt/IAUR9Rf3+IG1lNXIf6Rd7KzqJuo/5E8B1+EXyI6uw0EQ/NwUdJ
v/BNeT34KOkXvin7go+S/n1iX+6Cj5J+4ZvydfBR0i/ml1+BPnrOFb4mnwEf
Jf3/gO/zvlAHSH851C35JNQx2k8VqFvyMahjMuqfB3VLToU6JqN+C6hbciOo
YzLq14O6Jc+HOiajfuGb8gv4PekfD3VLVoE6JqP+jVB3eUuow6S/HfQrXPQv
pN8e+hJ5I/QppP8q9B+yrdgf1G8OfYYs/Jb0y9BPyBOgvyD9S6BuyUpQx6iP
NYS+QW4u4hf1n4c+jK+Fvoz0p0Ifxp2FT6D+TtBvcdHXkP5d0FdxjAvUXwX9
E8d8Rf3noU/iMdA3kf7GcD9Z9BGkfxb0SRzzhvIXfsfnQN9E18c93vCj2b4w
H4xHvH7ax8Kzj97pSk/W7Ovt5PSTfGlVp6IJ9/fpS7O/BTxoaVhKvnRieaH2
p1X1pRG/Tw82ty8jX9o3orj0o1ED6efwqQv95peTL61UHRi7yKWBZPj+/pHD
Or/Yf/JCwhNL1DMkf8XGhjENpLmhdadumveLfMnjS4eoqbvqSA0XrTf9NUWN
/N866ILHnzna0jil0Uap4erk/4GB9s6OKTqSxS27h4fqapL//9u64TK9erqS
VtsRgSqlmuT/f3Inu0ZF6Ep8olnrSWe0yP+t7ebWnWWmJ111LQnflqZFPr96
85IX3WYqS9/Ph3wecUWb9MwqqLvT7KqKtGW3v+qZG/VIj2FxxeOxbqrS9hdN
09eN0iM9P++45DdaqyZ962l77/1QfdKz2sPhktbv6nU+m/Kq/JGint5Xvaq3
iqlLIQ+dFyzJUNTNBuqzGy6sk8M+PEns8jNE0Z8oG4W87d45j/XVGxb+Tl/R
X5kOdD4xaU0+exUfu+iuqqK/suUZL1q3KGB9l01eethH0Z+cXTizLMqpgF22
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
p7c6v1bBv937HZlE+zmX67IhnOBxeL+qJH9o2Oje8W9U8D0ppAreW4TH8RPl
lcT//yIVZ25euPZDlV/S2dh48c3661HA8bmxurHa5lSy9mP8cd/qROm8z+D9
oH7wnnfU+3DzqSbpbZT4rb993VZm1Uh6nFZpbRhuHksWcNb93mmmS3pM4P0f
+F4n1JMb6+Md7fmLtEvwuK10S5lHPec7+rpcaBVKln97fXz0sCxJD76/Gd+r
jnpGXNXZP8cljah2XPUo1llN0mMzuOe1DaOe0hn79+QGPPqr5wi8h+Oo+B6x
v3q0k/xavwr+Rpee9GkxR1Nd0pPSrqDmtkMk3b+y0CxiZYak5zO8PxLfY456
lkQ7N0pvVUpn3JxZWJCiIun5vf3wYj+nH1Rhh/gp6cH3dsTAe5BQD23ZrumW
1QqCwD4lPfsYDprGcEl68H2N+N5w1GPCcAjLGC4pXibML9Se+UnSA36h+N4h
1AN+ERozP0l6IE7UkcWNoh58P2JreL8r6oE4CcNY3CjqWch4Q08zHkl6vOG9
G/g+ItTTnvFGyGI8kvRsYDymnxivJT0v4b1+wGtJzzbGYwq8FlCPDstDCnkp
6fnN8o3ie4pQzwqWVxTyTNKz/Vfg5GGnXf0h7yU9x8T31nn74/uTUc+uQKcA
v17B/iZMTpDFC3lNZH4m4GcpXmqQD/0gP1AP8jhFxh/wM773SdLTAfIzDfIV
9SCPgddE5meC9UOyC+rFA6gfqAd5LM+vGqhrrlDnUM9GqF/lUM9Qz3H0iyzf
NcX5fJc5rKOoR6fP6o2Fy2M58LOk5wzwWF5/qiHucjwzIe6VMjwOwOOFsnr4
DHjoJ/PPBuDhE5l/oD7T9bL6DPWUmsji1RbyokgWL+RxQ1l/wTztKOOPCuTp
ZBl/kMejp3ismrr+CievG9ZQX+V1oyiR1Vc5Huh3Ul5APaX4fl7UYwp1bB7U
V9QTDv5ZA3mPeqCeUqyvqOcV1NUA+EQ9ZyFe86EOoZ6vgAPrK+pZDjiwvqIe
Z+DPMqiLqMfp374j6emYMXr2ursqfNGalZZV174S7NeNSmz27xyjwruntfyq
dChFOp4ZY5Oe/1yJn7vdqGSs5k/p+LC3QQ2nOSvyb27csfNvVS4dXwL9rJOs
bgNufpWsL4Q+btg6cnUtCYFP1HMl74uqYm4lSd/hYVB/dcHj8UDoT0GyPrUI
8KUDXpRXcZpw1GJXLvE6V7N+3HVl6fgCwGEq65saa5lfOoGfUP7VQZ3rzVoE
+qMf8Xgl4xmR9/GrzI9UF/yK8loMD30gwzMe+pOK7LpCYP6lI8DfKH+T+Yem
yvyTD/1Jfp2TwuQEF/Aryg9neoUgWRwfQ38yk1133We4hcbgV5TXY3YKV2T8
+QX9aa7sOhD8KLQZeLBhz8OxHMp3YH4XtFgcKB7H/hRhckXb4F24P+qBuAo1
jsyvKA88EBYzXlDZdamwFuoo6skA/1wEv6J8MOMlfQOfeNwL/LMD6ijqCYN4
GYNfUd4UcGQBLjyeCvHqCHUU9bwE/kBeSvLK4Bfgp3R81L/8kfQgz9Rl8UoD
3lyV8SEUeDBcxrfbEFc5n3+t+QePdHw+2Jshy8fX4McwWb5jvBbK6gzUK0Fx
7b/1CnAIN8FPcj6HQBzw+HWIK9gt/Ec+SscVae1Rr4Mq/PDLNu5DYuOk8xpr
BQ/9EKvGvzQdv/K5bpLE58Shu2qL+irx5vmzE5xblEryL43L3DpOrq+7i/w7
rdtcLsl/5Tan63tXk88ntk3PqauT5NsrGT7QTa8jh1r5B7SZpCjl7yfnYblf
wgvJk9NFWyIH/K0be5acS+kdWEyKZi/YlLHx7/WAY9yAnwfuvCKDfcnEg8Lf
uJQfnjS3/YcQsmmff4JJp7/1ylW9TTNllUzay3xgs6xff/Ub++lbP7yXTX01
y7/4jP9bl8brN4rR0flF32a8MD5Q8rf+FDTrFrnpWxV1OOzXVi/r73XFGyYn
TGLfk+w9zeSEYvY9yT89GQ7BneGS5H0YDmEkwyXJD2J2CoeY3VLcwU4hldkt
5elj5kfhPfOrJA9+FHYxv/7t+yxONJzFTZK3ZnES2rC4SfKbGQ9oEuOFxKt2
jAfUn/FCytO5jGdUgfFOko9lPKPDGO8k+YTCR9cK+wVhP5Lk8fpSAf5D+XH/
3m9KeiLBL+gnPI78eAV8weMD31T0u+ZTKq0PbN5zauoJUwP+3pyw8d1OlpBA
uxf9XyyMI3gc5r9JeHL7DPnSYKYe7w37n/fDXAU8ngOfKM/WSerzp1PcTGVO
n3d5d6Svy5FKMgxw3M9QjevTt4hEzmn4M+hLtnRemKtGYM6MpL9Tg1EWXQfp
8PGzRyfXGGrwqKdq5gCbfhoZpGzxBcuux4slPfmwPxnnTqCeEG0zftlpFf7K
qYYDbBbpSnq+lFw4Vrv5K6nqW7XtWZ9SSQ/MMSM4Lxb1JPS0zyjuV0y8Jtae
ORmpL+kx61WlFH3yFd3slFow8exfPc6wT7i5OOfkrx671YVbPkz7QTvsNLy4
rb+BpOfMttCZ3hU/qN7Xln0f3f0p6ZkH861wzirq+ZXoOeRcsIKQHxvSMmyd
nqTHg8aPHTAxn3qyT0kP7iumMKcB9WSLn9oCi6e2pEeX4aBnGS5JD86Twnmf
qAdwCJUMl6QH/EJ3Mj9JesAvwi2Yi4B6OjK/CI7MTxJ/qlmc6EcWN4p6IE7C
Fpg/h3oesjgJsSxuFPUAb2gF45GkB3gj4LwE1HOV8UYIYjwSUE804zEFXkt6
JsDcoTiYF4h6khiPhfaM15KeVywPqSfLS0mPFezPxTkKqMeN5RXtwPJM0qP5
eVJgn3aP/SHvJT3jxLk6gj/Od0Q9ZiMmOiWWf/Y3Y3KCLF7IayLzMw9+JjI/
8xGQH6gHeXxGxh/MT/CzpOca5Gcg5CvqQR57yPgMfibgZ0nPD6gXbaF+oB7k
sTy/cF4M1jnU4wX1qz3UM9SzDf0iy3cN8flBNw7rKOoZ1KWu1/bqdA78LOn5
DDyW1x+os1SOxxni3lGGpxx4XC6rh2OAhwky/0QBD7vI/HMPeBwlq8+4Xz5f
Fq/LkBdhsnhBf6GCrL9gnu6Q8QfqqZAl4w/yuEHjhrNyvrtx8rpxAeqrvG5s
h/oqx+MPeYZ6oJ4KWF9RTyHUsRKor6jnAfjnG+Q96oG5NxTrK+opgLqaDp9S
HYN4lUIdQj04vxHrK+qpAhx5gAv1RP7LH0mP6799R9KzY2OKeY/BerzD7Mou
U9WTCPZr+3cX9X6k6PJmX2M1FkYWSMe/NYmN+DGoEe8QaJWzvVGddHy5yaWg
yNkN+f0Ll7VqtUWJl/o+9LPrsroNuPkaWV84sEHb+bGlBr8XPlGP9eWYwz2c
VfmDhq/bLm6iLR3PgP6UJ+tTlwDfV8CL8odvDx+X/qOcOHY+GDVsga50vBRw
FMj65jPwC/oJ5dsFPrU9Z/jWH6938Pg+sFPexxcwP9JT4FeUt2N4qBxPOvQn
+XXFLuZfYTX4G+WPMP8I+2T+eQ39SX6dY8HkhKPgV5QHvcJuWRyhLggxsusu
B4ZbcAS/ojzYKcyV8QfqlHBVdh0IfhRCFM4u/9wsg0N58LvwgsWB4nHsT759
5hvsqo7zRz1OgGc/+BXlIxgPBGfGC+k49ksPqKOo5xD45yD4FeWBl8J++MTj
2L+xn6MeyAcB8kOSPwY4ogAXHg+AeF2HOop6TgF/IC8l+cfgF/QTHv/xL38E
mX/4I7J4HQDe2Mj4gPm8Qsa3NRBXOZ+v/4tHOn4W7I2Q5aMF+HGfLN8xXudl
dQbtvCerV8i3ZeAnPL4S/L4X4iDVAYjrfojzf+SjdPzQzojXaw30+LhIswYx
gzKl8/YdMK2Pp7YBb+5s3GVcarbE5x2aW9ycTHX4/i1apnoGKUh2TVDbk7wj
S5cvmbL9xqFHSlIeqWjEbTBuos4rTtLM2/xNU5Lfdj/TODVQk+/WLy1j4OcG
kvx3z4XOC2yrSPbuN/2OKfz1f+iVqR2nn6klrVruWtAk5m8dK948d2S4wWcy
z+yEnsGUv3H5WJA5IWz2F+Kl2+r0q0l/65V3nNE5pd4ltJOG9YYg17/6+441
vrBudRndtMRlwSjHv3UpfdgQrWfaKoLroSHPLPgGkrw5cen3cJGakB9/fHCY
TSNJ3oXJCZnse5J8HpMTdrDvSfIdGQ7hKcMl+R9wCAMYLsn/YKfwjdkt8eEh
s1MIYHZL+Q5+FCKYXyX51syPwivmV0lehcVJUGRxk3jSi8VJ2MLiJuVdX8YD
AXghyRczHgjAC0m+hPGMAu8keXvGM9qH8U6Sb57eebGD+wfsR5I8Xl8qwH8o
//zf+01Jz2PwC/BBOg5+428BX/A4B88JrYPnyVeLz5cXkvULIjfNbLJv5IBP
Z9ynt94yMky8/i0k/Wa/r/PyfEM2Hvlwwmm/Pzmd+br6Sv9Ckua1izOd/pWY
k9Xaf/Y7vM+oC5k8sIDUwvNJPeC59zbic/B5ZK7v1v1/np9btNyn75/nY9tM
SDdZ0iyXuCf4aP55vurF6PHZf55TfrPQfWuwSjbpDc8/vYfn8D+Knxkk+LVT
kz/P84WJcjHEX/xeKtkI9gwH+9CuzYC7L9iB+LcD7lSwA/H3Btw1YAfiXwK4
54AdiN8fcKMdiP8j4EY7EP87wP0K7ED8bUV9cURHlS7781wZO98P3EdA8Dkx
ts8hjnwQ8SaS14odbP48v7ZbtCeSOIj2JZHbt3Qm/HkOzUK0/wNZA/sr8Dm0
k6K//MlbeA7bAp7bPHZpvMf01pYjfe6Pnld+bRm3HuTQnwPmepTtu9p2+ECR
J5YST2zb/PDQ3bSV2wTnQz9vnVW3RMF0D7cN8KGftY/ca7n+liXXE+xBPx+y
mvzVOcyGWwz2o58b110nWkpHuZfgL/Rz5GnlwJtlx7kP4F/0czvrvR/jL53k
UA79vBr2m3AynqxjPKH9ZTzZwnhC02U86Qb7TepkPFnIeELnyXjynPGEesh4
AvtMaB8ZT14zntAQGU9aMJ7QRjKeNIf9JjtlPAllPKFhMp7YMZ7QOzKeLIP9
Jq9kPAlmPKH7ZTwxhucbN8vqyVpWTwKNZfWkD/MvNZfVE8hDuktWT6rhOcl+
snoym/mXLpPVk7vMv5TK6kkveK4yXFZPgph/6UdZPQHe0ymTnz92nniGQ7uA
39RtrUts9x4uHOIHftNp31Lbn6zw5BA/8JsOveU46tTTxxziB35TTmHCnel+
vhziB35TXqm3RYedzyX+Ar+pTRuFC2qJ/hzih79Tvf1qt6tyKIf4WzN91M7s
+ssLE4M45Elrdn7ap+PtOO3VrzjkyTuGl765PrDT1LHBHPLkFLOPburb9O6R
jGAOecL2JRXSjv2XtfGaGMIhTyDONNHwtb3dhhAOeTISeLIU8k/yJ/CkO+NJ
IPJkIPBkBeQl+jkDeLIR8hL9jM/Ttoe8lPIReDIX8hL97Ak88YG8RD/3A56E
QF5K+Qg8oZCX6OetYM8wsA/t2g64e4MdiH834E4BOxD/AMBdBXYg/uWAexbY
gfgFwO0GdiD+r4Abnh+W8H8C3Mh3xN8J6kkDVk8o8qQT1JNt8Nwx8uQr1JNg
Vk8o8uQ81JNbrJ5Q5MkmqCeB8Jwy8uQz1JM98Jw78sSjwMq44vo94kFe68ek
3SBHVpd0blpUSMa0LegTSoLJsR3als2Nn5KmLa3tT9oWktt1mxZ8X/CZvLX8
0MnP6BXptNDl6cnHBSTu7qnxB47V41pcZNkq/g0xH1zk8/JAPtm1bPCRRb2S
icPwACN1r6+kwN734JrqbGL62vPsmEspJGvd+NwHeyPJ0OkVrbu+yCR9d899
ND0sjXzP0VcZVBdFLHI+5B/rmU5UNQqMdnlnkHU3jw+2HBxLJrf61i1gYUp9
PbbZcHRuFhF+t1BY3TyeKMSMavDsSiJ5sGmk1Yh72cS9X8eT4bcTyGzL1OQN
baKJS2MdY48HueSDvbLOl7IkktzcI8LsiAeZZnziee23h2QoF/xiuNNLcrfH
rc1mQiEp1T6x0z31NZm9Y6pydulX0rLXzNHlegXE551avt3iL+TZz6uB3fUT
ycGLHxtb/sghoZqmgw3GfCOHhaIjHex/kGUNrwdeDMkivaL7H1qR9Z10fF6d
4/09lehsKYssnZdBLiy+4jqu+RyuvPe5Ott23mTTir35TbMLyZXkHXrhZCNn
eupLbcn7MOLS/+2wPtsKyUytDSW1n3ZyDydYFY5N+EqapbmtbXiu/jqw67PN
hsMPcMKPpWHfLsaQ8ODXC/fNzieqka0eF5Yd5iZNutftrEIqCe2VHz+GZpOF
5k+XjlQ6zrne3+xUGZxOjtIHI7vtyiQm60d2GR10grtzfWvMtFFZxG/Ozzy7
pDSyZlfVuw7dT3GD2mYNtTfPIUMevkp/ppZC9PuPmdNukAO3PO/wpPuT8wif
OLXyRWYCMRqkcDJisyNnNvrYvWdv84neWaUndEUUiTXquajWxYk7cjV617iq
QmIaYN6mrONt0mtg2R1rq8fU71iH8y+nBxLNvr8zmnoXkmkT2y/ucjuUHptV
01S4HEEGhpE1WwvySffH7dSrH3+h/c1P6HV1SyQj3/QrtPfIIUaG3MxnTt/o
78M55iPDfxDjGZ9dttpmkWc9728b3ieKhnxd/71R4zRCO6seW6eTQZwc+LOX
Z3rTA1VfLkWbuBFPw2iviORCUvv1+fqq8tf0mn9Cy7jFz8nmXO7umSX1x/u8
ufyrLpxenrrovN7NYLLVrPPtebsKSHbJgmf+77/TZ+carjo28x3J76Q3VqdH
PiGJXg6tTOKpvpFacJv54eRVgVd0gk0uiQ3UffrgZTJdUtvVa8nMCNKlMLC2
hU02CRnzoTbfKJUyfN9JgIg7k6jprUp9aJxOOdGeaNJWtDON5J1ceduoaSbl
RftjSV/RLz/IsYgjh3p5ZNHW43w3fLOIJ8s71Ew73T+BRF1Z0DAhN5sOFf1Y
f38g+vc7uWC9fYdRXA7ta14+x0spieyaUutMz38mM9t/sk3ekUt1xHgkERMx
TkHkJj9j7XifXNryp1O3nbVJpLWiWezOY84kf2zIoK8GwXSZ3fjoq3MvcQbn
jK0PuRaSpUuKB1k6htO3Aa5rk9vd4T5cejzkz3PhyowXdHGbgS02fnvAbQG+
9Gf8ol7XOhdM/f2UGwq882Z8pAdLlCOa33rBuQNPbRh/6Z63Fw175wdw7sDr
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
Wabh6nzl8XXzAjcmE6UHPw8v2ZpHIm8FPN57So0PCRtW+Ukrh6gcD2h381Q5
UVzjfLx1NxV+/prthVdXF5CpCokrB82sImN1fV5tO6vEz/Ds2X9S72Iyvu+T
3w1f1ZJEtdpTFUEKvNZLh0dr727l4i/+WjH2yQfSvLtG6ZcCdX7thM7P4x7a
cqOmj31SHv2DnFpdtCX1nDrvsuzx0wODHTgLi6xBmVPyyLlu73W1CtX4Doe5
1zN6nuc0dj2xS+pXQpaoe4Qu+q3Kz7Nsdz7T/Aan5p76Jv5QDckLif+x3USZ
3/tu7xcvRRfukePxwdUzFXh7f+OMxIuK/P0eS+4V67pyjeN9tlb1VeKv2+mF
Tjf5Te5uHp91OekO97166LAN35T5NQbVDwy0qknM4nO6Mevucv5fhoxXHKrK
Tx+ao/hhczlpOrXF8gBXd86z2/tPk+ap8ZvKNhw0sSsmxbVmd6ec8ZDmieCc
LItdXbQP7PTkTHafbu5Trc43C3q+ef0zf7IqfYDFKPKOzgpd8VX75Xdy1ce9
2DRUnTec8mP5kqpkatV3ZHqb9flkksbbMxHb1fib04utfp3IoWW7opSv15ST
XxXlT7v9VuY7t1tYfSa2gFqFLfNY4ldFeh5o8eLsSiW+Nt/b2WxVMe352PRt
09Z1pObzhZsfTyjwnwtHb06v/kBpspPWj5cCMdbVD7ueVX/ewEZThlsk0ze2
EQG3VSOIVbmRau+j6nxh1OuDOy2z6UffnulG5glETW10iGK0Gl9yOWj5x2bF
NGOA8aL0gFSyptYzYHKyKr96WoHO3OFlVG/fSNs+h7NI68i1Zp1dVHjH9+Ot
DhtVUqOlHub21Xmks1lztfPtlPmh2s6laW41tFbEV0QUCv7gVuRPOjeOVI/+
TXuJ9vwkvUQ768i2DrdGzDJVFKpF+0uIm+iXKnIo+2CnFEsl4ejuHnOWLSoj
VoaHb+eklxHzI8Wf082VhWmiH8tJC9G/9efp1bzlrI4qwoUrUaFKoyvImSZm
JiaPMon7tftrsy6oCDfFeFQQczFOsUR/2JmPA8Pqj1/u2LZpXQUpPab98Uwn
b3Ki6WC/59fiaYn7vWul/BPOIP/a+uUv1fmNjBd06cXNQ02WhUp8Wc74RVfe
X3vRgnzhooF3zoyPNLvATvvbrwiuCfD0JOOv0HB34JGUbd+5x8Brk85Xciaf
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
gvFXWLHybQjnk8IdBF7HkAf9vl6Mo3vSDQyd4z9Th64Z/qczDPiHebeOXeuU
T30PXR9QEZFML2zT7bn9lAH/boLm4EDdcrroQMmkK/uyaUfzsNmryvT54sMH
VrpOqKU9qc3Gq5lF9JZby8ApbfX5gb/c/DvoKgnqefuNrOJK6Xvv22Yxunr8
mVIrx+mjVYWdkwc34ex/0cGl32zzzjXiz48646vRV0PQE/O/mrK6UH9dZPDd
Lu2zlvBCrBd1dKdYRzT5mk6hzbcaNRQ+i/VFQegk1h1VXjPk7vwpqo2Elsrf
T2VlKQp1Kuv73f5Yf/3Z5kq663hdoYdYp5SEKrF+VROjeY9GjPyuK7wZtHuU
1jZlYWPcwYtvXv8kC8b8Xn+7j56wQax3ysJ7sQ6mkns5/a76mOoJU4u9Ol2u
vw49/CL1aF72Q/L+3Ulh8JcYuux78Wi6KIPGJLafmuVvwC+5HK0f7plOe69P
mOAV/JM2CVgU68Ib8Ppi3S2gLy3IoMatqugcsR7r87Fi/S6nT6JPHj6eqCyc
Euu6Ll8l1vsqSr67b0vPVRM0xT7QkH8o9odaGmbW0WnPQ03htdg3tPjwa7oZ
V2++J2liHadknFjXDfiLLN4kg8WfYNyN32w0cVizkcuD+oL1ZgzLc+rA8l7K
9zdMjn78OrmP47HrUn0qYvWajjJ/pW1k48Vh3Q5iOOhdhosinnmsv9JJrN9S
7LPR60f+mt+2Af9J7IsKvL3YJ9X53q7exQ8G6/DLP/kdv75NkS8+MNu7gZMy
b+LTbnJgbiP+h9hflfjJYr/9TZyKK/eqXqu/Hhf7cX2eiv25nPTYcznqoY4e
f0rs38r8VrGf55JhI7vMMp+kx/MiDmV+nIgvgmTD/MmwhG3Wk4uDSJHKs7ri
CgNpjjXOx8brh7cglwXfQ/lBIt9/kxB1ywS6QJu3EvNAg49iPOYrGa+hj6ry
HRiPeVXGa74G+MzyTInf+jJ+k/GaRvxAMf8UeNaHlfhHjO98GfCc5asSf/z4
/XFdN+nyG8U8riQXxfxW5vMHBmdGFejyVMz7IuIo8kKZrxng3V2F0+PPibxJ
IrMZ73l3lgd82nPGf37XYZ9WwmMO++gj6Kvrx2wdodXCm5PPGb5jXf5551Af
DvuxLvTn1IK5TqGNfblq6N9noZ9nlN0davzAl8N+Hwr9X1VjSlXab1+JZwVw
vRCQmLz68bsd3BsxDl8k/2N88Poe/x3K4kVzZPFyEvvMb6rsvVW94TVtPlDs
Pxr8NNY/BIH1E/4E9BEz1j+EaNZP+PXQRzqL/U1JiNTdOXLW2UY863sK/HDW
V4QTrM/wltBflMQ+qSzU7DhqsfWALh8l9s9fxEDsq8pC44C549tX6fJ1Yr8t
JLZiXioLFxumL+w1So+fJeZtHDnE+o2QwfoP/9Oe9R0lZo9wldlHAsCubwyf
0JPh5c8AzmqGQ9BkuPiviIfhEJoxXHwp4LnAcAh2DBdPAA/kA30vyyOc+6kC
/MC4QPzo3iaeseWpbhzKGzGeCRuClL85HUvjngDf4DpMeNo1cHJ+43SuC1yP
wXWY8M5sWsmv0xkcXo8B/4ShX5K8sldmcshD6LfCyFqvstVCJofXacBLwcfb
Q/3FiiwO+Qm8FC67TWjSQD+bQ35CPxc2tDzVtcI4mxvL+j1ezwpBDs4D3bdl
c8hbqKPCy3E7Ly20yubweu8dqxdCd1Y/qCXUjd0s/4UrrB4I/aAOnGB5LrRi
eS+shnwvZHkuOLC8F15Avv9meS4cZ3kvHIJ8z4d4vYL8QP/nQ7wqYT0G4/UB
5DLgeygfweq4EMHquuAA9dyJ3bcIrdl9jBAJ9y9rWH0XurN6L5RCnVeZK97P
CHbs/kb4Cfc1GazuC5NZHxCmQ/1fyO5zhGR23yNowP3OMdYPBAfWH4Q66AvN
xf6sLMwvePBr5n1dYZ7Yv8vIWdYnhK6sbwgW0C8SxT5fr6dN6dCfTfUEQbwO
yCbjWf8QBrN+IiyAPjKZ3V8Jbdn9lvAK7rNw7rCRfb/ieyYKPGnQrcmlTur8
TpjDfDCiJKqjtSJvVG2oNXFB/f0ZzE2ecslqxZh9SnzArIUzFl2rIzjveMjE
pafShyjzSlNeLrnYqZxYw/znpQMOx7s/U+Y784t0dD7mkPkwT7lQjJMy/xHq
ZQvAAXOOJTxWgAPnQyOeaYAD5zkjnmGAA+YfS3iWAw6cS414igAHznlGPMOM
dg/TqKvvLyIuXQlPdN3UTzXTvTlLEZeehEdnmUbfNyt8uKkiLn0Jz2uvHN+y
/r7cUBGXgYSnTdKyslTqyy0TcRlIeLo5lwz7qPZUqjuIB+IkzYtGPAeYf4Rd
Mv9MZv4RcmX+Gcz8I3SW+WcJ849gI/NPAfOPsEDmn9swj7qVjD/bYV6ztYw/
OC/aRMYfnFPNyfiDc5xXyfiDc6pLZfyBOAnr9R1+9/qcxiEeiJMw0OCYdtrs
DA7xQJwE3UfWm33PZHKIB+IkZJdEV7kczuIQD8RJ6NIjPuZWl2zuX/4YCMNz
B0y7Y5HNIZ674J/GEDfEswf8sxfihnjywD/jIW6Ipwv4px/EDfHYgn/mQ9wQ
z0LwTzbEDfG0ARw3ARfisQEc2wAX4pkBOLIAF+IZATg6AC7EsxpwWAEuxANx
EuYCLsSD6/iwri+t50fCOj6+pwnX3/D3HnyfC66/nYZ1fHyvDq6/4To+vjcK
199aV3iu1/B6Iq07S+t+UWavVyV7S+vUeN4rE5dHBn31kda18bw1xddnG9r4
SuvgeN5l303De+b5SuvmeF54H4CwWWYvzu1/J7MX5+n7yezFuf0ZMntxzn8b
mb1r4byrYb0TzxsD5w365z1UivxZOK8XrHfieR3hvHGw3onn3Q3nbQzrnXhe
J9af+GjWr/h30KdOnfGZWdtfj69xCFvXPl6Z9+qkaf0wM4WsWrR/3JVwX2k9
Yjpct7SzzvRYmuTLrQiKuNL/mwF/QnvSrIUpaURXY9BIh456QtniFTF73yvz
5yZu3do3PoM0yd/QaWZLPUEn1sSiLEhZWNR8rW+ryCyyjd1X83PZfTYfBPfX
hkyON2Df49eA/CG2niI8Z+sr/DdYVylk5xP02Pn563BewCd43po2XmtqNncO
cCo5inYKJ5ndgh/Ym3GqONTq9hXyoFV41yY5DuTu0UV2Gb//+3fGmZXvvwas
Xcht0Ky4PLLwGTkU7B/Z/Pd//970Um/+988uL2lzcd3nIbERr8sNeBPDY3lW
44Lo5ynK+jbF3mTab+fdtrX/rUfV6NqFxbfv0d/ifdcNOku8HzPgF87aP7BD
rzd0yy1bX+ecl/TFpq4H2lb/9+8aR9j3iX0zUR9BPZfZ98l2po+gnjjxvuEh
dWB2SPjTGG66jtkh4X/M/EKba3g2Kjh+mkP/6LcR/Ut1HUR/U/RzXXnv2oCW
cYQX5zp9JjbivKdc0pDNXSLN2Bwm4gXzl1zF+YiB5P6nEVmGyu9IB3FuYiHM
2/tA+J2qS8m9aDJUnMeXR1QX/5kLZ83VwpwxnFd3gaqs69/AiXsH8y63wlyv
aeJ8TUqjorLu7V74nvQU524WklniHLiPNCE7nXaZFENainPi8gjMG6NH7X+F
7DLw5mAeGakT51F9ooXHZ9/Ot46lIeK8qjxyU5xDGUcKnv10uXsnk5iI8ymT
SUc2/5FsZfMgyQOYA+kvziWNo557R3eZFpFJGovzSpNJFzYPlDqz+aBkDcwF
BTkaxr5HdEHeHeZxbfjo7r39QRDHfv9IJqUMB73EcNHJgKe6WYcrp+eUkufi
87iZZLT4nK4KP5Q9L8s/Zs/Pkgh4bnaPuJ/mOwkN3N7M1CaVnBX32ajz58V9
DOmk0u+o49ZDP0m5uM9BlbcT91FFUdO0sZ7RtmnkjLi/Sp3fJz5Hn06tZqn7
J5T/JLbic/aq/Dd4H7dr/PiXn59Qaf/cVPZ8N1Xv5rG077UPXADsw+smPi+c
QZ94leVu+1FCB4jPE6vyZeL+pFJy8eaT9yP8FfnG4r6lSnKO7Qsi09k+Id4C
9ge1FPelldIfJkoZFomKfENxv9ov4sj2g1FFtj+Mt4d9YclMTmjPvkdQHvAK
Hz+ZJg09m8Dhvr/LDIeQz3BRXcBzgFz7Xl6swBeJ9z8lZIV4X6THL2T3J7wB
u1/hF8J9ykpx/TKFuE3SIgWjiki4uK5pwFeL60bFpDRx0PhG3+tIe3FdSY8v
EdetU2nB+mGpds2KyR1xPduAXyuuW/ykVslPT2+78ptsFtc19Pi+8P6y/g1f
hs7b+E76vSKH3U8LRyvsK2dGR3E74HePX+L9WQk9p+cydqCTgqAg3r/p8Ww9
WJGvXv7NXc+hIa8rrhOr8AyvMm/I1mX5NbAemy/+DqAofOqzwKrtm4b8U/H3
ARX+Nlt/F6LYejxfBuvw75mc8JN9T5IHvIJC1JZGC+9kcfg7i+IKEYfwmuES
dACP5rZN2vTRB+KgdjbooKNAmtCJE/7Uiah489HHx23nHMXj4dJxdSZPz8rk
Wd7FwXtbw6X6w55nyKQP2d/hOZhkAnpp6Ig+X5Pa3eFQTwPQf4Lpp3j8Aegv
FfV9pqhfWdSXRW/C31H/Ofi+KuhDPZ6Ag+H6LOF0Ans0wB8orwD2eMD3UN5Q
/HsiMa9N/R4QkgPnCydqUId/y+rwacCjJdNf/Y89f/XrMv10m0w/6KWKTf/M
2/fh/vVDOL0LfsDj+H0DwIt6btZd2/qnLzQGHHj8MXy/FuKG/rwP+Nj5M6U4
3v3H71nS8a3svLS57LyeUJ83Qn1G+R0grwl2o7wC6PWQ8ecOzGUFfdJxsIf2
TzpJ/syxRD0tQe8WOA8eZ/t0SpGn0ryWWLFuRZPQc44THQ6nY13j0U78HspH
MnkaJpOvAT8ekslDXaQesjoP++6ojTjn4ZO0z0wVeH6Q6aF4fI74vQqqX9d9
xWmDv+87RtxRYMeMf95brMQjfun95lM8Vk1df1Kq1yj/X/vdXjP9NEGm3xLw
QV5K9r4B+c/gJ5S3BvmKf/ykAu+1jqYh8D2ZPEE7pPdKw35zfD8z+gH9pSiT
NwB/zWL+k96/bAjHJ4Bf8bgpyDVmf5f0TwW5JrLjLI6KwmGZnwGf8AH6I8qz
vysJFoAX5fF802U4j4Acngfl2TqzIs/4XCK9r3OQ2AfSyJ3OHdbtKfj7vlHm
x1KSDd9D+f5MnrrJ5FldKIH3Zf6Vx/d+DpH1TfjdSAgSn1OK4VCerYOX0iym
R3rf5Tbxe8rCasvpbuUv/r5vC3EPADv+xa/DI378/YW9f/T/bRq8/oOpxzVf
swRi/n4LNPOh5h5ghoYTzJ0roOp1oeEEU/8Gqv4HSjjB7nl7sn8xVB9MPSwc
IeGEuL8Ptl4C/f5ZmHsYof6G3/cHDa8CSPjB1WdAxVOh4WqJEh7MMH1w9dlQ
delo4lD3HXiLFs6wex7/XYO0N+D3r0Hcd+AJintZHNKg5majufM9VN0fqD0w
9QBrz16p
   "], {{{}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{562, 1, 551, 227, 16, 349, 2284, 31, 356, 46, 2538, 363, 61, 
       370, 2307, 76, 377, 91, 2551, 384, 106, 391, 2330, 121, 398, 136, 2564,
        405, 151, 412, 2353, 166, 419, 181, 2577, 426, 196, 338, 564, 211, 
       561, 433, 212, 213, 1803, 214, 215, 1804, 216, 217, 218, 219, 220, 
       1930, 547, 221, 548, 222, 549, 1805, 223, 550, 224, 340, 565, 225, 559,
        339, 210, 335, 2374, 195, 327, 180, 2511, 319, 165, 311, 2351, 150, 
       303, 135, 2491, 295, 120, 287, 2328, 105, 279, 90, 2473, 271, 75, 263, 
       2305, 60, 255, 45, 2454, 247, 30, 239, 563, 15, 560, 347, 14, 555, 13, 
       1931, 554, 12, 553, 11, 552, 1765, 10, 9, 8, 7, 6, 1763, 5, 4, 1761, 3,
        2, 341, 562}]}, 
     {GrayLevel[0], 
      Line3DBox[{1105, 573, 1106, 588, 1108, 2619, 603, 1110, 618, 2945, 1112,
        633, 1114, 2642, 648, 1116, 663, 2947, 1118, 678, 1120, 2665, 693, 
       1122, 708, 2950, 1124, 723, 1126, 2688, 738, 1128, 753, 2953, 1130, 
       768, 1132, 783, 1133, 784, 785, 1977, 786, 787, 1978, 788, 789, 790, 
       791, 792, 2104, 1101, 793, 1102, 794, 1103, 1979, 795, 1104, 796, 923, 
       1144, 797, 1141, 922, 782, 920, 2709, 767, 912, 752, 2850, 904, 737, 
       896, 2686, 722, 888, 707, 2832, 880, 692, 872, 2663, 677, 864, 662, 
       2815, 856, 647, 848, 2640, 632, 840, 617, 2797, 832, 602, 824, 1143, 
       587, 1142, 929, 586, 1137, 585, 2105, 1136, 584, 1135, 583, 1134, 1939,
        582, 581, 580, 579, 578, 1937, 577, 576, 1935, 575, 574, 1105}]}, 
     {GrayLevel[0], 
      Line3DBox[{1699, 1167, 1700, 1182, 1702, 2961, 1197, 1704, 1212, 3287, 
       1706, 1227, 1708, 2984, 1242, 1710, 1257, 3289, 1712, 1272, 1714, 3007,
        1287, 1716, 1302, 3292, 1718, 1317, 1720, 3030, 1332, 1722, 1347, 
       3295, 1724, 1362, 1726, 1377, 1727, 1378, 1379, 2151, 1380, 1381, 2152,
        1382, 1383, 1384, 1385, 1386, 2278, 1695, 1387, 1696, 1388, 1697, 
       2153, 1389, 1698, 1390, 1517, 1738, 1391, 1735, 1516, 1376, 1514, 3051,
        1361, 1506, 1346, 3192, 1498, 1331, 1490, 3028, 1316, 1482, 1301, 
       3174, 1474, 1286, 1466, 3005, 1271, 1458, 1256, 3157, 1450, 1241, 1442,
        2982, 1226, 1434, 1211, 3139, 1426, 1196, 1418, 1737, 1181, 1736, 
       1523, 1180, 1731, 1179, 2279, 1730, 1178, 1729, 1177, 1728, 2113, 1176,
        1175, 1174, 1173, 1172, 2111, 1171, 1170, 2109, 1169, 1168, 
       1699}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
      Line3DBox[{1761, 1806, 1762, 1809, 3351, 1767, 1812, 1770, 3362, 1815, 
       1773, 1818, 3352, 1776, 1821, 1779, 3366, 1824, 1782, 1827, 3353, 1785,
        1830, 1788, 1833, 3356, 1791, 1836, 3357, 1794, 1839, 1797, 1842, 
       3360, 1800, 1845, 1803}], 
      Line3DBox[{1763, 1807, 1764, 3361, 1810, 1768, 1813, 1771, 3363, 1816, 
       1774, 3365, 1819, 1777, 1822, 1780, 3367, 1825, 1783, 1828, 3354, 1786,
        1831, 1789, 3369, 1834, 1792, 1837, 3358, 1795, 1840, 1798, 3370, 
       1843, 1801, 1846, 1804}], 
      Line3DBox[{8, 23, 2290, 38, 53, 2298, 68, 2313, 83, 98, 2321, 113, 2336,
        128, 143, 2344, 158, 2359, 173, 188, 2367, 203, 218}], 
      Line3DBox[{1765, 1847, 1902, 1848, 1889, 1849, 1904, 3379, 1850, 1890, 
       1853, 1906, 1854, 1891, 3374, 1856, 1908, 1857, 1892, 1859, 1910, 3380,
        1860, 1893, 1862, 1912, 1863, 1894, 3375, 1865, 1914, 1866, 1895, 
       1868, 1916, 1869, 3355, 1896, 1871, 1918, 1872, 1897, 3377, 1874, 1920,
        1875, 1898, 1877, 1922, 1878, 3359, 1899, 1880, 1924, 1881, 1900, 
       1883, 3373, 1926, 1884, 1901, 1886, 1928, 1887, 1930}], 
      Line3DBox[{1805, 1933, 1932, 1929, 1888, 1802, 1844, 1927, 3382, 1885, 
       1799, 1841, 1925, 1882, 1796, 3378, 1838, 1923, 1879, 1793, 1835, 1921,
        3381, 1876, 1790, 1832, 1919, 1873, 1787, 3376, 1829, 1917, 1870, 
       1784, 1826, 1915, 1867, 3368, 1781, 1823, 1913, 1864, 1778, 1820, 3372,
        1911, 1861, 1775, 1817, 1909, 1858, 3364, 1772, 1814, 1907, 1855, 
       1769, 1811, 3371, 1905, 1852, 1766, 1808, 1903, 1851, 1934, 1931}], 
      Line3DBox[{1935, 1980, 1936, 1983, 3392, 1941, 1986, 1944, 3384, 1989, 
       1947, 1992, 3394, 1950, 1995, 1953, 3386, 1998, 1956, 2001, 3396, 1959,
        2004, 1962, 3388, 2007, 1965, 2010, 3398, 1968, 2013, 1971, 2016, 
       3400, 1974, 2019, 1977}], 
      Line3DBox[{1937, 1981, 1938, 3383, 1984, 1942, 1987, 1945, 3385, 1990, 
       1948, 1993, 1951, 1996, 1954, 3387, 1999, 1957, 2002, 3397, 1960, 2005,
        1963, 3389, 2008, 1966, 2011, 3399, 1969, 2014, 1972, 3390, 2017, 
       1975, 2020, 1978}], 
      Line3DBox[{580, 595, 2625, 610, 625, 2633, 640, 2648, 655, 670, 2656, 
       685, 2671, 700, 715, 2679, 730, 2694, 745, 760, 2702, 775, 790}], 
      Line3DBox[{1939, 2021, 2076, 2022, 2063, 2023, 2078, 3393, 2024, 2064, 
       2027, 2080, 2028, 2065, 3401, 2030, 2082, 2031, 2066, 2033, 2084, 3395,
        2034, 2067, 2036, 2086, 2037, 2068, 3403, 2039, 2088, 2040, 2069, 
       2042, 2090, 2043, 3408, 2070, 2045, 2092, 2046, 2071, 2048, 2094, 2049,
        2072, 2051, 2096, 2052, 3410, 2073, 2054, 2098, 2055, 2074, 2057, 
       3412, 2100, 2058, 2075, 2060, 2102, 2061, 2104}], 
      Line3DBox[{1979, 2107, 2106, 2103, 2062, 1976, 2018, 2101, 3391, 2059, 
       1973, 2015, 2099, 2056, 1970, 3405, 2012, 2097, 2053, 1967, 2009, 2095,
        2050, 3409, 1964, 2006, 2093, 2047, 1961, 3404, 2003, 2091, 2044, 
       1958, 2000, 2089, 2041, 3407, 1955, 1997, 2087, 2038, 1952, 3402, 1994,
        2085, 2035, 1949, 1991, 2083, 2032, 3406, 1946, 1988, 2081, 2029, 
       1943, 1985, 3411, 2079, 2026, 1940, 1982, 2077, 2025, 2108, 2105}], 
      Line3DBox[{2109, 2154, 2110, 2157, 3422, 2115, 2160, 2118, 3414, 2163, 
       2121, 2166, 3424, 2124, 2169, 2127, 3416, 2172, 2130, 2175, 3426, 2133,
        2178, 2136, 3418, 2181, 2139, 2184, 3428, 2142, 2187, 2145, 2190, 
       3430, 2148, 2193, 2151}], 
      Line3DBox[{2111, 2155, 2112, 3413, 2158, 2116, 2161, 2119, 3415, 2164, 
       2122, 2167, 2125, 2170, 2128, 3417, 2173, 2131, 2176, 3427, 2134, 2179,
        2137, 3419, 2182, 2140, 2185, 3429, 2143, 2188, 2146, 3420, 2191, 
       2149, 2194, 2152}], 
      Line3DBox[{1174, 1189, 2967, 1204, 1219, 2975, 1234, 2990, 1249, 1264, 
       2998, 1279, 3013, 1294, 1309, 3021, 1324, 3036, 1339, 1354, 3044, 1369,
        1384}], 
      Line3DBox[{2113, 2195, 2250, 2196, 2237, 2197, 2252, 3423, 2198, 2238, 
       2201, 2254, 2202, 2239, 3431, 2204, 2256, 2205, 2240, 2207, 2258, 3425,
        2208, 2241, 2210, 2260, 2211, 2242, 3433, 2213, 2262, 2214, 2243, 
       2216, 2264, 2217, 3438, 2244, 2219, 2266, 2220, 2245, 2222, 2268, 2223,
        2246, 2225, 2270, 2226, 3440, 2247, 2228, 2272, 2229, 2248, 2231, 
       3442, 2274, 2232, 2249, 2234, 2276, 2235, 2278}], 
      Line3DBox[{2153, 2281, 2280, 2277, 2236, 2150, 2192, 2275, 3421, 2233, 
       2147, 2189, 2273, 2230, 2144, 3435, 2186, 2271, 2227, 2141, 2183, 2269,
        2224, 3439, 2138, 2180, 2267, 2221, 2135, 3434, 2177, 2265, 2218, 
       2132, 2174, 2263, 2215, 3437, 2129, 2171, 2261, 2212, 2126, 3432, 2168,
        2259, 2209, 2123, 2165, 2257, 2206, 3436, 2120, 2162, 2255, 2203, 
       2117, 2159, 3441, 2253, 2200, 2114, 2156, 2251, 2199, 2282, 2279}]}, {
      Line3DBox[{2284, 2453, 2578, 2375, 2283, 2376, 2285, 3351, 2377, 2286, 
       2378, 2287, 3302, 3361, 2288, 2379, 2289, 2380, 2290, 2381, 2291, 2447,
        2526, 2382, 2579, 3379, 2448, 2527, 2383, 2580, 2449, 2528, 2384, 
       2581, 2450, 2529, 3303, 3371, 2582, 2451, 2530, 2606, 2607, 2583, 2452,
        2531, 2385, 2454}], 
      Line3DBox[{2305, 2463, 2537, 2462, 2304, 2612, 2613, 2536, 2461, 2303, 
       3313, 3364, 2535, 2460, 2302, 2459, 2534, 2458, 2301, 2457, 2533, 3374,
        3312, 2300, 2456, 2532, 2455, 2299, 2390, 2298, 2389, 2297, 2388, 
       2296, 3363, 3305, 2295, 2387, 2294, 3362, 3304, 2293, 2386, 2292, 2465,
        2584, 2464, 2538}], 
      Line3DBox[{2307, 2472, 2585, 2391, 2306, 2392, 2308, 3352, 2393, 2309, 
       2394, 2310, 3306, 3365, 2311, 2395, 2312, 2396, 2313, 2397, 2314, 2466,
        2539, 2398, 2586, 3380, 2467, 2540, 2399, 2587, 2468, 2541, 2400, 
       2588, 2469, 2542, 3307, 3372, 2589, 2470, 2543, 2608, 2609, 2590, 2471,
        2544, 2401, 2473}], 
      Line3DBox[{2328, 2482, 2550, 2481, 2327, 2614, 2615, 2549, 2480, 2326, 
       3315, 3368, 2548, 2479, 2325, 2478, 2547, 2477, 2324, 2476, 2546, 3375,
        3314, 2323, 2475, 2545, 2474, 2322, 2406, 2321, 2405, 2320, 2404, 
       2319, 3367, 3309, 2318, 2403, 2317, 3366, 3308, 2316, 2402, 2315, 2484,
        2591, 2483, 2551}], 
      Line3DBox[{2330, 2490, 2592, 2407, 2329, 2408, 2331, 3353, 2409, 2332, 
       2410, 2333, 3354, 2411, 2334, 2412, 2335, 2413, 2336, 2414, 2337, 2485,
        2552, 2415, 2593, 3316, 3355, 2553, 2416, 2594, 2486, 2554, 2417, 
       2595, 2487, 2555, 3376, 2418, 2596, 2488, 2556, 2610, 2419, 2597, 2489,
        2557, 2420, 2491}], 
      Line3DBox[{2351, 2502, 2563, 2501, 2350, 2616, 2500, 2562, 2499, 2349, 
       3381, 2498, 2561, 2497, 2348, 2496, 2560, 2495, 2347, 2494, 2559, 3377,
        3317, 2346, 2493, 2558, 2492, 2345, 2426, 2344, 2425, 2343, 2424, 
       2342, 3369, 3310, 2341, 2423, 2340, 2422, 3356, 2339, 2421, 2338, 2504,
        2598, 2503, 2564}], 
      Line3DBox[{2353, 2510, 2599, 2427, 2352, 2428, 2354, 3357, 2429, 2355, 
       2430, 2356, 3358, 2431, 2357, 2432, 2358, 2433, 2359, 2434, 2360, 2505,
        2565, 2435, 2600, 3318, 3359, 2566, 2436, 2601, 2506, 2567, 2437, 
       2602, 2507, 2568, 3378, 2438, 2603, 2508, 2569, 2611, 2439, 2604, 2509,
        2570, 2440, 2511}], 
      Line3DBox[{2374, 2523, 2576, 2522, 2373, 2617, 2521, 2575, 2520, 2372, 
       3382, 2519, 2574, 2518, 2371, 2517, 2573, 2516, 2370, 2515, 2572, 2514,
        3373, 2369, 2513, 2571, 2512, 2368, 2446, 2367, 2445, 2366, 2444, 
       2365, 3370, 3311, 2364, 2443, 2363, 2442, 3360, 2362, 2441, 2361, 2525,
        2605, 2524, 2577}], 
      Line3DBox[{2619, 2944, 2782, 2796, 2710, 2618, 2711, 2620, 3392, 2712, 
       2621, 2713, 2622, 3319, 3383, 2623, 2714, 2624, 2715, 2625, 2716, 2626,
        2790, 2864, 2717, 2912, 3393, 2791, 2865, 2718, 2913, 2792, 2866, 
       2719, 2914, 2793, 2867, 3320, 3411, 2915, 2794, 2868, 2932, 2933, 2916,
        2795, 2869, 2720, 2797}], 
      Line3DBox[{2640, 2807, 2875, 2806, 2639, 2938, 2939, 2874, 2805, 2638, 
       3329, 3406, 2873, 2804, 2637, 2803, 2872, 2802, 2636, 2801, 2871, 3401,
        3328, 2635, 2800, 2870, 2799, 2634, 2725, 2633, 2724, 2632, 2723, 
       2631, 3385, 3322, 2630, 2722, 2629, 3384, 3321, 2628, 2721, 2627, 2783,
        2798, 2955, 2954, 2945}], 
      Line3DBox[{2642, 2946, 2784, 2814, 2726, 2641, 2727, 2643, 3394, 2728, 
       2644, 2729, 2645, 1993, 2646, 2730, 2647, 2731, 2648, 2732, 2649, 2808,
        2876, 2733, 2917, 3395, 2809, 2877, 2734, 2918, 2810, 2878, 2735, 
       2919, 2811, 2879, 3402, 2736, 2920, 2812, 2880, 2934, 2935, 2921, 2813,
        2881, 2737, 2815}], 
      Line3DBox[{2663, 2825, 2887, 2824, 2662, 2940, 2941, 2886, 2823, 2661, 
       3331, 3407, 2885, 2822, 2660, 2821, 2884, 2820, 2659, 2819, 2883, 3403,
        3330, 2658, 2818, 2882, 2817, 2657, 2742, 2656, 2741, 2655, 2740, 
       2654, 3387, 3324, 2653, 2739, 2652, 3386, 3323, 2651, 2738, 2650, 2785,
        2816, 2957, 2956, 2947}], 
      Line3DBox[{2665, 2948, 2949, 2831, 2743, 2664, 2744, 2666, 3396, 2745, 
       2667, 2746, 2668, 3397, 2747, 2669, 2748, 2670, 2749, 2671, 2750, 2672,
        2826, 2888, 2751, 2922, 3332, 3408, 2889, 2752, 2923, 2827, 2890, 
       2753, 2924, 2828, 2891, 3404, 2754, 2925, 2829, 2892, 2936, 2755, 2926,
        2830, 2893, 2756, 2832}], 
      Line3DBox[{2686, 2843, 2899, 2842, 2685, 2942, 2841, 2898, 2840, 2684, 
       3333, 3409, 2897, 2839, 2683, 2838, 2896, 2837, 2682, 2836, 2895, 2048,
        2681, 2835, 2894, 2834, 2680, 2761, 2679, 2760, 2678, 2759, 2677, 
       3389, 3326, 2676, 2758, 2675, 3388, 3325, 2674, 2757, 2673, 2787, 2833,
        2786, 2958, 2950}], 
      Line3DBox[{2688, 2951, 2952, 2849, 2762, 2687, 2763, 2689, 3398, 2764, 
       2690, 2765, 2691, 3399, 2766, 2692, 2767, 2693, 2768, 2694, 2769, 2695,
        2844, 2900, 2770, 2927, 3334, 3410, 2901, 2771, 2928, 2845, 2902, 
       2772, 2929, 2846, 2903, 3405, 2773, 2930, 2847, 2904, 2937, 2774, 2931,
        2848, 2905, 2775, 2850}], 
      Line3DBox[{2709, 2863, 2911, 2862, 2708, 2943, 2861, 2910, 2860, 2707, 
       3391, 2859, 2909, 2858, 2706, 2857, 2908, 2856, 2705, 2855, 2907, 2854,
        3412, 2704, 2853, 2906, 2852, 2703, 2781, 2702, 2780, 2701, 2779, 
       2700, 3390, 3327, 2699, 2778, 2698, 2777, 3400, 2697, 2776, 2696, 2789,
        2851, 2788, 2959, 2953}], 
      Line3DBox[{2961, 3286, 3124, 3138, 3052, 2960, 3053, 2962, 3422, 3054, 
       2963, 3055, 2964, 3335, 3413, 2965, 3056, 2966, 3057, 2967, 3058, 2968,
        3132, 3206, 3059, 3254, 3423, 3133, 3207, 3060, 3255, 3134, 3208, 
       3061, 3256, 3135, 3209, 3336, 3441, 3257, 3136, 3210, 3274, 3275, 3258,
        3137, 3211, 3062, 3139}], 
      Line3DBox[{2982, 3149, 3217, 3148, 2981, 3280, 3281, 3216, 3147, 2980, 
       3345, 3436, 3215, 3146, 2979, 3145, 3214, 3144, 2978, 3143, 3213, 3431,
        3344, 2977, 3142, 3212, 3141, 2976, 3067, 2975, 3066, 2974, 3065, 
       2973, 3415, 3338, 2972, 3064, 2971, 3414, 3337, 2970, 3063, 2969, 3125,
        3140, 3297, 3296, 3287}], 
      Line3DBox[{2984, 3288, 3126, 3156, 3068, 2983, 3069, 2985, 3424, 3070, 
       2986, 3071, 2987, 2167, 2988, 3072, 2989, 3073, 2990, 3074, 2991, 3150,
        3218, 3075, 3259, 3425, 3151, 3219, 3076, 3260, 3152, 3220, 3077, 
       3261, 3153, 3221, 3432, 3078, 3262, 3154, 3222, 3276, 3277, 3263, 3155,
        3223, 3079, 3157}], 
      Line3DBox[{3005, 3167, 3229, 3166, 3004, 3282, 3283, 3228, 3165, 3003, 
       3347, 3437, 3227, 3164, 3002, 3163, 3226, 3162, 3001, 3161, 3225, 3433,
        3346, 3000, 3160, 3224, 3159, 2999, 3084, 2998, 3083, 2997, 3082, 
       2996, 3417, 3340, 2995, 3081, 2994, 3416, 3339, 2993, 3080, 2992, 3127,
        3158, 3299, 3298, 3289}], 
      Line3DBox[{3007, 3290, 3291, 3173, 3085, 3006, 3086, 3008, 3426, 3087, 
       3009, 3088, 3010, 3427, 3089, 3011, 3090, 3012, 3091, 3013, 3092, 3014,
        3168, 3230, 3093, 3264, 3348, 3438, 3231, 3094, 3265, 3169, 3232, 
       3095, 3266, 3170, 3233, 3434, 3096, 3267, 3171, 3234, 3278, 3097, 3268,
        3172, 3235, 3098, 3174}], 
      Line3DBox[{3028, 3185, 3241, 3184, 3027, 3284, 3183, 3240, 3182, 3026, 
       3349, 3439, 3239, 3181, 3025, 3180, 3238, 3179, 3024, 3178, 3237, 2222,
        3023, 3177, 3236, 3176, 3022, 3103, 3021, 3102, 3020, 3101, 3019, 
       3419, 3342, 3018, 3100, 3017, 3418, 3341, 3016, 3099, 3015, 3129, 3175,
        3128, 3300, 3292}], 
      Line3DBox[{3030, 3293, 3294, 3191, 3104, 3029, 3105, 3031, 3428, 3106, 
       3032, 3107, 3033, 3429, 3108, 3034, 3109, 3035, 3110, 3036, 3111, 3037,
        3186, 3242, 3112, 3269, 3350, 3440, 3243, 3113, 3270, 3187, 3244, 
       3114, 3271, 3188, 3245, 3435, 3115, 3272, 3189, 3246, 3279, 3116, 3273,
        3190, 3247, 3117, 3192}], 
      Line3DBox[{3051, 3205, 3253, 3204, 3050, 3285, 3203, 3252, 3202, 3049, 
       3421, 3201, 3251, 3200, 3048, 3199, 3250, 3198, 3047, 3197, 3249, 3196,
        3442, 3046, 3195, 3248, 3194, 3045, 3123, 3044, 3122, 3043, 3121, 
       3042, 3420, 3343, 3041, 3120, 3040, 3119, 3430, 3039, 3118, 3038, 3131,
        3193, 3130, 3301, 3295}]}}},
   VertexColors->CompressedData["
1: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
9HzRvwDfvlSf
    "],
   VertexNormals->CompressedData["
1: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
LxSj4Wy3B7PWDqIFwnGrIU42r62pKHm3lOm0AKKj/v8+jrewweukbipmi+94
OW+wG+VIz30JcaoermlbtSQNFy5YZ4jLe1Fl30nal4/pPBNYb/caywxqzfms
24+kAz0or2q1Vn0f8EjHPG5pbiduD6BbX3+7Q5wGAx7HZu7LwF03wjZfOTmI
Gm+tTIA4bzzhqt8QkoGXSqpwJ+JB9DLOXxLijJ2zNTw+9TQrUsCM6KXr/+KU
vHz8ZUhUBc6u+xB5wakTCRw6Q/m/R5F7JlaownpynOuKJLtRar4kXb+Ubms5
E/akGotNu67WHd6DRkze0/oae/lIui+hBmfWNyySfdmLNAReUzz3ndgyTUm3
Fl/tdFKyPNeHVtv70TixA89dn7RaXHPu3gqBd33I30yZ6oTG150ZV5wvsr5Z
2cxZyGv7L840tzcvJC1b8I0vt2LIJzryqovm5y7bj92f37fiqS3hjeQThRaf
pHH+dHbzTuhsw9l96i7kE3kgJYon35ib3C5WO27XPSlFPpGg9kHKk6k/6/Xy
FDuwg16COvlE4RzLXkOcTks7XG486MD97VNtySdqVvVUgDhvDP3hIfGxHgcv
TCDx/ovz1pTv0QRHvMzyYCDBFa378o7q4UR/ExGCI/7Pm9XFUqhCfQvtKJ+f
n9mmRXDEM7cfkyG4oqxD0yohTt4Dh5cTHLGC6QdBgus/PF/ovFcnOOJXBfmt
R3Vr/+GpUlu3huCIzx/6fInginwZPEfCgojOuc56pbSV6JzT/+IsY7mkkLzE
g/mYl+Qpymby81jvJyOSl1jCtNuM5CmqYPLz6rml80he4pPLLZ4I271GXyqs
KJ5WCskeJC8x12YOE5KnyIvJz+HIS2IkL3GTyr6PM/Zl/MtPDx+zOSQv8R77
AFmSp6joLTvNz5VGz4iesWcJLtmaLp28+18fSTxY9J3UOe4572RJ6h7HsovR
ea86elqN1Dmuq5j1ldQ9rrtXSNdHGbvU95I6xzkF4Vqk7vEQU+/xAeLPSJ1j
f6nFvqTu8TShb1RfHV2IjpM6x89yONZ7LCrGkVmLab1v5XC4R+ocnwtlP0bq
Hv+td4n7tUS3XGMNKskvb7lm9C9OzY+nRAlv4imzV81dmluLFf3SKC8dldTy
JLyJ19+u2kd4FL+b+4Pm54avgjGEN/EbtgAPwqP4L3++s7OeSngTK82Zspfw
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
EXyyJ0UL8Pk8LZrms/gdnRSyDsRT3a7PA99VJbMePJBe+530Razu9GQB9L2f
L8YozlM0rb+BjytCfv9asi7EXMx6MHrFtzCYr2S3OY4wD8q2PyhvGFffNwT+
N3RvFABeP51zjPbBqam+x8Cn1PDonRP4j8LFbXIA5/49T99CfX33zvsAdWNy
c0Yx4JwcYL0D+M3h0owe4C09Zj1oMnH7M/hw/IxP24O/pv+KSM/BlwqsKxN0
XwNvjqT7HPivfi5TWlIJerjoVXkd6MoI+0mc/8ywTgVe6P0sdgDqS+9AA8X5
6CZF9qG+dNz9RKjz0fAnnBIsTnHuUDwpCXqv7cXsKeBrX87sbzjP3r8R8n7r
xS8NkD/OKZEU59VcnOIwXxuFXsP6F59i9jfqHh+sJzoGW0h7UF1g+nd/Y3la
HcyrPeem64DP+uIblJ/1OS1XQX3lz86zhTztuBdD14NtFaM50K+blT+x3SZ9
T5rZ3yj4KJ4HcX/R0sHgzzo09Qvdn5C8ZesBfCgnKW0LvGI5aPYGcPa7MV8a
+pEF5wxt4HWuN5eGIJ93Np2LJb/D+7+MfAb/UXiDk4dr8xHWwVq6T4dKCui+
HdZk9uuyJ+Ry/oyJSjH7dphNYhLn1/Krk/+MSUtpTO7b4Uhmv45/3S0Wf4ec
FLN/gp8x+ynaPy4edn52VMp1ct8O/92vu/dg+SVRneNSapP7djiW2a9bNrF3
vX6OmhSzP4DHmf0CtV/Z3X7rNaUsJ/ftsACzXzecOzB/tpmWlOLkvh2WYPbr
cP7Nnc7PdKSmTa5/sTazHn75RS3pz5iulMbkvh3OYPbr2lxTDqQt05Mqn9y3
w8+Y/brFe07JwPV9k+s7/I1Z7y1c855+f/Hkvh3ewuzXyR3Xpdd/Te7bYX9m
v26h9rFWM4V4FGYsIyG22wm1dVwqhPdrxo59q6UFYpCjeaTmSG4g8v8xeV0A
OcYKC0ag+Tc3avcZRqHyicnr2Z6ewS2jfmie2g+NCpdY9Ib5/rtCmRrwlWhP
7XR5GROPzvxnSa9zvNwxb12hN7bo/pg0834cWtM1+f11D5eqlQY9wqz9U/fl
GT9B+79PXg+WsFAg/8bB1b8Okr//u+71XTuF/B4HRS8pW1vojYSY+3DE6sJ4
OO5kbQ6ch//IXH/7Nfw4iQ9vd1yWQeLFGUyc7iG3jpPnwef5ZZLJ8+FPzHOt
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
OyeDqfFh24kL76nxImm75XGuylz/gzo/42ajVA/qPI0MHMbJOfqgbhCsMyyk
0c+63k4Lv32l2Q/rjX7LFtjf4L/X1a0rz6ojpTJWBdjnPCkn+xscvrQvf6FL
BW33sSX7nN8dg7D+MEucnIRJjwrO5Fteh81raZqofQ9mzJmKKPqshPyDpZb3
P5YWCdS6xA3lciLfqP1RcVvWJVifSsyqvMBrZEakCsD/9Cy55ws8Qjv/PqxX
7F+pxu4VL4f7qz6RdXuiM+yCXuQEvrRhJk2LfgNSMTje+3jDF9Tr+hzWMT6S
9cbxersw1r2mR9ZztyLZb+Hi0O+RNs06eWYKZ8m+K/XBaVjfOHDDOofVQkb4
f+uc95Uv7Efxw7qdrjfZjNDE6uV96c6e8y+pOoWtXspyfxb5gfu4mfugXsnt
8O6k6g5+GnUxhqpDWFfnTwXUn2qro+ZUfcFKijFtVL3BhqwrS6DOiF7djKj6
gvl1C1gMj3XgL3GpsVBnpnn49Kj6gu+wde6i6g3ui9lO6gzn8DFRqo5godeu
dVRdwf+rJ6q+e/MFqfsr2rWl+hHVp8xzZ7whT2NJujOdPPEDm9GYzVH9Aesh
QdIXfAZeaFLnByxhaKlLnSfwmaObxOEcoWC/z4HqE7jWifUZ1TewsmMLN/QL
Xandl6hzBa6lf9tEnTMwzUzKPJwveue7nKn+gaN6IsOpfoJft4SsgD7iXWa+
kTpvYPtrLxSp8wfWCnnrCueO+kL6WKqv4Ir7QtupPoOPueUlQX+Zd/35i6mq
HbNGe0jlxw9jCRG2Wu4L1Yjuge7UN5cOrJExd4TqP9gwIXQpkeo7ogdS6Y4H
duB9Th9HhHVHcGTyqKJPXCEy7Oh5SPUhnKV1fSPVlzD/HgPSj9jtDfOpcw5+
0WOoQp17sAxrJznvbOYY+fvnQzDu3jckRvUr/L8+1ap24wZ1DsTnRfWbqXMh
ttu6fB6k1dz06HZQP9qX1253mKsZjR7/EtXl2Y28RK5w3UCDCLH4NGX+a0E8
0T56OX/bkYXH5sNaIUOoOoyPgd2vDakGirEYuDehn0NbStLDh5EQV+9D/rx2
ZPut76lHbjWanFpXJak+gnYfPhrI5d2BjuzM1Vd1KEJWBzpDveJHEGMIi7jk
dAeKd97b6I4TUPKjfza3OZvRJ+WrC3PP+tFU7K4Poj7dKOim7qE4ahxXT2gd
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
    "]],
  Boxed->False,
  ImageSize->{360., 409.6472400945772},
  Method->{},
  PlotRange->{{-4.9921340750890835`, 5.}, {-5., 4.9921340750890835`}, {0., 
   5.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.8811829678684101, -3.044116784433944, 1.1861153316040438`},
  ViewVertical->{0.07693280217446505, -0.40091910396508257`, 
   1.8243187500657911`}]], "Output",
 CellChangeTimes->{
  3.476996875197006*^9, 3.477053518700473*^9, {3.477053707839757*^9, 
   3.477053722881621*^9}, {3.4770546994569902`*^9, 3.477054714467792*^9}, 
   3.477066971198316*^9, {3.477067026591288*^9, 3.477067072390177*^9}, 
   3.477096496452991*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]j", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot2", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "*", 
       RowBox[{"Sin", "[", "\[Theta]i", "]"}], 
       RowBox[{"Cos", "[", "\[Phi]j", "]"}]}], ",", " ", 
      RowBox[{"r", "*", 
       RowBox[{"Sin", "[", "\[Theta]i", "]"}], 
       RowBox[{"Sin", "[", "\[Phi]j", "]"}]}], ",", " ", 
      RowBox[{"r", "*", 
       RowBox[{"Cos", "[", "\[Theta]i", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", "Thick"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.476992978951338*^9, 3.476993086459055*^9}, 
   3.477054403718309*^9, {3.477054439866035*^9, 3.477054459840672*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], Line3DBox[CompressedData["
1:eJxNyH0803kAwPExO0/ztOPQg6xm60hd1Cs77PvzIlG3pLqrTi2W1WSXOpFu
RSdPRUpOZVsd2ZTbcUyS6moUxzllrJSH6IiVGhsxWXW/P67vfp/X6/PPm8yO
28gxxuFw69Hx6HH82oBc4iEG7v9EvwxZcwt/YLBDhE+LKN+CT05W0BgK6jow
cT9Z/iOFA31L9RbLc9QI4Hd8vDqCkgA9Xjx2IIkaCyLZZZ4bKOnQjS76SmKo
fKBVpO9dSymAHlL4nMGmZoNb5pNZaygS6Lzz17JZVCEocvNwCqbUQD/6hYts
O1UKevcnH3ph2gQ94ORRtXTtbZDGetlyaUc79CzCfBEwaQR9IdJ6nugRdFWd
5vhVeSvotgtttGD2QPce8pSLMhVgMqSinb5+APpQbKL0p3ElYOokQY+XDkKX
FJkX8y4/Ac0nYsrxxsPQo2ycfFwCe8HfU3tSz4lV0PM+0P04kn7gumnzDrtj
o9C5zE1ukVefg48n+WKNuxp6Q8Tnu56wBkHKxlX7l0ePQ3c2zTtQSXwBaF00
O9ZDDfRpsxXppP5hkN+ykuu/cAK6TWtkGDirAmXVXzecyZuEXjEoc5mKeQUe
5krOLXn3Fvq6woY7RPprcLPLk8xfOw19oc12B7XqDWA6lVf41+qgp/TMObDt
zzEgbgrVyizfQbe8VlW/pm4cSHh9PqIjs9AFEm4brVQDruO7ZtqG9dDLOMn1
tblakG2m3i/z+QBdSXhqW75nApgT9K8srnyEHhjexB7ZOAlKa/OtspNxyCd/
cERnk7n0LQjj9P67gmoE/WniCcljwhRoyy2qc+o1OG1euX/s2BTwjIsffZRu
DP1sscNyTss0YLfWu7T546EjHbY0cY0OLHANPM3VGnyfYi8h/+IMuOPR+X2f
wAT6jUpzMJLwDnhVP6PlhBOgB/v68o9FzoIsjS7MXm9wraSKlOKrB7sXB9cg
JZ9Bn9efcdaT9B4491jPu7LVFPrJe2p78ux7UBE03DdsZAbdIUuoPaz8AJzc
6cWRdQYfmu7ucJR/BNFNgrvV0ebQVSXLMq3W4xCfiGVzpUQL6PO9yc4jdTjk
eSxI6m0w+KTj9iWDS40QnjfrqxGeJfRuHv2NncgI+SdR99LDjQid7Ri5bBfJ
GKmWNQ7Ydxt88ZfXOTkZxghfUuzVlWoF/f1vFaEqrTHibD+T3km3hh6fOl6x
m4tHBPSdK8qGDD7Toqx3fIxHSrboFizKsYF+J0nVXBRggsiTMjJGXW2hux1d
Hf7NdRPElXzBXZZgcIEmKNN9EQGJydzzsEBh8KpbpxgehQSEFZ/UWoRx/sH7
2+iob9p54i8pxoM9Zw+uQd1vlfRuPca7L3Glu1C3GlH/8QbjRqmBTiLUK4MT
z6zuMPiGkBkNUUBApgnp4W8xrlZGS9Sov9IUMHGdBq89JZTrUe/vKw21xPjP
wR09FkIC0lzTHEDGuMMNQKKhLuAQvZgYZwjnpOxE3b8xnyTBeE5U+9Z21JdX
ia0rMf7dHNODz1CnXqyxuIVx107/069Rt0noMlZg/FqQtNFMREAGKHMn9Bjv
oWV4BaCutF0yZqo0uHjgNjMM9Ra93ygJ4/sKJ7g7UJcpWYOLMY63jPr1MOql
8rh+b4y33Tt/MxN14e/HehgYP3/kwaMC1E9fyOsKxXjUSoKmBPW0tMudmzHu
ofYlylD/D0BaPNc=
     "]]}},
  Axes->True,
  ImageSize->{360., 414.8532269944685},
  PlotRange->{{0., 4.207354838175096}, {0., 0.}, {0., 2.7015114742078103`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.5704326752767317`, -1.9208845210057177`, 1.0738149369562424`},
  
  ViewVertical->{0.3030345705657203, -0.2506883412074113, 
   1.2427754461839151`}]], "Output",
 CellChangeTimes->{{3.4769930536883497`*^9, 3.4769930869856052`*^9}, 
   3.476993717646275*^9, 3.4769938422222357`*^9, 3.47705345000681*^9, 
   3.477053732866927*^9, 3.477054404720991*^9, 3.4770544606362753`*^9, 
   3.477054716501346*^9, 3.477067076230932*^9, 3.477096502002933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]j", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nr", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r0", "[", "i_", "]"}], ":=", 
  RowBox[{"Sin", "[", 
   RowBox[{
    FractionBox["\[Pi]", "2"], 
    FractionBox["i", 
     RowBox[{"nr", "-", "1"}]]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "[", "i_", "]"}], ":=", 
  RowBox[{"2", "-", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"\[Pi]", "*", "i"}], 
     RowBox[{"nr", "-", "1"}]], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointtable", "=", 
   RowBox[{"N", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"r1", "[", "i", "]"}], "*", 
         RowBox[{"Sin", "[", "\[Theta]i", "]"}], 
         RowBox[{"Cos", "[", "\[Phi]j", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"r1", "[", "i", "]"}], "*", 
         RowBox[{"Sin", "[", "\[Theta]i", "]"}], 
         RowBox[{"Sin", "[", "\[Phi]j", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"r1", "[", "i", "]"}], "*", 
         RowBox[{"Cos", "[", "\[Theta]i", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"nr", "-", "1"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot3", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"pointtable", ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Red", ",", " ", 
       RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.476993223833263*^9, 3.47699327685384*^9}, {
   3.4769934351541853`*^9, 3.476993534550844*^9}, {3.476993654666636*^9, 
   3.476993693472632*^9}, 3.47699372949936*^9, {3.476993859353593*^9, 
   3.476993862503978*^9}, {3.47705390053868*^9, 3.477053978455351*^9}, 
   3.4770542757529993`*^9, {3.477054317903866*^9, 3.477054408316766*^9}, {
   3.477054625494341*^9, 3.477054626372374*^9}, {3.477096485527721*^9, 
   3.477096512242893*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[1, 0, 0], PointSize[Large], 
   Point3DBox[{{0.8414709848078965, 0., 0.5403023058681398}, {
    0.9542067202246453, 0., 0.6126890891311605}, {1.2622064772118446`, 0., 
    0.8104534588022096}, {1.682941969615793, 0., 1.0806046117362795`}, {
    2.1036774620197414`, 0., 1.3507557646703494`}, {2.4116772190069407`, 0., 
    1.5485201343413983`}, {2.5244129544236893`, 0., 1.6209069176044193`}}]},
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 287.288535823598},
  PlotRange->{{0.8414709848078965, 2.5244129544236893`}, {0., 0.}, Automatic},
  
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  ViewPoint->{1.7539487371604014`, -1.496565359858313, 2.4766824485762373`},
  ViewVertical->{-0.055634195681035864`, 0.2127908822702208, 
   2.4387815562971005`}]], "Output",
 CellChangeTimes->{{3.476993490514997*^9, 3.476993504888135*^9}, 
   3.476993535765473*^9, {3.476993660835833*^9, 3.476993730593549*^9}, {
   3.476993843433344*^9, 3.476993863820178*^9}, 3.4770534512197027`*^9, 
   3.477053733839767*^9, {3.477053980499185*^9, 3.477053988458219*^9}, 
   3.477054276336597*^9, {3.4770543371732607`*^9, 3.477054409031296*^9}, 
   3.4770546268935623`*^9, 3.477054717334165*^9, 3.477067077197843*^9, {
   3.477096486501726*^9, 3.477096512594976*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", " ", "plot2", ",", " ", "plot3"}], "]"}]], "Input",
 CellChangeTimes->{{3.476993090331663*^9, 3.476993097107442*^9}, {
  3.476993699595626*^9, 3.47699370088925*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyEm3lYTt0X95uLUpF5jAzxyBwK7ROZKfM8JGOPec48D5EpMxkyRwhlSNqn
FIUUDSo0z5pLA5W3Wnut+3qf9/1dnn/uq32f++zv/uy1vmudfTxt7VZOWKii
pKS0pp6Skmr156QPznesW2+3KN89sL3n4A6D3v6p+S+PXUl3DfFy82EXb2T+
eThggcWCLi77t33IYzf3fDh0YssH5qQ2y7tVi3UWR9MDf1/slccMLRZojzaK
ZK0CLjdz+7LN4n1aVcCoPrls9dySLXLAV9bdMS1e/8IeizapZy/7RGSzsXM9
eyzRSGSPn5SM6VXnoEWb4ak2s5v+YNssh2VeLUpmC3T4msIuThZBM+6sfK2W
yeab71h0+Woa2/+uUEet8JhFyAD422w6fO+rtCW5tdsJC5/B8PsVQ+F+d9rN
e2RreNJiti3MNzEZ5l/1u2iG3oxTFt3ngb7MFNB7VFLTMJtw2mIDg/W4pML6
Sou2vPFVP2OxaR+sf4kx8Cjea3t3zpozFoczgVdwJfBr2HxFlfeZMxYHzg1z
q+Hr/Sq9n+vyrRYLN24c2DJ1vgVybtJrc72Cei9ZUuGGgorcaww5/6Nsc2d+
0jvmv3GdtDvsMUPOJZWNqq4WhTMf33pqxdkvGXI2c16SHWEay9bMslzCp/oz
5Pz91rLg8PoJbN79ymOl294w5OzX6/RQ5cgk9tS7/NObme8Yco5d3sjq6MxU
lpJ897p3SghDziuDuo+ZfimdvX6WGfF8fxhDzi+8Kljrk5nMpuyjSULqJ4ac
x+x6Kx/p+4OVqnRMWKIdzpDzsOHbd8zbnc0GrtXKc61eB3LurR3ab/maHNZi
5HB+5WIEQ87KesPbuKvmMpeg/turBTPkXPigz6WadV8b+Sm35vfIeUJnlwxj
p40WVV073hzzdg1x/uM6vG7skqfs6aID7SvjHhHnbRkdo99YvWHy47xx/f39
iLOl+9aCZ9XrjE4K61XDBzkHaZ20ifaKZDbBvScOHPeJOMdMaK3d8EosGzXk
1Y1o80jivDJt972LveLZkojNY1smRhNnteNbw2I8Etnb409PDe/3jThnnhoc
s/pYMnsyc72LS/XvkPO+su0m9bunsof12vyWUxKI88HzAQHbDqWxFdf6BoaV
JxJnB+eF7Wv2a9fz0c9q9hk56/czW9VtQQZLWTKqi/PaZOKs0WTE4W3fMtjU
KVU39oQnE+fnxofb1+h9m7ZhuGu1DuR8tNTVuK3GKgsX00jjXTs3EecfLiN9
3+14wGxzdLaqDX1OnAdHz/R9ZO3LXvoe8StsFUSc+zQd0KSkOi7Hnj11Nr46
fpDz1WyrFV2cQtggn2edO+35QpynjOOHr7T6zObPya3wifhGnIP7jfP7Us39
xZdJ4TV8kLORbcG4ZwbRrNXH1KGycTJxzkpzfGlQvV/DtpteqeGKnFtm/tau
uW/BFEPzHgVpxHnr6F+mJ+/HMenSsD9r7DOI88wNNttr8kttpsnlmjxAzkff
7Dnc9nwCa+iTFLTu3yzi7DTBvYvSj+rrj7SwlLOziLPBrMfvFlfPM+FD5bGa
9SDnQ8ZXT4Z9nGFhnWy6sWrWNuIctGhQm657zrPOk6Oavyp4SZy7BXUxbz7D
jT2Mma3kF/CeON+SPNjOah+5M3hI0eXq/ELOSf9cXjDv2XNmpXtx6r4GX4nz
HuO6Oz2q98tmjHllzTqQ8/FWJtF9q/NkQX+T+BPV8YOc9w0Zfi7TKID96vU2
2E4vjTiv6/j4XmB1fs36Zv+xJu6Q86PbT37lV8dBy/1NXWv4IOdJN3aZObgF
s8fP3/k9bJFNnAcVD9O3q/bDxs7pG2t8Ajm3ynNozavXeX7C7Flz/s0lznoj
828+HfuB9cr5brZAKY84779c4Xms+vu3z081dqnmgpzteyb9Yb9G+XbWjDoS
nqPg3Na8R5/d7o7c2MFzvfMWH+KcmKcbYLLnPI/Kf+/wvHoe5Fy00K9DtY/z
qeFmLlbVfoWcNQqmjlgef4erMCePeucUnD0NNde/3/GAnzaqe7wmLpBzM5vO
YRVxj/hzm4XDa/IROavotF922MqTP139uFOvrQrOdw8dG1vtb7y1bXZkTR4j
56aHrw+uzkOu3edf5Zp4Q85vG26eqRP+gv/YPUdt0i0F5xTj1j2r6xFvbf5p
WI3vIudVPcNVquOM3xts3qaGJ3IeAlx4E9a9dOx5Bedx8Mm7CF7E+dnBLn7t
/vVd+ivPiLfbQpwL84HPQ9BFnLPNrCvsnj3nbxLeJWyqjgvk/F0z/ZrvVH/+
566FQU19Qc4n2tw47Ns0iPcp6nv6tVoMcT76zLrNP04hvI7hu5yaPEbOoy5v
VK72cT4pdfqqGv9Ezg061HO6eS2cr1n5vUGZXQpx3r/L73i1//Ppu1Zrba/2
XeRcVtS0sOOeL3y4zoHAGn9Azv1BB29R1nh2WHkmcW72JU830jSW9y67mlJT
J5Gz04upUnUecuZ43a0m/smfIW5ov5DzH9va+/EfKbBO5LzswJgnKmPW+y6G
T+JcoA3xkwOfxLnf1K0pWUYBvBd8EueA9Dp2L1JC+Cv4JM7IRxc+iXPOP30S
q/2Wp8MncTZqv1uvus7xVvBJnJWVav5L4BW1+uKJc6s759VjPRJ5M/gkzo7m
J5tW+zjfB5/EeT3sE18t9gs5G3ftb1vdz3Aj+CTOpus+P632Kd4DPonzC8gr
7inyCznfBl38mtCHnFdAHPvOhbgmzo9FfmVAXBPnYIhjngRxTZyV79XGMY+C
uCbO/UT8HIC4Js46EMd8D8Q1cZ4CccyHQFwT53WCT12xX8h5JsQx3w5xTZxH
QRzzXIhr4twa4ph3E/mFnPtCHHM9iGviPBjimO+CuCbOuRDH/LcF+CFyzoU4
5sUQ18S5C/iybxfwaeLcWfhPqlmtTxPnL+DL/Bb4NHEWvszfgk8TZ1WRXyFi
v5DzGfBlvgJ8mjgLX+b51rU+TZyfifgJF/mFnNuAL/ON4NPEWQd8mSccqvVp
4pwt+DgJP0TObcCX+S3waeLsDr7Mu4NPE+em4MtcWdQv5PwPcOK64m/kPAb6
DF836Dt8kXMn6DN4KvQdHDnfhz6Dj4a+g1O/AX0G94G+gyPnwdBn8D/Qd3Dk
bA19RvW6avsOjpznQ5/Bb0DfwZFzOfQZ3AX6Do6cZ0CfwY9A38GRcwvoM3gI
9B0cOXtAn8HXQN/BkXND6DP4LOg7OHI+C30GHwR9B0fOPaDP4N2h7+DIORD6
DH4b+g6OnM9B3+x7Cvpo4jwL+mZeCn00cX4OfTO3hj6aOI+GvpkPgj6aOJtB
38zdoY8mznOhb+azoY8mzk+hb+afoY8mzs2hb+Ym0EcT5yHQN/Of0EcT51zo
m7kx9NHEeSD0zfwg9NHEWQn6Zm4HfTRx1oe+mZ+CPpo4K0HfzE9CH02craFv
5s2hjybO5fAc6DsFnguJswc8B3K1a7XPhcTZG54D+W54LiTOYfAcyIfCcyFx
HgnPgfwDPBcSZyt4DuRx8FxInG3hOZCvh+dC4uwLz4FcC54LifNdeA7kOfBc
SJzvwnMgd4TnQuJsD8+B3AmeC4nzVngO5NvguZA4x8NzIG8Ez4XEeTw8B3Jt
eC4kzn7wHMhfwXMhcZ4B5xq+L+GcgzhHw7kGbwrnHIp4hnMN3hXOOYjzfTjX
4KVwzkGc7eFcg4tzDuI8Gc41uDjnIM534FyD+8M5B3GOhHMNLs45iPNLONfg
q+CcgzgPg3MNLs45iHMOnGvwsXDOQZx7wbkGHw7nHMS5Ppxr8D5wzkGcT8C5
BleBcw7ifBbONXgRnHMQ5+bPNGrO6V6JczvibLnmac05na84tyPOLu0715zT
+YpzO+Lc23JizTmdrzi3I87v8jxrzul8xbkdca6b9KLmnM5XnNsRZ6s3G2vO
6XzFuR1xXvDTteaczlec2xHnd+Osa87pfMW5HXHu+qpHzTmdrzi3I84Dtso1
53S+4tyOOP879qO62YTTvuLcjjg7m1vVnNP5inM74uz5vFPNOZ2vOLcjzuEF
fWrO6XzFuR1xjjrjmLVqrDtbr+TraDpwD7vpdPFty6I8tr/M3WzOo20Woa5t
HVp0m0R9yK47X+3ve2ey5f+Yndm+1Y816anrtWlvErs5TPniii9prGd8XNp+
FkPjQ+dH/tnv8oOtef29b/lrf2bZKsRU+hnHVrlHv++9J4MNHbnHeE7TrzR+
0zrOcWuHHDZs3YJudUNfM9e1k+OStkWzYWtycnQTMtkwzZTIX+e/0Xgrnz0/
XcblsvjASV6TLwSwG98Xn3Z/9ol1jziU5ZKZxVyXeO7Zw7/TeGbQbasOzfPY
myGbx481CmR6AwzfRK8KZNYm2tE1OssvtDQdvi+Oxjtfe+rmtCOPySWJ+v2X
BLIs15gdw73cmUvCMytLpzym26ava2z1dcizKrS5t1PJD3bJoGxQcEYcXX/G
w+veYEM3Nt9h1OjywIvEOT2J/cqYn8jMtrRr+Wh9MnEr2Bza86xbEnvhZ1Vg
mJRCfGxevXvY40kyy1+z0XuydhpxmPNt18I521LYuoAZd5xz0mi9iUdSV51W
T2UfxvdZ8GdfOq3L4FPdERHK2cyh7kMty+r7on5rqXB0m1GpTPOxV/9Hn9NJ
f7Be+qYuba+zlDk2f3IX3yT9YalLnR3Kw1n7/Dqdd7fMIP2vvjtOcloZyU40
aT1Gr3rfUP+538tfX7oaxRpePTzCZtwP0h/Vz0aOOviFhS7UPHd1STbpb+LY
32N0h2jmGFkSXBMXqL9xpwXPvSaksvTWOwaP/ZZO+hvUiUpSWxfNLqzw/LZn
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
iqvpu1HP9JEOh4uHfuIbDBudq+m7UI9uVIlLp4ufqM9BPZfj7e+8GHODX4BP
0hOy2LmxPDOe99KXlGv6VdRjnfdhlPrDBOpnUI910tfr6zYn8m5hK11qnidQ
T/q7POMr9ZL46mDVhJp+EvUM3XWnwb1FSdS/oZ5VwIW3Ak6kpy/o4IGgi/Ts
Ff3AKNBFenqBDj4KdJGe9aCDJ4Eu0tNc1GsJdJEeN4gbvhDiiPQsgX3iSbBv
pCdB9BV55rX7RnrWwz7xENg30uMA+8THwL6Rnn9F3VeGfVP8uzXIK34N8ox8
8j7EMXeDuKb3JlcgjvltiGt6b1IJcczZ4dq4pvcm9hDHfO3V2rim9ybqEMfc
HeKa3pusA9/hs8CHSE8PyHPuD3lPeoIhzzmHvCc9bSDPOYe8Jz13Ic/5Psh7
0tMN8pxnQ96Tns7gy7wf+DTpaQI+yOuAL5KeePBBbgu+SHoWgQ/yMeCLpOcR
+CDfC75IeiaBD/I+4IukxxvqFl8FdYz0FEGd4A5QN0iPFtQJPgXqBukJhTrB
W0HdID1foE7wC1A3SE8DqBNcH+oG6VkE9ZKL+knzrod6yUX9pHk3Qb3kon7S
vPOhXnJRP2leFaiXXNRPmvdlYY8d6x7kMrl0dpMJd0KZvTTc8HaKH/Nf3XbH
3mlZbGB9l/2HLyTS+BnjCd8u10tm/drbe5mNz6TxT4caHThtEc70kwub7OiR
S+NOk4wKqla6cMuIhivmuufR+INu5zbuPR/Fh3qY9Ot/IYfGJ+/WdJqxOoV3
/nXlrqNpBo2PXW/vfHbUDz5gcEGnkc0SaFyjqq7vE4M83m1ISHHRiyAa/5Dv
EJs1N4+vd3zU494zP47jvaqCWzzsmM0DG+rObd34O43vnm+ZfDkglQ/UP3Nr
ukY6jVcMHmvNkmJ4uKm7ZbPsbBoPg7+Z5pDa72leU/g9c4T70bg3zMdMYX4a
HwP6WAjopfHhsB6uBuujcQnWz0cBDxo3AV58HPBT3Af48mvAm8bFfnCribX7
Q+O6sH/8O+wnrbcH7De/AvtP430hPvgbiBcafwDxxH0gvmhcPXKi8z+XXZhl
cL+cOzbzWcSzvZpvK/JYL4+xLULi81ipy419PXZ7sWzH7Nvdn7uwbnAdF7/j
eH0iXMfF7zhe3zwqdkq3wJO+PmPG764538M+2UKv/NPhuFO+mvn3Xtecv2Kf
/I+vR/ALz9O+LB3OxbFPDjYc8UJj6Bnf9eWp02rO8bBPNp9j1kVDdbvFwrHn
d2+QrOi5UszHzn7TmVo9vwXOK+ZjD76bfK6e3wLnFfOxI3fTa+a3wHnFfGzs
5p0181vgvHszD+3vPCyP+YcnBu1p7sX+PX0r53lZEKt/4taEb855LKnv4EFD
rb1oH93hOi5+x/H6sTfTBs7c68WNem8yVk1WnE9GegFXo/BnN9edOmOBPFsP
Pv4zfaiV78sDtX8Tf/E3m3j0dc33Fjgu7svmwzz0fmEc8PIV/Oh554bH9pr5
fMX8tI8LO6tpJLR6wrdrjdq6YFI23+Fud+3n3O9sfpcSXZPmnjz2xSCDke9y
+KvWljOTP0extebHX/tHenLb6YOUhiXk8on/RJ26XxbKPgAXLjhRHIr7MgeY
h+H9xX2ZA8zD8P7ivuwgzMPw/kr/3/+0JEcDu47Dd0TS9wd0R3eeE6MptfO0
vOs+K5XG9R6qqP1cqClVbL/cPd8zj8Zv5A1t2f+2hvRJamR+PLyYxifvm7bj
yBV1ycazV28Xx3Iaf6L6TmXYBDXJO+XTxNU5lTT+fFHAWefXKlLMsvgPG8qU
JByPFX/j9zj+Uvwe74fj48R8OD+Ofxb6UC+OV4r14Ppw3EisH3nguNP/xUuL
xuseujzGbNPdgf+L846QjOC1oyLY1YvXRjks8qH7Lut+wf5d5xR2eYpWH7/+
H0jHi9r15bDWC3OvehVEkO5RD+89mnuniD3d/2D1pT1faZ1y+CT/V83L2PxN
vT0d4hKIy+rrj3R3swpW3mW6ekRAMkOOcc49P95VU5K+BF8MOLQ0jSHn1Bt5
zVWfKkvpbwNyDN5lMOTsFfYzako3VWlO0eLYj9FZDDl7DGq0JWuJmhQ2qWNY
ixPZDDnP6p00OnieOq0DObdyrNv4cyMNqYfZ+4rlmbkMOfe8cN/Sb7eGlNC8
77G0XXkMOeO6Me7+xjloVNOQax/DWOjTSQ83fXxHnK84rf156kkCixvtO3ni
9VjijOtEPjjfmKZBk+xG5LMxrfJDppdlEufe9zf1syktYse+vzG3is4jzrq1
9ytlpc4rIyPuFBLn0nFNdIc7/mKNPmy3Wt/5J3HWXH68yz9TKxn+DjkPfdDL
9MKbP6xRrwbKbaeWE+eXt/cfj0tXkmYXZrg9L/lFnNPEfuE+I+eYl1cbGo1W
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
9JzIvc1j2fav73Y8ffObbfzSxehkW2UpebDThRt5hTTe/R/1GQu91KSNo9Qd
Cjt8Y89PttDJ71fKDO5/0FlspyI9ro2fYhqfN33Rnlbf1KUtnkY+h59+Z9p/
VCrt5xSyNUoX7LWXqErGbse3bln7k8Zzg8dHrPfRkL5vLE/Ymh7HVGdsXrX7
ZBYrqrc6w7S7mpQYs7LU1aaExsNL2+m6TNQUzxXxbHvHS1rXGiawbkJnS+cw
r+LkEhr/EHfrjNsVTalozovWxroJrCTqpXLRgUCmc+OyVk83TWmruA7jcK9V
fb/MMjXp+K/rfc90K6Xrh4ZkzPg3UmaFdRuGjIzxJp67Cj5mfG/0ix3d8nWi
Y49K4vZgVtSw+VW/2QfrLL2eE/8Qn0YdpMPBTpVMfcSdljsPKknIodWNiDa6
PlXsVZ7DB5NeyhKuN1Ge/cj24B+mtWX6lB03lCVc17vKQ/ZzldWlp+K+qL//
3KAN3fP+sKDM8Y/V4pQl1L+hk7N1/cynrFmbVx+bDfAn/VNN1nqYluSwi2of
j85rpCKh/hHtyx67GeTTvqF+8JV8tuzpykUDtqqR/tA+XkddbxWwq94HbB2s
1Ul/z7edrcpbFFJcoP4w3X2N61f8YdcvhD0zS1Wm57vOUqGx2tRCts08NMTO
SIP0/3Zo7N60y3VWb7F3qFypyNPHIj/7mg4fm31IlfRXCd/A/UT9NsIXtor7
o/6XIv9n2LQ/fkZDk/T7CV/COEL9+LvizIVfx3XVIP3HhL9YHbjZ8GG2Jum3
vKf9zWjkSb5z3qzjoxYq/Cf/yIsm991TufLqJvPLPir4X/1zyers4HReLPIA
9UfNNTt05UgGvyI4o44xtf6dyWOVFyobddYg/Y8C76va9c7ieSLPUD/qQh2o
/0iz/GUfD2Zx5IDX3fB/0KrJw8f8yQS7gU0XKXz1em09KOHylXTtgTl/KP4D
37ZfsMGmjDsIX0H9L1fNMFntVs4x3lD/Bg336x89fnEVwQH1W9bLyrSw+82b
Ct9C/UrwPbfKHzQkQU+hf++Y3a/3v/zN+4l4QP3veicGNVjry9/DJ+nnoJvf
hHWQfqFbfgProPwVumUfWAfFgRLoljfBOsivhN/KQ2Ad5EtbYR4+6avrpI/O
qqRfxLG8H9ZB+/QYuPNbsA+kX8SNXAxxRPpF3MjXIY5Iv8hPOQbiiPTHQNzI
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
s68NbakpPxDxgPqN772sSJkbzDvDpyL+QbcMdU2F9L8F3fIWWAfpF3kij4B1
kP7JoFvWg3WQfuG3cj1YB+kfCPPILZx6FtyzUZw/iziWW8A6SH8WcOcc9oH0
i7iRr0IckW8L/5TrQByRb4v8lBMgjiiORdyIPuAn+XA+xI3sD3FEftscdMs4
H+oX+SP/gjiiOBNxzxtAHpD++2K9z0VdxfuJvJUPi3qH+oUvyHNE/UT978W8
OqIOo36Rt/IAUR9Rf3+IG1lNXIf6Rd7KzqJuo/5E8B1+EXyI6uw0EQ/NwUdJ
v/BNeT34KOkXvin7go+S/n1iX+6Cj5J+4ZvydfBR0i/ml1+BPnrOFb4mnwEf
Jf3/gO/zvlAHSH851C35JNQx2k8VqFvyMahjMuqfB3VLToU6JqN+C6hbciOo
YzLq14O6Jc+HOiajfuGb8gv4PekfD3VLVoE6JqP+jVB3eUuow6S/HfQrXPQv
pN8e+hJ5I/QppP8q9B+yrdgf1G8OfYYs/Jb0y9BPyBOgvyD9S6BuyUpQx6iP
NYS+QW4u4hf1n4c+jK+Fvoz0p0Ifxp2FT6D+TtBvcdHXkP5d0FdxjAvUXwX9
E8d8Rf3noU/iMdA3kf7GcD9Z9BGkfxb0SRzzhvIXfsfnQN9E18c93vCj2b4w
H4xHvH7ax8Kzj97pSk/W7Ovt5PSTfGlVp6IJ9/fpS7O/BTxoaVhKvnRieaH2
p1X1pRG/Tw82ty8jX9o3orj0o1ED6efwqQv95peTL61UHRi7yKWBZPj+/pHD
Or/Yf/JCwhNL1DMkf8XGhjENpLmhdadumveLfMnjS4eoqbvqSA0XrTf9NUWN
/N866ILHnzna0jil0Uap4erk/4GB9s6OKTqSxS27h4fqapL//9u64TK9erqS
VtsRgSqlmuT/f3Inu0ZF6Ep8olnrSWe0yP+t7ebWnWWmJ111LQnflqZFPr96
85IX3WYqS9/Ph3wecUWb9MwqqLvT7KqKtGW3v+qZG/VIj2FxxeOxbqrS9hdN
09eN0iM9P++45DdaqyZ962l77/1QfdKz2sPhktbv6nU+m/Kq/JGint5Xvaq3
iqlLIQ+dFyzJUNTNBuqzGy6sk8M+PEns8jNE0Z8oG4W87d45j/XVGxb+Tl/R
X5kOdD4xaU0+exUfu+iuqqK/suUZL1q3KGB9l01eethH0Z+cXTizLMqpgF22
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
p7c6v1bBv937HZlE+zmX67IhnOBxeL+qJH9o2Oje8W9U8D0ppAreW4TH8RPl
lcT//yIVZ25euPZDlV/S2dh48c3661HA8bmxurHa5lSy9mP8cd/qROm8z+D9
oH7wnnfU+3DzqSbpbZT4rb993VZm1Uh6nFZpbRhuHksWcNb93mmmS3pM4P0f
+F4n1JMb6+Md7fmLtEvwuK10S5lHPec7+rpcaBVKln97fXz0sCxJD76/Gd+r
jnpGXNXZP8cljah2XPUo1llN0mMzuOe1DaOe0hn79+QGPPqr5wi8h+Oo+B6x
v3q0k/xavwr+Rpee9GkxR1Nd0pPSrqDmtkMk3b+y0CxiZYak5zO8PxLfY456
lkQ7N0pvVUpn3JxZWJCiIun5vf3wYj+nH1Rhh/gp6cH3dsTAe5BQD23ZrumW
1QqCwD4lPfsYDprGcEl68H2N+N5w1GPCcAjLGC4pXibML9Se+UnSA36h+N4h
1AN+ERozP0l6IE7UkcWNoh58P2JreL8r6oE4CcNY3CjqWch4Q08zHkl6vOG9
G/g+ItTTnvFGyGI8kvRsYDymnxivJT0v4b1+wGtJzzbGYwq8FlCPDstDCnkp
6fnN8o3ie4pQzwqWVxTyTNKz/Vfg5GGnXf0h7yU9x8T31nn74/uTUc+uQKcA
v17B/iZMTpDFC3lNZH4m4GcpXmqQD/0gP1AP8jhFxh/wM773SdLTAfIzDfIV
9SCPgddE5meC9UOyC+rFA6gfqAd5LM+vGqhrrlDnUM9GqF/lUM9Qz3H0iyzf
NcX5fJc5rKOoR6fP6o2Fy2M58LOk5wzwWF5/qiHucjwzIe6VMjwOwOOFsnr4
DHjoJ/PPBuDhE5l/oD7T9bL6DPWUmsji1RbyokgWL+RxQ1l/wTztKOOPCuTp
ZBl/kMejp3ismrr+CievG9ZQX+V1oyiR1Vc5Huh3Ul5APaX4fl7UYwp1bB7U
V9QTDv5ZA3mPeqCeUqyvqOcV1NUA+EQ9ZyFe86EOoZ6vgAPrK+pZDjiwvqIe
Z+DPMqiLqMfp374j6emYMXr2ursqfNGalZZV174S7NeNSmz27xyjwruntfyq
dChFOp4ZY5Oe/1yJn7vdqGSs5k/p+LC3QQ2nOSvyb27csfNvVS4dXwL9rJOs
bgNufpWsL4Q+btg6cnUtCYFP1HMl74uqYm4lSd/hYVB/dcHj8UDoT0GyPrUI
8KUDXpRXcZpw1GJXLvE6V7N+3HVl6fgCwGEq65saa5lfOoGfUP7VQZ3rzVoE
+qMf8Xgl4xmR9/GrzI9UF/yK8loMD30gwzMe+pOK7LpCYP6lI8DfKH+T+Yem
yvyTD/1Jfp2TwuQEF/Aryg9neoUgWRwfQ38yk1133We4hcbgV5TXY3YKV2T8
+QX9aa7sOhD8KLQZeLBhz8OxHMp3YH4XtFgcKB7H/hRhckXb4F24P+qBuAo1
jsyvKA88EBYzXlDZdamwFuoo6skA/1wEv6J8MOMlfQOfeNwL/LMD6ijqCYN4
GYNfUd4UcGQBLjyeCvHqCHUU9bwE/kBeSvLK4Bfgp3R81L/8kfQgz9Rl8UoD
3lyV8SEUeDBcxrfbEFc5n3+t+QePdHw+2Jshy8fX4McwWb5jvBbK6gzUK0Fx
7b/1CnAIN8FPcj6HQBzw+HWIK9gt/Ec+SscVae1Rr4Mq/PDLNu5DYuOk8xpr
BQ/9EKvGvzQdv/K5bpLE58Shu2qL+irx5vmzE5xblEryL43L3DpOrq+7i/w7
rdtcLsl/5Tan63tXk88ntk3PqauT5NsrGT7QTa8jh1r5B7SZpCjl7yfnYblf
wgvJk9NFWyIH/K0be5acS+kdWEyKZi/YlLHx7/WAY9yAnwfuvCKDfcnEg8Lf
uJQfnjS3/YcQsmmff4JJp7/1ylW9TTNllUzay3xgs6xff/Ub++lbP7yXTX01
y7/4jP9bl8brN4rR0flF32a8MD5Q8rf+FDTrFrnpWxV1OOzXVi/r73XFGyYn
TGLfk+w9zeSEYvY9yT89GQ7BneGS5H0YDmEkwyXJD2J2CoeY3VLcwU4hldkt
5elj5kfhPfOrJA9+FHYxv/7t+yxONJzFTZK3ZnES2rC4SfKbGQ9oEuOFxKt2
jAfUn/FCytO5jGdUgfFOko9lPKPDGO8k+YTCR9cK+wVhP5Lk8fpSAf5D+XH/
3m9KeiLBL+gnPI78eAV8weMD31T0u+ZTKq0PbN5zauoJUwP+3pyw8d1OlpBA
uxf9XyyMI3gc5r9JeHL7DPnSYKYe7w37n/fDXAU8ngOfKM/WSerzp1PcTGVO
n3d5d6Svy5FKMgxw3M9QjevTt4hEzmn4M+hLtnRemKtGYM6MpL9Tg1EWXQfp
8PGzRyfXGGrwqKdq5gCbfhoZpGzxBcuux4slPfmwPxnnTqCeEG0zftlpFf7K
qYYDbBbpSnq+lFw4Vrv5K6nqW7XtWZ9SSQ/MMSM4Lxb1JPS0zyjuV0y8Jtae
ORmpL+kx61WlFH3yFd3slFow8exfPc6wT7i5OOfkrx671YVbPkz7QTvsNLy4
rb+BpOfMttCZ3hU/qN7Xln0f3f0p6ZkH861wzirq+ZXoOeRcsIKQHxvSMmyd
nqTHg8aPHTAxn3qyT0kP7iumMKcB9WSLn9oCi6e2pEeX4aBnGS5JD86Twnmf
qAdwCJUMl6QH/EJ3Mj9JesAvwi2Yi4B6OjK/CI7MTxJ/qlmc6EcWN4p6IE7C
Fpg/h3oesjgJsSxuFPUAb2gF45GkB3gj4LwE1HOV8UYIYjwSUE804zEFXkt6
JsDcoTiYF4h6khiPhfaM15KeVywPqSfLS0mPFezPxTkKqMeN5RXtwPJM0qP5
eVJgn3aP/SHvJT3jxLk6gj/Od0Q9ZiMmOiWWf/Y3Y3KCLF7IayLzMw9+JjI/
8xGQH6gHeXxGxh/MT/CzpOca5Gcg5CvqQR57yPgMfibgZ0nPD6gXbaF+oB7k
sTy/cF4M1jnU4wX1qz3UM9SzDf0iy3cN8flBNw7rKOoZ1KWu1/bqdA78LOn5
DDyW1x+os1SOxxni3lGGpxx4XC6rh2OAhwky/0QBD7vI/HMPeBwlq8+4Xz5f
Fq/LkBdhsnhBf6GCrL9gnu6Q8QfqqZAl4w/yuEHjhrNyvrtx8rpxAeqrvG5s
h/oqx+MPeYZ6oJ4KWF9RTyHUsRKor6jnAfjnG+Q96oG5NxTrK+opgLqaDp9S
HYN4lUIdQj04vxHrK+qpAhx5gAv1RP7LH0mP6799R9KzY2OKeY/BerzD7Mou
U9WTCPZr+3cX9X6k6PJmX2M1FkYWSMe/NYmN+DGoEe8QaJWzvVGddHy5yaWg
yNkN+f0Ll7VqtUWJl/o+9LPrsroNuPkaWV84sEHb+bGlBr8XPlGP9eWYwz2c
VfmDhq/bLm6iLR3PgP6UJ+tTlwDfV8CL8odvDx+X/qOcOHY+GDVsga50vBRw
FMj65jPwC/oJ5dsFPrU9Z/jWH6938Pg+sFPexxcwP9JT4FeUt2N4qBxPOvQn
+XXFLuZfYTX4G+WPMP8I+2T+eQ39SX6dY8HkhKPgV5QHvcJuWRyhLggxsusu
B4ZbcAS/ojzYKcyV8QfqlHBVdh0IfhRCFM4u/9wsg0N58LvwgsWB4nHsT759
5hvsqo7zRz1OgGc/+BXlIxgPBGfGC+k49ksPqKOo5xD45yD4FeWBl8J++MTj
2L+xn6MeyAcB8kOSPwY4ogAXHg+AeF2HOop6TgF/IC8l+cfgF/QTHv/xL38E
mX/4I7J4HQDe2Mj4gPm8Qsa3NRBXOZ+v/4tHOn4W7I2Q5aMF+HGfLN8xXudl
dQbtvCerV8i3ZeAnPL4S/L4X4iDVAYjrfojzf+SjdPzQzojXaw30+LhIswYx
gzKl8/YdMK2Pp7YBb+5s3GVcarbE5x2aW9ycTHX4/i1apnoGKUh2TVDbk7wj
S5cvmbL9xqFHSlIeqWjEbTBuos4rTtLM2/xNU5Lfdj/TODVQk+/WLy1j4OcG
kvx3z4XOC2yrSPbuN/2OKfz1f+iVqR2nn6klrVruWtAk5m8dK948d2S4wWcy
z+yEnsGUv3H5WJA5IWz2F+Kl2+r0q0l/65V3nNE5pd4ltJOG9YYg17/6+441
vrBudRndtMRlwSjHv3UpfdgQrWfaKoLroSHPLPgGkrw5cen3cJGakB9/fHCY
TSNJ3oXJCZnse5J8HpMTdrDvSfIdGQ7hKcMl+R9wCAMYLsn/YKfwjdkt8eEh
s1MIYHZL+Q5+FCKYXyX51syPwivmV0lehcVJUGRxk3jSi8VJ2MLiJuVdX8YD
AXghyRczHgjAC0m+hPGMAu8keXvGM9qH8U6Sb57eebGD+wfsR5I8Xl8qwH8o
//zf+01Jz2PwC/BBOg5+428BX/A4B88JrYPnyVeLz5cXkvULIjfNbLJv5IBP
Z9ynt94yMky8/i0k/Wa/r/PyfEM2Hvlwwmm/Pzmd+br6Sv9Ckua1izOd/pWY
k9Xaf/Y7vM+oC5k8sIDUwvNJPeC59zbic/B5ZK7v1v1/np9btNyn75/nY9tM
SDdZ0iyXuCf4aP55vurF6PHZf55TfrPQfWuwSjbpDc8/vYfn8D+Knxkk+LVT
kz/P84WJcjHEX/xeKtkI9gwH+9CuzYC7L9iB+LcD7lSwA/H3Btw1YAfiXwK4
54AdiN8fcKMdiP8j4EY7EP87wP0K7ED8bUV9cURHlS7781wZO98P3EdA8Dkx
ts8hjnwQ8SaS14odbP48v7ZbtCeSOIj2JZHbt3Qm/HkOzUK0/wNZA/sr8Dm0
k6K//MlbeA7bAp7bPHZpvMf01pYjfe6Pnld+bRm3HuTQnwPmepTtu9p2+ECR
J5YST2zb/PDQ3bSV2wTnQz9vnVW3RMF0D7cN8KGftY/ca7n+liXXE+xBPx+y
mvzVOcyGWwz2o58b110nWkpHuZfgL/Rz5GnlwJtlx7kP4F/0czvrvR/jL53k
UA79vBr2m3AynqxjPKH9ZTzZwnhC02U86Qb7TepkPFnIeELnyXjynPGEesh4
AvtMaB8ZT14zntAQGU9aMJ7QRjKeNIf9JjtlPAllPKFhMp7YMZ7QOzKeLIP9
Jq9kPAlmPKH7ZTwxhucbN8vqyVpWTwKNZfWkD/MvNZfVE8hDuktWT6rhOcl+
snoym/mXLpPVk7vMv5TK6kkveK4yXFZPgph/6UdZPQHe0ymTnz92nniGQ7uA
39RtrUts9x4uHOIHftNp31Lbn6zw5BA/8JsOveU46tTTxxziB35TTmHCnel+
vhziB35TXqm3RYedzyX+Ar+pTRuFC2qJ/hzih79Tvf1qt6tyKIf4WzN91M7s
+ssLE4M45Elrdn7ap+PtOO3VrzjkyTuGl765PrDT1LHBHPLkFLOPburb9O6R
jGAOecL2JRXSjv2XtfGaGMIhTyDONNHwtb3dhhAOeTISeLIU8k/yJ/CkO+NJ
IPJkIPBkBeQl+jkDeLIR8hL9jM/Ttoe8lPIReDIX8hL97Ak88YG8RD/3A56E
QF5K+Qg8oZCX6OetYM8wsA/t2g64e4MdiH834E4BOxD/AMBdBXYg/uWAexbY
gfgFwO0GdiD+r4Abnh+W8H8C3Mh3xN8J6kkDVk8o8qQT1JNt8Nwx8uQr1JNg
Vk8o8uQ81JNbrJ5Q5MkmqCeB8Jwy8uQz1JM98Jw78sSjwMq44vo94kFe68ek
3SBHVpd0blpUSMa0LegTSoLJsR3als2Nn5KmLa3tT9oWktt1mxZ8X/CZvLX8
0MnP6BXptNDl6cnHBSTu7qnxB47V41pcZNkq/g0xH1zk8/JAPtm1bPCRRb2S
icPwACN1r6+kwN734JrqbGL62vPsmEspJGvd+NwHeyPJ0OkVrbu+yCR9d899
ND0sjXzP0VcZVBdFLHI+5B/rmU5UNQqMdnlnkHU3jw+2HBxLJrf61i1gYUp9
PbbZcHRuFhF+t1BY3TyeKMSMavDsSiJ5sGmk1Yh72cS9X8eT4bcTyGzL1OQN
baKJS2MdY48HueSDvbLOl7IkktzcI8LsiAeZZnziee23h2QoF/xiuNNLcrfH
rc1mQiEp1T6x0z31NZm9Y6pydulX0rLXzNHlegXE551avt3iL+TZz6uB3fUT
ycGLHxtb/sghoZqmgw3GfCOHhaIjHex/kGUNrwdeDMkivaL7H1qR9Z10fF6d
4/09lehsKYssnZdBLiy+4jqu+RyuvPe5Ott23mTTir35TbMLyZXkHXrhZCNn
eupLbcn7MOLS/+2wPtsKyUytDSW1n3ZyDydYFY5N+EqapbmtbXiu/jqw67PN
hsMPcMKPpWHfLsaQ8ODXC/fNzieqka0eF5Yd5iZNutftrEIqCe2VHz+GZpOF
5k+XjlQ6zrne3+xUGZxOjtIHI7vtyiQm60d2GR10grtzfWvMtFFZxG/Ozzy7
pDSyZlfVuw7dT3GD2mYNtTfPIUMevkp/ppZC9PuPmdNukAO3PO/wpPuT8wif
OLXyRWYCMRqkcDJisyNnNvrYvWdv84neWaUndEUUiTXquajWxYk7cjV617iq
QmIaYN6mrONt0mtg2R1rq8fU71iH8y+nBxLNvr8zmnoXkmkT2y/ucjuUHptV
01S4HEEGhpE1WwvySffH7dSrH3+h/c1P6HV1SyQj3/QrtPfIIUaG3MxnTt/o
78M55iPDfxDjGZ9dttpmkWc9728b3ieKhnxd/71R4zRCO6seW6eTQZwc+LOX
Z3rTA1VfLkWbuBFPw2iviORCUvv1+fqq8tf0mn9Cy7jFz8nmXO7umSX1x/u8
ufyrLpxenrrovN7NYLLVrPPtebsKSHbJgmf+77/TZ+carjo28x3J76Q3VqdH
PiGJXg6tTOKpvpFacJv54eRVgVd0gk0uiQ3UffrgZTJdUtvVa8nMCNKlMLC2
hU02CRnzoTbfKJUyfN9JgIg7k6jprUp9aJxOOdGeaNJWtDON5J1ceduoaSbl
RftjSV/RLz/IsYgjh3p5ZNHW43w3fLOIJ8s71Ew73T+BRF1Z0DAhN5sOFf1Y
f38g+vc7uWC9fYdRXA7ta14+x0spieyaUutMz38mM9t/sk3ekUt1xHgkERMx
TkHkJj9j7XifXNryp1O3nbVJpLWiWezOY84kf2zIoK8GwXSZ3fjoq3MvcQbn
jK0PuRaSpUuKB1k6htO3Aa5rk9vd4T5cejzkz3PhyowXdHGbgS02fnvAbQG+
9Gf8ol7XOhdM/f2UGwq882Z8pAdLlCOa33rBuQNPbRh/6Z63Fw175wdw7sDr
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
Wabh6nzl8XXzAjcmE6UHPw8v2ZpHIm8FPN57So0PCRtW+Ukrh6gcD2h381Q5
UVzjfLx1NxV+/prthVdXF5CpCokrB82sImN1fV5tO6vEz/Ds2X9S72Iyvu+T
3w1f1ZJEtdpTFUEKvNZLh0dr727l4i/+WjH2yQfSvLtG6ZcCdX7thM7P4x7a
cqOmj31SHv2DnFpdtCX1nDrvsuzx0wODHTgLi6xBmVPyyLlu73W1CtX4Doe5
1zN6nuc0dj2xS+pXQpaoe4Qu+q3Kz7Nsdz7T/Aan5p76Jv5QDckLif+x3USZ
3/tu7xcvRRfukePxwdUzFXh7f+OMxIuK/P0eS+4V67pyjeN9tlb1VeKv2+mF
Tjf5Te5uHp91OekO97166LAN35T5NQbVDwy0qknM4nO6Mevucv5fhoxXHKrK
Tx+ao/hhczlpOrXF8gBXd86z2/tPk+ap8ZvKNhw0sSsmxbVmd6ec8ZDmieCc
LItdXbQP7PTkTHafbu5Trc43C3q+ef0zf7IqfYDFKPKOzgpd8VX75Xdy1ce9
2DRUnTec8mP5kqpkatV3ZHqb9flkksbbMxHb1fib04utfp3IoWW7opSv15ST
XxXlT7v9VuY7t1tYfSa2gFqFLfNY4ldFeh5o8eLsSiW+Nt/b2WxVMe352PRt
09Z1pObzhZsfTyjwnwtHb06v/kBpspPWj5cCMdbVD7ueVX/ewEZThlsk0ze2
EQG3VSOIVbmRau+j6nxh1OuDOy2z6UffnulG5glETW10iGK0Gl9yOWj5x2bF
NGOA8aL0gFSyptYzYHKyKr96WoHO3OFlVG/fSNs+h7NI68i1Zp1dVHjH9+Ot
DhtVUqOlHub21Xmks1lztfPtlPmh2s6laW41tFbEV0QUCv7gVuRPOjeOVI/+
TXuJ9vwkvUQ768i2DrdGzDJVFKpF+0uIm+iXKnIo+2CnFEsl4ejuHnOWLSoj
VoaHb+eklxHzI8Wf082VhWmiH8tJC9G/9efp1bzlrI4qwoUrUaFKoyvImSZm
JiaPMon7tftrsy6oCDfFeFQQczFOsUR/2JmPA8Pqj1/u2LZpXQUpPab98Uwn
b3Ki6WC/59fiaYn7vWul/BPOIP/a+uUv1fmNjBd06cXNQ02WhUp8Wc74RVfe
X3vRgnzhooF3zoyPNLvATvvbrwiuCfD0JOOv0HB34JGUbd+5x8Brk85Xciaf
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
gvFXWLHybQjnk8IdBF7HkAf9vl6Mo3vSDQyd4z9Th64Z/qczDPiHebeOXeuU
T30PXR9QEZFML2zT7bn9lAH/boLm4EDdcrroQMmkK/uyaUfzsNmryvT54sMH
VrpOqKU9qc3Gq5lF9JZby8ApbfX5gb/c/DvoKgnqefuNrOJK6Xvv22Yxunr8
mVIrx+mjVYWdkwc34ex/0cGl32zzzjXiz48646vRV0PQE/O/mrK6UH9dZPDd
Lu2zlvBCrBd1dKdYRzT5mk6hzbcaNRQ+i/VFQegk1h1VXjPk7vwpqo2Elsrf
T2VlKQp1Kuv73f5Yf/3Z5kq663hdoYdYp5SEKrF+VROjeY9GjPyuK7wZtHuU
1jZlYWPcwYtvXv8kC8b8Xn+7j56wQax3ysJ7sQ6mkns5/a76mOoJU4u9Ol2u
vw49/CL1aF72Q/L+3Ulh8JcYuux78Wi6KIPGJLafmuVvwC+5HK0f7plOe69P
mOAV/JM2CVgU68Ib8Ppi3S2gLy3IoMatqugcsR7r87Fi/S6nT6JPHj6eqCyc
Euu6Ll8l1vsqSr67b0vPVRM0xT7QkH8o9odaGmbW0WnPQ03htdg3tPjwa7oZ
V2++J2liHadknFjXDfiLLN4kg8WfYNyN32w0cVizkcuD+oL1ZgzLc+rA8l7K
9zdMjn78OrmP47HrUn0qYvWajjJ/pW1k48Vh3Q5iOOhdhosinnmsv9JJrN9S
7LPR60f+mt+2Af9J7IsKvL3YJ9X53q7exQ8G6/DLP/kdv75NkS8+MNu7gZMy
b+LTbnJgbiP+h9hflfjJYr/9TZyKK/eqXqu/Hhf7cX2eiv25nPTYcznqoY4e
f0rs38r8VrGf55JhI7vMMp+kx/MiDmV+nIgvgmTD/MmwhG3Wk4uDSJHKs7ri
CgNpjjXOx8brh7cglwXfQ/lBIt9/kxB1ywS6QJu3EvNAg49iPOYrGa+hj6ry
HRiPeVXGa74G+MzyTInf+jJ+k/GaRvxAMf8UeNaHlfhHjO98GfCc5asSf/z4
/XFdN+nyG8U8riQXxfxW5vMHBmdGFejyVMz7IuIo8kKZrxng3V2F0+PPibxJ
IrMZ73l3lgd82nPGf37XYZ9WwmMO++gj6Kvrx2wdodXCm5PPGb5jXf5551Af
DvuxLvTn1IK5TqGNfblq6N9noZ9nlN0davzAl8N+Hwr9X1VjSlXab1+JZwVw
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
9QBrz16p
    "], {{{}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{562, 1, 551, 227, 16, 349, 2284, 31, 356, 46, 2538, 363, 61,
         370, 2307, 76, 377, 91, 2551, 384, 106, 391, 2330, 121, 398, 136, 
        2564, 405, 151, 412, 2353, 166, 419, 181, 2577, 426, 196, 338, 564, 
        211, 561, 433, 212, 213, 1803, 214, 215, 1804, 216, 217, 218, 219, 
        220, 1930, 547, 221, 548, 222, 549, 1805, 223, 550, 224, 340, 565, 
        225, 559, 339, 210, 335, 2374, 195, 327, 180, 2511, 319, 165, 311, 
        2351, 150, 303, 135, 2491, 295, 120, 287, 2328, 105, 279, 90, 2473, 
        271, 75, 263, 2305, 60, 255, 45, 2454, 247, 30, 239, 563, 15, 560, 
        347, 14, 555, 13, 1931, 554, 12, 553, 11, 552, 1765, 10, 9, 8, 7, 6, 
        1763, 5, 4, 1761, 3, 2, 341, 562}]}, 
      {GrayLevel[0], 
       Line3DBox[{1105, 573, 1106, 588, 1108, 2619, 603, 1110, 618, 2945, 
        1112, 633, 1114, 2642, 648, 1116, 663, 2947, 1118, 678, 1120, 2665, 
        693, 1122, 708, 2950, 1124, 723, 1126, 2688, 738, 1128, 753, 2953, 
        1130, 768, 1132, 783, 1133, 784, 785, 1977, 786, 787, 1978, 788, 789, 
        790, 791, 792, 2104, 1101, 793, 1102, 794, 1103, 1979, 795, 1104, 796,
         923, 1144, 797, 1141, 922, 782, 920, 2709, 767, 912, 752, 2850, 904, 
        737, 896, 2686, 722, 888, 707, 2832, 880, 692, 872, 2663, 677, 864, 
        662, 2815, 856, 647, 848, 2640, 632, 840, 617, 2797, 832, 602, 824, 
        1143, 587, 1142, 929, 586, 1137, 585, 2105, 1136, 584, 1135, 583, 
        1134, 1939, 582, 581, 580, 579, 578, 1937, 577, 576, 1935, 575, 574, 
        1105}]}, 
      {GrayLevel[0], 
       Line3DBox[{1699, 1167, 1700, 1182, 1702, 2961, 1197, 1704, 1212, 3287, 
        1706, 1227, 1708, 2984, 1242, 1710, 1257, 3289, 1712, 1272, 1714, 
        3007, 1287, 1716, 1302, 3292, 1718, 1317, 1720, 3030, 1332, 1722, 
        1347, 3295, 1724, 1362, 1726, 1377, 1727, 1378, 1379, 2151, 1380, 
        1381, 2152, 1382, 1383, 1384, 1385, 1386, 2278, 1695, 1387, 1696, 
        1388, 1697, 2153, 1389, 1698, 1390, 1517, 1738, 1391, 1735, 1516, 
        1376, 1514, 3051, 1361, 1506, 1346, 3192, 1498, 1331, 1490, 3028, 
        1316, 1482, 1301, 3174, 1474, 1286, 1466, 3005, 1271, 1458, 1256, 
        3157, 1450, 1241, 1442, 2982, 1226, 1434, 1211, 3139, 1426, 1196, 
        1418, 1737, 1181, 1736, 1523, 1180, 1731, 1179, 2279, 1730, 1178, 
        1729, 1177, 1728, 2113, 1176, 1175, 1174, 1173, 1172, 2111, 1171, 
        1170, 2109, 1169, 1168, 1699}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
       Line3DBox[{1761, 1806, 1762, 1809, 3351, 1767, 1812, 1770, 3362, 1815, 
        1773, 1818, 3352, 1776, 1821, 1779, 3366, 1824, 1782, 1827, 3353, 
        1785, 1830, 1788, 1833, 3356, 1791, 1836, 3357, 1794, 1839, 1797, 
        1842, 3360, 1800, 1845, 1803}], 
       Line3DBox[{1763, 1807, 1764, 3361, 1810, 1768, 1813, 1771, 3363, 1816, 
        1774, 3365, 1819, 1777, 1822, 1780, 3367, 1825, 1783, 1828, 3354, 
        1786, 1831, 1789, 3369, 1834, 1792, 1837, 3358, 1795, 1840, 1798, 
        3370, 1843, 1801, 1846, 1804}], 
       Line3DBox[{8, 23, 2290, 38, 53, 2298, 68, 2313, 83, 98, 2321, 113, 
        2336, 128, 143, 2344, 158, 2359, 173, 188, 2367, 203, 218}], 
       Line3DBox[{1765, 1847, 1902, 1848, 1889, 1849, 1904, 3379, 1850, 1890, 
        1853, 1906, 1854, 1891, 3374, 1856, 1908, 1857, 1892, 1859, 1910, 
        3380, 1860, 1893, 1862, 1912, 1863, 1894, 3375, 1865, 1914, 1866, 
        1895, 1868, 1916, 1869, 3355, 1896, 1871, 1918, 1872, 1897, 3377, 
        1874, 1920, 1875, 1898, 1877, 1922, 1878, 3359, 1899, 1880, 1924, 
        1881, 1900, 1883, 3373, 1926, 1884, 1901, 1886, 1928, 1887, 1930}], 
       Line3DBox[{1805, 1933, 1932, 1929, 1888, 1802, 1844, 1927, 3382, 1885, 
        1799, 1841, 1925, 1882, 1796, 3378, 1838, 1923, 1879, 1793, 1835, 
        1921, 3381, 1876, 1790, 1832, 1919, 1873, 1787, 3376, 1829, 1917, 
        1870, 1784, 1826, 1915, 1867, 3368, 1781, 1823, 1913, 1864, 1778, 
        1820, 3372, 1911, 1861, 1775, 1817, 1909, 1858, 3364, 1772, 1814, 
        1907, 1855, 1769, 1811, 3371, 1905, 1852, 1766, 1808, 1903, 1851, 
        1934, 1931}], 
       Line3DBox[{1935, 1980, 1936, 1983, 3392, 1941, 1986, 1944, 3384, 1989, 
        1947, 1992, 3394, 1950, 1995, 1953, 3386, 1998, 1956, 2001, 3396, 
        1959, 2004, 1962, 3388, 2007, 1965, 2010, 3398, 1968, 2013, 1971, 
        2016, 3400, 1974, 2019, 1977}], 
       Line3DBox[{1937, 1981, 1938, 3383, 1984, 1942, 1987, 1945, 3385, 1990, 
        1948, 1993, 1951, 1996, 1954, 3387, 1999, 1957, 2002, 3397, 1960, 
        2005, 1963, 3389, 2008, 1966, 2011, 3399, 1969, 2014, 1972, 3390, 
        2017, 1975, 2020, 1978}], 
       Line3DBox[{580, 595, 2625, 610, 625, 2633, 640, 2648, 655, 670, 2656, 
        685, 2671, 700, 715, 2679, 730, 2694, 745, 760, 2702, 775, 790}], 
       Line3DBox[{1939, 2021, 2076, 2022, 2063, 2023, 2078, 3393, 2024, 2064, 
        2027, 2080, 2028, 2065, 3401, 2030, 2082, 2031, 2066, 2033, 2084, 
        3395, 2034, 2067, 2036, 2086, 2037, 2068, 3403, 2039, 2088, 2040, 
        2069, 2042, 2090, 2043, 3408, 2070, 2045, 2092, 2046, 2071, 2048, 
        2094, 2049, 2072, 2051, 2096, 2052, 3410, 2073, 2054, 2098, 2055, 
        2074, 2057, 3412, 2100, 2058, 2075, 2060, 2102, 2061, 2104}], 
       Line3DBox[{1979, 2107, 2106, 2103, 2062, 1976, 2018, 2101, 3391, 2059, 
        1973, 2015, 2099, 2056, 1970, 3405, 2012, 2097, 2053, 1967, 2009, 
        2095, 2050, 3409, 1964, 2006, 2093, 2047, 1961, 3404, 2003, 2091, 
        2044, 1958, 2000, 2089, 2041, 3407, 1955, 1997, 2087, 2038, 1952, 
        3402, 1994, 2085, 2035, 1949, 1991, 2083, 2032, 3406, 1946, 1988, 
        2081, 2029, 1943, 1985, 3411, 2079, 2026, 1940, 1982, 2077, 2025, 
        2108, 2105}], 
       Line3DBox[{2109, 2154, 2110, 2157, 3422, 2115, 2160, 2118, 3414, 2163, 
        2121, 2166, 3424, 2124, 2169, 2127, 3416, 2172, 2130, 2175, 3426, 
        2133, 2178, 2136, 3418, 2181, 2139, 2184, 3428, 2142, 2187, 2145, 
        2190, 3430, 2148, 2193, 2151}], 
       Line3DBox[{2111, 2155, 2112, 3413, 2158, 2116, 2161, 2119, 3415, 2164, 
        2122, 2167, 2125, 2170, 2128, 3417, 2173, 2131, 2176, 3427, 2134, 
        2179, 2137, 3419, 2182, 2140, 2185, 3429, 2143, 2188, 2146, 3420, 
        2191, 2149, 2194, 2152}], 
       Line3DBox[{1174, 1189, 2967, 1204, 1219, 2975, 1234, 2990, 1249, 1264, 
        2998, 1279, 3013, 1294, 1309, 3021, 1324, 3036, 1339, 1354, 3044, 
        1369, 1384}], 
       Line3DBox[{2113, 2195, 2250, 2196, 2237, 2197, 2252, 3423, 2198, 2238, 
        2201, 2254, 2202, 2239, 3431, 2204, 2256, 2205, 2240, 2207, 2258, 
        3425, 2208, 2241, 2210, 2260, 2211, 2242, 3433, 2213, 2262, 2214, 
        2243, 2216, 2264, 2217, 3438, 2244, 2219, 2266, 2220, 2245, 2222, 
        2268, 2223, 2246, 2225, 2270, 2226, 3440, 2247, 2228, 2272, 2229, 
        2248, 2231, 3442, 2274, 2232, 2249, 2234, 2276, 2235, 2278}], 
       Line3DBox[{2153, 2281, 2280, 2277, 2236, 2150, 2192, 2275, 3421, 2233, 
        2147, 2189, 2273, 2230, 2144, 3435, 2186, 2271, 2227, 2141, 2183, 
        2269, 2224, 3439, 2138, 2180, 2267, 2221, 2135, 3434, 2177, 2265, 
        2218, 2132, 2174, 2263, 2215, 3437, 2129, 2171, 2261, 2212, 2126, 
        3432, 2168, 2259, 2209, 2123, 2165, 2257, 2206, 3436, 2120, 2162, 
        2255, 2203, 2117, 2159, 3441, 2253, 2200, 2114, 2156, 2251, 2199, 
        2282, 2279}]}, {
       Line3DBox[{2284, 2453, 2578, 2375, 2283, 2376, 2285, 3351, 2377, 2286, 
        2378, 2287, 3302, 3361, 2288, 2379, 2289, 2380, 2290, 2381, 2291, 
        2447, 2526, 2382, 2579, 3379, 2448, 2527, 2383, 2580, 2449, 2528, 
        2384, 2581, 2450, 2529, 3303, 3371, 2582, 2451, 2530, 2606, 2607, 
        2583, 2452, 2531, 2385, 2454}], 
       Line3DBox[{2305, 2463, 2537, 2462, 2304, 2612, 2613, 2536, 2461, 2303, 
        3313, 3364, 2535, 2460, 2302, 2459, 2534, 2458, 2301, 2457, 2533, 
        3374, 3312, 2300, 2456, 2532, 2455, 2299, 2390, 2298, 2389, 2297, 
        2388, 2296, 3363, 3305, 2295, 2387, 2294, 3362, 3304, 2293, 2386, 
        2292, 2465, 2584, 2464, 2538}], 
       Line3DBox[{2307, 2472, 2585, 2391, 2306, 2392, 2308, 3352, 2393, 2309, 
        2394, 2310, 3306, 3365, 2311, 2395, 2312, 2396, 2313, 2397, 2314, 
        2466, 2539, 2398, 2586, 3380, 2467, 2540, 2399, 2587, 2468, 2541, 
        2400, 2588, 2469, 2542, 3307, 3372, 2589, 2470, 2543, 2608, 2609, 
        2590, 2471, 2544, 2401, 2473}], 
       Line3DBox[{2328, 2482, 2550, 2481, 2327, 2614, 2615, 2549, 2480, 2326, 
        3315, 3368, 2548, 2479, 2325, 2478, 2547, 2477, 2324, 2476, 2546, 
        3375, 3314, 2323, 2475, 2545, 2474, 2322, 2406, 2321, 2405, 2320, 
        2404, 2319, 3367, 3309, 2318, 2403, 2317, 3366, 3308, 2316, 2402, 
        2315, 2484, 2591, 2483, 2551}], 
       Line3DBox[{2330, 2490, 2592, 2407, 2329, 2408, 2331, 3353, 2409, 2332, 
        2410, 2333, 3354, 2411, 2334, 2412, 2335, 2413, 2336, 2414, 2337, 
        2485, 2552, 2415, 2593, 3316, 3355, 2553, 2416, 2594, 2486, 2554, 
        2417, 2595, 2487, 2555, 3376, 2418, 2596, 2488, 2556, 2610, 2419, 
        2597, 2489, 2557, 2420, 2491}], 
       Line3DBox[{2351, 2502, 2563, 2501, 2350, 2616, 2500, 2562, 2499, 2349, 
        3381, 2498, 2561, 2497, 2348, 2496, 2560, 2495, 2347, 2494, 2559, 
        3377, 3317, 2346, 2493, 2558, 2492, 2345, 2426, 2344, 2425, 2343, 
        2424, 2342, 3369, 3310, 2341, 2423, 2340, 2422, 3356, 2339, 2421, 
        2338, 2504, 2598, 2503, 2564}], 
       Line3DBox[{2353, 2510, 2599, 2427, 2352, 2428, 2354, 3357, 2429, 2355, 
        2430, 2356, 3358, 2431, 2357, 2432, 2358, 2433, 2359, 2434, 2360, 
        2505, 2565, 2435, 2600, 3318, 3359, 2566, 2436, 2601, 2506, 2567, 
        2437, 2602, 2507, 2568, 3378, 2438, 2603, 2508, 2569, 2611, 2439, 
        2604, 2509, 2570, 2440, 2511}], 
       Line3DBox[{2374, 2523, 2576, 2522, 2373, 2617, 2521, 2575, 2520, 2372, 
        3382, 2519, 2574, 2518, 2371, 2517, 2573, 2516, 2370, 2515, 2572, 
        2514, 3373, 2369, 2513, 2571, 2512, 2368, 2446, 2367, 2445, 2366, 
        2444, 2365, 3370, 3311, 2364, 2443, 2363, 2442, 3360, 2362, 2441, 
        2361, 2525, 2605, 2524, 2577}], 
       Line3DBox[{2619, 2944, 2782, 2796, 2710, 2618, 2711, 2620, 3392, 2712, 
        2621, 2713, 2622, 3319, 3383, 2623, 2714, 2624, 2715, 2625, 2716, 
        2626, 2790, 2864, 2717, 2912, 3393, 2791, 2865, 2718, 2913, 2792, 
        2866, 2719, 2914, 2793, 2867, 3320, 3411, 2915, 2794, 2868, 2932, 
        2933, 2916, 2795, 2869, 2720, 2797}], 
       Line3DBox[{2640, 2807, 2875, 2806, 2639, 2938, 2939, 2874, 2805, 2638, 
        3329, 3406, 2873, 2804, 2637, 2803, 2872, 2802, 2636, 2801, 2871, 
        3401, 3328, 2635, 2800, 2870, 2799, 2634, 2725, 2633, 2724, 2632, 
        2723, 2631, 3385, 3322, 2630, 2722, 2629, 3384, 3321, 2628, 2721, 
        2627, 2783, 2798, 2955, 2954, 2945}], 
       Line3DBox[{2642, 2946, 2784, 2814, 2726, 2641, 2727, 2643, 3394, 2728, 
        2644, 2729, 2645, 1993, 2646, 2730, 2647, 2731, 2648, 2732, 2649, 
        2808, 2876, 2733, 2917, 3395, 2809, 2877, 2734, 2918, 2810, 2878, 
        2735, 2919, 2811, 2879, 3402, 2736, 2920, 2812, 2880, 2934, 2935, 
        2921, 2813, 2881, 2737, 2815}], 
       Line3DBox[{2663, 2825, 2887, 2824, 2662, 2940, 2941, 2886, 2823, 2661, 
        3331, 3407, 2885, 2822, 2660, 2821, 2884, 2820, 2659, 2819, 2883, 
        3403, 3330, 2658, 2818, 2882, 2817, 2657, 2742, 2656, 2741, 2655, 
        2740, 2654, 3387, 3324, 2653, 2739, 2652, 3386, 3323, 2651, 2738, 
        2650, 2785, 2816, 2957, 2956, 2947}], 
       Line3DBox[{2665, 2948, 2949, 2831, 2743, 2664, 2744, 2666, 3396, 2745, 
        2667, 2746, 2668, 3397, 2747, 2669, 2748, 2670, 2749, 2671, 2750, 
        2672, 2826, 2888, 2751, 2922, 3332, 3408, 2889, 2752, 2923, 2827, 
        2890, 2753, 2924, 2828, 2891, 3404, 2754, 2925, 2829, 2892, 2936, 
        2755, 2926, 2830, 2893, 2756, 2832}], 
       Line3DBox[{2686, 2843, 2899, 2842, 2685, 2942, 2841, 2898, 2840, 2684, 
        3333, 3409, 2897, 2839, 2683, 2838, 2896, 2837, 2682, 2836, 2895, 
        2048, 2681, 2835, 2894, 2834, 2680, 2761, 2679, 2760, 2678, 2759, 
        2677, 3389, 3326, 2676, 2758, 2675, 3388, 3325, 2674, 2757, 2673, 
        2787, 2833, 2786, 2958, 2950}], 
       Line3DBox[{2688, 2951, 2952, 2849, 2762, 2687, 2763, 2689, 3398, 2764, 
        2690, 2765, 2691, 3399, 2766, 2692, 2767, 2693, 2768, 2694, 2769, 
        2695, 2844, 2900, 2770, 2927, 3334, 3410, 2901, 2771, 2928, 2845, 
        2902, 2772, 2929, 2846, 2903, 3405, 2773, 2930, 2847, 2904, 2937, 
        2774, 2931, 2848, 2905, 2775, 2850}], 
       Line3DBox[{2709, 2863, 2911, 2862, 2708, 2943, 2861, 2910, 2860, 2707, 
        3391, 2859, 2909, 2858, 2706, 2857, 2908, 2856, 2705, 2855, 2907, 
        2854, 3412, 2704, 2853, 2906, 2852, 2703, 2781, 2702, 2780, 2701, 
        2779, 2700, 3390, 3327, 2699, 2778, 2698, 2777, 3400, 2697, 2776, 
        2696, 2789, 2851, 2788, 2959, 2953}], 
       Line3DBox[{2961, 3286, 3124, 3138, 3052, 2960, 3053, 2962, 3422, 3054, 
        2963, 3055, 2964, 3335, 3413, 2965, 3056, 2966, 3057, 2967, 3058, 
        2968, 3132, 3206, 3059, 3254, 3423, 3133, 3207, 3060, 3255, 3134, 
        3208, 3061, 3256, 3135, 3209, 3336, 3441, 3257, 3136, 3210, 3274, 
        3275, 3258, 3137, 3211, 3062, 3139}], 
       Line3DBox[{2982, 3149, 3217, 3148, 2981, 3280, 3281, 3216, 3147, 2980, 
        3345, 3436, 3215, 3146, 2979, 3145, 3214, 3144, 2978, 3143, 3213, 
        3431, 3344, 2977, 3142, 3212, 3141, 2976, 3067, 2975, 3066, 2974, 
        3065, 2973, 3415, 3338, 2972, 3064, 2971, 3414, 3337, 2970, 3063, 
        2969, 3125, 3140, 3297, 3296, 3287}], 
       Line3DBox[{2984, 3288, 3126, 3156, 3068, 2983, 3069, 2985, 3424, 3070, 
        2986, 3071, 2987, 2167, 2988, 3072, 2989, 3073, 2990, 3074, 2991, 
        3150, 3218, 3075, 3259, 3425, 3151, 3219, 3076, 3260, 3152, 3220, 
        3077, 3261, 3153, 3221, 3432, 3078, 3262, 3154, 3222, 3276, 3277, 
        3263, 3155, 3223, 3079, 3157}], 
       Line3DBox[{3005, 3167, 3229, 3166, 3004, 3282, 3283, 3228, 3165, 3003, 
        3347, 3437, 3227, 3164, 3002, 3163, 3226, 3162, 3001, 3161, 3225, 
        3433, 3346, 3000, 3160, 3224, 3159, 2999, 3084, 2998, 3083, 2997, 
        3082, 2996, 3417, 3340, 2995, 3081, 2994, 3416, 3339, 2993, 3080, 
        2992, 3127, 3158, 3299, 3298, 3289}], 
       Line3DBox[{3007, 3290, 3291, 3173, 3085, 3006, 3086, 3008, 3426, 3087, 
        3009, 3088, 3010, 3427, 3089, 3011, 3090, 3012, 3091, 3013, 3092, 
        3014, 3168, 3230, 3093, 3264, 3348, 3438, 3231, 3094, 3265, 3169, 
        3232, 3095, 3266, 3170, 3233, 3434, 3096, 3267, 3171, 3234, 3278, 
        3097, 3268, 3172, 3235, 3098, 3174}], 
       Line3DBox[{3028, 3185, 3241, 3184, 3027, 3284, 3183, 3240, 3182, 3026, 
        3349, 3439, 3239, 3181, 3025, 3180, 3238, 3179, 3024, 3178, 3237, 
        2222, 3023, 3177, 3236, 3176, 3022, 3103, 3021, 3102, 3020, 3101, 
        3019, 3419, 3342, 3018, 3100, 3017, 3418, 3341, 3016, 3099, 3015, 
        3129, 3175, 3128, 3300, 3292}], 
       Line3DBox[{3030, 3293, 3294, 3191, 3104, 3029, 3105, 3031, 3428, 3106, 
        3032, 3107, 3033, 3429, 3108, 3034, 3109, 3035, 3110, 3036, 3111, 
        3037, 3186, 3242, 3112, 3269, 3350, 3440, 3243, 3113, 3270, 3187, 
        3244, 3114, 3271, 3188, 3245, 3435, 3115, 3272, 3189, 3246, 3279, 
        3116, 3273, 3190, 3247, 3117, 3192}], 
       Line3DBox[{3051, 3205, 3253, 3204, 3050, 3285, 3203, 3252, 3202, 3049, 
        3421, 3201, 3251, 3200, 3048, 3199, 3250, 3198, 3047, 3197, 3249, 
        3196, 3442, 3046, 3195, 3248, 3194, 3045, 3123, 3044, 3122, 3043, 
        3121, 3042, 3420, 3343, 3041, 3120, 3040, 3119, 3430, 3039, 3118, 
        3038, 3131, 3193, 3130, 3301, 3295}]}}},
    VertexColors->CompressedData["
1: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
9HzRvwDfvlSf
     "],
    VertexNormals->CompressedData["
1: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
LxSj4Wy3B7PWDqIFwnGrIU42r62pKHm3lOm0AKKj/v8+jrewweukbipmi+94
OW+wG+VIz30JcaoermlbtSQNFy5YZ4jLe1Fl30nal4/pPBNYb/caywxqzfms
24+kAz0or2q1Vn0f8EjHPG5pbiduD6BbX3+7Q5wGAx7HZu7LwF03wjZfOTmI
Gm+tTIA4bzzhqt8QkoGXSqpwJ+JB9DLOXxLijJ2zNTw+9TQrUsCM6KXr/+KU
vHz8ZUhUBc6u+xB5wakTCRw6Q/m/R5F7JlaownpynOuKJLtRar4kXb+Ubms5
E/akGotNu67WHd6DRkze0/oae/lIui+hBmfWNyySfdmLNAReUzz3ndgyTUm3
Fl/tdFKyPNeHVtv70TixA89dn7RaXHPu3gqBd33I30yZ6oTG150ZV5wvsr5Z
2cxZyGv7L840tzcvJC1b8I0vt2LIJzryqovm5y7bj92f37fiqS3hjeQThRaf
pHH+dHbzTuhsw9l96i7kE3kgJYon35ib3C5WO27XPSlFPpGg9kHKk6k/6/Xy
FDuwg16COvlE4RzLXkOcTks7XG486MD97VNtySdqVvVUgDhvDP3hIfGxHgcv
TCDx/ovz1pTv0QRHvMzyYCDBFa378o7q4UR/ExGCI/7Pm9XFUqhCfQvtKJ+f
n9mmRXDEM7cfkyG4oqxD0yohTt4Dh5cTHLGC6QdBgus/PF/ovFcnOOJXBfmt
R3Vr/+GpUlu3huCIzx/6fInginwZPEfCgojOuc56pbSV6JzT/+IsY7mkkLzE
g/mYl+Qpymby81jvJyOSl1jCtNuM5CmqYPLz6rml80he4pPLLZ4I271GXyqs
KJ5WCskeJC8x12YOE5KnyIvJz+HIS2IkL3GTyr6PM/Zl/MtPDx+zOSQv8R77
AFmSp6joLTvNz5VGz4iesWcJLtmaLp28+18fSTxY9J3UOe4572RJ6h7HsovR
ea86elqN1Dmuq5j1ldQ9rrtXSNdHGbvU95I6xzkF4Vqk7vEQU+/xAeLPSJ1j
f6nFvqTu8TShb1RfHV2IjpM6x89yONZ7LCrGkVmLab1v5XC4R+ocnwtlP0bq
Hv+td4n7tUS3XGMNKskvb7lm9C9OzY+nRAlv4imzV81dmluLFf3SKC8dldTy
JLyJ19+u2kd4FL+b+4Pm54avgjGEN/EbtgAPwqP4L3++s7OeSngTK82Zspfw
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
EXyyJ0UL8Pk8LZrms/gdnRSyDsRT3a7PA99VJbMePJBe+530Razu9GQB9L2f
L8YozlM0rb+BjytCfv9asi7EXMx6MHrFtzCYr2S3OY4wD8q2PyhvGFffNwT+
N3RvFABeP51zjPbBqam+x8Cn1PDonRP4j8LFbXIA5/49T99CfX33zvsAdWNy
c0Yx4JwcYL0D+M3h0owe4C09Zj1oMnH7M/hw/IxP24O/pv+KSM/BlwqsKxN0
XwNvjqT7HPivfi5TWlIJerjoVXkd6MoI+0mc/8ywTgVe6P0sdgDqS+9AA8X5
6CZF9qG+dNz9RKjz0fAnnBIsTnHuUDwpCXqv7cXsKeBrX87sbzjP3r8R8n7r
xS8NkD/OKZEU59VcnOIwXxuFXsP6F59i9jfqHh+sJzoGW0h7UF1g+nd/Y3la
HcyrPeem64DP+uIblJ/1OS1XQX3lz86zhTztuBdD14NtFaM50K+blT+x3SZ9
T5rZ3yj4KJ4HcX/R0sHgzzo09Qvdn5C8ZesBfCgnKW0LvGI5aPYGcPa7MV8a
+pEF5wxt4HWuN5eGIJ93Np2LJb/D+7+MfAb/UXiDk4dr8xHWwVq6T4dKCui+
HdZk9uuyJ+Ry/oyJSjH7dphNYhLn1/Krk/+MSUtpTO7b4Uhmv45/3S0Wf4ec
FLN/gp8x+ynaPy4edn52VMp1ct8O/92vu/dg+SVRneNSapP7djiW2a9bNrF3
vX6OmhSzP4DHmf0CtV/Z3X7rNaUsJ/ftsACzXzecOzB/tpmWlOLkvh2WYPbr
cP7Nnc7PdKSmTa5/sTazHn75RS3pz5iulMbkvh3OYPbr2lxTDqQt05Mqn9y3
w8+Y/brFe07JwPV9k+s7/I1Z7y1c855+f/Hkvh3ewuzXyR3Xpdd/Te7bYX9m
v26h9rFWM4V4FGYsIyG22wm1dVwqhPdrxo59q6UFYpCjeaTmSG4g8v8xeV0A
OcYKC0ag+Tc3avcZRqHyicnr2Z6ewS2jfmie2g+NCpdY9Ib5/rtCmRrwlWhP
7XR5GROPzvxnSa9zvNwxb12hN7bo/pg0834cWtM1+f11D5eqlQY9wqz9U/fl
GT9B+79PXg+WsFAg/8bB1b8Okr//u+71XTuF/B4HRS8pW1vojYSY+3DE6sJ4
OO5kbQ6ch//IXH/7Nfw4iQ9vd1yWQeLFGUyc7iG3jpPnwef5ZZLJ8+FPzHOt
c4vcS54fn3m/bCPBA//FoTqcu1p0txOOFpjZSfDD69dPPtfG0ykZ1Txx6KJR
yPaQ73fRBtbk941+6LmDP2SG78H7V69mIcFrl5/AeaH+A/U14D8ZublhNfja
ygzHo+G6qX77avC1XZAIXfIj+y2SvR8yHd5ThGaKLRR36kJNj3tIXtYivxgh
bvr+In5+IviXrsV/6Zlemo0eypqEw/uLI3tn7gB/VP8uLjbwtVkktYbAdem5
CXzgt/k1Gm9yLCAHpSc82AvvNdJeFm4DP4/EmxuPHHE9kjWLPUTPy60pNwRf
W3k1W+/h1blIo+P2cOWFXJR+8PYqiHNMzvPwQZcGNPu1+Thcz5KzzQc/0n+F
R2O3ga/t8PSr+5PjUf90Zx14b/Ld+MQG6vOxeFPn2iPJ4olnm3Lrey8qP513
pKCrAZnHDITB9+X4OwxaLR6jxPhgA7GOMCTaPYnnG6OGg936zShwKL3jmVUr
GnkvEQW4ud+qdQJfG//A1DTwtd2rYlHcHLVMpou9aEUOT05dBV9bcM+USMDh
xOBwBvjaYi70GYOvraprzgF4XrXA/96Bry1hH5sg+NqiePpG4bn4H+Z4wvuj
nToBC+G+hRWbct9a7mMNib0KB1/bnY43g88+dqK0z5deQPwmfVwmS71CkPiD
UxrvFaOR8MBk/Ae5F/JeGfuETNgCeMBndPec0GOIf7R5QRf42jw/7ZOEeZt2
nm0GjFNy7TxZj1Wgzq3d4uBry1UsjKK+PFakbqVbJWqsv+wMfquN57r30HOD
8VfV5IWq0ICO0zPIi8UOO+i8HJlTyJ2i0o5Wdy/4IV/XicJWlOwQ+28/K2PA
+TqnZRWatmNbJvjOpL3eR0H8gpu6rC7fckdrr547O+VPHFq/cjLPV0VnFuaS
+pw3V+sc+JjK/lOKgPg9lcxuI8Ibfd7BHDCfBU/9OCH+fQOcbz8TXjj4500G
3L/lrXcMxG9w8/QMqP9tlefPgZ9r/jy0D+LPUT01G3jJtlWjEPKoee5dmm9i
Qj503la8DC+F93UH9ugovTssxbq7e5To+3ikZ9UI/hi080gczR91T82umpQr
WPpSrOEc13iUx9Tvp87RreBr81Fn1YCfa2FeMcU/e1WYBfjaPil10TpgqT3m
gvjNbWUNwNd2wafBHnDeqWNN41i93fQ/8LVh67Y48LWZlGnR/HlddB3fty7D
a1fc4oU6O3n0yhDEv9J1WQrEta+TvQji8Khj3SvfcISlsS00GnxtnOdsjQGH
XNuBCvje27KTVyy7H+LqsPF+q/oY1LZoEv+PIxqN4GvzdLn+DHxtFXUVNP4q
gyeh4GvL5JpWAbxit4NF40/MWPcBfG2P+37MhXwru3ggDOIvNU22Al8b1+on
nwGHLdf/0Pw5kqekCL42ybxrTsBbGU4NvyD+2EtOx8HXdqo1+Cm8F40f71y6
4NcR1inOLg/wtZ1xUj4N+bCQrSAB4i9jKV9IlY/E19auOks+kWbPJP5zrju/
Bl/bN5eQXPC1iSz7QOv35rHiZvDJBCn+vgO+tp1eydMg/p3svMvAx5Q92JcF
vrY8ja3BEP/vtjVN4C9rz/6oD7627R0XDtPz5yt4vMGv8nXJ4z3ga8u7J8QG
fFO7pR7Oj+PaPwpLwNeWc+bd/HF2RRa/3x0z8HkVqXhdAV/bi8zpGOKf+V/9
MMEdjz0b0yXz8A9/kdlxDTCudejEhGRHMfqv7xbFX+fF2E7wtcUMTJcAX1uR
sMgsiD/2rJEL+Kck5dccAl/b7y33aPxeBtsSwdfm+jx7Dvjaou68OALxZ+of
Wgm+tlETrQfga3NB9jT/J4aaBcHXJt7mGQbjsautK7Mc3MeqXWRtDv4yqyxt
V/C1KVv9eATxB3CfNSZ5j42Tp5mROkDpo5P43ypZYAzPe1DLMQb6qt3LShp/
13p/4GH80NDpNvS7X1P2zIb4F9v/ZoFv67pH7Efon+NCggEQv2yygQmMuzxd
fjEX6cNX91XSfiF3/0EB+HPaYhYqmZP++Jhfj536wtZIPIf39+Z598VpX5F0
5Fap28OSvVyZC742P5e8Uejbu5j6Pau0R5/wDl4lHfWc8BCe1jQZ/45VqQsg
H9SmZ20nPIqTPUpo/vw0zdkKvrYzx6ez3zr/Ge+zWTwX4l/5eY4o+NriAh5e
JzyK464+pn1Qw1fzKsyLub3uDcKjOOL5uYMQ17E10nHgX9r/rP0C4VG8gOHP
EAdOGB8vmbfyw4HkeJxulvtiqoQk65uUyyvAZ3iHVAT42lQ1jqRD/E7ct1QI
7+PnZp2OpA/gv/zfcDi7jvQtvE0pRAl8bd66HhT/Bzc1E8DXdjOiwBt8bXeZ
/hU9teUi+NoCOnfMJ30MP1rg9xji3/tTUwt8bTbCU4vA11bJ9K+tz4YWga9t
iVZsBfjaIpn+NXvz/kI4VzHyxpEFvjYRDreFj1l7WSOfT7eRvoUXLVVNBF/b
gYr1eRB/R89NTdJ3sbVyixnpw3jOt8n4Z4hnzAZf2+bowBaoV52dmMb/269E
mugS7DcaxEt0Cn444wjln/6hbc1j/nX4Q5IBgvl5mFkQAfF3o3wnojNwsvIq
BHXj5rSa6pA+5T0biZ7AmnKnN4K/7PrJ2p8Q//Q85V7St/Bqua+8pI/hjqVn
d0L/0v5PbAPRDXjinBwX5O95Rj9U+QgtJToMO+weyiK6DCuPTcYveFvsMNFh
uNX/jhfwRJ+DO9VjqpG8b75nv8W+t32FYNzkg//R/Jld43GX6CrMFVL7HPKi
sUaa6ivdd2JsRD9hSUs+fqhXYTF+mv9uy8eciU7CI6Hrz4GvTY3RS1Ymq7+i
kQZ8Mv2wH5x7CY/Rn1cx5whLrt5Igugk7CCzvhjq5sV8A6ofQmxM8snvsGFy
qj6cb9mG9PYNqh9hya52pXp+z2QfwcuZvrL+2a9ncH5Ugvfj6O49ZcjOZ28k
PNcia4NXcF7aTi1oZInDR5TldpXqxkQbjiY4H+xyQrbitOsnJJml+AieK6lz
YBjOxfL63up9f7QcyS9Nonml4zX8A86Bj326M6uiohw1rugfgOeSZvrZq9lO
9DzA3z63i28Yw3nfTBHJy/l8n9HXMfv7cP3WUk878J3NSRUe9ZVpQlyNkjR/
TLSHT4HvLGWaXLfS5WbEHnqF5n+4wvIG8J3tNVmkDr6zoD8zaZznmuregO/M
8XOzBPjO9DN990OcXrmFCjKxXcj4iZYD+M6cX8XS/uthbT7j2c8udG7j6voH
va1o2rhlBMSz99ChW0tzaxFnr/xi8JeNcKRRPTOo758L/rL7ThzmcD79/R6O
mVQP6G5ecsiqEa030XKD89hqCTtoPbIr8rqDv0xU8UQLnEPOKa6hfOInJ58I
/rIak3p9OHd/4cJT2o/WC9mWg79M08K/Es5Rr1272w/iwfmXd6fuykellaLD
cO63aYs15bdBbpN83F+A7CxCT8A59+8/FdkhnhN3xXe6KhUi76XXEJzrZjtj
SOMJkv5g90C7CMUOfUqA88z6xQW0v6+U+bHMc1ExWmBlrwjn98+7Vn0HfKRM
fXfxXChGbJy27nAe+3yUz1OIJz/75FF13VQs0xKVA+eNy2oO0LyyPOpyS3BJ
Gn5zKs8azte7W/3ggHhWF5llrbN7jbvHQ1bAefJMlyVULwXiFWf7PdLxqscj
D+AcNbfsJ1mIJ2nTRMX0fRk4feL5buoX+1QwBvE4t/7auz4kAwf4XlwM58Bd
pWs8IJ7kn2uDwBd2vCA/Gc5RB/BK0flS3TC3m6VQhTnOPd4JvrCfvoFUPxsc
tj0IvrCV4wnGcE7+6JATrV+lociV4Aubf3vbejgf7pgiSvlnh/Sx5qO6tdh6
ymE98EMEbOr4CvEMidw9B76wgEzeDXC+HZlEZ0A8zfVjaeD/WuIRnQD+r/z0
QDpfa+och8D/lVM8twP8XykD8VQP2x5Y+BD8X8u2PfIE/9fekBQaT0nFfSXw
f7E7yciA/yu+PksG4lmk/MwQ/F8XLcO1wf8VPDVjGuQPq3u2O/i/iviv2IH/
K8VkZTzEM0118DWc6z4tVHodfF6qh+NoPNG61Qh8Xo42SqXg8/rF4GPUb2oB
54pl9dTWgs9LmcHnBfdeUTiPLWxxdSr4vDQL3BDlN81kYzjnWm3QkgU+r3Cp
ZSOAT7+++hY4L70g+Phh8HkdYPDJX9WeDefDzR/wfFTTTUWCckWUb1W0HlyB
87Wrdt/iJnmEXJn8uWuuKAjnk9uqSzaSPEJuks5BEA9/bFMAnOte9Iq3o88j
HSXyrJKGeNZPlEnBedkohxxE8ggtK/5D86fzmd5SOHe9aNOZWOGQDCSeHf0W
4lnwXO4LnGPfucDoPKkz3MjU1x7tLcpwDriZTW9KZn8BLhUroPV+vSN1N5yj
dlhU4kLqDAvfa6D6gSvzcwycP1+cOyuT1Bm27dtJ56utauAwnOuNb7ugQeoM
mzH1lR2+yQXOh+P6fBdSZ7j5fNIziOc4a4ILzucX6c17DP6sWd/TKB8qXsvQ
h/PNQ9oWXeDP4tr2k+rhu9N87eF8+PvSN7sID2HxUNFA6nv6qlMJ5+oVAzwD
wJ/1luEfPsEoDTiv3CsYzQJ/VnXAUqoHthSMFcG59w/NYx3gz9rO8E+w45lB
wst43sxCR/BhCY0NU3xUlks0El7Gp4RXnQEf1tcz9RSflJZCBfBh+b9OaQMf
VnP+Iso/3C8XbgIfVvPLijzwYW38MkLxucTTdhF8WPpfutTAhxWUtZPqq8pX
nz4QXsb+MWgB4WnMyfCz3LbH9aSfYR1F52TwJdy65UX5Z9+GpArSz3AVx/JM
ONf9RjyE5s9v0/lJpJ/hPM3+NjgXz1ob8IT+fzzKzN6TfoYzVomPgZ/gMNPX
1F7e7vtcUY6LE97/hnPapaPRdL1TlB2sTvoW1nEVzIXz/l1M/1Le4qYHPG7R
nuTnvu4teq1oT/fxysqsDIAv1mWIb5RVzkYmLmWT71lGXn2Hvpk489Pi8t05
KPf2GN3HE/EIlAf+dU02lt7VmYN25G6ugH08ttl3KA8e8uHuPa6YiyJCR7th
H2+GVLcx9CGjlRfVHLbXIMEHiL4Xtt+2QhL47mjQdV3Dtlp0V6yKjtv3hTMV
+v7uh73jjjvqUVyBTC6My6+3Rgn6x2UJYWkvkQYk6vaCvkdbZah6CXjcpthy
Bvikvod1/IRxRSZEqsEPtXWtWt4s8TbUlbCE7g83xwyPgh9KK2vRTfBDtUQu
3Afj4sRPA+CHGhlKHHBx6UC5AeNZMO6yzfbe4IeqqDm/EvxQgqkT9H0059x3
Cvqi7ejoPtGH4Id6uKbpB4x7j79xcX1GOVplNEr77OZvgnTcF7x+L8H3lH8y
8Tzw+W2x73TcLbzrDnPxV6KAuvfNoGsOneimz7s2Ujo6sakSLeY5Bf5L9D+q
zjyeq6eL40halCIRbWiR0iotimuJCikihRZkiUQRWSJ7UoosWSvKvoayj2wp
a5QQ2aNkiRap9Nxzvl+/1+t5/un1m2ece+6ZM2dmPnfeHJ0VUgzPvXZ/dJXt
sWZKfsZ7IVindnPv+ArPvbhcJKVaLZ7KylzeDOuy98kT+B0toEfBHM7hFr+7
NkP9fx5/FONcyaLPAbqf8sUZxbDf2dEti+Nb3VRRxvI3iWrcewXXU6mUMPzu
EHdb9N1872RK3yiWD9Y1D0mbmfDdoeEFS9EQSy2JmV3WAfsH7UB/HN/r266L
AcdU0Gm4Htapn7+LlOG5q2f/vgwck+yPN19hv9bld6ISnqstFqAFHJP2zc1J
sO6/EW3GOLsruRgAxyTZWxoM62/SiMsCeO5CJ+FlwCstKnzOCfuf1n+u+B2c
a3WuGvBKT9jFMmCdVXYdxXsdfgv+JQCv9GyyKg72m+V7V5XAc9+qLhAHXsnC
UHMQ9i2VHSb4Hbx9CeEFXiku/VI+7B/Ebs78DnE+y6rHB3UvwDaADbiktl53
HF8/QdZCWL/sqVhZ4JIGlB/jdzRfZftMmP8v1m69B1ySUU8I3tsJXcPgcNfw
r1wKXJJkuiZ+rzxialIJ686C+05swCWtYz63xV2gF+pkkfEbV+CPjjHjPM9P
C9e7Z441o/++1FH24Zr4vePDx6afUC/yln3TBP6oqs0R87mnbRFyu1HGERLA
HzUx4xzV9Sgc1innew9kgT9KZcY5PXYp7PPIzIsa1XAunM6rT/r/NsG6+eCu
tYltewIpZuaVxqOdkE+kx4oot9Lnl4KCEALPVZD2ug7ryPaM7w1wPrZYfwvz
StpjEeQT2X/eaxjO/QXSkQPwvk5lCe6wXpAEtU30fCLJGc4Y5/sm181g3X97
/XIN8ES+zHmkeG5dO9TNJZf4Tej5RNZJVeP3yh6DJClYB/cK7CsHnmi7wn18
38513wRgvf7bk6RIzycytCFtEJ6rMa+yALihSN+ZvcAN/aFGMc48XoIOwA1R
L3Q4hHf0kE5m3egyWt1D1wsy7s7zG7ghae3b+P0uxrOOB7ih+2JcUcANLdz2
uwLnr8Phm8AN1Ud16AA3FNzowgpxjr4iswP4oF75kxdh/bx86zHW56+GxfJ0
fSTaM7cqwj6oehm/LDz3sbP8e7o+kryUTlxHEpl10sb6Ez9dH8mn2G5d2BcY
xInhd5bmy9e6zEo/kJIZGVdh/+J2exMvPHer87A0vR6QDB95Y1hvc5jrwrxz
qjVK6qWk4YMp7pu+dU/i+Pqcf/GycW8ZCdn++xesO78O1GPd6M3I6NvdX0a2
zNBQh32E3FvG/dX7yrbu9HpAvidNyMJ+h6/qJK4L+/pEU4AP+rT8NTkcX0ed
lfytHdv7nHKX/V4NfNBwNVkJfFB36OhBaL++Umv3/fk91LO3vVeADypne4jt
KobHRIJlGinJplEO4IO6za4dhvZRvWsPJiwjSEgztx3wQfZprdh/9WUhdeCD
hCtClYAPUpx5VhnadYLf3gU+aPvjzBTgg3qs/6lBu4O/VzzwQc/mH+EGPmip
ogH2T6vnqQc+6NshNWHgg4K3OONzV+11aAI+SPHmQ7vkZ89J4q6HqtDesfPY
aOraL8RZTUd0JV874XDJxP6qUvLuwAdZLLPh1OHoJwHCK45A+8Jmv3Uy3S3k
ie05X+CD2EwGsD1Pf6078EG/NZ0O0f8/xcpsL8iMmgQ+qNQ3MAj4oDOJPErQ
XiQdP4t+HuUh7DVBP5+azXxu1beRPbR/VFdQUDPwQUlMPzU4RQzp9yEX66qr
gQ+afq8Szj5h4IM63YqigA+ajoOyqmku8EFCTROewAf1MuMWx8uvBnwQ+7tu
MeCD9jHjXPc9CsaDPLXUFP9hGUE9MnmH42KcM4sN+CD1ElM5ejyJA3UW7dhu
droIfNBWzY0K9PiTMua4/3wZPR/4oAdhC1qAD+pk5slMoZmWdD6RhweNnwAf
JODAjXklt2jZBuCANj3ZpLXBLZtazvYtUTQngorl1fdc75ZNvCZUNwLvw8Ns
l2lnl4Lvnuxn6/xA97i14h6eO25l66TDd08Bhp5PNjH1/bkxXPh901h6TTro
hc8sv+N3geqMCtQ9ONs89UEPSXyyGPdpKTtXa+2j92VLoroDtLRmysixMnTa
N7cvXdt/JII6VBP7XUjGmjJifq/3sZSZv7IunNoboTcSlOFE6R7mw3bln5Vt
L0RCqT18cUefV/r+d8/t3hPNoiVdIRRLxDXWA59uUwvVGf3tWpXqFq+6S2k2
HN3Caxb0H+9wbSrn9uQ+f2qm1tEc67Fg6q8Go3/3Dhtegd+eVGx3zyK362H/
3e/qnN3wVfeiKyXnOSrzTS+cSlJj9Ncp4pvVUHqCkvsedj4kOeK//n6vXhqY
VxwkVA/7/n3ZEVTyIUb/H1rRTjo1LsS9zOtd/b3w//zff2yNUaejB9Fc+HAl
eRNG3WL6r2R90t8x6g5Z7G3SLHw+5L/7wHtkSraZegeQodsj3zW+BlEVKoz+
S69gP6Jljj9HmTP790VXdroW3CPKYe1JHzfdotYdZfQ3fo1+EKt69Ou/+Acb
xMX0rI8gxa1DX46ds6VkmPY/DOF7kvwwfnhvMu2/9cklc6H+rHl9eC/nAiuy
WpnRv/YtxpFs2YVxJdPxP2r6THXKPZQknd3+a8bJG6Sb2f9wDY4TievHcfvv
3tey9EvzP+XdJT71plmeHwLJxSOM/l84MA9I7RTmxX/9HRrOvuy97E14tdkd
h3aEkTnHGP3vv8I8I64emHf/9b/nt7jr7y8hmSRGnhKKmZ+zGPOBilz1Bbkb
f+a8mP6+Nc3pbGPOC3PGfKAOpolg/zzmvFjImA/U5FAN6m9pzHnRUGgQCTxa
o7BDorNgNjVntHwX8GVKbGtMgUfb8GsJi6xaNjXZm4x1T3GZ0+hVwWyyvWnx
A+DRHqv8EoP+50+u2aPlkU3et6ftAh5Nsj5ji5ukStHQ1BF8v5D1l/C5QgOH
H8N877wfsQP4sn1eP/7RP0fF8OV/4o/ZU5RWcwXn7yfGzxFBZv+mA+dyW5dn
Ej5nqXvAkcU5V1oA5zVPUfaKqGAW0U5h2QIcmW9EyyLgvKY4rFkL32aRyvPC
S4EjY41z7EueqKOeLz58lFLLJnv5J84BR7Z/Tyi+1+/rwvGroyIogaPX3e8f
NqSyNBnj9dW58hI9fpRi2dNhejypUWYdOHohKZbOA+rK3MmldF5Qkcx8GJrk
/EDnE7Xkd+BROr8oD+a85g8M5aDzkhoxfMdJ5ykVx2zf9XnvTu1ztiTI5Pt9
Ot//y/NycccX9Dwh36peNtPzhiphtsfxlrEc/RpEFEOer6HnH6XFtLPqweG1
9Lwli+sWyNPzmFJntreqqsD8J/K6fs7nKg5S8sw89LZU2k3XESK28+RivYuu
ZLqemM4ITKPrEVnifTycrk9kimknrCSlb/+n28T/5IMXdJ0j3Mz6sK/ZJZyu
j6TkcywPXS+JDjM+6Wc2v4s6bEi21i5JpONKtqoy2oPCVwQDr1e45oLr++WZ
VCJzHCM+LN0EvJ6mQfuGdYJZ1C3mOL5sPiYAvN5By+NJ9HhS7MxxVH7B4PU+
1jB4vc/M+z98229KwD7rtfRwaGiogExqocFNuP/Tyz/3H+yPfDdUPQkNFZNh
sSEz4P6PiFJZNeynVM2tI6B9zevxOrj/w7Hm5wnYf70qWv04NHS3DLfXC7wH
+/dEtTDs1ziWCYRCexCnwgm4/0N49vTC/R3RmpJwaG+Ym2oN939M3i7Bv6dm
xXYO2yWi+/D+PEdWNd6TXc9qju3eQep4r5tLJFcX7E3P66CALtwPZ1A2yOtt
7uCh+x+U4V5yC/eHgls+vkb+69HHMGh/R2Lw3PGl15UD3q9E5Ra2H4xIwfP7
U6oO4+HXNRIK7QuHrBcj38Tk9ULxfwdlTu01KVqrKlt07wGD1/vSxOD1putV
nGtaDty7zT/P2wr3h7nzGHFu8l6rDnwKpenZAZzNGGsVxll7PLgXODevh0Hr
gdfLLedk8CDzTk3APenkDX2acN/bd3kjxrnes+0d8ETHq3IPARf1Knj+cYjL
BX6jM8Bxfdi69RzwaE2WezDOXAkD5+Be+46SKwuA19PdswHjbKEywxH4r/VH
tyDHJj/HEOP8oO0BckrmOZNywFvt/SeA9zMTK+J+AYcgrGH1EXiKHQH78F63
B4cN8npqZXc/wntILfDGOK8r+Ye8noHfd7jnSy2KMm+AOKeWSpwAbiT8t5UO
8C/K89tYIM5rmfk1nXeNVpaeHnmyRRMpDF7PiMnrTd+DTZLvXgC83unF2dVw
vzp0iBHn7xGOGcAT/b7i/AA4JB73CoyzEHHE90yaMc8A4rP91wQ+bzHF4gD3
2jdanQfOg9qryReH9zNtBg8C/6WSErcWuDGh7vWYz2aef5DXO31tdy3weqEx
xhhny62s8PdiqJUPOJHXW8mfgb/XPVNz7jLg9eoeBnPCzynet8Q4h1cX2wNX
VnTCPg14tGO/uvA8+8DWng+4kXkm8tbAm/D6dWA+3ypKugLjtcPjsgGM81tV
IYyz9UvHMuCmfo0lvQbe6tuqiHqIs5JcXTtwPs/MW/cDH1R3JWwG6iTM+Tc9
LxdEp43eaZArOjOYh7ze5joGr3eeGecCX8lwuNfON/PiONw/n/1VH+Ostb41
D/gvvtKRZcDrsUa+wDiLfTwtC3l5oImXkT+L+zDOL6suvAMO4faHC53AC+hY
VjPuz5fFvQVeL2riUjJwdbKB45jPU748qyHuO1RrUyE+PrWn0G+RYz4VwI2o
l18VAb6Du2krxtlYdYU8jJe6dftViOtOnpd4b1BSqiUG7CYerxUAXu9oyw/M
59BLXE3A+ZRcm9sOPE71MRfUK/TNWF7D/LrzloL7nNS8y3XIKQRfbUBe79N2
W+T1zq2j8Fw5tOn4NeCy1gT1IK8XzTuFcQ5k1qfputX9VLbCUlu4yHCsH3m9
jyz/z+vJrzmeCRxCdwGrE9zP3zpliHFW00srB14ve9sjU+DY8lXLMc7/VKvz
oY5MiFsnw/waftWOcU5beUcSuBGvvb/XAU/RqlmIcS4QZ7kO46UaL/oR3iP3
nhnm88RFJReYJ+mfhTB/ph6vxzgrihUgr7fTRB7u0VMORsL493pa69/egvn1
WDTjJeSdjYcixvm7gC0L5IGesMZ9iE9TzAHM5+Pyjgfw72Y97yT499TMlipC
nMc0vMSgHgp8lboMdeLr3A94f17aqWYbvOfLrTOOA693V+s5xnlb5twXwNH9
3GC3GfiySvkcUYizMrN+DzHr+itFedbHVbJFNz8eR17PQIXB603vh9lWpV8F
Xu/Mtuxu4B0slzDiHJIozQLcQvIY+xg8JymRUTcMb7yYgPvJ5w+PIV88/nUO
1mfD9PEx4NHUB9cFAp+yQ8UH47zsffR7uJc/7/CwO+SFZ7gcxrl5yYUBuE++
yS10H8zHqezLyEWmcrddAt4qLltJHHiiNgdLzOfIiEq8d54VY4C83kXT9Xjf
uHVB9Aq4/y9av48b8u1plQjqUWbRZ0SAJypt3Yy83nrD51if8y99q4Z71Ys3
CSAnPTk/H/WZ7J9HU4HXUD4Uhrxe6UU/rM8lZ/byAS9jZ+yFvN6n1yVzIc7l
la+N4d7weGcCg4ve2br58HnZosoeBq/3su7/eb25kcIvID6chy58BT4lOYBR
N0p3WZwDrqPi+OxzkBfHPBn7DaJldwLub+vW83bC+nKdrwXzuUI2QAN4vbH8
O07AE9Wzf2HsN3pTgf8lHCfF38M8dv16AeM8Nz0YuGty6bmOFdTPcnE1jLO9
8jVr4NHSMq/B3+miZj55h3F2tU90gnv56jsTeaHuFocOY33e2VLZAXxEV2d/
E9SHub1LMc5JLXXI67XkCyGvl5q9BuMcVPRgCng9kqqJvJ6llBrqjUULnTYA
z2KedAx5vcLiByXIU+9qCAKeaHbdB+T11jlGz4E4D+Q0n4J71eseheG9atHi
mmL+XfJF85m8nrj0//N61lbbjkD+nD36SwF4oo3rGPks0lbhDdzLbHLLEebx
Az1GnMWlfvMArxfz7Oc/4PWev2Ksu5o3q+0hPvKWdy2A/3pe3YNx7uAbbgSu
gyPqbxnUXeWUZRjnhy5PFwCv13Xc7B/wes7rV2Gcbz1R5wBeL6D7/i/g9WwM
D+B+I7y+G3m9i/ozkddL+ZaIcZ55Kh15vR+ydoJQz0ciMzDOB86xI68npVq1
GMbrglA7roPXTDZbwb38mxFhyOud2CKF62DV6wPI6xVmLUBeL29n5BuI84kj
PduAtzLyVFuDf08t+NUiiLMik9dTZ/J6L02/C+49KFck8IzB64kHM3i96d8P
MHNm6E86j8k9njuJwH+96WbE2SbMyAq4oMdJ75Sh7k7ns9LNT71w/5/VQ14O
9m+Cx1mxbrxVeO0G+RNuk7AdeL2rpUK435A+zAPcKVFxSiyGdTJQsx7XwYMr
FOyA1/izWvUt7E8ente6BHH+PEcSeT193UOnYLyC440xzoO1TcjrrZHkMIR9
zXNmPmfFSsE6R7jZvcph/Z3O517FGlvg9fpmfzWE+ZXGzOeBw7zI6114fOkD
7EOtmPl86R1/KfBQilv/ccD6spT3E9YN7+3pgsCjWUsWXoJ6WFb8Bb8HZahe
SIV7+ZkKW6TALkfOQ8xna1kGr/d9hMHrTeshhX1RvXRdJpdXr/vunOxDRQsz
4uygVTMOvJ75yQRXWCcTmPW5WUzFAPiIXwdEQmG/PV2f5Tf63IX55djx4QKM
V6ytMMZZy8/dC7ig3aUJO2Bf88viFMZ59J0Z7JPIeN3tW7Cf/PdUGtfB2rmf
gKMmKg/fTvnQ8+s9sz63GDj3APfSNa5UDrzej9cUroOW9+cvAv6oP3nkPuyX
puvzH2lu5PVMNrRHQD2crs+xsoa6wHUYyW4+BueGBzduFkCcNZPSkNdb+sZi
KewHUjIOYZzZRffNBF7PZ/k+W1i/JvnV8TvFLNE3yC10yvHXwH8/1czH+vzv
23nk9VYvY/B603F+qhl0Bep/0SHtEeDUp/cbvXVtRsCt9e7i/Qm83pGCMoyz
7WG7eOBTvoWLjACXU97EOKe41LCugfrWPtvOCep69txcrBuFBT29wGX9vDjV
AzwasQjCOMuyKMLvBSDvn8ojr2fDq4ZxHvF1KYT5yz3+9C7Urcj9jpjPegEu
yOvt4K0tB95qer9xdHE08nqpZSKbgHvrmTLF/YZwlTHyep5spp4wL6uZ+w2z
+ink9UL1dxoATzTK3G+EK3gfBV4vT9jQFd47iLnfcD6/EHm9sI/bOYHXS9k5
hN8ZnW5bIq83Hj+bD3i9gQ4b3G/kZzJ4verVDF5vum781M8eYAO+frl0AewL
Ds5ixPnMuMYi8Jtfo6kV4vNmZwnGefst0d3AE31eFH4CuCVp5v75bI53E6xH
C8t//YR1b2FKPsY5N1n9IXB0ckan+oHXk2Hun/f9OBcP/Jf0L7NdwJlN75+5
dgZDnSVTSk86oK5P759JIifyer0/ZE8Bj5bv2Ih1Q6A2HHk9EmX9HJ4jpCyO
+9p0Cyfk9SZsD+LfgfRhNcfvmz9DbS4AB7XHpbwHeKu5zP3ztttlyOs5P1P6
CnnxW1r3PcRZbj/rbJgvhOe8P8zL44E75kOcTfZY4d9hsquj4PflEa2YPcqe
IvJFf3czeL2tgQxeT58ZZ4O2SwT2V7MXXhaEfdM95nnw4gnpQMizeAO5fMif
6fNghPHbQ8B/zeXy/QNclwTzPNh18WEr7B/UPNrcYF9wZ8VcrBuKv10EII5r
BM9pQnxWMs+DcjokF3i92qkji4HXC2GeB73kJr8Br2fkIskN6970eTBrzZ5x
4PXyHxevAV5Pnnke9AxrRV7v0PBmdxiHicx4rBsSXnLGUP8LCvJWQl1fesgZ
v1/L9T9EXs/mYQvyevZPWPF7X97CJcjrRbEPIK83xDwPnmadh7zeAreTyOv9
nDqOvB5lMIa8XoQoD/J6m6TEPshely3KTWHweoLRDF5vev9c2dFUDPvhYRbB
QthXLmTqGxKbHMqgLjRmlGjB/IpPrcY4Z/KqzgRe7/LJlgHg3pRDuzDOLNZL
dsF+b+K7yV/YN91g6htrv1wXgbyPl2NrgfxJmR2JcRacuXMHjJdtVutZeO+3
TH1ji7rHe+D1cqVELGBfcGu7GcY54NnedhjXBqVZLhAfOaa+ceer1SqYXyUr
qxwhT1cOf8C64bT7KfJ6ejtesgKvRz56URDnhI83X4DfF3pnPgdej6O4FOvG
cr6dPlAPk39K2ENdWcjUNxwpBXlYj24m/NGDuv5w5OkKiPOekYvJwNHF2Ycj
r3d08foPbIvki+o+MHi9T4zfs0V2MvW67hekcK3qFhmmbkem9bqfr+/WrFWV
lelh6HbknzVjv7G3fNZKqUsHZJj6CZnW6xQkesrWqh6RmcnQ7chCpl73bYXX
eeD1mLodCWTqdQ9HhXbf5NOWKWLoA6SeqRf8rZCfMVBzQuYsQ7cjW5l63UWt
r0++dp6UmcHQ7YgHU6/r2bSGrFU9I8PJOP+SAOZ5eMcihyJoT2PodmQBU68b
NL0T8yZOX2YxQ7cjb5h63fVXGtg+wDjfkf3M897wA87rbjMMZTIYuh2Zx9Tr
MnyrvKF9ksnr6TL1Olv/ed+BiylvuCgGvF5Dzln8jjBy33cz8HquL0KvAK/X
cJ3Rbuat8RR4vV1JeWbA6/1wY7Q/E9JJBV7Pcny+GfB6TrcY7U5GNZ+A14vy
2hwCvJ7nfUZ7jEiWGPB6aq9GngOv882U0c5+hv8M8HpLTj8+ArzeltuM9qUp
sjrAFXhtyNcAXk/bjtG+dehuBfB6Kqb3PwGvRxky2i+ZuwTDvX+hTinePc/P
kTFVRnsLn50h8AadrFHVwOsVvma0851xPQO83soDpc+B1/vOfK/8PEMN4PVe
W7NKAb9QEsFo73/h2Ae8XgV1aAJ4vXdGjHbqe2I13NtpyZiQA14vy4vRLl2f
irze2GSaK/B6ORv2IZfn+DoYeb3gJ70bgddbvzsF78U9O+GPvF6D3jFW4PVc
VrDj/eoVhfHcwOudmFQ5BbyecEUy3pfzNdNGLst/c04/8HoRZ9mQBxnum4m8
nrtSFSvwem2OfXjvca3EPuT1+NcdNgZe7/q6DLxHt+D30e3AKekvWfYIeL3f
AW6q0G64tBR5PZbtlR+B12N5qoD3IX1epQqDn7WT8WrA61V8+Y33AH8fWQS8
BnUiLzYUeL3Ia31hcM/toOmuM/BdKXKECMB904ELJbdum8oWtVuO/IW/W9Zy
XF0beL2ILBN36F8m6GAFvJ59IYcN8HqLmHnyq/fSfuD1dj8+3Qu8XqepKN7/
vHtT1RN4vdgMkgO8Ht+2v3h/b+2B1tnA67E9++EIvN79La/xvvfJr+zFwOtp
D5sbA69nt4PlALyvx+UHVcDr8Q+mrQBez9tNCL9/XbEsvAHf1yaTNPjBbvqC
Wq+Y7fJFkd6lj4DXyziwYRh4PbPqy1fBf1MVMxvg9VzX6poDr+fgyfD/Vf9T
PuD1+vWO8QM/9YZYYD40G37oBV7Pyvod8nouCfvx+5138gpD4PV2XVooCbze
jrZM5K30/33TB15vz1VhN+DIfm4UQd5HQ7lSHXi9+eQS8AVUisebIfD/6PMB
LuD1Kr5s/A683rlM07t3RmSLrhcccgFeb34jhbwe355VVuB/VpDZbeD1hM+X
2gKvd4FZB/rbTPuB1xvNyTUGPotrVDAJ/O/KvWsHvN4P513I661mP4T37XfN
W1IKvN5eI1Hgfiij5gK8D0yJ56yD+V+j1wfcD/WpcxXmW46eyGaoS1MSe5HX
WzEzDHmH/duU78PPeTnn1cP3zKyHS7d0iMsX1Xv9CQNeT2b3Pvw7dE4soefA
/zcGa8eA12P1yb4CvJ7TA4b/VnOuSwKvV7PjVDNwakoW7Qng/22n/Q7A6wnG
Z+6EeaDjIoP34TuTMy2A15O/VOYKce7/PisY/Nip9WAr8HpdB0sTgdfb1PYe
759v1X1QCLxetG4w8npq+8hP8L+81dEE/Hp18yDyDc27XplLasoWRU2RdOD1
3li2m0IcnM2UZKAfdW/+TeD14oZL/sA9wb2ODP/3r/dsAV7vKf+uNOD1rkqm
JYL/nwK3PABeb67r4XdQV5wjGvB++Mq0y3XA61HaQQsh3wS4XmH+j9vttgZe
z2+LJ/J6qpdzMP8vDG1CXi/qWhfyepsbt+B94+H923WB16teF5cM341Ff3fG
vXspW3RYgc0HeL2LkXUGkA+t49U3wf9g6Ugn4PX215KLwOtty2X4b1vd+Ax4
vZvVpAJ4vcPkIub/meAZncD/zH4tHAC8XnxvANa3r/MUBIHPKl4vXgq8nsJX
Vqxvy6riO4Cbu3as3Qh4Pee9f/D+7SnRcj/gcAoEmmSA15v2X5gnG3m957Zm
yOutHjz4qIpVviicRRu4U5IrcdIReL0Nvgp4j3qwvnAG3J9jC1loCbyeNDP+
i/P7kNezciifAl7Pb8lJvF/N8vQj8nrqen+lgNe7o38JeSX3Ii/gaUnaVjlV
5PWCgjCP50TdzgBez+FxCCfweofucOF9+OMeX5H/kb998R7wekeY+bPPeT7y
el/Vn0XD8zyu9DwG/3X54iyAm5MNlroJvF6Y3SvkDZ3arRzg3p7rybe2wOs9
esjw/0bwTOT1qty2ZsG6ylHdhv4rzY9hAd6pUudLNKx3R79bLwT/XXs4CfBo
ivR2B9ZPGQeHUPDf7LqkOTw3Y0hACXi9kHccyMtULpj/ErgjO2XXa8DrLWfO
34XruZHXGzGPkoR+4hoy8ZA/y+d0IK+3Z2fRumx63f5zQw/nr2+jnzXcR9wQ
G/ICeD0LZv2xZzvGDfkwP/jHTuD1bNqUsP7fO7tMEngwcYsYDuD1Bk4aY/35
Gm2zGXg91TMSyOtJMuun/OnNyOtluJzxAF6vbtFN9D8rojIR/97YQW9r4PUm
/3r+Af/b7gy9BD5qe2HJZ7h38XbPB5y/C9jtkddbuPQN8nr6eeNxeO89VEIf
7mWuOOkVCLyedQDD/5mXl74HXk+nzAl5Pd8DJpj/t9Ip5PXmZ/fdAV6v/7YO
zt+vzfrWwOv5nDdbBLzeK4k8zP+gR6f1gNd7qKWAvN5l5vp19HEs8nrD9u+R
1/Nkrl/1n8tfwr2opUEdxcDr5cv4jz6LlC3KtinqAV6PHDdLR16vXvga+F94
NdkYeD2F6BoH4PX+MPOngghwAq8nUxGKfO3r3T3o/wyxAuT1zE0FlgKvN1cm
Fv1v/CbaDbzes1EVORifDwfikPfcIPXRFXi9e/ZrZGDeWFuoIG/758UHMeD1
uM1bkNeb3ldUBZR/Bl7Pcr2fIPB66mzuH2bN2F/UxtWzAXi9DelLkddLzs05
jr8fILlPGHi9RHprC7yeO3NfevFUgSLwevOuScK+jBT72OLfdaxQYisGXq8k
8c06eG569aoZ4P+hDSduA683/9SSLMiLUOb+6v3H+D8aYWVkq0Edztfa72q4
j9qozukDvN45syJz4PWmshn7JbuvZBx4vbi//oFwb00436g15PrKIkNitAN4
vboOT+T1/CU+nAD//Wy2VgCvt461HHm9hjTFJz1N3wtNjq3AfX4ZYx0hxcx1
pWO0LRXuT3O0if0BXq/ZWBXn9eBhtVy4t28mtvwb8HpjW5WwLp11eIq83hVR
81rg9WaOmiBHyfm0bgzufy+/OzQGvJ6iWzDOi93aLsjrbTjnPx94PbFgKeSY
XjLXs8U8c/D+wPQ6x5WsXAT31/XufXEBXk9NTxXXBZ0t1XbA62kPPZ0EXo8n
bDnmj+9uvRPA67W2hn8BXs91vRD6qfrdrRV4vft9XieB1yOzpDD+rXYbC4DX
u+YjuBt4vR9lVrj+fl7EpQq8XpxguBvwem8cS9DPp42HOIDX0zb50gG8XmLK
JT/wR58n3wN4vfi1FYvgvnqUYzH6oyn9qhR4vdX7VloCJ1H67DTWkwueY8jr
KYbuugEcwbIjcejPZK3pdeD1/vJJIK8nkCqJ+dzmKZsMvN7PB4vgHi+Ve6YQ
+VP76IHXwOsZcZm3ABcg+PGlIfgz0y9zE/B6Ft11wBVRgmL1uD+5+nJWKfB6
P5OfaAJvIWb4G9fHmPCW/cDr3YiNkwUeQWp8Evf5B407XYDXy98ynAz39q88
50KedEUB4QNeL3CR92HgRVRmcX4Ef/zsIpHXE4l+inxB0Ji0OfgzSzxGBXi9
gBtiz+G+/dpju9Gfj+9tvYDXOysnZAuch/1bWeTT5aX/NQGvtyE3dSVwELaa
hffAH9ugJGfg9WaJLEJer3ODL+5Xrzx+VQK83mCBgDRwKhbh83G923+qeBvw
epwdr5HX28IpeQr8WVFxLgh4vSuZ0sgRvNzCjftPBb1bn4HXi25YLQX8ykKL
Rqw/3dlKCsDrPXzKZg58R1DAEsb+P7wYeb2O/u+iwEHc1GnC+im0yrsTeL2J
qjbk9Vh46z6BPwe2ayKvN7njEfJ6zdwvZcGfO98jc4DXM/IqTgFeTyipHdcj
ueXcyOttY2nuA17vUdkpzB+uEhXk9Vge89wEXq91tiX6o8t1RB14PROFfAXg
9SZ/luJ4pRrImwOv9/aTuh7wevsDGjGf07eII69XYBSCvJ7B9iv4e1E4kppy
gXdgzSp0Al5v8FYG+jORIikL99RHfvFWA6/npjiB+ZPs+hl5PfO/95DXu8uM
j96C9ZuBX9B5/pYVeD1fZnx+Z0qawb1zfv0YArzel5yvyOuJEz8J4A5WNdxS
Al5PSbD7AvgjHt1YAtyEtfh4I/B6Bj9kMX+6DrQD50n0B2ZzAq83nT+tG1aK
wP1/n+21YsDr2THz55ecF/J6qg4MXi/hlT/eV8yt3UnB/fX1jy6JA69nzsyf
qbHzyOu9XrYpHXi9UOM9+HsMPDJvDQPfcU1MGnk9Q9n3GJ8v0aLI6x1eZ8QG
vF56dy7GR+50sjRwCgbigk7A6+1mzq95p3YnAq9xd9WycuD1+LlikB88nsim
Avfsv822PQG83lUJHdx/Gvw9i7xet56RG/B62qNbE5DL3rYKOBnSY1WPvF7N
4/1Yt92fdp8F3iDx3Ole4PVKmPUnkG/fNeAvthlE7wBeb7r+2ItZNQOHctWU
E3m9yXU2GB8twxm6wA/wsbUVAq+Xw6w/blfGqoEf6e3q6ANeb7t7mzr4o2r+
fAh4PUv3Rlfg9US6rLEebuU3QV7vRZKYEfB6SqHeyA+e3luCvF6ztNBH4PWy
BFsxf/z27N0AvJ66j+AL4PUem6/H/BGOFUFeT1e4/jjwek/6M3B9v5y3B3m9
Kxbfkde7Gl6G+fPF5xnyertmWWYAr9M56yfmz3Xl9hbg9SoWpRQCZ3ElZjbm
z+vbt5DX2zwnrR+4k4oFjP2G8vfqKuD1Hn+3ngD+xlbaAetP/1Q88nrOcnJ/
gZtYzVzX3A6l6QCv16fysgy4mbedbf7gT+jNkbNQx2ec2ucGvJ75gZmo47kd
MTeGelF0JFMQeD0r6VL8zuJ7V3MC1s0Um0+CwOvNMXmC+v+oue0hqL/PHWIl
gNf72/gCdek3E87I693NKPgIvF7GQdvf8P3qakCVGaxDfaaemsDr+Xqtxud2
enlivXtZya4PvJ5i6RX8juYUcA55vUCHFazwd81OyB1EnfYz1wTyeo9Tr0sD
r3dUdFUNPFdBccVlqOPmdSvYgNe7ebBmAnmfWu73wOv1iDeXAa+Xsaodn/uv
Un4SeL0Uj1F34PX+fFuM79vqcmMUeL3PL0yGgNcLHBnC51p5ewcAryeVOW8Z
8Hoie1rwe7Q41w114PWeJdwIBF4vm/M4/v7YUxU/+YDX8zo7wwfWWbZjBfjc
NR9WpQGv1+lx9gLU8+wnMqrI3SxYfwh4vYSda5DX+/BsCfJc5nzmj4DX0zfN
w/WR7UTyO3jud7volcDrlVoaAh9MKbsVzYbnsurI3gReb+j7EVyX9y5+IAjP
PZGuJQbncMHrXluh/sdftUfepztqCHk9TvunyOtxG8vi78vtutlRCrxe/h1z
4Kuoe1MzO+C51iWG2cDrrb0ahrweC5coNzy3h8f5CfB6/g8/dcL+Yd/axfi+
5d/+7QRer9v+FPJ6aZNJqA8/NZtwBF7vQJ8r/n6FhyGmefBcoz1K6sDrXS+z
Ql7Pm3MS+bXYsU1mwOs1aScHwfq74Lot/v7Yw85eK4HXa991dx7sfwS/MnTp
7EKew8DrNQ4W4jqb/UYIxzd+siMOeL0vGTsTYL+pyXEdeT1H37H1wOut6bVD
Xm+jVBbq/xw2u3mA1/Pqji6A/cPMdU388Fz2I6Xw+xGIQ2UVB/B6V8SO43NL
qn7j+qXV2y0HvN6YXz/ms37Bmicw//U2O4YBr6dmth3v7dzdVPsd6vmRScHl
wOtpR2shR7Zn/esKWHfK9e+wA6/nLu+P80j5kSnyel/8lrgArzceZ4TPnfPH
F9e76C3LkNebjvNUKzvyeieKTh0HXu/s9YM4vm+7ddOg/i+5wLMDeD0fZpwL
ZQuR12uf/UseeL2LC7/hd//WD0LAf5JFy2Xb4VzIsTIa82qxitwWWDerNqje
Bb0hlplX9n/vwu+7ILP+SCKvt5CZV5nL1JHXW7J6zWw2+nws5f8Zeb1jQ59h
n0Syq9pmLKDP/UrOvvh78ue1XfOA9WLIXnIb8HqjSjz4fcfvuZIprPu75iZX
A6+XyZxHFnqcbVA3l6pUGQGv186cRyX923bDOnipt7wSeL2/xxnzyLGleAms
1+sWXVQBXi9ff84XeK7lGXvk9SxCLZHXS2PWjXUPbOyB1/uxYGom8Hq/mHWD
66oH8nqvbrv9AV5viNsJ62TIskjk9ar9wyKB14urbcTvHVF3tHyB13u7uEMX
eL0xqQn8Hn3nN4sk8Hq7yKJLsH4WBjB+P7DY1BLk9bbkpirAPuiewR4c3wcf
4tqA1xOxHXkO6wjX+vnIJ56p0UBez3izN/J66sw6eUvCpxN4vQIRY2fYv7gw
6+RjHT8KeL3hu79gfSDa+SZ4//vuSo0q4PX6rr5CXu88c13oCo2qBF7v+WmZ
SVh3Dr6LwDhPLPvwEXi9v7q5R2Af8Yu5LrwNdfMAXo+3YgvyerdjBpYhbxsp
mwq8nva7J1nA6x08538IebcsBq+Xp7lUCHg9z/WK+6B9pMxIEni9ddV2jsDr
bQo30oB2rV87+YHXm8XXPxt4vb/+p5ELi0iX6AReRn841BZ4vd2/fbSgfcow
ThN4vXf3chSB15OubkUe7dq3iADg9cYd01OB14v/Oort6uaKyOs5tIkgr1eR
I3IU2g2f1dQBr+cre2I18HrW4y/Rn0Nr5iGv94NE+ACvd6CyB7m5vauHhoHX
a3M0FgdezzfDAPuHtPB4AK+XejNxLvB6ZyXtkNc4qOUnBrze6TbfG8DrHZTw
1If2yuZE5PU8Oncir1eTyKMI7RlLfyGv57A3ORB4PSOmnXNJHf/g73npe1lM
Aq/nw3zu/tSvksDr/V3GAn9/jDrI9DP3dcI54PUEjugir2fDfK+Kl/eEgNf7
9OUp8np2Rq9OQrumejHyep9Xbkdej+oNxTg733x4CHi9lcvXbAJej/MLhxy0
1/CvRl5PaDzxCvB60+OycdiBFXi94UBBJeD1lvvPRf4uuTILeT3HzBfywOuV
iBmqQPu7HDYu4PVWcdW/A17vivcljM8cbgnk9QISRZHXmyVli356hHAir7cr
WcUYeL0DG7lFgbtRF6m/Abye4n0h5PUG1+ZuWke3p1C78LtnYFfEbdA9dF3T
8VwW+DIQv2O6MfR8osDU9xWLo6Ohve/USCrohV739HCfJvryJOoe0usrkNcz
q96A5w6hJ2eNgdcrTmoeCw2dI9N2jaHzOHgyeL2iKgavN82jKTwW2wy8nu6S
IpbgDCeqKIML2z/3MXi9Il4Grzd93/tx198W4PVYv6mJAa+3MpnRX6Kaweul
1jN4ven+e2MtY4DXU/Q89AZ4Pe3HjP5lTgxeb38Xg9eb5tdednHP1LvoSj2J
vXsaeL1PSYz+i/wEkNfzGWfwetP+zz8xZA68XtkHgXPA6wXHMftzM3i9+yUM
Xm/6XlNy6loX4PViW3dSwOupMft/Pcvg9c56Mni96fsMaYZn9wOvV7N3cuHR
r0FUDNOf684MXm+vGYPXm+bj3m9SngJe76wmay3wes7M+HBWMni9hTUMXm/a
/zMBP8qA19u2UG+W9jlbaoxpP26YwevVhPw/r/fgS9IGqD9qUzuPAq9XyIzn
0DsGr+e44/95vVI/BzPg9a6YHhFkP3mDfIhl9A94yOD1Vnxk8HpWzP6bY3LX
AK9XVKNVDbzeQqY/j4tikddr+cPg9abvL9nZVfQBrzfv7dIw4PV2JzL6+zox
eL0nbgxeb9p/wSqdH2tVhWRWMvKUTOfnPcZ8oALuSUeAbnaSOS+mv2+x/v2C
epoSc158ZswHag+nH3I3Psx5ocCYD5SSyynsf4E5L4IXb4oCXq+y6m8o8Hqb
fx4TB/5OczjfBHg9Fe6Gf5RaNqWffFwP5jWbrNs48HqX9DjvA68ne2GrDPQP
Djy2D3i9VVwhyOtNfBZ9v+ucbBElIs2I96Fk9Ocpe81fqANVwZHI623lDEde
b9v1r8vUjsoW/bJswXsIUoyfIxnM/vN13IqB1zOLKgkBXu/GzEOWwHkln1nr
CrxeyIjLZuD1Lur8WQyc19+uiB8Fb7PId0dr5PXaHql0A+fF6v72MPB6m47s
MANeb0ytHNev00dnvQJez9+dSgJe7zUz/9uNowKA1/MJEJvVd9mbUmKOu3jb
vSLg9eQfym0HXo+b2b5/rTnwn9Tt1u5LwOvZMNsnBuS4gdcz7/+3EXi96fz8
cChUDni9A2o8JcDrPWH2l/wZ+Al4vWw31R/A611g9m/T3LsUeD33xBN7gNfL
ZPp55eR+JeD1olQpHeD1DJj5vNt7P8x/4pvd0Qi8Xh+zjlmITJ4AXm+tgOQ6
4PX6mc/9lzz0Cng9ZZa0NOD17jDn6ePmGE66rhHNo/09wOutYLaPXHxKgNdL
FPWRAF6vlOlPvNjgCPB6kd9ZqoHXm47n6ENf5PVCP3/eDrzeaKgsjuODyqiN
wOsV8atsB14vtG8Ex3Gdy1bk9QRbtGqA16taJ4Hj6MhZumjnnXqK97wD79pM
O5lzdw6TjwPDVMZun+0+++qoB8nWxg1d2ZTCuDK2iwpce7aSpZPSWqNpM7HN
W6bO0Oae6dNB6lpXiYPX9g/Utcv13ZdXlVO8nmbY/v7IfYmr9L/WqmP/rogH
ylwRD58/8a+DOsNVXlsvPkRFHZBwHjB7Q+0TenPHi/Zj3GT/in0fX1I6mVIx
tnFl1O9N6vjchIO/c7+xt1Auh3lbKscbqcMqO9D+5mDbG57rByjhjzNLgxV7
KKnT//zAjgSv9ey2+8+pcQFP4eB51dTQRjW0cyC9y9uH4zV16m37/rtL3lOz
B0+inUfbJN70XuykIiqrC9jEP1NbvZPRTuS1GXkHnVKoV29CnPrX1FOHZx1C
O7aBFQKVjgWUX+rV0ZZtHdQTA1G0oxCz4KygexUVq7uzyU5kmGresgvfq0vM
lWthciR5vbngya3L9dTJ+cfQzk25iObhhGRysvX27YLqDqo+aTvaWbwvblNq
Wj4pkPs9JvhsmDpz+epNsDNYk9UzlxSQuztqHcOaa6hccw20s+RqbODPsioy
ufvG8+9v2qhtMbFoZ8XGbWOeDa3krH+2rXTLIGWZYnob7Exue9/tf/4FuRve
8Jb+l5oKUEE7l14nKFU9aCLLLDX30P9SEsI30E7wnzOP9r7vIwsfc4XS/1L8
HM8xPkm8+h60H0TSQqCY9us/f2ZYHHlF+0GUPNitab+ojdH2aOfdYVNn2g/S
GrK7gfbrP384VX9l0nEhYUYOXguSIylvR1W0I3Oyyp+OC9EbC5Wi40QdE2XE
p2rx8Dc6LkTIb/6jlLR8yn2VB8bHVmKnAz1O5FOxzRQ9bmTZHl20s/zp5CA9
TqRS+O4ZetzI+jMH0c6gYEoDPU4k1y4ymh43ouTLiuN1SWoxP503ZFfuHwE6
j8jBHEW0s8VNQJrOG/Kv9G8wnUckzD8F7Zjxb3lC5w2JftfUS+cRmWWfiO91
g3dxIJ3HxGdIYwOd1yRi7z60s39mXwWdx8T+pU4FnddkUiUD7cSotj+h85i8
OnczhM5rMln+9hbYYT/wcA89D0mD6Lc99LwkW0QZ8RHnHMqi5xv5KajsRs8/
omB+C+0ctg3ToecV+fRA+C09z8i2xT3oj/EFuxUWfTZFeYx5T0yZ871IRkmI
Q9SjyJwxv0kNc17P67/9LND5btG38AsCbQPDpMwpCsdd/Ei/SsKmesrl4Ort
sxOiqRNta3k2jw5TC3Q1zl+t/0CJs1ht1VxRRE29/7V18tUgdeXZLc5fK4ep
wMJDa+7eqaKOFJksXRhZT925aXB7lLWGCi/0yDXbXERZXViPdsJshR+Kh7ZS
dgXWz+sPvKZ0a7LQjrHlwlm+6z5TsmyacZRNJ9U+a2AF2JFI0b+8wqiC+lGz
NsGz8QVVEiaGdio/jDk/MmqkvHLMOy0FWijdLQlox817WamPHF0vkuR1QjcM
UOLUMwGwY7zVqDvTJ4+SmmEoVtZdQ6UZrUI7Z9b4l4bOKaOGU92WfFrygTK1
uI92ivfee3rT4A0lejsgxpmuZ+Ha8YJgR8Vy65ZiqSBqr2mRbZJKPfVRcRva
UXXzPGn/y5lULTYeiX7WQXGc9UA7MgW6p6h0GRLsO3fTxv5hqrAzlx/s6Py0
2fPaI500/PJa7R5TR2lwSqCdlLzPT/Tby4n7iZEg7hftVORfjm1gJyFvwmj2
xTdkUX7V+HexISpGbS2+V7zajsetMiWEUlpsECtSRS0IEUc7QexOwWdE3xDB
u15HRp2bqZ0DbGjHX+P9UZ/9PSQ/jryoXztAFX7MRDvBK5t+8Wx+RYJOSp5c
HVxKNQZvQDt1zU/d2Ja/J2r9cqtY7Oqpxybj+F5qrIG/7tPzItZWO7rYopMy
0MnE+MTMTDT+s6mO6HqpvCxJyaT8LjDGS2Lmtz0PZ3UQZ6vPbVPaeZSlQAja
YVOe5E8VHiZKbRpNcZeqqHTHjiVgR7d+n8UV7Xoyaq9co7X1Gomy3Yh2jupM
FmXbdhC+ZlbrT0LpJJInA+04uS9pY8keJhy/aiMfV+cTFTeLZWDHaI7m42b3
WnL592mLUZdnZIY+Iw/3/b3nVXmyjbxWKXeRNKomha/4MT5FiernFzQNko/H
mk9MvGslHAmv8L2CDtwNZflSSf6V/P0ov6GcTN0XRjuhG9YVvFvcRK5lFyVx
lTeRUklBtNOkITmh9a6PPJB92vq8rY8UrUtfDnZczy/lWXa9mDydubZZc0c1
8VVag3aGFNlvZ8W+Ih2KjdkqL9uI3CxGnNljxW+Lvmol27yF5xrS9VVVNgvz
p9mIt2t4dQLZ11F/0pSznszgYIxXzoV04R+348m+XiVRm4AOwtvOgv4EXnM2
PeE+SPHnFYx58uVSX0eTlvrN6aQy9W29ZVkHKQ09e31Ot0pKY8QX2z/2150f
Gx6gLOXeZHEvaaZ+8qUIQru3z5cmObt+ajxEXDvYpJ2yWqqC7ctVFlq/eTpM
XQmZ8mt5nE+tMZHqCLlbT5nJf2ah/aZq3OOe0O9BDcgexHEZHRjTXe/XQ/Fs
P3x4ZXgPFXX2EdoR+aZ8cJ5KF2WSMWNL3IM+alNHLfpTdEG3lo4j5erXxH7s
XR/VyKqGdnyEds2c//MdtfyPRU7fjwEqyt9iGfSfv3ry17huA9X4Vj9qudBn
SlruPdpZV7pxJz2u1B/5URt6nKnju+dg/n+XTKts9cihlo59ijL2HKSiepah
HYnY6qZ76hrUL4eHw2Ppg5T0QVVst3zRy0vnGTWr/sYHOu+otqx4zFt3Kc5k
x5eV5MmNpt/ifz9Ts5/+wPcq+Ny15PTuBmJwOd9l/drPVBDHJ2yv7T6yMv5S
FclwL1pEzwPqyE9L9OeOQi57hFc7eWav8MrNop/y95XA5x4/oVSTu7eLHEuY
t2xRch91RnAvtj+YGZ9Bz0NSwT0xQs9LKrw/BfP2RajVGrofmXfQvJj+Oaqr
Xm859H/L/7uBtkvcp/wHwr3aqbm159FOii5PI10XyDmbFEW6TlDbXFPQn6pD
tzxov0mCefuvU7sbqPpZ7RhPoeMHp+j3JLaibJb0e1ND0oVoJ61XZZKuU8Sq
VlmOrlvUT/dojI+OcwDEkagqnR3KUdcgM1hOYv8NlzZH0nEnZ2Xy97/3yCG2
KpzY3n7NayNdN4mvArdsepoM9a3lAa4vIbGuofS4EpIcuvibbgNZWtqL/tia
Ozyh84B8alUVovOCZCrdxXb9kSeRdB0nvI9uvaPrOjm/2R7t7Eo1FqXzjBBV
t6N03pEzOqb43C+bIhXovCQDvg1GdJ6Si9c/Yvukp6wava6Q3TssXtPrDFHK
k8J5PZmssIOeD4RzTnAHPT9It1wW9tfgYQ+g5w8Z+xdvTc8n0tIjiPFfofUm
hF7nyAGtZG563SPZtlcxzjO5LwvQ85Asr17mS89Lwn96P9rhEiw6Tc9boisS
YEbPYzLnSSa+V+Qzg6aAO1WkLnzZQnodJpUyvPheH/TFr5+i11PhWYF3jqo1
UA9C1+L+fAPlGJmR2EddDuus1t7fRbGPLp0H7c9Funf8dWqn+Lcr+Syi57fR
0IsF0B7b3XEuLbGSen59MCySfZByPvObC9q/Ub6fYhtyyCLHUr0un0HqVn8y
ttt7HRc6Na+ZpDuHdn36OUC9MklA+3fKfXNu3+shrQq6qfS/1OyBLmy3k1b+
RPcjl2dHs9I/R4UFF3JC+6a2k6dou0TJJ9eOfg51k2mfNYUtlPaDsO14cJ/2
i9hE82B/E7U8V9pvIh7Bc5R+D7LJfBTbD94IK6Lfk2zeoRZPvzcx1r+PcRDV
0j1Hx4UsPJN0m44T4R5dhP3Hr76XkNUYpNL4BaSd/Uuozzxc2H/Lvq0cC+yH
qQ9JGzIassuoQsNVuO+qkWDjV5AboI6Xxn1yqGulXDUG5kJ/sXzVfo/5g5SA
lCv79v526kzocX/oH9jTKmZo1001RF9zH0/opZ7592McvD9lJWTd66VKr3EV
ic3rp4Y8d+N+zH7jD5tuybeUxiLdtTZhn6jRIywYB5FXf8f3xr+j2C8YhHv7
faGstAZxn/xHa2XDo7Z46u4s6RmaSYOU4nJ97O/cobi6MS+JuuSfc/Rc2zAV
fswY+4vxainPSq8lnDU593c+/EzdV9w3B/rnfE3WWbn8NblrIxcYljlETR0N
wv1q+XyVqDNzOkmvr2rNn9CP1Ic95zE+0T/MR752d5EtnQNi5pKfqIsttRgf
ngiOJrofObn84x3656gXYlGYV5a6qRJ0PxJiE9tF/9x//VeXNUbTfpBaWbnZ
tF/U2sBy9P9BzP1Q2g8SVZcsSftF/Th/GP2pGj7KRr8nKZK+8fZxWzyZfl/L
bds16PckKemz5N/kJZFDy/fg/l/+eKIQHUey7KPlHTquZIgZz9L9EoF0HEm3
5efF0vHvyMH7bBj/i82n7elxIlt9f0jQ40Y8Y/LR/9knfmTQ40SEv9s/pceN
dK7mCID+61qvvaDzgJxvfrWCzguSODaI/V+vudcl0d9Ouucnf6Xzgng2hGP8
w7JsJq/6l5BAsfQddN6RPma+DS5U1qPzjKxTrJ5D5x3JY+bbzt0FmXIX/Ys0
1PH8TS4xz93XGPt4SpxoNMeKB8tUMPfzE6X5H5sf5xN1P4vL9PpM5pTJ4Lq8
yb959a2aJLIq9DrXyPthomPq+AHay58enU//NzX66aijX00SpVt1FdsrWt9y
gp6guumn5i9HcZl3JqeL8fw+uUMX9ATOwdNrX3dlU2GqhthuKrQjD/SEjW7v
2X/rScrkp/QEw7mDfVVsFugJlVrG6TaryikZftkQaL977ybqCW4c/07KaCvK
tHC24XuNuPOxvqb330YtMmf6zd5QE2rV+F5/guVNQE9gHbTcCHqC/3IzfC7X
WAf3d/YWakTTyQr0hJUqEmh/v+i296AnmN1ffQr0BM0Sbcyf/JX+uqAnTCTM
bQ2aV031ZhmhncniHZ2gJ+hoay0GPeHyyFq0Y2F7R7TvYiclbi57HfSEBy/z
cFxslWd2KTulULM/cp0HPeGerR7acZn3Y/9LxwLqn0hFD+gJtQe6MA45Xkc9
lrpXUXpdLypAT6jIab4OdubJ5JzgSo4kVkllKaAnfFxtinaKzW33DyUkk2Fl
jzDQEwQXpaGd4d3zg5LT8klsC88E6AmWxm5YZ0Y2VySAnrD99K4roCdwaeij
neN++hdAT0jk6m0APUG99zraifX7UwF6Qse6KFfQE1J82DE/re7VNIGesOLl
01egJ2wwO4t2eju5VUBPWKQbJgN6glDdBNq5sUEN9QS1N7/vgZ7A88gb48Oa
6OYCesIvjefeoCcIyliinfc+hc2gJ4weclMFPWGbnQjG+Uz48+ugJ2zz50gE
PWGl0cANsCNUcz4V9IQLIusq5idHUiPil9GO21kziAtRtX6f9CUhmXK21kY7
YndjJkFPSE8ZWkjHifqSewDfK/6mzTnQE3Sa+SVUnFJIlgRj3B177neAntCZ
pnyXHjfCdbMJ38v/eM9z0BOaVvhV0uNGtmeuwHrCWSFRT+cNGUoQOg96Qonj
SbRzUlhjLugJd68VfgU9wZqZP0lp86+CnrDY/tZuOo9I71VujI+8xFFh0BMm
Jnkugp7wdw5j3EcXrDMGPeGwkPkyOq/JOEcq+tP4KEYd9ISarpJe0BNkrzxF
O/8UF7DT85Ds4S3WBz2hPl0H7XB63Aii5xuxefUnD/SEX/k1aCfq4m45el6R
NVtaOOh5RhZHWGN8Ni6b+rjwsYIMc96T6fl+6cfj7zE9GjImjPlN8pjzWlmo
+NTx5QYyqTJZqCfklwWjnQGfVAXQE7Y1rM6ZlRBNSXZ6LIJzylhVzU3QE96t
un9HY0URNbds1hY4p0iyeRwAPUG/I2Tm7TtVVKj3ajzvHBFQdwE9Qbkp7x7o
CVNW4WinNSm3EfSEtY9YnUFP6DnNh3ZYRhRugZ6wd/6TBhkbev8kvRDPC/Mt
xLRBT3glOi8O9IRw74doZ41eVTLoCd+2SpeCnrCJSxbtXNZWu3RDrocad+6r
vbdhgPJZ5Yz7WA6l4CugJ/gbbkc9oZjyRzu/svl+gJ7gtzyED/SEI7ntm8GO
dNTqzX4Gb6hF5vUGoCd0PXJZBHacistLCqWCKLbag5agJyRsu4d2TjvxrwU9
QcVx3g/QE9Yl3Ec7wzoqc4sTZYheCENPsPimi/78E3T9BXrCY/6dP9xi6iil
oQDGezV19YOeYHFiF+oJg+qRaGffFv/9sy6+ISk2s9f+EBui6mSq0M7bc7s5
3suUEO0vqbNAT7hcewvt8Gf8KAE9QTpScQfoCVGB+Qx/FArGru/vITbFgnyv
1w5QmaG9vGDngbn0vkWbXxGfP2/frgouperUQtDOkVWpqaAnmAlF9f+zracO
By/AOJscn10GekJy6cqfoCd4+1fieLl/vOkNesL8/neGz1MyqQ7vR2gn1MdH
C/SEVMspnb/aedTkzvVoJyfoEAfoCby34qfocxXFeywTdSTrkj+nQE+o3bui
1WDrNZL8IxrtPLiYmgV6Qszd1vODQunkQg872glbE9kFeoJaUfecR9X5RCe5
A/f5rAe694KeoG/Wwjfm8oxMfWbEZ01bwAHQE07o/AneYVRNeMYYebjj8m87
0BM829TWg54wXncB9/kcY6s7/w1WkoQ0k/sKG8qJUlwg2rnLWSQHekJupdim
BeVN5FRkNsbZudbwF+gJ4z9MUU8Y1FyIdjTySxYsvV5M+GWcj2ntqCbWkYxx
L/+ZuyYz9hWJee3Io/qyjaxeGoF21v/4awh6wt21E7ygJ7Q1JuB4GYptYv+8
OoGw/7a/CHpCgDTDjv3yjDkjt+OJq1/3PtAThrYw8vlc3RZn0BOkDyo0ufDl
UmGp6XhOGQ3+FAZ6QtzFBLa5bpVUiMwhbN+8PSkf9ATyLNpo4ZJm6ozILzwH
+V+M/QN6QpvJsndBJu1U45YqbB9XaLEDPWFx4hA/vX+h/j5u64Z9iK7rtXmg
Jzid2uoGeoLQrkLMk0LlTy9BT7i2YWPnivAeSv6WOT7XSUrGDPSE79uoxaAn
GK4/g+3Ox+1qQE+4yn6VA/SEeg51zH+zdz9HQU+42P3GBfSEddGXsb+truZK
+pxJnbyzMAT0hJo9fOjn8JTbLNATJH6KuIKeMH77EMbT+Z36zg8eOZTpo/AA
0BMmCqTRjtLLzlkR6hoU18ePqCcscm/Ec9yV67puMdX5VK7q9V7QEzZLX+ED
O2ni3CoOLyuJa7s/18a/nymTKB987iaTOmnQE9zUz9qBnqBdzr4C2nlfT8kk
gJ7gdmQG6AlXv9Rinmx/L3aXPueT05uefwE9Icx+MfZ3Yg8bAT1B8a0QC+gJ
3VI8aD/EfPfs5xadRN8xMg/0hOq6q/henOvdOEFPeF1g3w16QsHPavQ/g3f/
D9ATGkM5r4Ce8OFcHL6vtLSAMF0XyM7xVT10naCitXRwHrWLjTmCnrBE+5MI
/R7UJoG96M+/Ja+56fck84wKFtLvTb2UzkZ/3J4/XU/XKZJFta+j6xb1mi8L
7agsMB0CPSHqdD9LvroGOZ11Gu3ctme5A3qCeipnAT0O5N+3G2iHvD6NesKE
j6T8zkQZqlbHAO00PtLyBz2hn0tnL+gJZneWo52N/RuvgJ7g53BiPtfPd0Sv
pAzt6O9o1QU94fB2myN0XSc3wr3w3P0j6xQn6An7rWLtQE8Imy+N8dmyaOAt
nZck4WlrI+gJsztbMD7bwl1L6HWF3H44w41eZ0jR0nJc7/bGfymh5wPZ5jFn
hjx9rh3wzsTnbu32PELPH6JsJf0c9IToMmls97Q0KaPXOfKjYm4I6AmCy5ei
HZ/6+blz3CqJ7Uz/SNATDoy14XsVLe1bQ89bwpEj6wJ6wu+ajSuh/fNgSbzf
nSqifNTiEOgJXREcqCNp22dkg54wvNDUW0OtgZopxLYQ9ufVt59/BD1hOKbD
CvSEzRdO4Xk2+PO7V6An9LgG64KeMM/UCvfzvJFSJumJ9LhafbgFeoLE3r14
Xj5Rd//G44YcEpCbZwB6wjlOUTyP8z859/PkvGbiWtvyGfSE97k38byWdILk
gp4wbDQP9YTdKRloJyGyeBT0BG/p/g/0z/3XPyzM4SzoCbUeJlz0cyhTpv0R
iQgf0BOWP9F6TPtFgk7Eov8PH8zTAD3hiPycIdATWtwG8FxssV/QBPSEqKGQ
IdATRPS+of2jye/M6biQ8c0bCkBPuHk7DP3RGt+nAnrCnBWyi538Syi17aKM
76STwUKgJ9if6laszy6jnrHa4rlmd0zBUdAT+L46zAE94adbONoveb98vef8
QSrr8j9u+hxJbR6LxvOmlV6vNegJC3mC5EBPOJ2ihP7bqq75A3rCxOhxG9AT
IgMvoH2xIyJsPZJvqUMH7s0BPeHfQ3vsL8avFUifeym+b40OoCfMarDA8wjv
p67D8W3xVOInW1bQE8I2JGIczrsnc77LS6JmcvIfAT1hv4I6nqd02xWec6TX
kveuu+JBT5i42oTvm9gYswD0hH15g1GgJ7iORqA/m3OlgkBPENnS2gB6guXy
fjwvt/es6gc9gX9B8RbQE3TrRnyg/7Yz0h9AT4i5utkb9IQI3m4cR/WfEXtA
T3hreu8t6AnW/CF3of+VdWeSQU9YMW+FF+0X9UJgC8ZzbXltNOgJrP19IyuW
v6aa3L2x/+U07n9HkwaJ9hJDnYS2ePKq5yn2P3PcVg30hBnpawWa85KI3xpj
jH9Z1Cs20BNaye2ldFxJDqcRN/R/YyxpDXoCD1trJugJgRnfcH8euebgTtAT
Th2+7AJ6wicHcYw/z8xyE9ATdnEYzs2+10s8fcMwnvc2nB61r2slfatv6ICe
0NnKjvE5rGv0dVt/O7Hpld5O5wWZIMd9oX92jGyBo38JifoWfAj0hLLEVTzQ
30k4rbMuu4ys2uWzGvSEC83z8Zxo4hYZq5N5WuYO4/xN3jLP3ZmMfTx1pNEG
z+NFzP18v8Dl0+8e5xP5TcscQE8wadPsg3XZPdnsiGNNEqk98m056AnLrRR7
oL12Sc4y0BPM+XelO9UkUenDFLYvNf7GA3pChNzi1opoMRkXyhy/VybzBpuC
nvCNTVwc9ARRWwdslx1oyAY9IVi/pqoiereM0LbzoXDuuKoQlAp6gk/VnGzQ
ExZFpeL3zQVHrLaDnjDwtFzlHo+cjLbkC5yP+e8usICeYBaQagh6gp70RhyX
Ny7xVqAn6J9s3QV6whD3JXyu26uouaAnxMUPnAc9gSg54nPnXr3ZAnqCW7fG
adATzldexngayNmeBj0hXCl5APSEmwUWaGfjxaVtoCecFDy7APSE83J70U7I
64WoJ9wfl0Y9Ye++crRzpVvgO+gJXKcLLoGesGOuGdrpNW/aDXrCWXe596An
+C12RTtjJl/dQE+4qZNXDnqCCu9itJNnG3sS9ASu/sYs0BN6I20Z34Uvd28H
PeFsuD98h6cUzh9FO/t/+MWDnrBV8uxP0BMEeK8Hgp3vdTnPQE84U7DXE/SE
bZpn0U7f4F8D0BMy5g+8BD1hTk4Q2qlKUn4BesKDs6PXQE8ICOfD8/JKaWW8
n+BqV9kIesKTDYxxvx/5RxH0hJ0fh3eCnnDpzym088z4NeoJl46mhYCe8G0o
Becp5+pTt0BPqOQRuQt6wtY3F9COv2kM6BqkXCZJAfSEoWtKaCcn8gDqCTYC
wnGgJ2xPrsD5K6HbkQ16QtYf5ZegJ0zHZ5tddyDoCbsO5YWBnhCm+w/zatmA
JuoJ2dEV3KAnGN2yxzq2I+OKFegJFauO7QI94UXEZbRT/1GpGfSEdXO/+YGe
MOflL7STpHemBPQEZ3/FKtATfkpY4fydEv3RBnoC9/bbl0BP6L55Du1MtcWy
g56wO11vCPSEhEZJxrhvLkQ94Qa/3C7QE55SvZjPswq+iIGe8GbNHSfQE6bz
uTv+f1y9dzzW3x//Xyll71JKU6EIISInioYoMwoZaZCRMkJRErIqCQ2UkV0Z
2U5Eyd5k771pGOX7eh7vz/d3+/7+/Fyf6/26znVe5/V8nvO43y+5G0KecFHz
GSfkCblBduQ6B/Z0n4U8oU5igeQJTw5Ok/Ujz5vEBHmCwkF3S8gTCgqsyXU2
NzzygzyBVzfrI+QJpqyx5Do/K1IQ5Akb9s+vgTxBcsGOrJ95UUEDDfqjcv89
9/h/z3tk/SdNDXoNObT8fGPe/55ru8S6C9dijeRO/snlhjzh7Fwhue/PDpaf
gjwh/emdZMgTbk6HEO5pT1v3EPKEf6NxLyFPSB1wIfx080F1kidcKU1ZovY1
qFx6iexnqp5+8oY84UfX7mjIE05xJ5Lr+LrnlUGeUKLxzRHyBFFLBcJP16Fc
b8gT5tbL10GeYPXXZStc5+vw4EXIE+z3ziVDnsBzNJZc5/ErqxjIE3gl7udC
nrA4rkKuMxtrcQvyhEDxojLIE/rf0JJ94yt6c1fIE9iSZyUhT1BtekOus9vN
dgzyBHv6QGbIE+JPXCfXCXm7QRjyhO+Pw4wgT5heuYfsY+tP6ExAnpB2/68t
5Anqb5LIdbS77qQ4zN3FxcezRiFPYLlxilzn2Ezx+Yw4OSzxkA32xWg7zQvy
vVRHTvyFPEH4gP5q8BMu6USQ63hFpbdDntBEm+MDecLYI21ynRx+z1OQJ+gs
aPFBnpAdRE/mOZ5NgwnyBPmaZg7IE/6sCCfX+Znsnwt5gvk8537IE3Tblcl1
GFftn4I8QeBDIxfkCb2BoeR7idKFnYE8wa4/rh3yBLns5fG8/HspFvKEPs/w
bsgTDKrXk+tsaF9D8gTp829InlAS3EjGU11yNxDyhOAUbAF5wox1HLlOpOeH
M5AnyBRfUoM8IfrWJFk/Kepv1kKe0LD6/TzkCZ5Dn8i57OB57cuQJ+g/TS2A
PMHiaDy5zo52v0TIE/7E95tBnnDJg4mMZ+tv1A15Ql9xPjfkCd2Fr8n+PLKJ
RhnyBK7DnzdBnrDIvPy9+G+YKECeYOba4w95gvcCL7nOq84Mkiekp50keUKU
ngRZP5q/H49CntAW7B8NecKiRDS5juRTW1nIE37tbdoNeYIYw/J63v/Kk/gJ
B31DSZ7wbtKOnKMLDddzQ54wxiRkDHmC0p/l+7W0YWwz5AlRDbXrIE/YKhlB
rsP5S9kY8gQn9ikOyBN8o0+SvEVCkXc95AkV0VP2kCewrVx+vsq7JddAnuDY
ukMW8oR7EvrkOhckTpE8wc/3fjzkCSZvHpNzTQPDjpeQJ7gppC1Q5xhUIx5M
zk0uX5uyIE9YeIEtIU+g4agj56zDloPzkCd8nwjvgDzhwinr5Vzi1COSJzAk
hu+FPIFdnpvsQ1KsvjFAnlDLfcwN8oSYHS1k/S89WFsCeQJjsGYX5Am7PNsI
r9/T30/yhLNmq9ZDntC/JoK8/uNxHfETpLN1iZ/AUWFI5vPTGMs45AmsJQz3
IE9oD3i3fN7nt94GeYL46yySJ2z79568zlOpsg7yBNqudy6QJ5x2nybXiQ03
Pgx5QnzXFMkTBqMfkPdX7tMjfkKMSSHJE6JXsZLv+5Yu5wHkCdon3HsgT5AK
TCHPkariTQ3IE9x0p1ggT+gtM1v+XtMu8pAn/KuYd4A8gTHaiLy+4YuMEuQJ
ZkmuqyBPGNVMI+O5zxPzDPKECcHFMcgTTExDyHic4qUmIU8o9AwkeULUihLy
uszPd7SQJ5hyvCF5gtful+R57N1sTQ95wpXdKSRPGAlZSe473b3Wn5An3N+1
+jbkCTppVeR70c293wZ5gkjjzl7IEzwiN5H1fy3SwxnyhKtfvXdCnhAvvczZ
Waf/kDzhedcEB+QJUmt2ktcv017eB3mCZ2L9LsgTxLjryXMt8P7PKOQJw+Kp
Vjlq6jj3xVZyLv74+4o/5AkNyRhDnlCyxpGco03EB0meEHXxc/GeODm046IF
yVtmM+4+hTyB17pADvKEGnEvMg8qDoK3IU+wv+LHDHmCvmgxeV3qKqMe5Alc
LfvVIU+4EL+G5FHnznqQPEFtsz/JE47YbCXvFygoI3kCV9VcHeQJq0Rfk9cT
3WbzIU/gk1G9B3lCmOhR8jwm36olecJAh/lqyBPSAjPI+xfkS0meoMHyuADy
hN9HuMjrbBwhXyBPEG+8+RzyhLeIhlxnpc2nbMgTkjN2hkOe8KpQiawT/mtR
/JAnPFJpuwd5wvjzN+T1AJe7UZAnxFo5kzzBfHaG3Pcb+N4nyBN6zo96QZ7w
1neQnOPCI1/2QJ4Q4f7gFuQJMcdoyXmk42tvMeQJXS/26UOeMC0VSPbzo9kr
zCFPeLhm3gfyBGtnd3Ke0t27RPIEnrPpRpAnxFwJI+c4uhmROcgTgq/7jkCe
0LS0hnxu04d3JE8IdrJIhDyhp9eaXEdvMGkK8oQ4+w2tkCdEjeST8TBbOJhA
nvBO3orkCe/+u/4fpwySJ9RcvRsJecKE+vJ13lX9JHlCevr9QcgT+Piuks89
dUmM5AklUzHjkCdkNbeS1x1YkCXkCQHptVmQJ5Q+fU0+V+Z4KckTuoq9VkCe
MPdWn3yuOWskyRN+p+XJQZ6QMX+W7Lc3bV1D8oTsGzzMkCe8dFn2DVa+thKA
PEHpmA8H5AkrB06QfZrJjzu2kCdo+g8fgTyhpUuFzHO63IElyBOmrnRZQ54w
Te9F9s+sxhdWQJ5QZvuX5AlYz4Rc/6fKZADkCfrG7LchT0gd3xgI7+e1jpaA
PME88gnJE2rlwkiesD94ahvkCerv0+GcjZIV/j6H9+vOy32BPOHPn8ZYyBPi
J3+uJf5DBQ0b5AmJOvIkTxhT+032qyJvdz+HPIGNZ6EW8gT9X21k/N4eO/og
T9BXySV5wt6hWDL+HqbaVsgTbN+/9YQ8ISJ0joz/7rPpQ5AnaE+/bIQ8QT1g
iuzzN9yyJHlC1YEfHpAn0Cs+J/dFtZc+EvIEOTefccgTHq5lI+fl2n+Z/yBP
CON+aQF5wrpbceT8foe2l+QJR65cUoY8IeZ8Lznv60cs0ECekEE/sxXyhPWq
CWT87md9bSBPUMye/wR5wrDUanJ/1y/ykjxhZKeuK+QJ6U7e5P0zqxlJniCu
d4XkCW9CHpH5MXMan4A8ge3d9wuQJ3z3e0HWW6L1/ATkCf08dw9AnuBWWEbm
J7WqLA/yBANOizOQJzS4upD35+YmtUOesC84n+QJSgIsZDyPTCS1X6kYyjEu
n7+x1n/nbtXlfTzyO65r1fvypJz6f/v5i9btWpAnBGj6kzzh35klkvMrbrx4
DPKEpYtfSJ5QnrSK5Ax22SokT7hcptMDeULizxXk9Zb7gVssHDMQ07z97xKl
BJSqUxcyUD6Bcot2J9YkOMmx0qL1yTNWcp//+3d3OlYHrjuoXYxSu2Qtf23O
QaqBTkLcUhPI0nFs+hZHDaoTUa107SpEqcLYbuWRcSQ32iGVU9SIpi6J6bPa
laKjL9gCWAdH0ebTGnryIm1oWLb8TVsLtd9VevUz68AIMv6S+K55WxfKxIct
5b/XopKQ+jXee4bQr5jt25Nu9SChq5e1vW43oMasewt7v/ejx0uyKdHefaho
XcP0g54mdGffVjabrb3I2/b87CuPBHR3LkxsITEDSXQnazJT3ytR8YbVvgs5
yLiE6aeXRzFSrVlzplycen3k69F1TEWoPq/T66tEDZLea/zij9Q4umSZUxYa
V4oOfDf7XjneiHqD57fdbB1FmpYfHBL+VCHjjMa7aXptyOSJ/hvFnSOoofyg
vkd/LfI7c/ofzcEuNGtz6P5L9iF04Zfwv3OBDehcb1LrLq8exD2Q/zvnQz86
3OsWe3SxCSX6HPTlfN2H5hUzVNas6UX3Be7/sudsQVn5Ys5vbQbQn7ec35mZ
u9BLy5UyqjWtqJRhj3zC7CD65KeS0l3TgsQUfs/KHWhHn+YsxJSofciC/2Dx
pv31iGMl+8ZksQ40vbuTzY5mBMl9ZD/t61OGUkVjhdXKO1DNzMzsOarON74/
XmWfnYOQy5r8Rys6kWSnXYkgdZ5UfL7L5zmjk9xFLcPzKn4MWGfb274C1Rzk
bnLb+As1nyuvX20wrw09rJqkwnS430Uu/7918kZ6RlrAlAfHcgcOu+0qQ9aj
eeHeByeQsdT7tCCdXZg36IBefH8dctpJt1AnN46EpWnbD+UL4i7ZWHdO5xY0
IWCydlv/KEoLmM1Rvi6CdQtiNiy2d6K5m3yx8yIjSMzhfWug4gH8V7l5p0BZ
D8qyHt9Gv2sIRWoYaHP3SOAD1kfdxpz6Efvuyys4i/qR0I6TjH0yUjhZ6VrV
nr5BVCsrq0PD04s2ePmG6lxIwGPmBZ0pQRnIonn7T0fqe9WPyiieFMnB5dJm
dRdsilFJ+IbXNpITSD1ej+XheCEeiEj3Ft9Tg1L8q82dZcfRzI/n0s0PSrEh
t0VAUlsjMmZ23HSkexTZ70TpUj1V+Pw6jpPxp9pQfbCXv/PeESSle7MnrLIW
O9/1WjIR7kIWrFszGbcMoYXwrnHGuw14zjTpUvK9HiQ/J/J2OKcfFRy+m3un
rwmbniuutA7qQ2vPDkQIs/ei0+HXVx9ka8G1AsWlQjcGELfL/gu6bF1IufBV
8bPKVlxXVXnmy8wgGlhzhfZPUwtKE87KpxNtxyy09D5dfMOIJ5irSES8Hs3H
BrGPiHTgh2PcCXeodWKWlEDbHlCGTpo+Gawp7cCXdH0Moql18vbOQ0PeLznI
dcOudx+WOnBgHE3VE2qd7OFu0NbLdZRrkOMaouYRP1JSvU/NK5JWXp7PST+B
2K+vnfKG0wPLWXqs/u86sfPzbKXmF29pFROg5htFCS7Ps0b/9BNqfvHXAck5
9/FCFGbVSOa5bGD+JTW/WFe0l5eab7Ti42kyz51b+tSp+cUFTl7R1HwjqY/O
ZJ554gPXXBLuwuJjYhXUfCOR2n1knr+v+3uVml9cLynZTM03YnnxMgLm+UAW
ewM1v7iwgT+Cmm/Ea68SBfPsx/8e1j2m87OTrvVlQDkyy+t/v/r2EWp9447g
9OFPl3hQF2/68jo3KrpArW8ch0TfHtbZhbTMNpN1rvqcEdY31pZJmMOfBVF6
sydZ598mvsD6xo0SZi2/zUVQvREXWee1vJE7qPWNA9zqF+UUD6Cp7J7tsM49
zhyB9Y0XvAysE7olkE+LGVnn7zetq6bWN1aoXu/iJCOFHvnfPkfW+Uo7zb3s
IzjVj6fKfx89LgrLP3mEtQv9CJLK060axY1SsharWxlwruQNp8mGFmRmc6cz
XHQcO7223lUuyoTz1z3SuytWj14wK+/XE53A4Sslkkf5mXHhg5X7LJ6UoXNW
FxcFyybwE/G1XL15zHjdhGzV4885yCqelfzd57x8upbiSWasp+I+ZDnoKPdg
nkWQqsvY+ict62uPBLz4NpXUZ89f8Ro1kU55+cGM+kxjVnn/WycFQeqjVL3G
XYPKvlT9xvu2riV1W/vXkBtVr3G6hfZ5qn7jzVmnSd3miJXIp+o17psU6qXq
Nz75Wmk71O2sjvqbVL3GEVmjXlT9xq/Ho0jdFqg2nKPqNU7vPGxJ1W/8++Zy
3X7mPN1A1WvMcHQzu05gA6ZryiF12/OW/EOqXmNtxs+fqfqNI/QXSd1+1BnZ
SPVRLGBcvJvqq9hUfbmfbnrafobqlzjnxiE2qn9ioe13SN/ULh9Kp/olPnSV
Z57qn/j0nyTSN8/72Byi+iX2mO09QvVPzJrsRPpm7soVPlS/xFfpM69Q/RM/
1BonffPo95W6VL/E+fJTSVT/xCXGrKRvytFelqP6Jb7MFr2H6p+4QamV9M1b
0gZNVL/EUwebs6j+iVWV95C+6VKSFdLN2YKnXbtr+m8N4L+W4lu+0nehgKQO
GZqaVuyr0BZmQ53DuLsHLlSXtaBzWkqqymLtWP7rV+2APcP44UyoxTrBevTS
9yKDpGgHxpdE6C9S+/orTAIHFdzLEHtpgqszVU9kLevYlqhzgAWu0m5MyUEx
Syw7dlD15L7cuZksav8zIJM60nvLUY7/16cKf7V4dHqB1V1TLRwlsvR9F5ic
QI6m98t3mxeg+yMzZlsX01HgdDfWfDhB1ZsVFltNKlCS0k5D+vYCdMh/gDY2
cxyJWjJaVqyoR04V5/oeen5Hv6sd1pZ6j6E1p5Ddn8oOxGK8Wblxogb5OOeM
y22izvHMdKPl2t0ot7Vrlj+lHj383rjmQ8cASl1ZOxDu04uK9n2+NS3WhMZD
09rDtfuQWe2ds8VJ/cjnsfitMelmdLCw9cCpi92o5eupqmn1QeSa0uOusaUV
fR899Ms4sh2tWSV36FvMEHrFy3lYOLoNzcnvcp/f3YRGmUUVviWOoH+/tg+e
+tmB6gWblJv8YpHSlfNJ4jOJiD/QIKDsSzaytXPre5w/gZ7/ayizNy1CBYPT
gSlTNYjl9rTMLu5x1J5WopayvRqFmbEf20Pbjk792XZPaXwYNQqa1wgy1aFn
G93uO7p3IY9xjjD5ukG0pok+lyGzAW0flzdVqepBS3se8Xy8Ru2v3vXk3WIz
wk9nZdsPMacgbh52d/mhCfRkz+2TT+nu4QJZjS1cT76hWu3Z9LibE8gt8ulZ
wRhXbFzov5omoQZtXKPYrP5yHGXt4N2zWsIVxza0e7/Q+YGqfjQHDhmNoWOa
8c1efHdwR87fgIbmbhQ5+ePGx+YhVOXrqis644hLNZP2hoX1oTO3h17aPB9A
x18fPRh11QH/GugM6d42iM6VzBsWrO5Dd91EJsbOqmPuHzvn468No2apJflv
rN3ocFwm1R9UcM4Z3t1hiqPIzuDyWNl8G3oYWPxnXb4S1vn9r9Hh6xgSHpSl
PWLTiJZQgM52r+N5DseraWXnJ1DMG5WnH8QjUFqrH+/66GS8o6KW/hxHLnKb
Zk3iSptAMg8+hUwxfsNl7T4cUtK1CP1SOiU2N4aa3nh/uNNQjRssXPXHFNpR
2KufuYV4GEW+nn1x8EMdLgo89S3pTRcq2MVgFhY6iE4PSZWtONmITzPtTwke
7kFuviYD24T6keHeh7uq/FKw11YXszqJKPQhxEdjZdcE6okOzoo7/BWLrhi4
YVqQjiTj22WdLk4gQTeNf7Mc1diK27C47msBUoqjXfHbcRxpHT4bcaKhAb9l
4eNJsPmOzrvarLgiMYb0nl5kjTrbigOZ//kpVFcihnQxhdKnI+g5TW/vg6xO
/Ja/+ExnXw3qseH8uCdoCNFcs6th4+7B74Ms6V7E1CNzPcatqSeoc+0jV3sv
6T4sHPIh4OCeJpTH1ROxMakXae18wrFv/QAOL1B7FuzfjF4XZH6YyOlC8g2N
/xhjB/EmRwM+OtNWFLPv7DaJ423o/VHTFzdHh/Dh93uP/W5vQ2cw64e21Aak
8MtvLLtlGHvIW/9ynGtHI7uv/xT6WImK9Tzuj9wcwRtLPOiyk6nzJ0ucK/O9
fPT0D8eO0NQRrMGQxSG22IHsj3Q57goNQcKPtK9pFhdgtUPec1vTXXHO66EL
jO8m0MMUr2bIpdmvPKQxEXXF++fP0kDuGnRl7buujY143IfJrmDyLjbwcO5z
aBxDiYIKvx63dmGTyl7+5CFHfC3p8Pcun2F0IqHgb+2nXjwcVV5UdtEB58ll
lA2bDKIC/mIv37MDePP9Q/a57rY4MJPOfeVIH7oofEDGuC4NX2+mcYzaG4dF
v3AJmjVOoLbbvWktK79hvyjV3+bx2fg+Hw1fyckJhK8FP+V2qMbZl2TlGdML
sQrvg+OvdMZR17MlzZ9SjfhPCXYV1y3FJ1y9lNVpxxBNBVN6wIdWvOlG27hm
dRVOO3RN69C5EcTevhi+cqATu20Y05kpqMWTnPKG388MoR00nYEiR3rwaqPF
TnbbBpyvk2Wa+KsfRWW/lhDW68Mlk9ZCZR1NmH5b9oVp9V50Y9U6fwM0gIV3
TOpcHW7Ge+bSA+kudaHH4ldvx5QM4hITVuuZ96249IZ47bFHragzqOsaG+0w
bt3t3sCysR0H5ca+DpqoRw92BDQUjQ3j11YV+S1bO7Dx1/WlWTwVyEm6LZLG
ZQQ3qTsPXMrvwCN6LqtXtGJ0ab/z4vW0Eex/ionHZ0UnfjD/q/32cy/01cdk
k5xGMpb78s3+mEQB9mmQ5LQLmkAPYgZa+Ld8xjx7JG/uEK7AeeEL32fqx1G1
qFrRg86v2K/0uOqDgTo8GDl75F/yGFr/95ruYEE1Zi74q/48swMXxy7FJGoN
o8Omce4vwuqwbe4xW7/T3Tj1UUXjoV2DiMXJ+5SqbCOeX30+95ZbL2Z8vLrY
JqIPxXM8ntzq2o92GiiwpUz8QPUP+JSVkrvR6NJf76y9g2iT2OcQ/44WdDa0
j2NUuwM9YpILrPcaQntqQsMXb7Uhur6Na+5Q59rqN4nrnQOH0WArZ0ljfDuy
pLdK9d9ag3DUm4OXlUcQ9glhK3bpQJqcpiuS5L8ioTvnmWVjR9ABxiOJ7OMd
SJfxNO6aeI8uX60XsNeORiZ7CnnnPgSjrrsa1VU/qfNvZMYg1XcRf0OzEtWH
0SujfNJ/44Mdl7DID3Rqyutta0cfCtj+r1c+vgeFmNoi6n6jLYeZA6n7j94L
PgyC+952w0Cdut/oc+EmN+r+I5agC5Vw3zkN9j76MNuKuo1PD+tR+++7q7hK
dTa1oH1e+z5R6wDVbMi1odYFkjpEEw7r4VmRR84tlXZ0Itb01nrFYXT7tEBZ
tkUdsqtcM37xWAdyvLvr5OKGEeo6w5Fcf0tQZwjPGumGDsQvfNZUJWAEVa0U
M9D1zUTqd3zpqfWBWpxoaC3SRtBi/KoOWCfb1xRnnPK6iaLjVh3kCPRAN1mj
ePSpfabloJAR9RwiDu31R6nnEiV5c5Ln0cEnwO23rRaqPLDuFX3GEAoI4B3Q
ou9BKxKXf+c4/9/vHGX/+52jinVVyvYeFeQ9M8qQeXYMNQdlya6I/YG4ttMU
3M1XQkUlaxNHnoyjivFhQ+aRGvQuzalvVbwcsj7nnnrGegLxX4tfpd/+Dc1W
1/gcbhNGWY+DLs4MUs//QdPZNJEUJJpg10EjZIScX9Y/9dwSgUbppk4qUv1K
JqKgQn2UGVlOkn03ipx9SPbbm2ZVbI18f+AEg97Tp+j7URtfr4W5fg9i+dGa
SNVlPKzVQ0/VaWQfYpsM9Xmb8iUFqi5je7GxX1SdRmu8GnihPnN8eZjdcqAN
Wxj8uz5/aAhpqxakSFxuRn2CEkZUvcanvxs+peo3spl0TIK6HcH78I+HczuO
HeE9H3FhGIUKXKFl+1CLtgljj3DjDmx+TdaXfc8I6gm68ukb1Zd0eP5JrO/p
wFfmB7Y9ezGC2Dr/enw3+YQ29XsfoOo4Xj3Vy03VdZSV1UHqOdeewG9u3r6Y
k9/7cW/1MzRioSx+6+8EshJ0vUf1S1yVwM1L9U/ky+ZL+qZ34pwG9f1xwu6R
89R8oMIgT0uYh8MJ/reo74PVvf6GUd8PbZg/mQbfK+AwjQk1bpzi+uUH9T3Q
gSYzMv66fcOB1LjxVtoP16jvgWRkPMn4j9nyC1LjxiMhs1zU90A5xSs9Yfw9
OyeDqfFh24kL76nxImm75XGuylz/gzo/42ajVA/qPI0MHMbJOfqgbhCsMyyk
0c+63k4Lv32l2Q/rjX7LFtjf4L/X1a0rz6ojpTJWBdjnPCkn+xscvrQvf6FL
BW33sSX7nN8dg7D+MEucnIRJjwrO5Fteh81raZqofQ9mzJmKKPqshPyDpZb3
P5YWCdS6xA3lciLfqP1RcVvWJVifSsyqvMBrZEakCsD/9Cy55ws8Qjv/PqxX
7F+pxu4VL4f7qz6RdXuiM+yCXuQEvrRhJk2LfgNSMTje+3jDF9Tr+hzWMT6S
9cbxersw1r2mR9ZztyLZb+Hi0O+RNs06eWYKZ8m+K/XBaVjfOHDDOofVQkb4
f+uc95Uv7Efxw7qdrjfZjNDE6uV96c6e8y+pOoWtXspyfxb5gfu4mfugXsnt
8O6k6g5+GnUxhqpDWFfnTwXUn2qro+ZUfcFKijFtVL3BhqwrS6DOiF7djKj6
gvl1C1gMj3XgL3GpsVBnpnn49Kj6gu+wde6i6g3ui9lO6gzn8DFRqo5godeu
dVRdwf+rJ6q+e/MFqfsr2rWl+hHVp8xzZ7whT2NJujOdPPEDm9GYzVH9Aesh
QdIXfAZeaFLnByxhaKlLnSfwmaObxOEcoWC/z4HqE7jWifUZ1TewsmMLN/QL
Xandl6hzBa6lf9tEnTMwzUzKPJwveue7nKn+gaN6IsOpfoJft4SsgD7iXWa+
kTpvYPtrLxSp8wfWCnnrCueO+kL6WKqv4Ir7QtupPoOPueUlQX+Zd/35i6mq
HbNGe0jlxw9jCRG2Wu4L1Yjuge7UN5cOrJExd4TqP9gwIXQpkeo7ogdS6Y4H
duB9Th9HhHVHcGTyqKJPXCEy7Oh5SPUhnKV1fSPVlzD/HgPSj9jtDfOpcw5+
0WOoQp17sAxrJznvbOYY+fvnQzDu3jckRvUr/L8+1ap24wZ1DsTnRfWbqXMh
ttu6fB6k1dz06HZQP9qX1253mKsZjR7/EtXl2Y28RK5w3UCDCLH4NGX+a0E8
0T56OX/bkYXH5sNaIUOoOoyPgd2vDakGirEYuDehn0NbStLDh5EQV+9D/rx2
ZPut76lHbjWanFpXJak+gnYfPhrI5d2BjuzM1Vd1KEJWBzpDveJHEGMIi7jk
dAeKd97b6I4TUPKjfza3OZvRJ+WrC3PP+tFU7K4Poj7dKOim7qE4ahxXT2gd
NT88iBbW3djFu7oDiejSbU2lxhGmzilaTu2zLzp+//vvURP6crnpgiluRxW0
NRrhYcNoODIsdiK/GsV8u/Ks0KcDsVW+yr+pNoIOL27PHblThEK/zn3YPtuB
ihkTMmbiRlDXp+5ZmW8JqML84CGmMSu5ee4K/ZpIp/+bv+1gGDwkJ0qH2CSu
66xmH0Yb+mcYrvp1o6lZe28RBgak1yzD5LU4gqYz2+4ZretAvhefbnL1Y0Rn
GnHHiM8YUrMTLc73a0IeBb/WdKUyoQOhvM1jueOoYc1Nr67CarSKPuBiuxMz
kj7BwfnIewJpvttmn3CvCP3G6j7vO5iR652r82tnJpDal3WhJmUJKEcjZ2CO
tRknKEwLKAT0owkdQXc3/26k4SMjmrDQgkv/lCnKyg6ijZxCTW701PoXeWot
59OG+0PfmfFT85Yl8Lw64nETmrvzltU8tx1P/CrOtaXmzanOienC12pkvlZc
b4839dwerOeNpOaNazTZx9etCOmErrT8NN2B2/sTHgFfOz7w3O5PRQKaDgob
Z+mxymO4nBr29fX/N2+s2UIi1Phw7/prldR4kRXftocwzlbJURVqfDgjJ5Kd
Gi86Om/cDOO8K91+gxofdpHr0KDGi0ZCGRtgnHsjbb5S48Npnm+mzXLbkeuQ
AxnnFQ2PPdT4MNNTFjlqvMhvspyMk5vPNAB+t8uXVnaGGi9aPedJxmnVYQr3
D4teXP1jnwQdnrZbJPfRMVcC7h/uZE930GNhwCrt0+Q+Pj1J7h9+qpnY+OAp
Izb4KUbuo6fj4x/U/cMJwrKV5plMmPXrCV+4j7sG2eH+YQ4//YZVrsw4+/lO
ch9nTMn9wyI+a59r9DLjGsXa13AfL7Y5AQ/IW1mVJdHVGJr7v3lzyXGYop4H
at7WP6aeD5xuS5MMz8VIoLUM9TzgK5kPdKjnA++g6dkOz4UtJxc/9Txgb529
ctTzgeWka8hz4egtcIp6HjCt++471POBDx/qJM/F+GP2TOp5wB23Fz5Szwfu
m95JnotyGeb31POAP147UUM9H5jjfCN5LrwL/pyj6gX+93JlAFU/sMvYN1I3
HOK10ql6gfFavy1U/cAbF+mMoG5EZH4bYKPGEf74zgmqfuDDpar0UDcMLPVN
qXqBxf/m1VH1A/e0C/lC3RjpLbhF1Qu8e+utH1T9wHE9f/SgbmiU7GWi6gX+
+2VjHFU/8E9rUVI3IgQHZj7OWOU9c92eXpPglPc/7rbvFi/z2roY1MmdslMp
7hXisaX5zUc9N0eNSkv6bw0g/48z2d2cLcjgTd4myOskC9Fzm1+DSIRjrz5N
TSvSzBoleV1Il9zpgD3DSCCl0EZZrB0ZVb4ked2B5HNLBqtHEK2TjIikKPWc
16segryu9EYf7ZLXCGJ6rRztXNqBQjPNL0Bet/GBuol25CvUjhQq2sti0Ghl
SfM+ajz6Wc6but6Vyr3xf5R3ODQBLVa8sxGlXm/NUMs7KECPXmXbQw6NvhzA
JH8+L3vCcKmRAQVa7cG6VaNom1mgPeTPERPn7l4UYkJr6e5CDo2qxT1J/nxF
qLbr0y5m1MNxGnJolLB9di/kzy3CMf4bspiRcgjJodHvZkWSP7/zNlK7/PIV
tmtXmX7yNQYtvHued4Aaz+6qtHnqf2PJdMUD1P+PgjqXX78tK10ndGMAGxgn
D0uytSBD3xJd4CmX9iXrfJmhnuvdZxKfVbaiY+0Vq4CnOG3pf9bFN4xX2DBH
0om2I9a9b74AT2l7XJp6h2YEb9aynB0W6UD0DBWEp7gc1boS7TWCj+3fXlJD
zafnhVDCU6T3vYL5wqcmlqxexJfmrcLL83Y/4lkhNb941bU7D6j5xvy9y/Pc
8yLC7q3NAL7VcYfZgbMFb2YX/wZ8kEU442DC7CAODtXSVa1pxVq5WWnAB+9x
5Qko7R7Gm11bOdGBdmxQqPkV+OBv/U9r7ahxcj9il0kW68DT5mfUgA8+stQb
PUeNs1XN7LRaOdWfXc4RPrh/tfWSYtwrvOlYIDe1HvGz/9bhSf/gbqrfo0Nj
BwWo/o8G+/tI388pcVj882AEVUz1ViUVdaCde7Su7zyWh9q/Jr32ZdyAWYzI
PhHtbzhJ9of5NdzbKsqZ0XjuL5+KzAn0TMqa4WrGZ/R9Nr/c3mIEswXwH3VL
6EAWQt1j55QLUOqgQniG4Qi2lDD31XzZgY35XW8zdH9BHu6xXy/ld6AilnNJ
NC4jaMrCj+QGqx02W1DvQ04ugbHUf4cWSh+R9x++PsCfndyBz8053B65OYJ2
XYolOZLxwVfG1OdhPofEQurzEUdlJ/ncM/pkfFj59dMj5jXMWFboJhnnnayu
BOp74lCtCdq5ByM45ei5q/B9+z6oJZs7ZqAvhnNnvyslICONuDDgAtzGXl/v
NgSjmEML17cm+qArOw9qf1+cQFL57laS2sUo7cRC2s/NOejoBc+DwAvuRnMl
A2dvzslwA84uVfzRDXgB7Qq5DcDZe0O8BICzB6xgeg28YPTCvlPA2Y3Yu/2A
s284cu0v8IKBELG3wNkFPikbA2cXuzLMALwAfb28Azi7R/c44exlt0/NAy9A
IQsZwNltLfJ+AWc/pviFDniBsMXGwy89EpDlB6fMucQMZJ1ceR44jsi2zal7
L+SgFw2fVICzR50a0AVe83bn2cm1TEXozYDXEeDsrjdYY4HXhDy/HwSc/Rim
fw2cfc9qAyHgNQ8Zzl0Gzm4SvccQOLvxvGcC8Bqd5FBl4OxZrFdngLOrlYn5
Aq/R/bz5J3D2VXychLMrzHjOA69pFVkbB5w9pfGSH3D2vbSnTgOvEZV0nQfO
/rTmhTtwdkPpx1nwHF3NKT8BnF2SahjA2U11fj2C54jekHkJOHsZw20Z4Oxf
9nT4wnNEU8q0HTj7rVvNm4Cze/+Uf+NDPUdJSSMiwNlbPyosAGcPumnIZ0c9
R2dPhRLOrhXFSzj7rruLNs8nT+XdEu8zU/JjwMWdlvL5qjko5rraVeCM763X
fI2Pz5ZjSvQUYX7zCvH7+UqWUevkB+e+yoOmPHht6Udp4OyDJp/igD+OPaxg
eKazC3uvF2EDzv6u+N/aerlx9ExjROhgviDeOrNfHzi7Ys4qNuCPE/rtbJrX
RfCjr+KMwNmHHx35APzxdfDvW8GKB/Dk6V88wNlPr+fbA/xx6op2OGuPBP4d
aPoAODtXwfEljqJ+dHcq8kGPjBTeUplZD5xdOOydGvBHT+GoWe0LCdhD/a9V
clAGGlZkXwAubHFSMeCESA5ueIEkgbN/f6HzDvjv6duT+e7jhbhDBp0Azh7x
Uvk28N+Bg7MswNk73M5aAmcvPhq2C/ivZ0FhPHB2qyzzA8DZjx7mDwL+e/95
bSNwdr2tS7+As9/IkM8H/mtfKDMJnH3khLMJcPYti12Es7My8WPg7EtCe2qB
s/9g+RIG/DfF9hwTcPY885oa4OwlHAsq0Beu3iurB84+zOIM/QGVdCf8+E31
hbyT16qAs18+9zMAOPvDlVu8oC+4nBHkBc4ut9IP+gO6Nyir2Ub1hZepedPA
2RtHM42Bsycn3EvYTPUFwdvnY4CzO7PHVQJnr9wQdak7/nSe7e9oe2oecRnL
7lZqXlHfNVYyn1LdNudWfA/Gttp6feKhPghvr/kO62Tq8JnDwNk1pzbZU/ON
NreZknnuu/lJBTi7U7dJEnB2z23qZJ4rjAtuAWcfyDCd+fGgFPUU/iXzHGMp
IgOcXd/o9wvg7M/DEsg8x1cdXaTmF2/9HVcEnH2kTIbMs0dkgBlw9r96WYSz
f+HmJfPs3zbbBJz9nqlePHD24xoxZJ6fqGbAusdFkjoqRb4MSNryLFn/j0/V
SgFnn5J9F/D+Eg+SYvhC1rlZ8XdW4OxONnY5kjq7EGcq6zpY5+c13l4Azn6+
SXFL/mdBtCfViKzzDfIuDMDZnw+xDv01F0GaCx/JOv/4Pn8TcPaiTXt5JBUP
oK8nN/LDOtf8bgXrGxtdYNgV1y2BPKURWee1h8JgfWNambo3d2Sk0JubJWSd
130vMgDOfsg08Oj4Pnoc+dJUGvY5a7Hxd+DsMo/WTmq1MmAFSykV2Ocw5qmO
AGfPrZ1R3CbGhNvPDvDCPif/sJI0cHYtUZxGI8CMu5Te3rlO7XOaDW+v2ls2
gbN5hdaX5TFjT3bTbf7UPmd93DJn72DS4euepPqRj5jZb0eZPJFko/dUXcYT
52gMqDqNmx9Wk/psLM1VqlYZjH+Wu3sLvvPBFXdXs5bC3wEW6lAEzn7SJ6yS
qt+4ZKSP1O3tXKaHgLOrNWevBc6epPsnBur2gI3TM+DsrQk/U4Gzy740JHU7
aRWHFnB2wcC7t4GzO4Z5kbo9L+Q+Cpz9lXKqMXD25491SN1muvKsFjj7L8s0
FuDsJUyyC1C3F4ujPYCzO02dLgLOXrCVRRnqdiTNtATVR7GuwEgm1VfxwM/l
flpR5xBO9Uu8t0XIjuqfuLfiPumb/PwHLYGz78V/04GzW5rlkr45ESzOBZyd
TnNuC3D2Hzkdr6BvXlTSvw+cfaqhXgM4+47jBYvQN3k9otWBs0eJ5EUDZ8/9
0Ef6Zu3a0iPA2fN/mfADZ1ebe0v65njTi07g7KvkGfOAs98z288AfdPJ2vcN
cPb2mXM/gLPzrZNgg337jfGZY8DZpSP2xwJnt2WnEYV9u4rvAy3g7Lx7OS4C
ZzfhO3YI9u1cG3U4gbMzf5pgB87+75+Wtzy1b6crZvYAzn6gZ/N64OzhVu/b
66l9++Kqj9uAsx/3zSGcnV14gq/fRDlv+tQqAeDsTwUW/IGzr5a2KIFc5bV4
ZQlwdl7DyYvA2WNSt3wGzn5u1TpX4OzaETqXgbN/sbizBjj72R2dj4CzVxtd
XwLOHp4xuQI4++oVcgnA2W/cfX0ROPt48+Nm4Oxix9PpKrS7UbuzOYdASj2S
ebtp8H3HAEo7P0j7xqcXnV1b9xw4+2bhLenA2TXH/K8DZzeqfesPnD3wudla
yMdOi9ePAGc3y3j8Ejh7fUPvI8jBjse5aABnr+KK1wbOfnXGdH5udxMKoy8+
AZy96/fefuDs/9pLi6r9YlF5csndAzOJ6Nas2Q7g7KXf9g0CZ/eqa34JnH07
n40vcPYaRTsEnP2RZYoqcHZr2zB94Ow7M10cgbPf6c6rBM7+fQfbU+Dsxxgi
nwFnz2O8/Bk4u/BdaWfg7OmxxrTA2af6xDfYsRnhHwvFZdLMKWjcJ9QD8sxh
GusNwNkdF7k/cj75hsy81+YCZ/fbpL0aOLuDR2fLqoQapLrBuRM4+6rYqk3A
2ZufdtwBzp6ytjMYOLutSN4r4OzJ5ypfAGfvXNl9HTh7/MsrkyIzjpj94BZp
4OwstS/8gbMfLlyQjLzqgC0vP44Hzn6RLfk0cHYZ7q9bgLN7vUlnTrg2jCyj
h3ZC/mzhV6Z3uFsFez2xOQScfVVNejjkz57VWvp0+Uq46FvaIHB2LU+tj8im
EY3f/n//HovZf3+PRbX/xdGb30/k5Qt/pgP+fmwt84d48QgU9uiZA1d0Mp6N
+PVdiyMXqZ4XSQX+Xp5ddxX4+0MNz/aD0rWIP3ybFvD3t8bTicDfdV23qgF/
f/i1Nx/4e9JZbcLf044PfwH+vsco6Drwd+sa33rg74vOqp+Av2+9u6Mb+Htk
kNr9Cr8UHFt53q1GIgodWarRAY5QbTpKA/x99k2d/6WCdGRwL+I48PfTIQlJ
wN+Tnh26Avz959VRZuDvV+olLIG/Z+54Whtv8x15OmQyA3/PdLUcizzbim/m
ehgBf9/sZKMK/D33CmoE/l5VoC0H/J114WAu8Hezfb8qgL8XDoSuAP6+0PF7
J/D3LV/j7YC/jxWtfgb8HXVFRgJ/V+h3Wg/8fd9GtRfA3+PY38cB3zFP0ljD
FDuI+2n0hIC/n+DPWAV8pyOe4S3wd1VhrzPA3xU+Cd0FjoOD7s0Cfzf3bV8C
/p5Op2MD/P1s1YQH8PfEpGvMwN/rDwTVM1HnpkpBb8LfXbLZNgB/f/G+9RRv
aAiynotT0yguwJkTyhXA3zm0Tl0G/q7JMCsPnJ3zvp0TcHahzYxzwNntS282
A2ev6tc2+jjkiOU//GwBzj6usTgEnP1ouwht+UUHrBx4vw04+zWlgbvA2Y84
7BQCzh4g/voxcHaWy9HVF+vS8AMa9vG3e+PwVu5SMeB6j4VrfJpXfsPTMna/
zOKzsVOTpCRw9i6GODrg7FL2k+UM6YXYSH6XIXB2OmO+oVmpRmy9r0wUOPtb
uwJT4Oy/kzUMgLNX+SZVAmcv93K6AZz9/Gm/28DZ25SyEHB2Y5p7LsDZzVge
3QbO7j66uQY4u44m7z3g7DzrxLcDZx++snMPcHbG4c03gbOfi/vkDpw93vqL
JnD27F0lEcBbvW/T2QJnl14ctwLOLinu3g28tcdN9ipw9j3Faj+As6dHh78B
rspSv7cJOPvQ89wi4OxRQXMRwNlZuje/A87uE7hvCDg7t6y+xVILRly4mnD2
vqH1hLNXHTmUevO5F2ILux4mq5GMcy/vFDwqUYAnu+J2AmdfHyQjApzdzsjx
6HbhCvz7+t5u4Owd71RFgbM3c7WUuw3U4WsMSQbA2ZNTt+0Fzl4scWsxMLMD
MwW3lQBnjysrvwic/dPXIXXg7E7sE3PA2b161ESAs59kZXsLnP139OggcPaS
t+quzmLRaOulUrrNu0OQXLgCU+3PCWTF51xF3W+UW9jXTN1/xMlUQu574YpU
2Wv88ohzY5zJhm0RSFgojOsEVW9yMq8HU8857nDf6Ew998jqcB153j+UP4P3
4bV8ehnm/PL4xa7l96vtP1ZO1Wsclizx+RabEdrCu1y3N2Q7TvPsDsGXP009
pMaFt75eHs8W4S/3gF8IqtqLAr/oOrLcZwt1czvBE/DVPjqcPPED+UZ+Mgce
lFaXex88AT3WU8B/0CdBMVXgPjI8G5+CJ2D9Tt8HPIGOd/MCwHfoV3RzgSdw
XPBWHngCRc7fyoDjrG+2kgJPgCvqMhN4AiHb9daBJ0ATf5INPAGHtOtR4AkM
qJgJAJeZsq/nWl0Xg3w3j0YpxL1Cd/Cmech5Ck5tGAZPQHCRRwE8AaNofrfB
NUfzeG3lFtQjX6HhC3/qWspikJJIWxvkVN7u3hyfRX6gDTsLM8EfKLfJKQQe
F55lJg7+gJ2JsC/4A6Kv1KNhPR+5tI34A0p5ic7gDyjWjfXBen61of0t+APu
nLr/wB/Q0TW6DPzuV4VwOvgD8fcYb4A/8PFdVDSs83V3t1aBP3AGnfcg/kB3
sApwvSsXkxbAH6CNHj0H/oClsogD598SJCP7hB78gRvlTRbgD5xa9TNC2zcT
HXG5RvyB6n2OxB/g4H4vB+tf6BF38qKtFlr5+kMQ+AAqL+ZHgc/mly3/nSKW
/9/fKdrfLsfG16OC4t4LMYEPMDm6JAkc9ot5+Rq3fCWUT3fmI/gAA5cUFIG3
fvgacH8mTg7dMXbNBB9g7HpmiF77N3Rf+NP5k23CKPQKvzH4AAdUNHpSRVJQ
fnqx5ui7Urla01DNQ6EJSDX4ky3kh5rpeYeMR5lR4sSyD/CSd6PiSgXlvHiu
uQHjl6/wM5HSf35fY1Dqmsh8yD8/fuy/C57Av9FKLfAENnx8agh8PFZWLBk8
Af9AERbwBK7+lY2HPnLy161T4AmEHI1aBE/gsz+mgT6Sbf2zFDyBbe+f24Mn
ILyO8zbwdFEl+evgCZxqyQgGT2CqbO4+9BfDj37rPJ3bccJI1CXwBH7Mi6Wx
fqhFVn38z8ATYA8PAt6ODhe4DX+l+qdduL0ceAIZnmm7wBPgLql88c3kE6J7
wX4QPIHQuwYbwRP4/PLnGug7q8IL9YD7H8Z+V4H7F3fQku/lFcjtCtw/KdTw
PXD/jMm9DjBOwXJXC+D+Xv8uDAL337k/Ih3G4zOaGwrcf1psxy3g/vuzVEdh
PDw/O4SA+6dsm9wC3D+bsTEBxnNSfMda/68xeJXb5jJqvlFiSQSZ5y0eL5uA
+/sKXvQC7i89x76yZfBIXmBCE9w/zMwlVxwdX5o3aLJ8HwfVRgPBBxgWOP0X
fICC7doTsN50BDYxUfsw3CjcOl51Vh21qqrshv2Y9gyXNPgAHzMP+i12qaCT
q0aiYD/28uolFvABrvGWRV/tUcHNNhX7YB06Ox0bAR/gokL9jsLPSmjp5dVI
2KfxOo18AB/gpXjKW/ABMhQ+Hof1+W/tWliXOOVQnLIfcP+97hGwPieuM1wG
7j89d2vLSfoNyHbuV6X/hi/IVk8O1iumKczUMGwXxrRuBT9g3R66nwb7PLxi
4PNH9EInLzOmNh/2ewxT3cnA8RdWsu4Hjs8YHvAF6sYZBtnfwPHlSgrzgeNv
Cc++CHXgcWLuHeD4O3Z5TAPHd36/4jQ873+2NaoAx2d1P7oVOP5U4DFbeN4r
zreZAMffsT97H3B83RrtBHjeudbcKafqFzZQvsilEfkKj+9crmOrTuwgHN95
Qohw/HeGRrUhBop5fRVPfKj6iM/682yh6iWWKl6uk/45++qB74c12A0C39+z
Pvsa1PM/pzwdge9/i9h1C/j+4OPna+D8svm7swnwfW8Jfi/g+w8SBk5DnW98
o+cBfH+jjPE08P0w7TeecK7xSX9oBXw/2ts1BPi+NEOmENT/Y4+FpIDvF13d
fwH4/rpmgSU477xfan4DfL/X/fxW4PsTLK+KoC/MZf5gYa5qx+uk7ioD37//
+4wY8H3e6VvjwPc5xl3kge//S0xbA/0i6NofbuD7vuodf4DvW631q34UV4hc
9Dzcge/nDN7ZBHz/U6YH6SNGXZ5FwPc3a0mqA9+fzlvxBc5ZEfJOj4HXG2z/
dwN4/S7x1DDgbpy1MbzA60/e7q0FXr9htPgocDfmehPgbSgn24sZeP1GNZpW
ffcmZPSMHXgbMjtd+Qh4vYmu1lngbnqloo3A6zc0xb4AXr9F5lCCikMReuZQ
FAG8niqK+4HXq1jwH7+PE5DZdkZn4PV3TmmvnH/Wj7aU5kYBlzT38joCvL6X
pf408PpoJLASuCSb+p/dwOvVU1mlgdd7CYzWAJecr1x1CXh9kqa0PvB6WsEN
JsAlzynYvgRe/+np6mLg9YbPb7IBl7TM20d4PW2Ffw7wer1X9tZS3xKQxcKg
iZUoHRpk3mUMXN7i1el/V/y60bmgVUs6DAzo+fwJbuDyh5hWnAeea7NRyOCU
HyNqy20YBC4/EXjjFfBcviaP15vSmBCtwXwPcPl7RdKKwHOVfB794nRiRiFH
mTcDl8+915Qdf68I/VPfkhHawYycUyL/Apen9ZBYa1iWgOSyJmaAy+/ZKywK
XD5DnssBeLeDoqwMcPmVWbyqwOUfXhFKA9592zH7LnB56URNG+DyHgJPwoF3
13S48gKXZ7rUDNwb0Rbtxee/ViP3XWpXgMvb92XsAi4/wdFW6wO8+7aaHXB5
tctD3sDlGTnj/8xWJCC/S3elgL+XHeJpAv6uaP+TjOfJUrI28PdpjaStwN9v
OkunwHgmLUOcgL+fUNlhCPxdhOZzKIznH8+pSuDvujZx/4C/T/59/wXGc6J1
TAj4+zrJCiXg70UnHBthPJNvewKBv48xvdMA/u5WWrcE48lxjLoI/H1SX16f
TYIOs9uXrwT+HqDZvh74u4jNzEkDFgY8dJHnItyvtzsfjAB/VxaQt0p5yohv
q/n6w/1aM/QK7hM+aOolciSTCV8qyTsO92tHUzgP8PfNx3Z/XOfKjPWNfhTB
/coMDYD7hFPUR4WVeplxQ3fTRrhfm74s/QbOfmTbbCBwdslfK2JgPdu3HAHv
BNu5BRoBZ78lfZys55XMh8A7wWn37p0Czt59sqYY1rPQqjF14OxhfI8fAme/
/HyNKaxnh4ACDJx9v97+TODscnkN9LCeL5bWfwTOfp5boR44+5yAqi2s57Ms
S3rA2bt+iQYDZ09U+vAanvcA0/Y84OwH7u3lA87u5n9ZAZ73+5u6JoGzT7zP
PgOcfTKBuwued075aEvg7BIlZm3A2WW9156E5/2rT7UTcHaWtyKdwNmPfzkX
B8978zpdFuDsw9b7EoGz13hIkOe9yuZnNXDz9/VM+cDNz2u2MEP+9sFXA37f
gjJPfDUEbp67P/Ag5G/jNju0gJsnHzvqANw807xOGvK3G6ySay+uHkFzwoIy
wM3pbaQCIH97zTbEANz8YXlSPHBzJwW6YsjfvtTttMzhp0ePcSXkxMhGQpvk
w3v72HM1mhgQV7UJ5MRIbYUEyYfvNbwJVRBiQp3Rf4aAg9vyPtwN+TCneey1
rF3M6Mazo5ATo4fK9SQfPtGxTyooixnRXmGDnBjd1pY8DPnwhQCTZuDaYTJP
fgLX1rKmIfwiWVLeCLh2ucqZTODaai7pjcAvwg+bvwauzVd26QNw7ROn6DyB
X2wpisgFrl3mM/QXuPbo68hzwC+Cb+64Dlz7AoNONXDtS0/KsoBf1Iao3AVO
3VT3aSNw6kEJyQzga0qqx+H3q5jVQ+cycGqGtll34Gs3+fPh96t4WCVvG3Dq
P+O9nsDXcNdlVuDUstIGisCpkz0/hwNfMyh1mQJO3SJtqw6cmmuNkCDwtd8N
ehPAo/u9baSBR2+mN6yDPiWqKEl4NFdtey3w6Co3+5PAZ0fSDgR+YdyABSoO
wf4Fxb9eVQr7FkxTmZJXzowqnmx+Ajz66skHvlcyPiPtXu564NG/OUtPAo+u
ft3BQni06tN44NGTVtohwKMLC7zE6bu/oDItt2Lg0TZToR+AR0tdZ7kG52ux
BkFH4NElJbqpwKOfl6tJw/tbH5/eDzx6VNT1LvBocU2BOshV7K+XmAGPZmsI
LAUeHS30kHxu5gpFGB/2LVcsv13DjDHTB08YJ12NUyLwaJd9s4RHa7pu14fv
O5WDTU+3BKMtnOm1j1J8kHONKkMx/LuiPYQHIKX9hA+gyv+4wFUvj0D+TO+8
T4or+Y2SX6EJbwYteP8HL8KZ8PwI4U4o6z/eJJz5yWOgNRi//zvF/iHNBx3n
C3tF/n3D1JRLr3JeYla7d280Hf3RukK+T7TU6/3RhGviY+5h3+Pjs/ME/uOb
mmwt7wN/BGPm4Sd+RR998I0Pk7fhc3tfdBruForAfn4Vh5rrnmMZuStNkn8m
kMt+wtEx7XXC1fHl/3g6I4frfeq/R+wyg8nU9dDvouXrJKGfu6n/HpmI5F2m
rofyjy1fR4z37l5q3LhN66Ur9T2Q6u7l8bt4hGJq3Fjy7Ck96nsgerw8/i98
IjAvOHhk7PJCpLecxb3l+fHb5llOzS+O9ay6Qs039ihcnuf1lgaB4AMY2T0S
Bh+giXVHOPCLeJ1lH0BSetkHuPbf+Pn2GbiAD3BOlq4cfAC3RCtJ4BqyeqIp
4ANUXC4hPsDGiIeEazAt3GcHH8DarW0P+AD/Lm8NBa6hXKGrAD6AiGutL/gA
BQYJS8A1vub8JD6Aq0K3OfgAkz/u0wHXYLeb2gY+wMr2eU3wAfQ9Vi8C17ho
yZgOPkA0D/oDPsBXFwPCNR787NwIPkDC9fZX4AN08Z64ALzpo2tYPvgAruYW
huAD6NSW6ABXurZmcRx8gHTpmKPgAzAuRROudONDlh/4ALnWL1+ADxA0ZCoM
XEnBzs0YfIDa35t0wAf4/fDMe+BKF+6IngEf4IJT9k/wAYbteh8BVzKTNZ4F
H+DODq0f4AOsfMP5F7jSb3uRKPABeqX0H4MPsHUhnnClrM+r5sAHuM8R4gE+
wNttZqRedSo8VgAfIDok/hT4AFs+a3hBvVLicZ0HH8CL7u1h8AHWXUjxgnpV
dfzvVvABOI53Ex/gRYZNFNSrWPYuIfABhM4VEx/gbe1BGahXk1VpGHwAg3Sp
UvABzpznSzBKF8p7sU2qX9mPAX/jm90KPsCb0GLCQ/1rXlWDD3A0/v/1AUxF
d0TtNuXBpZJZp8EHeNweEQuc9MmULHugzi7s17uFA3wAC4dY4gM4RLNxK+QL
YqNdEbrgA9h/ayac1LJOi/fMdRGcEelICz7Ae4WKFOCkCwsXaeB39/UMnlvA
B7hVOMgHnFTeSOc2e48Epk09eB98gPhXlivh98hGk16cgzJSmC6ok/gAog/s
CSfdGKVfBz6AsoiSBvgABzs9CL/+J637DnyA8Z8rjoMPsHeTXDRwar2I6SLw
AVJWNpwEH+DVnm4H4NRPrrAxgA+QVHLlGvgAUTpjfMCpH0SnRYIPoCSoJAA+
wDzf3xfAqW31NX6ADxBVXvUHfIDVN9IxcOoV60dGwQfY4OZnDD5ARJNLJHDq
PxkWn8EHqIpirQEfYDDFKxw4dbHmAVbwAZr9m2rBBxhrt1aGfvrZ3boBfIDi
TY7EB2CTpCc+AFtNUSX4AE1F3uCLIbvsrR7QT3tizbeADxBZn018AJsNxcQH
iOOzmQAfgKFRxgR8AAe7L9+gn2rsdokDH6DnAwPxAbJYZKJkRBTyxoy+nwcf
gON6Wgb4AI9Pe5H5dP+x7ANoaC77APn/1Wej2zfPgA/wk27LI/ABvJsPk3nu
eJB2BnyAkTXtxAew3LGC+ADjLxatwQfY6q06Dj6ASzv7bpjnYKQsDj5AUlvn
M/ABiv0cyTxfElqzAn537zovXAw+wBzn3jyYZ//M/mvgA6zfztUEPsDnEV3y
u3v/k6d+gA9Q0mD/DnyAtQ73yDwbsK3fBj5AzQPx1mJfBjS7b3n9exrPw/rG
AWzf5T9e4kEp58PJOj+0JZkdfIArU6tmxHR2IUHdHLLOK28OnQMfwEXm782s
z4Ko4uQxdljntjJVa8EHCBf7wj9nLoJsty8kwzovveDECz6Aup1DrJTiAbSg
KEjWuYPyKKxv/Kg9qPxdtwRy78klv7s/rzPUAD5AqKb3E3sZKbS9UvQsrHML
jQ8XwQew56/7zi5Ej/+4Th2E/d43OoES8AGCuX/9LWxlwE9MaU7Bfs/l0hri
A9xg1xLgE2PCf2S8tsF+r0dLhPgARy6OinoLMON717a5wH7Ptd2B+ACXbYK4
j2BmfHefB/EBeiOXfQD+kWBOqSlmLH68xOjWtSN5eYPTT8EHiNEMOAQ+QNOz
k6Q+t3Et+wB0pcs+QP1/fV/f49k58AFeMVR3gg9wNr2Y1O0P84Ky4AMsFZxY
Bz7A9qZEUrfPZl14Aj4AV/Tb9+ADnGXRIXXbqqtfBXwAs876W+ADtH4WJ3W7
mTZjAnyADX7jJuADeC0OkLqNF4/WgA9Qdfg4E/gAo/f/LELdFs1QJj6A4tit
fPAB6OwjicfFLB3ICT5AvZj4a/ABaGi3k37qF2mYAj7AyrdND8EHUKi1JH2z
f520NfgA63N9M8EH6L9jTvrmpNpaFvABWNPTNoIPwMLCS/pmSESvM/gAAk+V
T4IPMM5rtSKb6psdMWxa4AM8PPkwFnyAeSYP0jfVjp1B4AN4jjjsBh+ApT+C
9M1Q5Z3EB3Dg20V8gPXlh0jfLO+yCAcfoJ+epxl8ALbPL1jhPKJhxUJ8gPsi
qe/AB2ivVyDnkWsvi7TBB0j5t8YQfIA9ud8PwHmEESdxgA8Qcyic+ADNnhNP
4TxyqInnIfgA9O7FxAdg/af1Fc4jCfNcO8EHaAlnID6A+tGFFvtLfHmG9aJC
4ANcsbUMBh9AXMOUcIrMqtpS8AHOfDxCfne/u3yW/O5+sdndE3wAh82u18EH
KAjKWg0+gPP7Zk/wAXje8i6AD9C233Ml+ACM0ZdiwQeob3pwGXyAWE9h4gPo
OrevAx9gp/OTDeADLDZWDoAPsMfu9BrwAehEU4PAByg5aZYBPgCvJBvxAept
d74AH+CTx/HVkKdxPuAdBh/g3/TeSPABck5ak9zsQb0R8QFiBe7ogA8g9iTm
D+RjG2VLFcEHqGmvmwQfIIN7RSLkVJ6MdkbgA2Ru82cCH4Dv0hPiA3zl2fQC
fIBdTJ3+4APIneMnPsC767uVwQcIUr52DnwAgTulzuADDJXdqQUfQFInPgB8
gJ+/Pz8FH4DBhTr7ZFL7E4W62+ADrI2KWAc+gPZf3GPLZoRbvKW/gQ9gMxlP
uJJmCbcM+ADp4jkZ4APkFsXlgA9wwMyjXiDGFf+QFu4EH8A+pr4DfIAm+vcH
wAf4RXfcGXyAGKWDIeADMDIV+oEPQPe2JwR8AOfdfhbgA/yOcZeH3913aadL
gQ9QVfiL+ADGe0JDwQeQFquIAx9g/TZ/FfAB/jWmrBw9q44DJk4ygA+wa+8Y
P+TPO/SjOuW7VbCMzjzk0MhPzPkt5M+CexqWVucr4Xe7PwyBD1BXZJAAOfMx
9u//z99T5f3v76n2qWldj2dQy7uzq4L4ABOFlcGQD58VvH8LfICn22IywAeI
u3ab+AAdHBzm4AM88ePtAB8gcXxUE3wAoXi2WPAB+rdbnwQfgNOoqxB8ACW7
IuID7PQ1KgIfIFjppjn4ANm/B2rAB7jiaZUGPoB03Kse8AFYgg/dAh+AWX7W
DnyAtbV/CR9MaDzACj6A8nByEPgA5pdWEB+AdXPLR/ABZgZ1zcAHoPe+QHwA
gw/y5uT3+CPnq8AH6OJ2ZAEfoIMveAB8gGpFsXPgA9wc/HAWfIB3D5ibwQcI
XUgkPoBJiVo2+ADW2VnEB2hcd+9fSEw9cngTvQt8gIE7GcQHSDfY/Rh8gLpV
mVHgA6wMeUd8gIPHf4WAD2AiFkx8AHlPHuID/Bz+tQ98AGvD/9PWnYZjtbVx
AG8QGVOSBkQqU4akhNgllSFliBBJKKQJRUUoRBmKSilEkSlDRZFsmTKTISSS
gzIWUhF5n//i/fCe6/16rudoPff6r7X3s+/f3ruR9HGyUp5GwwNUCgnqwgPw
is3yQL9GO7SQeIAMuvAvPICe6zIneIDh5jHiAT5xHOOEB1Atqm7B71ZH3hvE
Azj7LSIeINNZXRZ9mdtrJnbDAyTG+g3CA7zNPkM8wKa8CuIB2mYZR8IDqK3l
IR7gHr9LMzzAQ6WiUniAYObIj/AAaWFz+uEBquK3Z+G+e+6Y8hZ4gNH+Rnd4
AB/jB2fgAape5dyABwj7c+c1PICJnWMtPEBQ6dIN6AunvLoTDg+g9XMrM+67
b/pqthEeIGWvLgc8gGlyRxU8wIq9Ly3gAQryn3TDAwg7262DB2CZunEEHiCc
KWY/PEDy0lXl8AAeEt+d4AF2i/dfgAf48rZxKzzAVMZzd3gAVoOXrvAAa881
VMMDCFWaXYIHuMmSJQQPIFUhKAIPsKqnyRkeYLVVDPEAaUpJuvAAW+vPx6J/
6uzZ7gwPcGJn43F4AB52adI/PZfMT+67b01SJ/fdyz+JJx6gIVyAeADhnHFy
3/3TMP3n8ACds33i4AF2K2j1wgOIdhq54XrF2UHXSXiA2T1Dy+ABTHoONqIf
Gnn53l14AMu9pcQD8B59SjzAqyE7BXgAt4kCHXiAAxp7PsMDeC9bRTzAZ4ex
CniA2d2NxAO8+6ItBg/Abmw+Dg/w7p/f5fAAAtGilvAAHklcBvAAGZQ/8QAF
2aEy8ADMWpnR8AB+b870wANYR54MgAeQ5cpdDQ9wvEee9N8N8g5nwANs5Ewp
hgeQK+Qj8254Rk8bHmDjk1JneIDvgzdJf//8r6IAeID4hMQT8ACTPybIev+r
GonP0VMr9HrgARyHpz/vIhyD/Zpuios4Ag9wMX96395hkDWXMQ662i35FjxA
yeT0eCSbPbzhAVi3NW2GB5C4Nn2ctdWUIR7g8xnTH/AATfmfbdE/2msk4kU8
wMqXnvAAy6VjtdEnKhAtvQEPkD0pFAwP8OjhpCj6QSdOOC+GBxCI7noDD+Ab
u68afR/1JA/y3IDUAwbkuQGqYoFM6O8EFiwgzw1QD2VNhweQtEvjRB9nvM9I
GB7g+63WfHiAOF120ufiDpgizw3IkunaAQ8wsDfbUZXxeyS3mp3F4NF96uDp
q13wAPtTKkkfjSqP5IIHuCe+5RU8gFTfE+IBpEcV5eAB3kYNBcED1ByueYQ8
62vZ7oYH8Ptq4QEP4Gu7l/iWK8ohkfAAsds/zDJn/K6YrEq1RB+wZ1PpU3gA
zY1HnOAB7uf6kpwrOCwthweIPbrAHx4g8dgO0h8UpbXG4QE8Le4ZwwNsqU9w
Qn/QXiN2PjxA0lnqBDzApsQbKegPvorjZYUH2HhdmgUe4PL9Yj1nRv6tKr1V
/p4xpEplxkPhAU78nBxCf3ar7P8+Zzh25jnDZlnfA1b/o0NZKs7jggewExDd
gD6slkFERMCbndTraqM08nyAkcva6LdOHD/y5E+iKvW8+DTxAE5JveHotzqP
tbMtb5WmJhRNiQd4pJ5Whb7q5x6f6D+Py1XVrtXawAOclnlM+shSdd1N1/u4
KP2JaQ/QsjSV/C5gqTYbhwcoM/DkDC6Op1Q9b5I+tfGeMTd4gMpPDvvgAfYE
lh5G3zyAZTgNHuBKnAbxAPv9bxEPkMipoA0PUDivh3gAL7aVxJV5uccSD3C4
N5R4gG1cLsQD6LGMEQ8Qysd8Fx7AzvSxJ44vH1IvscAD3Ld1JR5gT2YR6b8H
h+kSD8Be/YV4gIWLj3ai/y57oUoZHmDUx2ENPEDxQbYo9N9feF0iHmB1oTLx
APNunOPGcefS6bcH4AGc/tgfgQcIym6xxPeieHcQD8DcwEo8gEn9ZxeM88OA
JfEAWpqveuABDvmLZWI8azmkouABkiwPOcIDrMi4PoDxlEg+koYHWPRbkB8e
wNir8C7GU8sTxwsPcOKNZRs8gIrjdJ3fcZUQD1DVXegHD8C/sIv8rmeeO4T5
o4NUWLQPJZfn9vJMz6O5nv9teICJuh/xS88a0uZ3vAaRN2ETHeIBnt8V14UH
iHswh3gAwwSjzfAAdsXpV8Y+61DOhq/jcT7G1m9EPICCXUzDsX90aG5Rdink
0OiYF/EAZRZs6/LydlJDzIyTLsZ5WqBvDpwKnV37RbaGcR53xfOoGvJ50f8k
8QAc9c9iI5JUaf76LpLPMcNvNvAAs6805Bxg46Ny3T/V4rp6XIAz8QBd86pF
g9ukGeePYgXIraM4Oc+jy40kO4MWmecGe7wl53vG3erEA9w981sSHsCtbmsR
9g1qc85PeICPAUm58ADFHZ3W2AeolckX4QG66mS+wwPISqVqYb1byDcQDzD1
xm8FPMDesSRfrPdNrUzW8AD3g+0k4QF0I3+/wno3yJX6CA+QtpBeCw8w2ji9
j71JTSEegK9MqQYewHZ+/nXNxm25hY2DEfAAUbNLJeEBtC9M75PJsWm18ABM
Epe+wANorMklvku+SdoVHuC5uJUTPMAkjxnxzGp+tsQDGJ2+fxUe4JCRuwb2
+U3GY77wANkqQSPwAAP1233wuyb1rOApeIAe+xX34AGkOE6uxf5vrMikCA9w
p7rNDB5AnWvsJ37vDDRLPoAHmBQ8KwgPIP8+vRLHhVubuLngARQ4H2nBAyzd
lqUED7BsycoBeACna0PEA8gmBJPjxdUBbuIB6IgfxAMMK+s3oM8iFDRM7vev
1jlEPMCXeOuv7YzjiGfx4rfwAEEfx/XgAQpt4q7gd5bQt5pgeIDSymVu8ADb
TozeR3/QdGE3PzxArunSj/AA7vkd29AfLLvNQTwAd7L1QniABzF/m9EfXNkY
WgsPIGmjEQQPcNRPywD9wRvxyu/hAcp/NETCA6QlaDxGf1CxJf8BPIBnTKES
PEC3fLg4+oN++6qcyf37vrVTuH+/K1g4Ef3TCSEHVXiAILN6HXiA+tqRKQGm
T5SynKEYPECogacSPMCCe1rl6J/q7JO0ggcoS7hmBg9gVxJhi/6pwLfjt+AB
/rhKlMEDrDaTYEX/tMFTNRkeoH+0+zU8gOTzNhX0TzNumncWrWelTOtUzOEB
Rp5Kz0N/2Y9d8a00OzvlmnSUDx6Aq2WdOfrLeYGvgnmCOCghheBeeACPq+I3
0V8O0Nt/UiaDk5rbU9cBD/DynIwO+suHJMeNYy9wUX2LlxIP8EZnKBv95fyc
7RnrP3FR79bUEw8QePFurUVFMhUbFjAADzDZzCkND9BQJHQR/XfHBN8t8ABf
340QD2C/yD4d/fe+Mwfd4AEuiFs6wQOYC7NFof9+bVKFHx4gMWg28QDK46Il
6L+LXCk8Ag9wcIXSGngA9sD6CvTfx9fYOsMDXLatCoAHYBk59Aj99wOvczbB
A5wo9W6EByiV07mA8XSd2kA8gI3RXOIBhP5aEp9wyj+QeIA1xxwt4QF4tcwj
MB7hAv8qeAAmhbgpeADFn27FGM/I8rXS8AACnzKIB3DTCiE+4XWm1G14ANZx
E+IBRF05qzAen427iAcoY1/8U2wjK53arTcH83VGM4UXHqBF7UP3nQXs9GkB
ayvMV8TXj8QD7HWpaR0K4aCdxz8HYr4uz1rTCQ9gcMctIz+Lk97xllsd8yUh
xYd5ogvr1L6+9uSiJ/WnyHyFVdDEA3RcjJj7opOLTv1d+RXzta23hHgAU+my
2/AAPBd/P0aeQ7gPqcMDcJSaWsADMHuXkDzXhNwkHuD2evFd8AAqfy1InpnN
EvAcCjpYzIp4AIv+nkPIM+vmf4gHOP3s7Et4gDvSFziQ55c//J/CAxxniaqD
B7DlctiCPAcMa5jCAyRay4bBA3g5tBH/E7HiA/EAebfur4UH2GP8RQXrPXN2
5hA8wKD4TT14ACYeqyas94qCtw7wABEbgj/CA1gIHtPDet9OHT8PD6C86Tnx
AJ1xXPFY719UnnLDAyx8sIh4gJcBorOw3r2lQ/C8Syq+4SINDxAsEEM8gGe6
RyQ8wLfDpw/DAygcqNuM6289I5bEA3D4uZ2HB9ikc2Ij8QBF74gHyP8rpAgP
8MvrK7n+JpIjwgkPoHDQ/zE8QF0UO7n+Ru2ZdFUWY6PMr9C4TkxtbW4m14cd
+uT332lkpzr+bMB1Ykr+UKMmrg9XSsewXZHipC5re/XCA7SeuyCC68M8ufPG
IldzUSItFzfDA1DSatdwfZj6+vQcbzYXJdf7ZzY8wPaD4ttxfdiu9VQLPMB9
yu8nPED9IxnSv1gR4XYIHiA7deolPMANr7IP6F/4R3XfhweQ/TSaDg+wx8KM
eIAf2/KIB5jV2jABD1BqmmCK/oVuVwnxAHdX11TDA6R7sqagf/GI+QXxAEvs
FJbAA6zImJ+F/tpFS6ut8ACWjqus4AHi1pwPQH/N5arnBniAb+/OCcADzHX5
SPpr6q7LiAcIC8vbBg/w6daqDPTXxHO0iAcwt1pHPECb3QDpr3GzJgzCA5Q4
lmyBB6iXb6nCcapVPnYSHuDWqrXV8AAsEmY70B/vXL82sJGDj87hI+cvlMpw
MzlvsXYZjdlSyUUVHiy7Dg+g+EI9DH32DPHBengA63Zl4gEmTPL40JdXW81L
PADL08hweICHC8QU0N/PuXunAB6gfVdJOjyAM7O+C35f12noOsEDPHjmkAkP
wJ20kXxeQ6xyHTxAeZob8QCln+9047pKSNdBW3iAPPVw4gG0DNtW4t/V9RjH
+Oj2/kdHZWu5aFEP3xsYpxPbb3J/um6SJgs8QHT+fn183ynNrmPwAFfCgz/C
A1QI65A+NUvKtAfQkJr2ALUzfQG3j3XD/lnXcs8PZqnCA5g7MZN+94vz0x5A
u3faA+TM9Js0/3yPhgfofai1Hh6gzPgO6adnXz1zCR7g9KxVBfAABtsESD/d
7NGMB6i8TzyAxEx/M0CN9zU8gDOLZgQ8wC3tAdLH9ymKPgkPkBfzQxseoGDf
AdLH9/41TjyAlP20B7Cf6aeHyCXCE1DeP9/lwQNEWk3/namvlXLwAH6Oq13g
Abj0pv/Oum+VmvAAqQ/fh8MD8JtOj7/s8ZIOeIDmycpz8ACblKbH/1m3CXWh
NfOjzvjHX1MNcpiuzwe3Xw3wAM9kl52AB+hbNF1nvg2HyrKu43ljnhs5v1RT
U9Xiou+m+ijrDHFpxnkYpeZ9ko9xXkb1b13VjPMx9n617CGu19RsL2nhb+xl
1HDSmoXegt8omROTmSN/y6lKJt7K6IdNVFjjzqAN6f1Uu5ePOd6LXcZ75Bve
Y8Vs7U3e0zQ/1Lu9OFGVvrisFs/3oqJqwv1x3XW02NPxqmYeHVqgxpsSV0bp
LSnfcXD+N+qr2HxLn6BK2spS969uZxNVuJO7mu9qP6W3gWNJXFgr/f3oB9uR
u+70r7x7XU4W/VTB3AsiD80raff6fQ325z/Q/FUCG4zW91Msrxx86lRaKB+r
8bqxR18o5Qd3+ZVetFMGj02iWlZ+Yvx+7WwvGuilqtv/KcL1qCfrjqi0BbbQ
zfZc5/NKvlDdk7V3Gg+3U6N/dJZcGGujd36w6HzV0ktZbj1Enguqbhx3ifE5
OunZKWHG/0dterOcfH7/xRD8Dqfz1lsPvNTTp5lnmZPf4/YN0lWMcdDffmyJ
ZIyLzliUthzjMZqUGsO8xIXZW2BedGN4lmFeHtjPUcO89PsFrMO8uAvFK2Je
Sky81TAv+yIX/xlkzIuq1D+LMS+NT9IeYF4Uql1bMS9X5QUDMC90VKYs6ryZ
Jy7wCaPOHyaU9qLOi88x7UWd/d7Rnajz9urKBtT59Mz7uH1m3sf9ZOZ93Kd2
y1TFMurP8rm5Z5hRf+tXpr9R/8Y3d5/FMOr/ni31FOrfwDNfH/Vvc3kYhvpr
0jEDqH/SaMd3Rcb3Pbow6gHqH3LtRwfqH5guQu4PCmgY0ET9ZfXavVF/L64P
l1HPts5eIdRfubasD/W/ZqpzFPUPCR0OQP3p08dkUf8ShY+X8Pm8mfcIzy6Z
fo9w2cx7hBdtLupC/ddu53+B+s8Nlf2G8Rg+jhlG/Zv0Bk1Q//Xz5q1A/S+4
+2xF/fkHJ2RQf+/7T7eg/k4jHTqo/8fsdRxYF7qldTyof9ywexjq3yFHfUD9
eTgtAlF/MVPtzai/s9mTe6j/8utKe1D/qoyGXai/iWltG+rvmxHciPrLz7y/
bNG/3l+2N7GlBPXf8HiQBfn3qHw9hvqv+fY+EfVncb9ni/obXPXYh/pn7dt4
C/XP4C34hvrvdmkbxPfdUZJK6v9yfxipv8f+xfGov/31TG3Un+8kjy/qX7fT
zAv15C+btRL1PyzWTeq/ONPoOOo/supYIOofHe1K6t+YIkrqbz3z3qXZkdPv
XRKcee/SSROjbtS/UbTuGeq/ZSyL1L991Q3JtPFy6scWow63kTzKKHR09vdv
g1Sahf6zn/+couf5P1PqsayhzOr4500NDlLJOX69/DEV9A2bM9lXBPKoS49f
WF8aGKSERNmuXk5voYsdVPxzFaqpZao2zeNFfVS6UlNi0K8vtOTqJ3Orsluo
T+n69wvZ2qmori+2qPPqBUeqLBh1jl93nNR5cOJmIYdLBX1PdKv2cGwefYpV
d8v5vkFKdv6mine+LfSLNyLjOktqaNZAJpmVdB+lydybc3fyC+3xXj1955MW
ejw2lCWUpZ0Sy5VL9ZGn6VK7iv2/sipoDqra0JDx93/Flbh8V2yhvF207A5L
11DLK6rO3Kjqo44vzk19ty6Paryu/MkhsYLyWqB9/kr/ILUxcnOcFF1NSczi
ORUe1ULJuWrfaszro4StLA7y9rZR9r7pmR35vVT0ysL9G8JrqLyZfbj8X/vw
edObSQtH8+hamfwtXOwVVKuPMdMoo56y/vyttVPVdOvOyuL5J1qoV+sN17mX
MPafS7cTczra6AVX+gwPFPZSV6+I3z4cWUMVCgpYCqV9ok971Ws4VDjQNisT
XfZVMv7+i74WRcFq+vrcGt/JkBaaKWVqzYHqPsbxOnKJa0EvNWbpkLaNMV6Z
9bwSArdrqOG/4Q9pxnEhjceZ3J/bKqLNi5wc+WSfEJnSQgtdTFVymfpCV/Z0
n9rA1E4Zy9ncYtSXCnDsLWDUm6JXC7Oizt1vnwkx5pXON3SKYcwzNcQ7Pb8q
UV0HGeOmD906e43xPSi5xevI+E1m9uetM/vz3Jn9ucrmdTKjjvTCoxKejLrS
b98ymaCex7bck2OMg1pRIl7OGBdVzX38BMbz3+eyjs08l1Vl5rmsofO/k/xv
+qnrI8vI/wIBOZJ/bea6IMb3p9MGlggz6kG7hwitQR0o3rXuyIPQU/tjyIPN
SRln5EFBPSEAedAveVmFPHj727ghD1svs95EHnoMw48jD0eebwxDHsq2f4zG
/Ha1iUphfh8uuT4P8ztHQKMD83v3l0cZ5ldiG4ck5tdpZp93ndnnk2f2eZuY
xzaY35v2EY62jPmtaTp8FvNr9mRiHPPrrjHhjfkVPLlrNeZXONXlOr5Xeh+v
EL6X/L5rYvhelxQ7BLGu92kktGFdfzConIN1XVacswH1jDunnY16qq2a54x6
8uS5r/7NWO9S8rvksd7rD4+Q9R79r/vdFs/c77b84arP2Af0vdfGYR+Qke23
wT6wKKQnCPuAudbkJewDp59GNmEfkFBKiMa6FizM0MW6NrYUUcW6lq8/lYd1
nXHlIPMexrqO4ZWQxbo26y1Qw/rVZftogfW7Z5RjP9ZvgepIIHLYxHKhCDlU
0J/Fhhw++tf95sdn7jfP7U8URj4P/94bjXxuvx0egXw2Fy8i+dSMex6IfAbc
3BuGfHou9iM5DN5e6IEctuQsP4AcZgosN8N65+aa/wLrfehGDclnWuiuFKzT
x+9cyTpdKiYbgr8T0Hg7AftedJMhC/a9hdyRZF3QM8fHWW+nj49VM8fHfXqR
ZB8rd9yTgn2sSnc3WV9XCznJ+r2T+SIV63fOKLsM5lf7XmMM1mlazzGyTjkv
ipB5PL5D4yzy/Cabj+xvJ9TlzyLPAfLXryPPBikLWpFnEflTF5BnjcLX15Bn
A/U9R5Fnn6SDd5FnqZt98cjzgZT7isjze7cIsl/t4V/QiDxzm/HlI895FoNS
yPN/3/s5/1/HzbFDuyyQ5/DA4I/Is7f3BlfkeV2p/hDyXDLadQF55l26URR5
5vf7Q9bp3G1WK5Hny9zvyPc1WLZbAnk2dh7pRp73enwix6mFAk/J/iDiopKH
PC/jmOuEOgyqrK/7xciz73NJZeTZ9wwbybOQ7P9/L2T8LulB5Hnsd2cy8pzw
cpgc1wR2mPgjz6dCLc8hzx7XUj4gz5EB8SnI8/bTR4yQ5+QeORXkmet3WDby
HHp9+xzkuTtxoxzyzG+xTR95bl3/6hjyHLNM0Ah53rw89RrybNI8XIw8i+8s
mY95H19Y+n/fP2vEvlUEec44b0b2209mpveQq1dy382RZ6dSR5JnmYL4O8ih
fnsbybP5kUl35FmbT8kMuTVJSDyAPGvre5Lj19A29oP4756lqsnIs1upAsmz
NNM9si7svseTPLMWLSF5DtKYzvN/3/M4K+J/3/OomXj5NfKsLPEoCXlOC1lB
8jxHfjkv8mxSU5mOPLt77V6P+dXY7E3y7Kz2Qhl5FuXa74h5/A8/hMIv
     "]], {{}, {}, 
    {GrayLevel[0], Thickness[Large], Line3DBox[CompressedData["
1:eJxNyH0803kAwPExO0/ztOPQg6xm60hd1Cs77PvzIlG3pLqrTi2W1WSXOpFu
RSdPRUpOZVsd2ZTbcUyS6moUxzllrJSH6IiVGhsxWXW/P67vfp/X6/PPm8yO
28gxxuFw69Hx6HH82oBc4iEG7v9EvwxZcwt/YLBDhE+LKN+CT05W0BgK6jow
cT9Z/iOFA31L9RbLc9QI4Hd8vDqCkgA9Xjx2IIkaCyLZZZ4bKOnQjS76SmKo
fKBVpO9dSymAHlL4nMGmZoNb5pNZaygS6Lzz17JZVCEocvNwCqbUQD/6hYts
O1UKevcnH3ph2gQ94ORRtXTtbZDGetlyaUc79CzCfBEwaQR9IdJ6nugRdFWd
5vhVeSvotgtttGD2QPce8pSLMhVgMqSinb5+APpQbKL0p3ElYOokQY+XDkKX
FJkX8y4/Ac0nYsrxxsPQo2ycfFwCe8HfU3tSz4lV0PM+0P04kn7gumnzDrtj
o9C5zE1ukVefg48n+WKNuxp6Q8Tnu56wBkHKxlX7l0ePQ3c2zTtQSXwBaF00
O9ZDDfRpsxXppP5hkN+ykuu/cAK6TWtkGDirAmXVXzecyZuEXjEoc5mKeQUe
5krOLXn3Fvq6woY7RPprcLPLk8xfOw19oc12B7XqDWA6lVf41+qgp/TMObDt
zzEgbgrVyizfQbe8VlW/pm4cSHh9PqIjs9AFEm4brVQDruO7ZtqG9dDLOMn1
tblakG2m3i/z+QBdSXhqW75nApgT9K8srnyEHhjexB7ZOAlKa/OtspNxyCd/
cERnk7n0LQjj9P67gmoE/WniCcljwhRoyy2qc+o1OG1euX/s2BTwjIsffZRu
DP1sscNyTss0YLfWu7T546EjHbY0cY0OLHANPM3VGnyfYi8h/+IMuOPR+X2f
wAT6jUpzMJLwDnhVP6PlhBOgB/v68o9FzoIsjS7MXm9wraSKlOKrB7sXB9cg
JZ9Bn9efcdaT9B4491jPu7LVFPrJe2p78ux7UBE03DdsZAbdIUuoPaz8AJzc
6cWRdQYfmu7ucJR/BNFNgrvV0ebQVSXLMq3W4xCfiGVzpUQL6PO9yc4jdTjk
eSxI6m0w+KTj9iWDS40QnjfrqxGeJfRuHv2NncgI+SdR99LDjQid7Ri5bBfJ
GKmWNQ7Ydxt88ZfXOTkZxghfUuzVlWoF/f1vFaEqrTHibD+T3km3hh6fOl6x
m4tHBPSdK8qGDD7Toqx3fIxHSrboFizKsYF+J0nVXBRggsiTMjJGXW2hux1d
Hf7NdRPElXzBXZZgcIEmKNN9EQGJydzzsEBh8KpbpxgehQSEFZ/UWoRx/sH7
2+iob9p54i8pxoM9Zw+uQd1vlfRuPca7L3Glu1C3GlH/8QbjRqmBTiLUK4MT
z6zuMPiGkBkNUUBApgnp4W8xrlZGS9Sov9IUMHGdBq89JZTrUe/vKw21xPjP
wR09FkIC0lzTHEDGuMMNQKKhLuAQvZgYZwjnpOxE3b8xnyTBeE5U+9Z21JdX
ia0rMf7dHNODz1CnXqyxuIVx107/069Rt0noMlZg/FqQtNFMREAGKHMn9Bjv
oWV4BaCutF0yZqo0uHjgNjMM9Ra93ygJ4/sKJ7g7UJcpWYOLMY63jPr1MOql
8rh+b4y33Tt/MxN14e/HehgYP3/kwaMC1E9fyOsKxXjUSoKmBPW0tMudmzHu
ofYlylD/D0BaPNc=
      "]]}}, 
   {RGBColor[1, 0, 0], PointSize[Large], 
    Point3DBox[{{0.8414709848078965, 0., 0.5403023058681398}, {
     0.9542067202246453, 0., 0.6126890891311605}, {1.2622064772118446`, 0., 
     0.8104534588022096}, {1.682941969615793, 0., 1.0806046117362795`}, {
     2.1036774620197414`, 0., 1.3507557646703494`}, {2.4116772190069407`, 0., 
     1.5485201343413983`}, {2.5244129544236893`, 0., 1.6209069176044193`}}]}},
  
  Boxed->False,
  ImageSize->{360., 309.5169623977668},
  Method->{},
  PlotRange->{{-4.9921340750890835`, 5.}, {-5., 4.9921340750890835`}, {0., 
   5.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.819958201277219, -2.643256869765179, 1.947013525530168},
  ViewVertical->{-0.023299793236123766`, -0.027757543478564628`, 
   1.9971140553397158`}]], "Output",
 CellChangeTimes->{
  3.477067084468601*^9, {3.477096489404025*^9, 3.477096513680966*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"0.5", "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "\[Phi]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476538462362924*^9, 3.476538504952145*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
MF8pPQq7rutJThiIoecrKndMaIzAa8rZ9PqPYki3TeYy/dkQqEqJu7tULUaL
1hfLC63+Cf8iOZJbWpegvs5bKQlG7bA6NFT9jLs4elXauVwo9T34tGoEu3iI
I5cEtWEB9fdQtra3zspTHNkFvDy8obgCnCp13XV9xNHMk9td8/Xl8IB3LJV6
QRxZm4zaFfKUAS3QYVnqTXEk7jH1X1JDEfB5b1rUnimOeBybNjy6kAa9dp0d
Br/EUVRW1pahJa+wqJ5NhvNvcaRsLngl/N8rvHVl09ngP+KoyHFfyI0vOTjs
R61o8T9xNNlwr/hOeB5W9yjW3zRJjnd1C+sXtwAHBt1PXkmVQJmnqQcSS95h
qUQb9xkVCVRzBhRc7KuwfkiT5rINEsh4vrVdvqwKnzi2n19LXQLpWhfeurKm
Gr9VNnp0dosEEg1TWrFyqBq75Gh+GdSRQI9uWFdX+9Xg7Aqpze2mEoinOkb6
xPlP2Phn09RrTwn0qvN26LX4ehy0PvLiSy8JNOzKp3qrvB7nehvPZvpIoKGQ
qyYug/V4+dxbnkd+Eqjv1kPzKzoNeHhpulBIsAQabOmH4M4GfNc4QMosUgJF
rX383oLWhHuey27qz5JAA6/i9ezsWrDUWGsu66UE2pj36IJiUAveoxWt0Z4j
geqKH94pfdKC8yoXadW9lkC7DDsaLfpa8I3uYf3cdxJIg5XTy3OqFasuKTcN
/iyBzu0Pbjrm+Q0H+LieWPpXAmmmPRY7ZdqOw/YOH9f+J4E451O3fXFvx3Fr
/I87jZLxqNv/8F9YOy5oDXNLn5BAtY1frntUtuNx7RfHNOckUMXtuC17tTqw
J/+4s/USGhL9e3rfJXonDuq66HxBgoZefVwUXrChE0e8FnBOoNPQs5uF00+N
OvHz40sP90vTUHZ6nVDVhU488Gm7o98qGqovvXavprsTH717+VDsJhqac/WS
+xvbhX1OUw8Vb6Ghc0pWJzpedOEQwxhb5lYakux13xhS0YUTJ1NsFLVpyFBC
v43nbxdmOnywKjCgoVyjiB+F+t3471Zzq45dNDS8rOW834FuPLO4/eCcIQ15
ZMfVD7t24+Xlg5aGe2lISyfFTTSiG9uuXXyg1ZKGjl1Z1zbZ3I1PzMVacK1o
KByO0q/2d2P/byst5GxpqNI2yLWa6MaxNzeZuznQkP7tm/P+Mkzc9PegGecY
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
1b5B0v/ifswueJPO073TpP//PvP/ANfSo4E=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.499999512844876, 1.4999999999999671`}}, {{
     0, 6.283185307179586}, {-0.499999512844876, 1.4999999999999671`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.476538497432095*^9, 3.476538505633318*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kernel", "Section",
 CellChangeTimes->{{3.475880471802393*^9, 3.47588047320273*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]0", "=", "4"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"S0", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"5", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Re", "[", 
              RowBox[{"SphericalHarmonicY", "[", 
               RowBox[{
               "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}],
                "]"}], "]"}], "+", 
             RowBox[{"Im", "[", 
              RowBox[{"SphericalHarmonicY", "[", 
               RowBox[{
               "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}],
                "]"}], "]"}]}], ")"}]}]}], ")"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]", ">", "0"}], ",", " ", 
         RowBox[{"\[Phi]", ">", "0"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S0even", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"5", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"0.2", 
           RowBox[{"Re", "[", 
            RowBox[{"SphericalHarmonicY", "[", 
             RowBox[{
             "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
             "]"}], "]"}]}]}], ")"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]", ">", "0"}], ",", " ", 
         RowBox[{"\[Phi]", ">", "0"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S0odd", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"5", 
        RowBox[{"(", 
         RowBox[{"0.2", 
          RowBox[{"Im", "[", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{
            "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "]"}]}], ")"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]", ">", "0"}], ",", " ", 
         RowBox[{"\[Phi]", ">", "0"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"F0", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"S0odd", "[", 
        RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "\[Alpha]0"], "-", 
      "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"G0", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"S0even", "[", 
        RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "\[Alpha]0"], "-", 
      "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"F0", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Simplify", "[", 
      RowBox[{"G0", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G0", "[", 
    RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"G0", "[", 
     RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}]}], ")"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"3", "*", 
    SuperscriptBox["\[Xi]", "4"]}], "-", 
   RowBox[{"2", "*", 
    SuperscriptBox["\[Xi]", "6"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"5", "*", 
      SuperscriptBox["\[Xi]", "3"]}], "-", 
     RowBox[{"3", "*", 
      SuperscriptBox["\[Xi]", "5"]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.475850143682588*^9, 3.475850144231337*^9}, {
   3.475850182350058*^9, 3.47585018314128*^9}, 3.476391496591877*^9, {
   3.476391532758782*^9, 3.476391629113006*^9}, {3.476391738474806*^9, 
   3.476391741259838*^9}, 3.476397237166329*^9, 3.476467563011018*^9, {
   3.476467727971362*^9, 3.476467735504607*^9}, 3.476469745940345*^9, 
   3.476472457256761*^9, {3.476480775821047*^9, 3.4764807778010883`*^9}, {
   3.476480838156611*^9, 3.4764808437289343`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{"\[Alpha]0", "*", 
   RowBox[{"(", 
    RowBox[{"\[Xi]", "+", 
     RowBox[{
      RowBox[{"A0", "[", "\[Xi]", "]"}], "*", 
      RowBox[{"F0", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"B0", "[", "\[Xi]", "]"}], "*", 
      RowBox[{"G0", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{"R", "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"], "R"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   FractionBox[
    RowBox[{"R", "*", 
     SuperscriptBox[
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]}], "6"], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "4"], 
    RowBox[{"20", "*", "R"}]], "-", 
   RowBox[{
    FractionBox["3", "4"], 
    SuperscriptBox["R", "3"]}]}]}]}], "Input",
 CellChangeTimes->{{3.475850172897689*^9, 3.475850194697434*^9}, {
  3.4758502860251207`*^9, 3.4758503007407513`*^9}, {3.47639166519911*^9, 
  3.476391688952201*^9}, {3.476391726293894*^9, 3.47639185141017*^9}, {
  3.476399751303812*^9, 3.476399769175836*^9}, {3.4764675766746893`*^9, 
  3.476467577792808*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"r", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"TrigReduce", "[", 
     RowBox[{
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "]"}], "-", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"s", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"f", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.4763918943075743`*^9, 3.476391919593775*^9}, {
  3.476392080231708*^9, 3.4763921041329412`*^9}, {3.4763937335985193`*^9, 
  3.476393737240418*^9}, {3.4764770454021797`*^9, 3.476477049130719*^9}, {
  3.476480887300215*^9, 3.476480894178176*^9}, {3.47648226802778*^9, 
  3.476482273328094*^9}, {3.4769881941627607`*^9, 3.476988262083765*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", "\[Xi]"}], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["\[Xi]", "3"]}], "2"], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["\[Xi]", "5"]}], "2"], "+", 
  RowBox[{
   FractionBox["5", "2"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   SuperscriptBox["\[Xi]", "5"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.476391906668859*^9, 3.476391920242024*^9}, {
   3.476392087163303*^9, 3.476392104849967*^9}, 3.4763937380044823`*^9, 
   3.4763972481508207`*^9, 3.476398873690857*^9, {3.4764675680781183`*^9, 
   3.476467579257659*^9}, 3.476467739256208*^9, 3.476469750189899*^9, 
   3.4764724600628138`*^9, 3.476477051079698*^9, 3.4764770877397757`*^9, 
   3.476480780039358*^9, 3.476480846489602*^9, 3.4764808947668867`*^9, 
   3.4764822743592997`*^9, 3.4765411838831177`*^9, 3.4769878889994173`*^9, {
   3.476988215668105*^9, 3.47698826321023*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["\[Xi]", "3"]}], "4"], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["\[Xi]", "5"]}], "4"], "+", 
  RowBox[{"4", " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["5", "2"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   SuperscriptBox["\[Xi]", "5"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["5", "4"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["3", "4"], " ", 
   SuperscriptBox["\[Xi]", "5"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.476391906668859*^9, 3.476391920242024*^9}, {
   3.476392087163303*^9, 3.476392104849967*^9}, 3.4763937380044823`*^9, 
   3.4763972481508207`*^9, 3.476398873690857*^9, {3.4764675680781183`*^9, 
   3.476467579257659*^9}, 3.476467739256208*^9, 3.476469750189899*^9, 
   3.4764724600628138`*^9, 3.476477051079698*^9, 3.4764770877397757`*^9, 
   3.476480780039358*^9, 3.476480846489602*^9, 3.4764808947668867`*^9, 
   3.4764822743592997`*^9, 3.4765411838831177`*^9, 3.4769878889994173`*^9, {
   3.476988215668105*^9, 3.476988263222052*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.476391906668859*^9, 3.476391920242024*^9}, {
   3.476392087163303*^9, 3.476392104849967*^9}, 3.4763937380044823`*^9, 
   3.4763972481508207`*^9, 3.476398873690857*^9, {3.4764675680781183`*^9, 
   3.476467579257659*^9}, 3.476467739256208*^9, 3.476469750189899*^9, 
   3.4764724600628138`*^9, 3.476477051079698*^9, 3.4764770877397757`*^9, 
   3.476480780039358*^9, 3.476480846489602*^9, 3.4764808947668867`*^9, 
   3.4764822743592997`*^9, 3.4765411838831177`*^9, 3.4769878889994173`*^9, {
   3.476988215668105*^9, 3.476988263224176*^9}}],

Cell[BoxData[
 RowBox[{"10", "-", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox["\[Xi]", "2"]}], "5"], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[Xi]", "4"]}], "+", 
  FractionBox[
   RowBox[{"21", " ", 
    SuperscriptBox["\[Xi]", "6"]}], "80"], "+", 
  FractionBox[
   RowBox[{"9", " ", 
    SuperscriptBox["\[Xi]", "8"]}], "8"], "-", 
  FractionBox[
   RowBox[{"27", " ", 
    SuperscriptBox["\[Xi]", "10"]}], "80"], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[Xi]", "4"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "20"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   SuperscriptBox["\[Xi]", "8"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["9", "20"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["5", "16"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["3", "8"], " ", 
   SuperscriptBox["\[Xi]", "8"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["9", "80"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.476391906668859*^9, 3.476391920242024*^9}, {
   3.476392087163303*^9, 3.476392104849967*^9}, 3.4763937380044823`*^9, 
   3.4763972481508207`*^9, 3.476398873690857*^9, {3.4764675680781183`*^9, 
   3.476467579257659*^9}, 3.476467739256208*^9, 3.476469750189899*^9, 
   3.4764724600628138`*^9, 3.476477051079698*^9, 3.4764770877397757`*^9, 
   3.476480780039358*^9, 3.476480846489602*^9, 3.4764808947668867`*^9, 
   3.4764822743592997`*^9, 3.4765411838831177`*^9, 3.4769878889994173`*^9, {
   3.476988215668105*^9, 3.476988263227192*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "750"}], "+", 
  FractionBox[
   RowBox[{"80", " ", 
    SuperscriptBox["\[Xi]", "2"]}], "3"], "+", 
  FractionBox[
   RowBox[{"2404", " ", 
    SuperscriptBox["\[Xi]", "4"]}], "75"], "-", 
  FractionBox[
   RowBox[{"303", " ", 
    SuperscriptBox["\[Xi]", "6"]}], "40"], "-", 
  FractionBox[
   RowBox[{"2133", " ", 
    SuperscriptBox["\[Xi]", "8"]}], "100"], "+", 
  FractionBox[
   RowBox[{"79", " ", 
    SuperscriptBox["\[Xi]", "10"]}], "10"], "+", 
  FractionBox[
   RowBox[{"80653", " ", 
    SuperscriptBox["\[Xi]", "12"]}], "25600"], "-", 
  FractionBox[
   RowBox[{"339", " ", 
    SuperscriptBox["\[Xi]", "14"]}], "256"], "-", 
  FractionBox[
   RowBox[{"2997", " ", 
    SuperscriptBox["\[Xi]", "16"]}], "2560"], "+", 
  FractionBox[
   RowBox[{"189", " ", 
    SuperscriptBox["\[Xi]", "18"]}], "256"], "-", 
  FractionBox[
   RowBox[{"567", " ", 
    SuperscriptBox["\[Xi]", "20"]}], "5120"], "+", 
  RowBox[{
   FractionBox["100", "3"], " ", 
   SuperscriptBox["\[Xi]", "4"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["71", "30"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["727", "25"], " ", 
   SuperscriptBox["\[Xi]", "8"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["801", "80"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  FractionBox[
   RowBox[{"15713", " ", 
    SuperscriptBox["\[Xi]", "12"], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "3200"], "-", 
  RowBox[{
   FractionBox["57", "32"], " ", 
   SuperscriptBox["\[Xi]", "14"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["621", "320"], " ", 
   SuperscriptBox["\[Xi]", "16"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["189", "160"], " ", 
   SuperscriptBox["\[Xi]", "18"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  FractionBox[
   RowBox[{"567", " ", 
    SuperscriptBox["\[Xi]", "20"], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "3200"], "+", 
  RowBox[{
   FractionBox["125", "24"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["31", "4"], " ", 
   SuperscriptBox["\[Xi]", "8"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["9", "5"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"13769", " ", 
    SuperscriptBox["\[Xi]", "12"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "6400"], "-", 
  RowBox[{
   FractionBox["123", "320"], " ", 
   SuperscriptBox["\[Xi]", "14"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"3429", " ", 
    SuperscriptBox["\[Xi]", "16"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "3200"], "+", 
  RowBox[{
   FractionBox["189", "320"], " ", 
   SuperscriptBox["\[Xi]", "18"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"567", " ", 
    SuperscriptBox["\[Xi]", "20"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "6400"], "-", 
  RowBox[{
   FractionBox["5", "16"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["47", "128"], " ", 
   SuperscriptBox["\[Xi]", "12"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["21", "160"], " ", 
   SuperscriptBox["\[Xi]", "14"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"567", " ", 
    SuperscriptBox["\[Xi]", "16"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "1600"], "+", 
  RowBox[{
   FractionBox["27", "160"], " ", 
   SuperscriptBox["\[Xi]", "18"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"81", " ", 
    SuperscriptBox["\[Xi]", "20"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "3200"], "-", 
  FractionBox[
   RowBox[{"25", " ", 
    SuperscriptBox["\[Xi]", "12"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "1024"], "+", 
  RowBox[{
   FractionBox["15", "256"], " ", 
   SuperscriptBox["\[Xi]", "14"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["27", "512"], " ", 
   SuperscriptBox["\[Xi]", "16"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"27", " ", 
    SuperscriptBox["\[Xi]", "18"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "1280"], "-", 
  FractionBox[
   RowBox[{"81", " ", 
    SuperscriptBox["\[Xi]", "20"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "25600"]}]], "Output",
 CellChangeTimes->{{3.476391906668859*^9, 3.476391920242024*^9}, {
   3.476392087163303*^9, 3.476392104849967*^9}, 3.4763937380044823`*^9, 
   3.4763972481508207`*^9, 3.476398873690857*^9, {3.4764675680781183`*^9, 
   3.476467579257659*^9}, 3.476467739256208*^9, 3.476469750189899*^9, 
   3.4764724600628138`*^9, 3.476477051079698*^9, 3.4764770877397757`*^9, 
   3.476480780039358*^9, 3.476480846489602*^9, 3.4764808947668867`*^9, 
   3.4764822743592997`*^9, 3.4765411838831177`*^9, 3.4769878889994173`*^9, {
   3.476988215668105*^9, 3.47698826323275*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"j1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", "\[Xi]"], 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Theta]"], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j3", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Phi]"], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapr", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Theta]"], 
       RowBox[{"r", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], "+", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
       RowBox[{"r", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
     RowBox[{
      SubscriptBox["\[PartialD]", "\[Theta]"], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}],
     "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
       "]"}]}]}]}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"j1", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"j2", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"j3", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.476393296115902*^9, 3.476393323043786*^9}}],

Cell[BoxData[
 RowBox[{"4", "+", 
  FractionBox[
   RowBox[{"15", " ", 
    SuperscriptBox["\[Xi]", "2"]}], "2"], "-", 
  FractionBox[
   RowBox[{"15", " ", 
    SuperscriptBox["\[Xi]", "4"]}], "2"], "+", 
  RowBox[{
   FractionBox["15", "2"], " ", 
   SuperscriptBox["\[Xi]", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["15", "2"], " ", 
   SuperscriptBox["\[Xi]", "4"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.476393298537328*^9, 3.476393323468122*^9}, 
   3.4763950957168407`*^9, 3.476399176017819*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"10", " ", 
    SuperscriptBox["\[Xi]", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
   RowBox[{
    RowBox[{"-", "8"}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[Xi]", "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Xi]", "4"]}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[Xi]", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Xi]", "4"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "-", 
  FractionBox[
   RowBox[{"6", " ", 
    SuperscriptBox["\[Xi]", "4"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
   RowBox[{
    RowBox[{"-", "8"}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[Xi]", "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Xi]", "4"]}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[Xi]", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Xi]", "4"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.476393298537328*^9, 3.476393323468122*^9}, 
   3.4763950957168407`*^9, 3.476399176065979*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.476393298537328*^9, 3.476393323468122*^9}, 
   3.4763950957168407`*^9, 3.476399176120253*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"part1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       FractionBox[
        RowBox[{"r", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        "\[Xi]"], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["2", 
     RowBox[{
      RowBox[{"j1", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]], 
    
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"j1", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "\[Xi]"], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]], 
    RowBox[{"anglapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3a", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"j2", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{"r", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"j3", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3b", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       RowBox[{"anglapr", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      " ", "+", " ", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{"j1", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"j2", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"j3", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"]}], ")"}], 
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{"\[Xi]", ",", " ", "\[Xi]"}]], 
           RowBox[{"r", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"j2", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"j3", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
                "]"}], 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}]}], ")"}]}]}], ")"}]}]}], ")"}], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"part1", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    RowBox[{"part2", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    FractionBox[
     RowBox[{
      RowBox[{"part3a", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "+", 
      RowBox[{"part3b", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.475850234160645*^9, 3.475850235886359*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", 
   RowBox[{"\[Xi]", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{3.476128041305015*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.476128057633772*^9, 3.476393194484304*^9, 
  3.476395107806871*^9, 3.476399179534843*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"residual", "[", 
       RowBox[{"1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
      " ", 
      RowBox[{"\[Theta]", "\[Rule]", "0"}]}], "]"}], "]"}], ",", " ", "18"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.476395111575974*^9, 3.4763951768160973`*^9}, {
   3.476395222849366*^9, 3.476395259872452*^9}, {3.476395322314556*^9, 
   3.476395370299526*^9}, 3.476396155596941*^9, {3.476396245203698*^9, 
   3.4763962551711073`*^9}, 3.476396376826118*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"-3.462666666666666\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"1\"\>"]}],
   -34.626666666666665`,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{
  3.476395260903953*^9, {3.476395327782741*^9, 3.476395371389131*^9}, 
   3.476396156074293*^9, {3.476396251389011*^9, 3.476396255527815*^9}, 
   3.476396400691225*^9, 3.4763991804618*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"residual", "[", 
     RowBox[{
     "7.518398074789773844*^-01", ",", "1.178097245096172418*^00", ",", 
      "1.570796326794896558*^00"}], "]"}], "]"}], ",", " ", "18"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4763962965109463`*^9, 3.476396332854738*^9}, {
  3.476399441359583*^9, 3.4763994733980513`*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"1.963573842892393\"\>",
   1.963573842892393,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{{3.4763963104487057`*^9, 3.476396335418198*^9}, 
   3.476399181920019*^9, 3.476399474883274*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Alpha]", "2"], 
    SuperscriptBox[
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"]], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"j2", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"], "+", 
     SuperscriptBox[
      RowBox[{"j3", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tildelapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Alpha]", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Xi]", ",", "\[Xi]"}]], 
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      "+", 
      RowBox[{
       FractionBox["2", "\[Xi]"], 
       RowBox[{
        SubscriptBox["\[PartialD]", "\[Xi]"], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}], "+", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["\[Xi]", "2"]], 
       RowBox[{"anglapf", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.475850566813445*^9, 3.475850572216497*^9}, 
   3.47585716997964*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pseudospherical", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"tildelapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
   "-", 
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.475850609436595*^9, 3.4758506176906424`*^9}}],

Cell[BoxData[
 RowBox[{"pseudospherical", "[", 
  RowBox[{"0.8", ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475857205299737*^9, 3.4758572063437643`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"r_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["r", "2"], "*", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["r", "2"], "-", "1"}], ")"}], 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.475857413252083*^9, 3.4758574237433357`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"r", ",", "r"}]], 
       RowBox[{"f", "[", 
        RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "+",
       
      RowBox[{
       FractionBox["2", "r"], 
       RowBox[{
        SubscriptBox["\[PartialD]", "r"], 
        RowBox[{"f", "[", 
         RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
      "+", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["r", "2"]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
          RowBox[{"f", "[", 
           RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"f", "[", 
            RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], "+", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
           RowBox[{"f", "[", 
            RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], ")"}]}]}], ")"}], "/.", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.475857440549424*^9}],

Cell[BoxData[
 RowBox[{"lapf", "[", 
  RowBox[{"0.8", ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475857265490102*^9, 3.4758572735077257`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shell", "Section",
 CellChangeTimes->{{3.475850090286294*^9, 3.4758500911907*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", 
     RowBox[{"3", "/", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"5", "/", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", "0"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"G", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["2", "3"], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", 
    RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Xi]", "3"], "-", 
     RowBox[{"3", "*", "\[Xi]"}], "+", "2"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[Xi]", "3"]}], "+", 
     RowBox[{"3", "*", "\[Xi]"}], "+", "2"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.4758466719000807`*^9, 3.4758467362869787`*^9}, {
   3.4758467670647087`*^9, 3.475846767525558*^9}, {3.475848517736361*^9, 
   3.475848573996279*^9}, {3.476399624921219*^9, 3.4763996574339647`*^9}, {
   3.476399704782653*^9, 3.4763997331120157`*^9}, 3.476399906383855*^9, {
   3.476472970182078*^9, 3.476472979828086*^9}, {3.477149403006237*^9, 
   3.477149403693389*^9}, {3.477151976951811*^9, 3.477152034128623*^9}, {
   3.477152479894204*^9, 3.47715250562957*^9}, {3.477152605013315*^9, 
   3.47715260906533*^9}, {3.477153128869884*^9, 3.477153234850765*^9}, {
   3.477229933014422*^9, 3.477229936569641*^9}, {3.4772385654391108`*^9, 
   3.477238574541211*^9}, {3.477243599377675*^9, 3.47724360875572*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   RowBox[{"\[Alpha]", "*", 
    RowBox[{"(", 
     RowBox[{"\[Xi]", "+", 
      RowBox[{
       RowBox[{"A", "[", "\[Xi]", "]"}], "*", 
       RowBox[{"F", "[", 
        RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"B", "[", "\[Xi]", "]"}], "*", 
       RowBox[{"G", "[", 
        RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
   "\[Beta]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["R", "2"], "2"]}], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"], "6"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
     
    RowBox[{
     RowBox[{"R", "-", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"], "B"], "\[IndentingNewLine]", 
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], 
        "]"}]}]}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"R", "*", 
        SuperscriptBox[
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]}], "6"], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"r", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        "4"], 
       RowBox[{"20", "*", "R"}]], "-", 
      RowBox[{
       FractionBox["3", "4"], 
       SuperscriptBox["R", "3"]}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.475848883263628*^9, 3.475848895595962*^9}, {
  3.4763998037334423`*^9, 3.476399811251905*^9}, {3.4770684733841677`*^9, 
  3.477068559095956*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"r", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"s", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"f", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.477067531256651*^9, 3.4770675325008383`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["15", "2"], "+", 
  FractionBox[
   RowBox[{"11", " ", "\[Xi]"}], "4"], "-", 
  FractionBox[
   SuperscriptBox["\[Xi]", "3"], "4"], "+", 
  FractionBox[
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", 
  RowBox[{
   FractionBox["3", "4"], " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.476399837182789*^9, 3.4763999094117403`*^9, 3.476473007118647*^9, {
   3.477067506424966*^9, 3.4770675338362503`*^9}, 3.4770688332112827`*^9, 
   3.47707623372505*^9, 3.477149371694169*^9, 3.477149410009556*^9, 
   3.4771496159813004`*^9, 3.477149662398902*^9, 3.4771518535024767`*^9, 
   3.4771525594866*^9, 3.477152616779223*^9, 3.477153252449767*^9, 
   3.4771533500057907`*^9, 3.477229944617201*^9, 3.477237506801363*^9, 
   3.4772385780914097`*^9, 3.477243612668223*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], "-", 
  FractionBox[
   RowBox[{"3", " ", "\[Xi]"}], "8"], "+", 
  FractionBox[
   SuperscriptBox["\[Xi]", "3"], "8"], "+", 
  FractionBox[
   RowBox[{"15", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "2"], "+", 
  RowBox[{
   FractionBox["11", "4"], " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["3", "8"], " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.476399837182789*^9, 3.4763999094117403`*^9, 3.476473007118647*^9, {
   3.477067506424966*^9, 3.4770675338362503`*^9}, 3.4770688332112827`*^9, 
   3.47707623372505*^9, 3.477149371694169*^9, 3.477149410009556*^9, 
   3.4771496159813004`*^9, 3.477149662398902*^9, 3.4771518535024767`*^9, 
   3.4771525594866*^9, 3.477152616779223*^9, 3.477153252449767*^9, 
   3.4771533500057907`*^9, 3.477229944617201*^9, 3.477237506801363*^9, 
   3.4772385780914097`*^9, 3.477243612688065*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.476399837182789*^9, 3.4763999094117403`*^9, 3.476473007118647*^9, {
   3.477067506424966*^9, 3.4770675338362503`*^9}, 3.4770688332112827`*^9, 
   3.47707623372505*^9, 3.477149371694169*^9, 3.477149410009556*^9, 
   3.4771496159813004`*^9, 3.477149662398902*^9, 3.4771518535024767`*^9, 
   3.4771525594866*^9, 3.477152616779223*^9, 3.477153252449767*^9, 
   3.4771533500057907`*^9, 3.477229944617201*^9, 3.477237506801363*^9, 
   3.4772385780914097`*^9, 3.477243612722888*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1949", "48"]}], "+", 
  FractionBox[
   RowBox[{"109", " ", "\[Xi]"}], "16"], "+", 
  FractionBox[
   RowBox[{"251", " ", 
    SuperscriptBox["\[Xi]", "2"]}], "192"], "-", 
  FractionBox[
   RowBox[{"29", " ", 
    SuperscriptBox["\[Xi]", "3"]}], "48"], "-", 
  FractionBox[
   RowBox[{"25", " ", 
    SuperscriptBox["\[Xi]", "4"]}], "96"], "+", 
  FractionBox[
   SuperscriptBox["\[Xi]", "6"], "64"], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "4"], "-", 
  RowBox[{
   FractionBox["17", "12"], " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["11", "16"], " ", 
   SuperscriptBox["\[Xi]", "2"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["7", "12"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["7", "24"], " ", 
   SuperscriptBox["\[Xi]", "4"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "48"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "48"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "16"], " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["3", "64"], " ", 
   SuperscriptBox["\[Xi]", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "48"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "32"], " ", 
   SuperscriptBox["\[Xi]", "4"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "192"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.476399837182789*^9, 3.4763999094117403`*^9, 3.476473007118647*^9, {
   3.477067506424966*^9, 3.4770675338362503`*^9}, 3.4770688332112827`*^9, 
   3.47707623372505*^9, 3.477149371694169*^9, 3.477149410009556*^9, 
   3.4771496159813004`*^9, 3.477149662398902*^9, 3.4771518535024767`*^9, 
   3.4771525594866*^9, 3.477152616779223*^9, 3.477153252449767*^9, 
   3.4771533500057907`*^9, 3.477229944617201*^9, 3.477237506801363*^9, 
   3.4772385780914097`*^9, 3.477243612758231*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"j1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", "\[Xi]"], 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Theta]"], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j3", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Phi]"], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapr", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Theta]"], 
       RowBox[{"r", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], "+", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
       RowBox[{"r", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
     RowBox[{
      SubscriptBox["\[PartialD]", "\[Theta]"], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}],
     "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
       "]"}]}]}]}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"part1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       FractionBox[
        RowBox[{"r", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{"\[Xi]", "+", 
         RowBox[{"\[Beta]", "/", "\[Alpha]"}]}]], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["2", 
     RowBox[{
      RowBox[{"j1", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]], 
    
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"j1", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           
          RowBox[{"\[Xi]", "+", 
           RowBox[{"\[Beta]", "/", "\[Alpha]"}]}]], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]], 
    RowBox[{"anglapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3a", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"j2", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{"r", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"j3", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3b", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       RowBox[{"anglapr", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      " ", "+", " ", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{"j1", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"j2", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"j3", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"]}], ")"}], 
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{"\[Xi]", ",", " ", "\[Xi]"}]], 
           RowBox[{"r", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"j2", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"j3", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
                "]"}], 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}]}], ")"}]}]}], ")"}]}]}], ")"}], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
    
   RowBox[{
    RowBox[{"part1", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    RowBox[{"part2", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    FractionBox[
     RowBox[{
      RowBox[{"part3a", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "+", 
      RowBox[{"part3b", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.47584678835923*^9, 3.475846789298519*^9}, 
   3.475848748962199*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Alpha]", "2"], 
    SuperscriptBox[
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"]], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"j2", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"], "+", 
     SuperscriptBox[
      RowBox[{"j3", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seff", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  FractionBox[
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    RowBox[{"residual", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
   RowBox[{"a", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
    "]"}]]}]}], "Input",
 CellChangeTimes->{
  3.475848778591878*^9, {3.477151763977003*^9, 3.4771518233190804`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{"seff", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Expand", "[", 
    RowBox[{"N", "[", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"Expand", "[", 
         RowBox[{"seff", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Xi]", ",", " ", "0", ",", " ", "15"}], "}"}]}], "]"}], 
     "]"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.477237512989497*^9, 3.477237549269389*^9}, {
  3.477237588148831*^9, 3.477237603635696*^9}, {3.477237658581881*^9, 
  3.477237662627839*^9}, {3.477238189511698*^9, 3.477238285412478*^9}, {
  3.477238347251711*^9, 3.477238348515718*^9}, {3.4772436237447567`*^9, 
  3.477243626177619*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4622", "-", 
   RowBox[{"116", " ", "\[Xi]"}], "-", 
   RowBox[{"4116", " ", 
    SuperscriptBox["\[Xi]", "2"]}], "-", 
   RowBox[{"1950", " ", 
    SuperscriptBox["\[Xi]", "3"]}], "+", 
   RowBox[{"113", " ", 
    SuperscriptBox["\[Xi]", "4"]}], "+", 
   RowBox[{"216", " ", 
    SuperscriptBox["\[Xi]", "5"]}], "+", 
   RowBox[{"31", " ", 
    SuperscriptBox["\[Xi]", "6"]}], "-", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{"430", "-", 
      RowBox[{"408", " ", "\[Xi]"}], "-", 
      RowBox[{"1143", " ", 
       SuperscriptBox["\[Xi]", "2"]}], "-", 
      RowBox[{"518", " ", 
       SuperscriptBox["\[Xi]", "3"]}], "+", 
      RowBox[{"57", " ", 
       SuperscriptBox["\[Xi]", "4"]}], "+", 
      RowBox[{"72", " ", 
       SuperscriptBox["\[Xi]", "5"]}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox["\[Xi]", "6"]}]}], ")"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"14", "+", 
      RowBox[{"88", " ", "\[Xi]"}], "+", 
      RowBox[{"90", " ", 
       SuperscriptBox["\[Xi]", "2"]}], "+", 
      RowBox[{"30", " ", 
       SuperscriptBox["\[Xi]", "3"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Xi]", "4"]}]}], ")"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], 
  RowBox[{"192", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", "\[Xi]"}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.477237525176305*^9, 3.477237550746139*^9}, {
   3.477237593379037*^9, 3.4772376044893*^9}, 3.477237664436702*^9, 
   3.477238230540658*^9, {3.4772382636937857`*^9, 3.477238287449481*^9}, {
   3.477238323786139*^9, 3.477238350145933*^9}, 3.4772385860306807`*^9, 
   3.477240910138183*^9, 3.477243630500444*^9, 3.477244420536921*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"chebcoeff", "[", "n_", "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["2", 
       RowBox[{"\[Pi]", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"0", ",", " ", "n"}], "]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"seff", "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "]"}], 
        "*", 
        RowBox[{"ChebyshevT", "[", 
         RowBox[{"n", ",", " ", "\[Xi]"}], "]"}]}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[Xi]", "2"]}]]]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Xi]", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.47724080716807*^9, 3.477240894699832*^9}, {
  3.4772409460003443`*^9, 3.4772409492745447`*^9}, {3.477240982026668*^9, 
  3.477240993869726*^9}, {3.477241205685618*^9, 3.477241206933152*^9}, {
  3.477242227053555*^9, 3.477242287961969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"chebcoefftable", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"chebcoeff", "[", "n", "]"}], ",", " ", "18"}], "]"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}], ")"}], 
  "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.4772411741165648`*^9, 3.477241196869231*^9}, {
  3.477241287786715*^9, 3.477241316671378*^9}, {3.4772446999988947`*^9, 
  3.477244704730345*^9}, {3.477244927810069*^9, 3.477244936270582*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"1.03501464246414996404292692855`17.999999999999996", "-", 
       RowBox[{"0.06632715453360329389848824085`18.", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "0.01785878065070864648353163220888936184`17.999999999999996", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.83479018329602686961708331012`18."}], "+", 
       RowBox[{"0.85347607726680164694924412042`18.", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"0.0413511144571877000472494124`18.", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.45302138656413437962651098876`18."}], "+", 
       RowBox[{"0.4719749629489910461123179688`18.", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "0.02590705836823253284290287268448998286`17.999999999999996", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
       "-", "0.01410075965951517767157078199516508416`17.999999999999996"}], 
       "+", 
       RowBox[{
       "0.0129723610157383213551801378427954933`18.000000000000004", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "0.00328075391717869020625243746179987706`17.999999999999996", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
      "0.01645502392657521721567020809683111931`18.000000000000004", "-", 
       RowBox[{
       "0.02149325808684194848679759172541869157`18.000000000000004", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
       "0.00559826996462030314270126251172780006`17.999999999999996", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
      "0.00050212302497519451420741237736958241`18.000000000000004", "-", 
       RowBox[{
       "0.00069251543324975173279258466685978159`18.000000000000004", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
       "0.00011925853440152876863722283853784523`18.000000000000004", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
       "-", "0.00006742310385689275657549841489500585`17.999999999999996"}], 
       "+", 
       RowBox[{
       "0.0001025414627604400581222342567258533`17.999999999999996", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "0.00002608317227289157353701911735224366`18.000000000000004", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
      "9.02684765914838836621017779482754`18.000000000000004*^-6", "-", 
       RowBox[{
       "0.00001487643595057213206383033096449741`17.999999999999996", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
       "4.70196911920636956783580829319351`17.999999999999996*^-6", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
       "-", "1.20536750311505619860692972462581`17.999999999999996*^-6"}], 
       "+", 
       RowBox[{
       "2.12478519141982176610408003417145`18.000000000000004*^-6", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "7.7365094122150053893911577633853`17.999999999999996*^-7", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
      "1.6057128113685800840140208590664`17.999999999999996*^-7", "-", 
       RowBox[{
       "2.9976124224562920802687764378517`17.999999999999996*^-7", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
       "1.2067515666002510094554416869791`17.999999999999996*^-7", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
       "-", "2.134398207747631022950137143789`17.999999999999996*^-8"}], "+", 
       
       RowBox[{
       "4.18696909358856646117987513522`18.000000000000004*^-8", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "1.817402035170559350088079967651`17.999999999999996*^-8", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.477241425794026*^9, 3.477243788406804*^9, 
  3.477244807097821*^9, 3.477244995896439*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rbyxiplusbbya", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"\[Xi]", "+", 
     RowBox[{"\[Beta]", "/", "\[Alpha]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dfdxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", "\[Xi]"], 
    RowBox[{"f", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrdfdxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d2rdxi2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"\[Xi]", ",", " ", "\[Xi]"}]], 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrd2fdthetadxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrd2rdthetadxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrsinthetad2fdphidxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrsinthetad2rdphidxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrsqanglaplacef", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]], 
    RowBox[{"anglapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrsqanglaplacer", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]], 
    RowBox[{"anglapr", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.477149646333197*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nr", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nt", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"np", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "14"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", "11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Xi]", "=", 
   RowBox[{"N", "[", 
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"\[Pi]", "*", "i"}], 
       RowBox[{"nr", "-", "1"}]], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{"\[Pi]", "*", "j"}], 
     RowBox[{"nt", "-", "1"}]], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", "=", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{"2", "*", "\[Pi]", "*", "k"}], "np"], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4758487921259203`*^9, 3.475848797587862*^9}, {
  3.47707515289635*^9, 3.477075158525483*^9}, {3.4770753040297623`*^9, 
  3.477075343402*^9}, {3.477075649349236*^9, 3.4770756765819893`*^9}, {
  3.477076122504809*^9, 3.477076138755949*^9}, {3.477153274415621*^9, 
  3.477153277421319*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"j1", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"j2", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"j3", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"rbyxiplusbbya", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"dfdxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrdfdxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"d2rdxi2", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrd2fdthetadxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrd2rdthetadxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrsinthetad2fdphidxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrsinthetad2rdphidxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrsqanglaplacef", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrsqanglaplacer", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"2.\"\>",
   2.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153401975815*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402000329*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0\"\>",
   0,
   Editable->False],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.4771534020491533`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"2.\"\>",
   2.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402072278*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"6.666666666666666\"\>",
   6.666666666666666,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402103422*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"6.666666666666666\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"-1\"\>"]}],
   0.6666666666666666,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402132165*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"-3.\"\>",
   -3.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.4771534021660967`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402199004*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402232909*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0\"\>",
   0,
   Editable->False],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402266327*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0\"\>",
   0,
   Editable->False],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402302391*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402335095*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.4771534023923264`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"-2.5\"\>",
   -2.5,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.4771534024243917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"part1", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"part2", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"part3a", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"part3b", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"seff", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}]}], "Input",
 CellChangeTimes->{{3.477151670511694*^9, 3.477151709582161*^9}, {
  3.477151874459433*^9, 3.4771518953965197`*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"1.\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"1\"\>"]}],
   10.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.477153406445588*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"1.\"\>",
   1.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.477153406475156*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.47715340650878*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.477153406549464*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.4771534065942497`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"-5.\"\>",
   -5.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.477153406627633*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"-2.5\"\>",
   -2.5,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.4771534066685038`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"1\"\>",
   1,
   Editable->False],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.4771534067203093`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"-1.5\"\>",
   -1.5,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.477153406765979*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tildelapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Alpha]", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Xi]", ",", "\[Xi]"}]], 
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      "+", 
      RowBox[{
       FractionBox["2", 
        RowBox[{"\[Xi]", "+", 
         RowBox[{"\[Beta]", "/", "\[Alpha]"}]}]], 
       RowBox[{
        SubscriptBox["\[PartialD]", "\[Xi]"], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}], "+", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Xi]", "+", 
           RowBox[{"\[Beta]", "/", "\[Alpha]"}]}], ")"}], "2"]], 
       RowBox[{"anglapf", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.4758488004189157`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tildelapf", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.4758488119197903`*^9, 3.4758488150670013`*^9}}],

Cell[BoxData["1.8471243970532207`"], "Output",
 CellChangeTimes->{3.477068915217482*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pseudospherical", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"tildelapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
   "-", 
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.475847407461722*^9, 3.475847413412442*^9}, {
  3.475848644085314*^9, 3.475848651139675*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pseudospherical", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475848690670495*^9, 3.475848729805554*^9}}],

Cell[BoxData["0.9999999999999998`"], "Output",
 CellChangeTimes->{3.477068917762158*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"r_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{
    SuperscriptBox["r", "2"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["r", "2"], "-", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", "1"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4758468764880857`*^9, 3.475846888050375*^9}, {
  3.475848937471758*^9, 3.475848941448749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lapf", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=",
   
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"r", ",", "r"}]], 
      RowBox[{"f", "[", 
       RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "+", 
     
     RowBox[{
      FractionBox["2", "r"], 
      RowBox[{
       SubscriptBox["\[PartialD]", "r"], 
       RowBox[{"f", "[", 
        RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
     "+", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["r", "2"]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
         RowBox[{"f", "[", 
          RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
        "+", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
         RowBox[{
          SubscriptBox["\[PartialD]", "\[Theta]"], 
          RowBox[{"f", "[", 
           RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}],
         "+", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
          RowBox[{"f", "[", 
           RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
           "]"}]}]}]}], ")"}]}]}], ")"}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.475849996125032*^9, 3.475850018363028*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"8", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Xi]", "+", 
           RowBox[{
            FractionBox["1", "8"], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "\[Xi]"}], "+", 
              SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
       ")"}], "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"8", "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"\[Xi]", "+", 
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Xi]"}], "+", 
            SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
     ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"8", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "+", 
                RowBox[{
                 FractionBox["1", "8"], " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", 
                   RowBox[{"3", " ", "\[Xi]"}], "+", 
                   SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
               ")"}]}]}], ")"}], "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"8", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Xi]", "+", 
             RowBox[{
              FractionBox["1", "8"], " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"3", " ", "\[Xi]"}], "+", 
                SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}],
          ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Xi]", "+", 
              RowBox[{
               FractionBox["1", "8"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "\[Xi]"}], "+", 
                 SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
      ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"8", "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"\[Xi]", "+", 
        RowBox[{
         FractionBox["1", "8"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "\[Xi]"}], "+", 
           SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "12"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Xi]", "+", 
              RowBox[{
               FractionBox["1", "8"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "\[Xi]"}], "+", 
                 SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"8", "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Xi]", "+", 
            RowBox[{
             FractionBox["1", "8"], " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"3", " ", "\[Xi]"}], "+", 
               SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"6", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Xi]", "+", 
              RowBox[{
               FractionBox["1", "8"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "\[Xi]"}], "+", 
                 SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"8", "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Xi]", "+", 
            RowBox[{
             FractionBox["1", "8"], " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"3", " ", "\[Xi]"}], "+", 
               SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"8", "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"\[Xi]", "+", 
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Xi]"}], "+", 
            SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
     ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.477068928189158*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lapf", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475849006350732*^9, 3.475849009125833*^9}, {
  3.4758500338671417`*^9, 3.475850034556802*^9}}],

Cell[BoxData[
 RowBox[{"-", "169.7477034240518`"}]], "Output",
 CellChangeTimes->{3.477068930335367*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["External Domain", "Section",
 CellChangeTimes->{{3.4758575133022337`*^9, 3.475857517314334*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"-", "0.02"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Szm1", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"10", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"0.2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{
            "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "]"}], "+", 
          RowBox[{"Im", "[", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{
            "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "]"}]}], ")"}]}]}], ")"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]", ">", "0"}], ",", " ", 
      RowBox[{"\[Phi]", ">", "0"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"\[Alpha]", "*", 
      RowBox[{"Szm1", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]], "+", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"F", "[", 
   RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Xi]", "3"], "-", 
     RowBox[{"3", "*", "\[Xi]"}], "+", "2"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.4758594667202187`*^9, 3.4758594673780107`*^9}, {
  3.475859508105506*^9, 3.475859509544449*^9}, {3.476129420505269*^9, 
  3.476129426426854*^9}, {3.476129460711232*^9, 3.476129465906559*^9}}],

Cell[BoxData[
 RowBox[{"2", "-", 
  FractionBox["50.`", 
   RowBox[{"10.`", "\[InvisibleSpace]", "+", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2.503342941796705`"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"2.503342941796705`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{
  3.4758644078339148`*^9, 3.475864603495307*^9, {3.47586489102302*^9, 
   3.475864927685117*^9}, 3.4758653259192467`*^9, 3.475865762134107*^9, 
   3.475894907465415*^9, 3.475942648932981*^9, 3.475942701715884*^9, 
   3.4759431179468393`*^9, 3.476118515589238*^9, 3.476118602381287*^9, 
   3.4761260923611393`*^9, 3.4761294278181543`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{"\[Alpha]", "*", 
   RowBox[{"(", 
    RowBox[{"\[Xi]", "+", 
     RowBox[{
      RowBox[{"A", "[", "\[Xi]", "]"}], "*", 
      RowBox[{"F", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "-", "1"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
    
   RowBox[{
    SuperscriptBox[
     RowBox[{"u", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"u", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
       "2"], "-", "1"}], ")"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
      
     RowBox[{
      SuperscriptBox["\[Xi]", "2"], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Xi]", "2"], "-", "1"}], ")"}], 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.475859505502331*^9, 3.4758595266942244`*^9}, {
  3.475859692842299*^9, 3.475859695621524*^9}, {3.475859983694522*^9, 
  3.475859998409977*^9}, {3.475862094560739*^9, 3.475862097760429*^9}, {
  3.475864595887534*^9, 3.475864598587368*^9}, {3.475864680380591*^9, 
  3.47586470341765*^9}, {3.475865750210885*^9, 3.4758657582360086`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"j1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", "\[Xi]"], 
    RowBox[{"u", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Theta]"], 
     RowBox[{"u", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{"u", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j3", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Phi]"], 
     RowBox[{"u", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapu", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
      RowBox[{"u", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Theta]"], 
       RowBox[{"u", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], "+", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
       RowBox[{"u", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
     RowBox[{
      SubscriptBox["\[PartialD]", "\[Theta]"], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}],
     "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
       "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.475859598954925*^9, 3.475859615739891*^9}, {
  3.475859799191556*^9, 3.475859805154997*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"part1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       FractionBox[
        RowBox[{"u", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{"\[Xi]", "-", "1"}]], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["2", 
     RowBox[{
      RowBox[{"j1", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"u", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]], 
    
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"j1", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"u", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           
          RowBox[{"\[Xi]", "-", "1"}]], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"u", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]], 
    RowBox[{"anglapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3a", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"j2", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{"u", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"j3", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3b", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"u", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       RowBox[{"anglapu", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      " ", "+", " ", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{"j1", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"j2", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"j3", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"]}], ")"}], 
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{"\[Xi]", ",", " ", "\[Xi]"}]], 
           RowBox[{"u", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"j2", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{"u", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
              RowBox[{"u", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"j3", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
                "]"}], 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
              RowBox[{"u", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}]}], ")"}]}]}], ")"}]}]}], ")"}], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"part1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "+"}], "*)"}], 
   RowBox[{
    RowBox[{"part2", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    FractionBox[
     RowBox[{
      RowBox[{"part3a", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "+", 
      RowBox[{"part3b", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.47585957820792*^9, 3.475859579511887*^9}, {
  3.475859626351746*^9, 3.475859675071598*^9}, {3.475859818124408*^9, 
  3.475859818314739*^9}, {3.475864312688739*^9, 3.475864334102832*^9}, {
  3.475942664126562*^9, 3.475942694094528*^9}, {3.476118548993044*^9, 
  3.476118563738173*^9}, {3.476118617452126*^9, 3.476118628809897*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", 
   RowBox[{"\[Xi]", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476126160990588*^9, 3.4761262365616283`*^9}, {
  3.4761263095530987`*^9, 3.476126332615717*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.476126185831521*^9, 3.476126218324409*^9}, {
   3.4761262991222878`*^9, 3.476126341072935*^9}, 3.476129440111827*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"residual", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475863714294788*^9, 3.4758637163247337`*^9}, 
   3.476126086423959*^9, {3.4761261498241377`*^9, 3.476126152122602*^9}}],

Cell[BoxData[
 RowBox[{"-", "3.4150311726085585`"}]], "Output",
 CellChangeTimes->{
  3.475864413314303*^9, 3.4758646091813507`*^9, 3.4758657103086576`*^9, 
   3.4758657705100517`*^9, 3.475894915554863*^9, 3.475895408397933*^9, 
   3.475942706442706*^9, 3.475943138249155*^9, {3.476118621334676*^9, 
   3.47611863132351*^9}, 3.476126100212943*^9, 3.4761261527815313`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Alpha]", "2"], 
    SuperscriptBox[
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"]], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"j2", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"], "+", 
     SuperscriptBox[
      RowBox[{"j3", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]}], ")"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.47586372273724*^9, 3.475863722868239*^9}}],

Cell[BoxData["0.3215314299805029`"], "Output",
 CellChangeTimes->{3.4758644177919283`*^9, 3.475864614186613*^9, 
  3.475865718555497*^9, 3.4758657720893183`*^9, 3.475895183935049*^9, 
  3.4758954155005493`*^9, 3.475942715098878*^9, 3.4759431521830463`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tildelapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Alpha]", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Xi]", ",", "\[Xi]"}]], 
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      "+", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Xi]", "-", "1"}], ")"}], "2"]], 
       RowBox[{"anglapf", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4758629012774763`*^9, 3.475862914382719*^9}, {
  3.475894951552924*^9, 3.47589496195068*^9}, {3.475896557124548*^9, 
  3.475896584779673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tildelapf", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.47586384280142*^9, 3.475863844765708*^9}}],

Cell[BoxData[
 RowBox[{"-", "12.971858017546202`"}]], "Output",
 CellChangeTimes->{3.4758644204316483`*^9, 3.475864617566483*^9, 
  3.475865720826041*^9, 3.475865773819558*^9, 3.4758949654342327`*^9, 
  3.475895421047319*^9, 3.47589646959546*^9, 3.4758965620188217`*^9, 
  3.475942752046818*^9, 3.475943181845635*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pseudospherical", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"tildelapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
   "-", 
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4758636422288723`*^9, 3.47586365454795*^9}, {
  3.4758638908153667`*^9, 3.475863969056177*^9}, {3.4758640141991587`*^9, 
  3.475864058457789*^9}, {3.4758641423790073`*^9, 3.4758641506244392`*^9}, {
  3.475895003972604*^9, 3.47589502823575*^9}, {3.475895224366469*^9, 
  3.4758952254423313`*^9}, {3.47589646139395*^9, 3.475896581047984*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pseudospherical", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"-", "0.7558288852771229`"}]], "Output",
 CellChangeTimes->{
  3.475864423006878*^9, 3.475864626031926*^9, 3.475865726686387*^9, 
   3.475865776637471*^9, {3.4758950135577517`*^9, 3.475895030147303*^9}, 
   3.475895440313816*^9, {3.475896471597745*^9, 3.475896489976843*^9}, {
   3.475896540190198*^9, 3.4758965761699343`*^9}, 3.475942782400079*^9, 
   3.475943199882473*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{
    SuperscriptBox["u", "2"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["u", "2"], "-", "1"}], ")"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4758599666355343`*^9, 3.4758599705417767`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lapfbyu4", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"u", ",", "u"}]], 
       RowBox[{"f", "[", 
        RowBox[{"u", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "+",
       
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["u", "2"]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
          RowBox[{"f", "[", 
           RowBox[{"u", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"f", "[", 
            RowBox[{"u", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], "+", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
           RowBox[{"f", "[", 
            RowBox[{"u", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], ")"}]}]}], ")"}], "/.", 
    RowBox[{"u", "\[Rule]", 
     RowBox[{"u", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.475859859194172*^9, 3.47585989745338*^9}, {
   3.475860101419324*^9, 3.475860113543044*^9}, {3.4758613765174313`*^9, 
   3.475861408003315*^9}, 3.475895257504479*^9, {3.475895297119337*^9, 
   3.475895298740139*^9}, {3.475942794755268*^9, 3.4759428163414907`*^9}, {
   3.475943264826076*^9, 3.475943279956847*^9}, {3.475943317807991*^9, 
   3.47594332337969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475860086495367*^9, 3.475860087220539*^9}}],

Cell[BoxData["0.09159598654773067`"], "Output",
 CellChangeTimes->{
  3.475864425523693*^9, 3.475864631639307*^9, 3.4758657357679377`*^9, 
   3.475865779272641*^9, 3.475895044306181*^9, 3.475895260120586*^9, 
   3.475895301046462*^9, {3.475896476855022*^9, 3.475896493959085*^9}, 
   3.4758965439184713`*^9, {3.475942797509974*^9, 3.475942818510819*^9}, 
   3.4759432299608793`*^9, {3.475943269665045*^9, 3.475943282259095*^9}, 
   3.475943325911878*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lapfbyu4", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.4758600558961143`*^9, 3.475860058901186*^9}, {
  3.475895058201646*^9, 3.475895088880931*^9}, {3.47589526363509*^9, 
  3.475895263998205*^9}, {3.475943328992765*^9, 3.475943330464114*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.7558288852771234`"}]], "Output",
 CellChangeTimes->{
  3.475864426252286*^9, 3.475864632807681*^9, 3.4758657365428867`*^9, 
   3.4758657800982857`*^9, {3.475895045766214*^9, 3.475895089453312*^9}, 
   3.475895265063697*^9, 3.4758953020487843`*^9, {3.475896477732747*^9, 
   3.47589649487265*^9}, 3.47589654491496*^9, 3.475943231007862*^9, {
   3.4759432703507338`*^9, 3.47594328364093*^9}, 3.4759433338527203`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate Laplacian", "Section",
 CellChangeTimes->{{3.475868915589465*^9, 3.475868920513669*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"metric", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "}"}]}], ")"}],
     "//", "MatrixForm"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"metric", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          SuperscriptBox["\[Xi]", "2"], ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"0", ",", " ", "0", ",", " ", 
          RowBox[{
           SuperscriptBox["\[Xi]", "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "}"}]}], "}"}]}],
      ")"}], "//", "MatrixForm"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"metric", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[PartialD]", "\[Xi]"], 
            RowBox[{"R", "[", 
             RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
             "]"}]}], ")"}], "2"], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[PartialD]", "\[Theta]"], 
             RowBox[{"R", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}]}], ")"}], "2"]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"R", "[", 
             RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
             "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[PartialD]", "\[Phi]"], 
             RowBox[{"R", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}]}], ")"}], "2"]}]}], "}"}]}], "}"}]}], ")"}], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.475868317801423*^9, 3.475868508576664*^9}, {
  3.475868561696217*^9, 3.475868561999998*^9}, {3.4758691009220953`*^9, 
  3.475869169924594*^9}, {3.4758780795023737`*^9, 3.475878144824833*^9}, {
  3.475878309093004*^9, 3.475878516205159*^9}, {3.475879217647374*^9, 
  3.4758792319671164`*^9}, {3.475879499085372*^9, 3.4758795640674763`*^9}, {
  3.4758797625613203`*^9, 3.475879794780072*^9}, {3.475880328257957*^9, 
  3.475880337533124*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"R", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], "+", 
       
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"R", "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ",
         
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.475868511499283*^9, 3.475868562939011*^9, {3.4758691711522427`*^9, 
   3.475869192170508*^9}, 3.47587006097473*^9, 3.4758748383100443`*^9, 
   3.4758785241549177`*^9, 3.4758792332980328`*^9, 3.475879567567072*^9, {
   3.4758803097802553`*^9, 3.47588033818602*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rootmetric", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      SqrtBox[
       RowBox[{"Det", "[", "metric", "]"}]], ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{
        RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], "&&", 
        RowBox[{"\[Xi]", ">", "0"}]}]}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"rootmetric", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"Det", "[", "metric", "]"}]], ",", " ", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], "&&", 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        ">", "0"}], "&&", 
       RowBox[{
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ">", 
        "0"}]}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4758685787721567`*^9, 3.475868582023118*^9}, {
  3.475878689876396*^9, 3.475878697811593*^9}, {3.475878760837557*^9, 
  3.475878906296864*^9}, {3.475878940039385*^9, 3.4758789450131607`*^9}, {
  3.475878978158289*^9, 3.4758790023325863`*^9}, {3.4758795812044277`*^9, 
  3.4758795916779327`*^9}, {3.4758803452135897`*^9, 3.475880357504792*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"R", "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
  RowBox[{
   SuperscriptBox["R", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.475878870894084*^9, 3.475878907125349*^9, 3.475878945835059*^9, {
   3.475878982484017*^9, 3.4758790052659817`*^9}, 3.475879238697991*^9, {
   3.4758795719212217`*^9, 3.4758795933035517`*^9}, {3.4758803126397533`*^9, 
   3.4758803584716053`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"invmetric", "=", 
    RowBox[{"Inverse", "[", "metric", "]"}]}], ")"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4758687292116127`*^9, 3.475868734773007*^9}, {
  3.475868796205558*^9, 3.475868807160825*^9}, {3.475879192859825*^9, 
  3.4758792115737886`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"R", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"], 
           " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"R", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
           " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["R", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}],
           "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"R", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
           " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["R", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
            "2"]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"R", "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"], " ",
         
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"R", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"R", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"R", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"R", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], 
      "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"R", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], "0", 
      
      FractionBox[
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], 
       SuperscriptBox[
        RowBox[{"R", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4758687356390467`*^9, 3.4758688078972807`*^9, {3.475869180378653*^9, 
   3.4758692066487303`*^9}, 3.475870073561254*^9, 3.475874874290382*^9, 
   3.475879173907261*^9, {3.475879212370433*^9, 3.475879239883534*^9}, 
   3.475879597201488*^9, 3.4758803139323263`*^9, 3.475880372600956*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partialf", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    ",", " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Theta]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    ",", " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Phi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.475869525405142*^9, 3.475869586053857*^9}, {
  3.4758792527674017`*^9, 3.4758792552539873`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.475869589703939*^9, 3.475870074632893*^9, 
  3.4758748793997583`*^9, 3.4758792562125273`*^9, 3.475879600902248*^9, 
  3.475880314937463*^9, 3.47588037416118*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gijpartialjf", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"invmetric", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", " ", "j"}], "\[RightDoubleBracket]"}], "*", 
       RowBox[{
       "gradf", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], ",",
       " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}], ",", " ", 
    
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4758693715261497`*^9, 3.475869499538217*^9}, {
  3.475869604739502*^9, 3.4758696414411373`*^9}, {3.475879279877576*^9, 
  3.475879286509411*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"], 
          " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
          " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["R", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
         "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
          " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["R", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
           "2"]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], ")"}], 
     "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"R", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"], " ", 
       
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
      ")"}]}], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
     SuperscriptBox[
      RowBox[{"R", "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"R", "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.475869642666766*^9, 3.475870078105348*^9, 
  3.4758748810875893`*^9, 3.475879292029887*^9, 3.4758796089374857`*^9, 
  3.475880316874526*^9, 3.4758803775708017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "gijpartialjf", "]"}]], "Input",
 CellChangeTimes->{{3.47587930032146*^9, 3.475879337298715*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], 
    "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], 
    "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
     SuperscriptBox[
      RowBox[{"R", "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"R", "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.475879315473448*^9, 3.475879338299025*^9}, 
   3.4758796142483597`*^9, 3.475880317945279*^9, 3.475880379155723*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"laplacian", "=", 
   RowBox[{
    FractionBox["1", "rootmetric"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Xi]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], ")"}]}], "+", " ", 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Theta]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}]}], ")"}]}], "+", " ", 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Phi]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "3", 
          "\[RightDoubleBracket]"}]}], ")"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.47586968322586*^9, 3.475869709956922*^9}, {
   3.475869741380291*^9, 3.4758697520953836`*^9}, {3.475869800347386*^9, 
   3.475870034902766*^9}, {3.475879355557921*^9, 3.475879392959736*^9}, 
   3.475880455497572*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "laplacian", "]"}]], "Input",
 CellChangeTimes->{{3.475879661299622*^9, 3.475879689384639*^9}, {
  3.475887216370658*^9, 3.4758872192575483`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"R", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"R", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
   SuperscriptBox[
    RowBox[{"R", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    RowBox[{"R", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "-", 
  
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "+", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "+", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "-", 
  
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "3"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "3"]}]], "-", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
     "3"]}]]}]], "Output",
 CellChangeTimes->{{3.475879669615614*^9, 3.475879690078464*^9}, 
   3.475880321440688*^9, 3.4758803857230377`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate Laplacian in external domain", "Section",
 CellChangeTimes->{{3.4758856255754013`*^9, 3.47588563813279*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"metric", "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"U", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"-", "4"}]], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[PartialD]", "\[Xi]"], 
            RowBox[{"U", "[", 
             RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
             "]"}]}], ")"}], "2"], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[PartialD]", "\[Theta]"], 
             RowBox[{"U", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}]}], ")"}], "2"]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"U", "[", 
             RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
             "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[PartialD]", "\[Phi]"], 
             RowBox[{"U", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}]}], ")"}], "2"]}]}], "}"}]}], "}"}]}]}], ")"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4758866202111063`*^9, 3.475886688622381*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"U", "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], "+",
         
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"U", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
        "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4758866923120317`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rootmetric", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Det", "[", "metric", "]"}]], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], "&&", 
      RowBox[{
       RowBox[{"U", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
       ">", "0"}], "&&", 
      RowBox[{
       RowBox[{
        SuperscriptBox["U", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ">", 
       "0"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.47588688963797*^9, 3.4758868970646477`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
   RowBox[{
    SuperscriptBox["U", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
  SuperscriptBox[
   RowBox[{"U", "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]]], "Output",\

 CellChangeTimes->{3.4758869076490917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"invmetric", "=", 
    RowBox[{"Inverse", "[", "metric", "]"}]}], ")"}], "//", 
  "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"U", "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "8"], " ",
         
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"U", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
          "+", 
          FractionBox[
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["U", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"U", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "6"]], 
          "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["U", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
             "2"]}], 
           SuperscriptBox[
            RowBox[{"U", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
            "6"]]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"U", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"U", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"U", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]]}], 
      SuperscriptBox[
       RowBox[{"U", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"U", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]]}], "0", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.47588699532546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partialf", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    ",", " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Theta]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    ",", " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Phi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
   "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.47588696482789*^9, 3.475887008559719*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gijpartialjf", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"invmetric", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", " ", "j"}], "\[RightDoubleBracket]"}], "*", 
        RowBox[{
        "gradf", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}], ",", " ",
      
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.4758873585892763`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"laplacian", "=", 
   RowBox[{
    FractionBox["1", "rootmetric"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Xi]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], ")"}]}], "+", " ", 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Theta]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}]}], ")"}]}], "+", " ", 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Phi]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "3", 
          "\[RightDoubleBracket]"}]}], ")"}]}]}], ")"}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  FractionBox["laplacian", 
   SuperscriptBox[
    RowBox[{"U", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    "4"]], "]"}]], "Input",
 CellChangeTimes->{{3.475887066226671*^9, 3.4758870794448633`*^9}, {
  3.475887206889784*^9, 3.475887209565999*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"U", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"U", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
   SuperscriptBox[
    RowBox[{"U", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "-", 
  
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "+", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "+", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "-", 
  
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "3"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "3"]}]], "-", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
     "3"]}]]}]], "Output",
 CellChangeTimes->{3.475887039957934*^9, 3.475887083383132*^9, 
  3.4758872105439777`*^9, 3.475887363534235*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["other stuff", "Section",
 CellChangeTimes->{{3.476063523893539*^9, 3.4760635261262913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ChebyshevT", "[", 
  RowBox[{"i", ",", " ", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", 
      RowBox[{"(", 
       RowBox[{"i", "-", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}]}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"x", ",", "x"}]], 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{
       RowBox[{"i", "-", "2"}], ",", " ", "x"}], "]"}]}]}], "-", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"i", "+", "1"}], ")"}]}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"x", ",", "x"}]], 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{"i", ",", " ", "x"}], "]"}]}]}], "+", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", 
      RowBox[{"(", 
       RowBox[{"i", "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"i", "+", "2"}], ")"}]}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"x", ",", "x"}]], 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{
       RowBox[{"i", "+", "2"}], ",", " ", "x"}], "]"}]}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.4760635160170383`*^9, 3.476063784619766*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"5", " ", "x"}], "-", 
  RowBox[{"20", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"16", " ", 
   SuperscriptBox["x", "5"]}]}]], "Output",
 CellChangeTimes->{{3.476063697228613*^9, 3.476063784957163*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"5", " ", "x"}], "-", 
  RowBox[{"20", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"16", " ", 
   SuperscriptBox["x", "5"]}]}]], "Output",
 CellChangeTimes->{{3.476063697228613*^9, 3.476063784959618*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"ChebyshevT", "[", 
     RowBox[{"i", ",", " ", "x"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.476104195911005*^9, 3.476104265821374*^9}, {
   3.476105133891786*^9, 3.476105133971106*^9}, 3.476105718802116*^9}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"2", " ", "x"}], "-", 
  RowBox[{"6", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["x", "4"]}]}]], "Output",
 CellChangeTimes->{{3.476104220911158*^9, 3.476104266302928*^9}, 
   3.4761051360353823`*^9, 3.476105719324005*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", 
   RowBox[{"x", ",", "x"}]], 
  RowBox[{"f", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.476104243731628*^9, 3.476104253517531*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "12"}], "+", 
  RowBox[{"24", " ", "x"}], "+", 
  RowBox[{"96", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{{3.476104254626754*^9, 3.47610426714604*^9}, 
   3.476105137817552*^9, 3.476105721519759*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"56", 
    RowBox[{"ChebyshevT", "[", 
     RowBox[{"0", ",", " ", "x"}], "]"}]}], "+", 
   RowBox[{"24", 
    RowBox[{"ChebyshevT", "[", 
     RowBox[{"1", ",", " ", "x"}], "]"}]}], "+", 
   RowBox[{"48", 
    RowBox[{"ChebyshevT", "[", 
     RowBox[{"2", ",", " ", "x"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476104552992921*^9, 3.476104593421515*^9}}],

Cell[BoxData[
 RowBox[{"8", "+", 
  RowBox[{"24", " ", "x"}], "+", 
  RowBox[{"96", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{{3.4761045843918324`*^9, 3.47610459415867*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.476104685282876*^9, 3.476104702560313*^9}, {
   3.476105010821069*^9, 3.4761050194946747`*^9}, 3.476105396278405*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4761047036012907`*^9, 3.476104951330565*^9, {3.47610501239373*^9, 
   3.4761050206589746`*^9}, 3.476105097008999*^9, 3.476105406420967*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"0", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", "6"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.476104711212224*^9, 3.4761047374374113`*^9}, 
   3.47610508707894*^9, {3.476105400165065*^9, 3.476105402614697*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.476104737992661*^9, 3.476104951976379*^9, 
  3.476105064438879*^9, 3.476105097906039*^9, 3.476105407207013*^9, 
  3.4761056708225603`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cofi", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"4", 
    RowBox[{"(", 
     RowBox[{"i", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"i", "+", "2"}], ")"}], 
    RowBox[{"a", "\[LeftDoubleBracket]", 
     RowBox[{"i", "+", "2"}], "\[RightDoubleBracket]"}]}], "+", 
   RowBox[{
    FractionBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"i", "+", "2"}], ")"}]}], 
     RowBox[{"i", "+", "3"}]], 
    RowBox[{"c", "\[LeftDoubleBracket]", 
     RowBox[{"i", "+", "2"}], "\[RightDoubleBracket]"}]}], "-", 
   RowBox[{
    FractionBox[
     RowBox[{"i", "+", "2"}], 
     RowBox[{"i", "+", 
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"i", ",", " ", "0"}], "]"}]}]], 
    RowBox[{"c", "\[LeftDoubleBracket]", 
     RowBox[{"i", "+", "4"}], "\[RightDoubleBracket]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.476104767019187*^9, 3.476104847559301*^9}, {
  3.4761052636761427`*^9, 3.4761052724913893`*^9}, {3.4761055897182493`*^9, 
  3.476105592051035*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", " ", 
   RowBox[{"i", ">", "0"}], ",", " ", 
   RowBox[{"i", "--"}], ",", " ", 
   RowBox[{
    RowBox[{"c", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "=", 
    
    RowBox[{"cofi", "[", "i", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476104859791312*^9, 3.4761049476232452`*^9}, {
  3.4761054122537403`*^9, 3.476105412646654*^9}, {3.4761056332106867`*^9, 
  3.476105635520804*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "c", "]"}]], "Input",
 CellChangeTimes->{
  3.4761049379312973`*^9, {3.476105358999758*^9, 3.476105363529566*^9}, {
   3.4761056568301477`*^9, 3.476105660668468*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"24", ",", "48", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.476105661515192*^9, 3.476105673098366*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", ".", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ChebyshevT", "[", 
     RowBox[{"i", ",", " ", "x"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", "6"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4761051539770937`*^9, 3.476105189642701*^9}, {
   3.4761053218498583`*^9, 3.476105321977166*^9}, 3.476105702740817*^9}],

Cell[BoxData[
 RowBox[{"24", "+", 
  RowBox[{"48", " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.476105190889123*^9, 3.476105292304034*^9, 3.476105322423575*^9, {
   3.476105690906918*^9, 3.476105703291514*^9}}]
}, Open  ]]
}, Closed]]
},
WindowSize->{1435, 551},
WindowMargins->{{22, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"6.0 for Mac OS X x86 (32-bit) (June 19, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[590, 23, 259, 5, 27, "Input"],
Cell[852, 30, 281, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1170, 42, 1489, 42, 88, "Input"],
Cell[2662, 86, 422, 7, 27, "Output"],
Cell[3089, 96, 420, 7, 27, "Output"],
Cell[3512, 105, 375, 6, 27, "Output"],
Cell[3890, 113, 939, 24, 30, "Output"],
Cell[4832, 139, 3382, 90, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8251, 234, 473, 13, 43, "Input"],
Cell[8727, 249, 258, 7, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9022, 261, 345, 9, 27, "Input"],
Cell[9370, 272, 21920, 365, 421, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31327, 642, 978, 21, 27, "Input"],
Cell[32308, 665, 265377, 4303, 447, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297722, 4973, 1211, 25, 27, "Input"],
Cell[298936, 5000, 166596, 2710, 425, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465569, 7715, 995, 24, 73, "Input"],
Cell[466567, 7741, 2511, 47, 430, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469115, 7793, 2159, 57, 161, "Input"],
Cell[471277, 7852, 1384, 27, 302, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472698, 7884, 226, 4, 27, "Input"],
Cell[472927, 7890, 168922, 2749, 325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[641886, 10644, 334, 9, 27, "Input"],
Cell[642223, 10655, 15256, 256, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[657516, 10916, 90, 1, 67, "Section"],
Cell[657609, 10919, 5092, 146, 294, "Input"],
Cell[662704, 11067, 1821, 53, 117, "Input"],
Cell[CellGroupData[{
Cell[664550, 11124, 1650, 39, 88, "Input"],
Cell[666203, 11165, 1058, 24, 47, "Output"],
Cell[667264, 11191, 1421, 35, 47, "Output"],
Cell[668688, 11228, 586, 8, 27, "Output"],
Cell[669277, 11238, 1989, 53, 48, "Output"],
Cell[671269, 11293, 5837, 171, 124, "Output"]
}, Open  ]],
Cell[677121, 11467, 3235, 99, 182, "Input"],
Cell[CellGroupData[{
Cell[680381, 11570, 640, 16, 58, "Input"],
Cell[681024, 11588, 644, 19, 47, "Output"],
Cell[681671, 11609, 1371, 41, 51, "Output"],
Cell[683045, 11652, 144, 2, 27, "Output"]
}, Open  ]],
Cell[683204, 11657, 7675, 219, 223, "Input"],
Cell[CellGroupData[{
Cell[690904, 11880, 263, 7, 27, "Input"],
Cell[691170, 11889, 139, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[691346, 11896, 603, 14, 27, "Input"],
Cell[691952, 11912, 433, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[692422, 11928, 403, 10, 27, "Input"],
Cell[692828, 11940, 270, 7, 27, "Output"]
}, Open  ]],
Cell[693113, 11950, 665, 21, 52, "Input"],
Cell[693781, 11973, 1023, 31, 49, "Input"],
Cell[694807, 12006, 566, 15, 27, "Input"],
Cell[695376, 12023, 181, 3, 27, "Input"],
Cell[695560, 12028, 545, 15, 33, "Input"],
Cell[696108, 12045, 1842, 55, 49, "Input"],
Cell[697953, 12102, 170, 3, 27, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698160, 12110, 88, 1, 67, "Section"],
Cell[698251, 12113, 2622, 71, 245, "Input"],
Cell[700876, 12186, 2393, 72, 155, "Input"],
Cell[CellGroupData[{
Cell[703294, 12262, 889, 23, 73, "Input"],
Cell[704186, 12287, 990, 23, 47, "Output"],
Cell[705179, 12312, 1422, 37, 48, "Output"],
Cell[706604, 12351, 528, 8, 27, "Output"],
Cell[707135, 12361, 2591, 74, 84, "Output"]
}, Open  ]],
Cell[709741, 12438, 3235, 99, 182, "Input"],
Cell[712979, 12539, 7840, 223, 223, "Input"],
Cell[720822, 12764, 1244, 37, 91, "Input"],
Cell[CellGroupData[{
Cell[722091, 12805, 981, 24, 43, "Input"],
Cell[723075, 12831, 1942, 53, 53, "Output"]
}, Open  ]],
Cell[725032, 12887, 1135, 31, 59, "Input"],
Cell[CellGroupData[{
Cell[726192, 12922, 591, 15, 27, "Input"],
Cell[726786, 12939, 5394, 131, 213, "Output"]
}, Open  ]],
Cell[732195, 13073, 4651, 139, 344, "Input"],
Cell[736849, 13214, 1319, 37, 213, "Input"],
Cell[CellGroupData[{
Cell[738193, 13255, 2833, 70, 223, "Input"],
Cell[741029, 13327, 282, 8, 39, "Output"],
Cell[741314, 13337, 282, 8, 39, "Output"],
Cell[741599, 13347, 281, 8, 39, "Output"],
Cell[741883, 13357, 282, 8, 39, "Output"],
Cell[742168, 13367, 312, 8, 39, "Output"],
Cell[742483, 13377, 380, 10, 42, "Output"],
Cell[742866, 13389, 286, 8, 39, "Output"],
Cell[743155, 13399, 282, 8, 39, "Output"],
Cell[743440, 13409, 282, 8, 39, "Output"],
Cell[743725, 13419, 279, 8, 39, "Output"],
Cell[744007, 13429, 279, 8, 39, "Output"],
Cell[744289, 13439, 282, 8, 39, "Output"],
Cell[744574, 13449, 284, 8, 39, "Output"],
Cell[744861, 13459, 288, 8, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[745186, 13472, 1865, 47, 148, "Input"],
Cell[747054, 13521, 397, 10, 42, "Output"],
Cell[747454, 13533, 330, 8, 39, "Output"],
Cell[747787, 13543, 329, 8, 39, "Output"],
Cell[748119, 13553, 330, 8, 39, "Output"],
Cell[748452, 13563, 332, 8, 39, "Output"],
Cell[748787, 13573, 332, 8, 39, "Output"],
Cell[749122, 13583, 336, 8, 39, "Output"],
Cell[749461, 13593, 329, 8, 39, "Output"],
Cell[749793, 13603, 334, 8, 39, "Output"]
}, Open  ]],
Cell[750142, 13614, 1154, 35, 49, "Input"],
Cell[CellGroupData[{
Cell[751321, 13653, 195, 4, 27, "Input"],
Cell[751519, 13659, 88, 1, 27, "Output"]
}, Open  ]],
Cell[751622, 13663, 613, 16, 27, "Input"],
Cell[CellGroupData[{
Cell[752260, 13683, 197, 4, 27, "Input"],
Cell[752460, 13689, 88, 1, 27, "Output"]
}, Open  ]],
Cell[752563, 13693, 551, 17, 33, "Input"],
Cell[CellGroupData[{
Cell[753139, 13714, 1793, 54, 49, "Input"],
Cell[754935, 13770, 8056, 243, 158, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[763028, 14018, 237, 5, 27, "Input"],
Cell[763268, 14025, 104, 2, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[763421, 14033, 102, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[763548, 14038, 1862, 54, 129, "Input"],
Cell[765413, 14094, 932, 22, 48, "Output"]
}, Open  ]],
Cell[766360, 14119, 2054, 59, 68, "Input"],
Cell[768417, 14180, 3350, 101, 182, "Input"],
Cell[771770, 14283, 8057, 226, 223, "Input"],
Cell[CellGroupData[{
Cell[779852, 14513, 340, 8, 27, "Input"],
Cell[780195, 14523, 170, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[780402, 14530, 266, 5, 27, "Input"],
Cell[780671, 14537, 371, 6, 27, "Output"]
}, Open  ]],
Cell[781057, 14546, 665, 21, 52, "Input"],
Cell[CellGroupData[{
Cell[781747, 14571, 182, 4, 27, "Input"],
Cell[781932, 14577, 256, 3, 27, "Output"]
}, Open  ]],
Cell[782203, 14583, 921, 27, 49, "Input"],
Cell[CellGroupData[{
Cell[783149, 14614, 190, 4, 27, "Input"],
Cell[783342, 14620, 317, 5, 27, "Output"]
}, Open  ]],
Cell[783674, 14628, 861, 19, 27, "Input"],
Cell[CellGroupData[{
Cell[784560, 14651, 131, 3, 27, "Input"],
Cell[784694, 14656, 398, 7, 27, "Output"]
}, Open  ]],
Cell[785107, 14666, 573, 16, 33, "Input"],
Cell[785683, 14684, 1968, 53, 49, "Input"],
Cell[CellGroupData[{
Cell[787676, 14741, 183, 4, 27, "Input"],
Cell[787862, 14747, 454, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[788353, 14759, 335, 6, 27, "Input"],
Cell[788691, 14767, 445, 7, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[789185, 14780, 103, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[789313, 14785, 5718, 151, 107, "Input"],
Cell[795034, 14938, 5557, 165, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[800628, 15108, 1502, 39, 66, "Input"],
Cell[802133, 15149, 697, 18, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[802867, 15172, 326, 8, 27, "Input"],
Cell[803196, 15182, 6648, 192, 127, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[809881, 15379, 719, 20, 29, "Input"],
Cell[810603, 15401, 968, 30, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[811608, 15436, 735, 19, 27, "Input"],
Cell[812346, 15457, 7576, 231, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[819959, 15693, 135, 2, 27, "Input"],
Cell[820097, 15697, 7922, 245, 139, "Output"]
}, Open  ]],
Cell[828034, 15945, 1145, 31, 47, "Input"],
Cell[CellGroupData[{
Cell[829204, 15980, 184, 3, 27, "Input"],
Cell[829391, 15985, 15270, 499, 265, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[844710, 16490, 123, 1, 37, "Section"],
Cell[CellGroupData[{
Cell[844858, 16495, 4363, 118, 53, "Input"],
Cell[849224, 16615, 6749, 197, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[856010, 16817, 801, 23, 39, "Input"],
Cell[856814, 16842, 492, 16, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[857343, 16863, 158, 5, 27, "Input"],
Cell[857504, 16870, 6273, 182, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[863814, 17057, 600, 18, 29, "Input"],
Cell[864417, 17077, 848, 28, 33, "Output"]
}, Open  ]],
Cell[865280, 17108, 647, 19, 27, "Input"],
Cell[865930, 17129, 906, 27, 47, "Input"],
Cell[CellGroupData[{
Cell[866861, 17160, 327, 8, 50, "Input"],
Cell[867191, 17170, 14624, 478, 265, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[881864, 17654, 98, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[881987, 17659, 1376, 46, 79, "Input"],
Cell[883366, 17707, 247, 7, 30, "Output"],
Cell[883616, 17716, 247, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[883900, 17728, 416, 10, 27, "Input"],
Cell[884319, 17740, 363, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[884719, 17755, 194, 5, 29, "Input"],
Cell[884916, 17762, 265, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885218, 17774, 428, 12, 27, "Input"],
Cell[885649, 17788, 200, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885886, 17798, 321, 7, 27, "Input"],
Cell[886210, 17807, 267, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[886514, 17817, 320, 7, 27, "Input"],
Cell[886837, 17826, 286, 6, 27, "Output"]
}, Open  ]],
Cell[887138, 17835, 1017, 29, 49, "Input"],
Cell[888158, 17866, 483, 12, 27, "Input"],
Cell[CellGroupData[{
Cell[888666, 17882, 204, 4, 27, "Input"],
Cell[888873, 17888, 194, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[889104, 17897, 393, 9, 27, "Input"],
Cell[889500, 17908, 214, 5, 27, "Output"]
}, Open  ]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
