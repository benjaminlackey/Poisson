(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   1009528,      20144]
NotebookOptionsPosition[    999360,      19829]
NotebookOutlinePosition[    999754,      19846]
CellTagsIndexPosition[    999711,      19843]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"ChebyshevT", "[", 
  RowBox[{"3", ",", " ", "\[Xi]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4763921675969553`*^9, 3.476392177394105*^9}, 
   3.476394420103013*^9, 3.476398925291464*^9, 3.477071847892427*^9, 
   3.477072677862564*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "3"}], " ", "\[Xi]"}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["\[Xi]", "3"]}]}]], "Output",
 CellChangeTimes->{3.47639217897013*^9, 3.4763944205067263`*^9, 
  3.476398926065872*^9, 3.477071849003529*^9, 3.47707267898936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", "=", 
  RowBox[{"r", "*", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], 
   RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"y", "=", 
  RowBox[{"r", "*", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], 
   RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"z", "=", 
  RowBox[{"r", "*", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"z", "-", "z0"}], ")"}], "^", "2"}]}], "\[Equal]", 
   RowBox[{"a", "^", "2"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z", "-", "z0"}], ")"}], "^", "2"}]}], "\[Equal]", 
     RowBox[{"a", "^", "2"}]}], ",", " ", "r"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.476988429315804*^9, 3.4769885839259243`*^9}, {
  3.476988622359989*^9, 3.476988636309658*^9}, {3.476991549449979*^9, 
  3.4769915661996117`*^9}, {3.476991700801725*^9, 3.476991776050613*^9}}],

Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{{3.476988515313909*^9, 3.476988540112289*^9}, 
   3.476988585531389*^9, {3.476988626343286*^9, 3.476988637043745*^9}, 
   3.476991517131886*^9, {3.476991550359202*^9, 3.4769915671365957`*^9}, 
   3.4769917257805433`*^9, {3.4769917589914207`*^9, 3.4769917767741127`*^9}}],\


Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
  RowBox[{"Sin", "[", "\[Phi]", "]"}]}]], "Output",
 CellChangeTimes->{{3.476988515313909*^9, 3.476988540112289*^9}, 
   3.476988585531389*^9, {3.476988626343286*^9, 3.476988637043745*^9}, 
   3.476991517131886*^9, {3.476991550359202*^9, 3.4769915671365957`*^9}, 
   3.4769917257805433`*^9, {3.4769917589914207`*^9, 3.476991776777473*^9}}],

Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{{3.476988515313909*^9, 3.476988540112289*^9}, 
   3.476988585531389*^9, {3.476988626343286*^9, 3.476988637043745*^9}, 
   3.476991517131886*^9, {3.476991550359202*^9, 3.4769915671365957`*^9}, 
   3.4769917257805433`*^9, {3.4769917589914207`*^9, 3.476991776780252*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z0", "-", 
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x0", "-", 
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"y0", "-", 
      RowBox[{"r", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], "2"]}], "\[Equal]", 
  SuperscriptBox["a", "2"]}]], "Output",
 CellChangeTimes->{{3.476988515313909*^9, 3.476988540112289*^9}, 
   3.476988585531389*^9, {3.476988626343286*^9, 3.476988637043745*^9}, 
   3.476991517131886*^9, {3.476991550359202*^9, 3.4769915671365957`*^9}, 
   3.4769917257805433`*^9, {3.4769917589914207`*^9, 3.47699177678624*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "z0", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"y0", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "-", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{"y0", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{"x0", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "-", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["a", "2"], "-", 
           SuperscriptBox["x0", "2"], "-", 
           SuperscriptBox["y0", "2"], "-", 
           SuperscriptBox["z0", "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"z0", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x0", " ", 
                  RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
                 RowBox[{"y0", " ", 
                  RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}], 
            "2"]}]]}], "+", 
        RowBox[{"x0", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "z0", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"y0", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "-", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{"y0", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{"x0", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "-", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["a", "2"], "-", 
           SuperscriptBox["x0", "2"], "-", 
           SuperscriptBox["y0", "2"], "-", 
           SuperscriptBox["z0", "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"z0", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x0", " ", 
                  RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
                 RowBox[{"y0", " ", 
                  RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], ")"}], 
            "2"]}]]}], "+", 
        RowBox[{"x0", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.476988515313909*^9, 3.476988540112289*^9}, 
   3.476988585531389*^9, {3.476988626343286*^9, 3.476988637043745*^9}, 
   3.476991517131886*^9, {3.476991550359202*^9, 3.4769915671365957`*^9}, 
   3.4769917257805433`*^9, {3.4769917589914207`*^9, 3.4769917783820744`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
    SqrtBox[
     RowBox[{"24", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", "\[LessEqual]", "\[Theta]", "\[LessEqual]", "\[Pi]"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476991615635446*^9, 3.476991669521472*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
  SqrtBox[
   RowBox[{"24", "+", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]]}]], "Output",
 CellChangeTimes->{{3.4769916542014112`*^9, 3.476991670610374*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"0.2", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}]}]}], ",", " ", 
     RowBox[{"5", "+", 
      RowBox[{"1", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}]}]}], ",", " ", "10"}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", 
     RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476991983546445*^9, 3.476992046806343*^9}, {
  3.478001375489594*^9, 3.478001379535574*^9}, {3.478001446619019*^9, 
  3.478001447543745*^9}, {3.478013022637228*^9, 3.478013025372591*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
Hcp7Z9ZGxzrmI3F/OyaR3OqmQ/LtdLzufPK2x2GTaFwg98SnDjrWDLhZ4c4+
iWiuj57e76bjE+kvxieax1H4xLPwiAE6DrYd6k3NHEdzq+5GyA6S/ZBZ2eEb
Po6UvIY7PxE/HKn4+d+JcSRFs3T+OkTHsSo28T3FYyjmjc+NtyN0/EQ/7En3
xzEkq3Dyi9goed/BV0GD/mNoorrWzZ+4fkz+L9/eMeS79LLUeozEo/0BuZis
UbRGqDyEa4KOz3qOcza8HEV8M3MbbIg5NiVni98cRY6GYr5FxFyvV72KVxtF
5X1Xqnwn6fhoqPTQNvMRNE/3CW2bouNLR7bp864dQSdHou7+N03Hb4dr8VjD
MCqwG/H2IdY7253fdXwYne1PLVo9Q+w6P2p9YAh9FG25oDlLxwlO8jLxnEOI
M/Px6zvEb9j7qibzBtHHWzYbs4kl1wlf+QoGEfu/zypgjqzX+O2lHNUB5Ori
LSw/T8fP9zN3W070owe3KcdzxL5ehjFCyf3Ic9DjWDDxVOW9/YFb+lG6Iiue
JX4Q0YDEN/Sh718Gh74s0PHHPs02sfZepDdxXK6ZWNDxyfp1b3rRGeMvElyL
dKy2eSHOWKoXWZ3J0zlJvCb3Xfqt+h60ZC/qd5tYfb3dky8vetDiyacR0cSv
uz9Laor2oAmrF8f7iU/89Yp6WtGN/ss7wEFbIuuzS8x/JLAbbdjv8HYLcafS
PaG//N1IxgcnXiE2x8amS1xdSDDtTUE9cUjOZ6WBwk6kWx83MkFse25Qo/1+
J6pvKdlJWybxEXXj2QBXJ7p2mVlXg5h3x9dvS4Ud6MTNjfxHiJlHI9+J+3cg
bZco/ovE527yxl/i7kDirqq5AcTTSzd8Xv1uR8YnJzwjifuzb/6r929Ha38e
v5dMfEPon/FVnnb0cvmbZwVxTYmr9jRvG8qaPBdLX6Hjtm7Rapu/rcgYycuv
JhaOD+DrC2hFcbHXKAXipr5Vi3N8rWgx1sBAh3hx/+ziqlct6M+qDeGGxKE3
QpyPrGlB/xkyXTxJvEXvcE/XumYUcfWdly3xtfe2rnpRTcj0vWaDC7FCrXnM
F5km9HKjTfZtYm73X4vfNjaitcmeOk+IVQVSMvbHN6CrZT86nxFna9zVGtjU
gMb2ya9/TdyjXPbNWLEe+Qp88vhILPrdTmPV5zoUJxPyJpk47o9s/ODWOvSb
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
1QiBh8dFFpUPCrQaPvyvr2jDf0e1aWI=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
dswyx9Lw7tgnfI+xw/zO+zSHNgxOuczG4CvuJiqoJ0Jrl8MfHKJi8DBZquc7
fv6yfdb6fAw+dv0c2+rO50eqI24kReMqaWK8a8jUxxzrXxZF4pddXunuWESk
8N4j0Uh8oy0+cMfXDbjZ7z6KwOcNJnbtvM9TTmRJ45JcOM5qmjm4Y1vjpkjh
2DD8v7YP/BvIQWyuMmxbofjKkNzZHXdfd4fU+qF4PHEvZce9rUTHMEcIPuoo
fXPn7wMrre9QZXgG4XeD33jvWLZM6MWnrne4tnbc1x2XLz9mCj72Dhd43Lmx
Y+9VLzbX2UB8a3GbtPO+1G9GeMDd84G4Im2j6o4FM5vZjJMC8LddL712LFrq
zedb5I9nJVvF7Vgj0Jzd7tFrXJhlvXDHU88u7NKV88NLAg+s7riaP31aJNYH
p8qu5tx5nytz27k+Gn1v3M1aeP+OO9cv1I9wvMSVPlRd3fHZj/0pGZ7P8Xsc
UjY7nsc/hgYfe4aPiCg92fEpF/ZnrrOeeBixELDjE+NXbYyTPHCvJZOYHbcc
Zk3yLXqMJxU9/rrjT5Tbzrpybji9+NmCHf+rGlIVjXXBQwXLq3b8S+Mb6yiH
M24aP9e8Y5FsqtYMTyfcuLymZ8disvNRrrP38Hfu10Z3HJprV+NbZIuvVbyd
3rGx2/w10VgrPDgJLT/kVJWK/gxPc9x8ZzkgKwh4t/gW3cAtdh4P8kOqR0MZ
nrp42M7lIv/wlxjO8FTD/9/fe6r8D5Abffg=
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-10., 9.999998831351729}, {-9.999998782744886, 
   9.999998592812048}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.4769919933070717`*^9, 3.476992047297016*^9}, 
   3.478001381923517*^9, 3.478001448644374*^9, 3.4780130272377033`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SphericalPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"0.2", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}]}]}], ",", " ", 
     RowBox[{"5", "+", 
      RowBox[{"1", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}]}]}], ",", " ", "10"}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", " ", "1", ",", " ", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476988368506834*^9, 3.476988417258492*^9}, {
   3.476991886244698*^9, 3.476991897214045*^9}, {3.476991933516513*^9, 
   3.476991943948269*^9}, {3.476992081899728*^9, 3.476992087077898*^9}, {
   3.476992123832498*^9, 3.476992187798057*^9}, {3.476992221347047*^9, 
   3.476992225282262*^9}, {3.476992271349311*^9, 3.47699228696276*^9}, 
   3.476992318502781*^9, {3.476992350640663*^9, 3.476992384291449*^9}, {
   3.476993787983183*^9, 3.4769937907781153`*^9}, {3.478001309382421*^9, 
   3.478001336347587*^9}, {3.478001464154045*^9, 3.478001464575976*^9}, {
   3.4780136661003513`*^9, 3.478013673561095*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
uQ+C5D4IkvsgSO6DILkPguQ+CJL7IEjugyC5D4LkPkichfcN4iy8b4DkfQMk
7xsged8AyfsGSN43QPK+AZL3DZC8b4DkfQMk7xsged8AyfsGSN43iLPwXkec
hfc6kLzXgeS9DiTvdSB5rwPJex1I3utA8l4Hkvc6kLzXgeS9DiTvdSB5rwPJ
ex1xrr7WLqDn2Stw+F6NPIulbrpVlh59W//Luf6zoK09Y5bbF9ar6t6v5zq6
v6w6mXisr2UUtN9fMXOjVaIu4VVWr+MnUyDgu1NM5zMJsFmva5WJe1N1zQ3b
OB5bnQiNO9XWT30VB1XnFBtj7/+e7E/0Sk65kZEMe5sZl//4NUNXrP71sXPm
RUCi+6WmpnGJMCt50sJ3EzLJPsbN6Jn74xRY8fyU5cVZH3X3L4xbYVPdG/7Z
9yLh06Zk6FLYffLp/E9kF/3dmF0n+nO7qMeErasT9XD7U8x3C+bbjOWla4L5
VsN8uX09clOQWyzjpuuD/N21/HWtKztv+82/yODd/5e/zs4tcfW0n3Gwxqj8
kp768cS//YzMtjeCk2Fm9RaXzMKSifPk+M0Zq26+h7Ld3yasvPOeeM4s9f3a
pOh0qLc06ahXfDpxE+2cjxiHc+DrzsZ1eb4dUed61MnzXb7ToO/gKokwJ7hb
p0Y1okh/9Xtr7Le4pMKSUxZ9yl9IIP3+R5yabPucAWFd1H2tspJJf0uHHnnf
pn2E1iXi35zzTyH9op3rF+Nw/TVw3aW4Lte/CnU6oU6uP7qH3e7VUUlgmnar
S0e316TfNKnG7UVv0iA1zc+xgl006T+5oMvdgPMfwe12yqb7XvGk/+D616EL
r2ZBTtTApY/aJJJ+0c71i3G4/uK4bhquy/XHoU4z1Mn1m8//2KFyi3fQKW94
/OizL0n/AaPly47uz4CIAOe2uv1hpN/oXpbd3pFZ0OyrXlf/GRGk/9HOGzu+
PcuG6kY3Hp5yeUv6RTvXL8bh+g/iupG4LtdfBnX2QJ1cf8Mz3frUrJICxav3
e2MNPqS/2qz0ebF+H6B+36nRxUs8Jf0rfJxrzC6VDUVOFO2z5u5z0h/fcUHK
md05MLji9qhW/wSTftHO9YtxuP7quG4DXJf6AOosiTq5/r5VzveJdEmBoKQF
hmvDL5H+TtmG6SXHZMIv21aWmS9vkv6+U+8VdpuRDSZBX+bqZ98m/be2th+8
LDcH1u7adKbw1l3SL9q5fjEO198Z1y3Edbn+gagzGHVK9INEP0j0g0Q/SPSD
RD9I9INEP0jqByT1A5L6AUn9gKR+QFI/IKkfkNQPSPYvSPYvSPYvSPYvSPYv
SPYvSPYvSPYvSPonSPonSPonSPonSPonSPonSPonSPonSM4vkJxfIDm/QHJ+
geT8Asn5BZLzCyTnF+kX5geQzA8gmR9AMj+AZH4AyfwAkvkBJPMD6RfmVZDM
q/aSeRUk8ypI5lLKV5hjyV+YM4mDMDeCZI4FyVxKcUQ9nJvoz+MIcynxFPXw
OMJcSpyFOZbiCPMq5697nt6gV6VPF8HG9vnTrdNvk/0M2isyO90vfjy2sq7U
Jw5GF256+uVDMv3+oumXplubzEyCu7XG6Nl+Tfvz+7hBs1qFmKXA3Zz1iS+W
ZdLvL0ITt1VvoZcK6poMize6j/T7iyTBn9+/xPj8/lWIesaiHn7/EvKi+dyj
37C8986J0CjHfFDKskTSX+37+/vvM1LAz/DrrOOfUkj/lCG5/6Qap0Ot8tW2
VS2eTvqvtn5jllM7A1zSL3oM+SeD9E8V/Ll+MT7X74l6mqAert+qV/2ms9KT
QVm9tWPsoDjS2fgnNK7wOQ0aT3v7dNzcJNL51nimUXvnTNgS06nmgTIppPNB
b/vCqp4f4d3ys4sbGaWSzijBn+sU43Od1VFPZ9TDddq/mPby7ccUuFxJqbux
ZCTpjB9mfi3F6QPM7z7WZb1FHOn8VbnV1k//3rcnW5s7ZZ9PIJ19Qu0XrozM
gt6xP+9lT00knYWCP9cpxuc6O6Cea6iH6uG7nePVZe8hKmXFhJVdQkhnnbRl
33uO+wibKliEWl4NJ51DTKrVWQHZYOe5fNFCr0jSOTi7+YwSP7NhsOXdRhMj
35LOoYI/1ynG5zqDUU8s6qHfUxyq88+zzWkwe26LXoPbPSGdn3v6ZLW/8Qke
GobapewNIp0vPtv0KP+vHo+WMRs29H9JOpsml4CAxzkw3c6mMGpQMOl8Kfhz
nWJ8rrMh6pmHerjO9sGb9nuVSod+o2aV/Bl+jXT2mPR6+teGWVB084bYBevc
SKd7zYIqUSNz4MuC1Ae7jO6SzpC6u89crpsLNiXKjDr44S7p9BD8uU4xPtep
oJ6BqEeiEyQ6QaITJDpBohMkOkGiEyTfHSTfHSTfHSTfHSTfHSTfHSTfHST7
CCT7CCT7CCT7CCT7CCT7CCT7CCR9CSR9CSR9CSR9CSR9CSR9CSR9CSR9HiR9
HiR9HiR9HiR9HiR9HiR9nnQK5yZIzk2QnJsgOTdBcm6C5NwEyblJOoW5BSRz
C0jmFpDMLSCZW0Ayt4BkbgHJ3EL6hfdDeu+NeBNU5vaJGHhSIflpWcsEen+I
RXsg2vkcuG99stn1ignQul2qh+25GPI/iHZbtHN/sx/VNww1SYKoQYum3loS
Qf6l0B6Hdu4/zAy8Pfcmw7liNa6vehFC/iPRfhHt3L9Vw/P9Au++gxa1G7ya
vfYp+dugvQ3auX+pXwVHj0769x7tU6PxWT938i+H9rJo5/6Z0dVP//6/099v
oH+2YJfEB0l8kOgHiX6Q8AEJH5DwBwl/kHxfkHxf8hfqByT18+e9osQ4r1o2
h+FzsWaDx6ec1rUZljdmz7/7aBba25hq7KI/SPy5XTc39MfOyMXL7Ntdex9e
4dmf31MojwyHD446CK3HOeyvO+IMxU/1ZPbssf/ZKb5X0Mldv+N8fjv6zb9x
aL8I/jqJP73PC3rsJXpIv572f6vZj4qKfb9FFlm3U+BAUmF3/2vZulErfy61
KGKh7DWufc7f4gus3Z04OGymnno2otu3pp3LKbZ2/i1b1P0BeaOsP6zMMFIX
LjMZXX1wKWWH1Za51evoKRVOjzufV7uYuqCg6+lJYUWVQTvGHm1WXF85ndNy
V5dtpuqr0nWnJYz7BSfzsvYYdtVX1vR/tTYxxVS9Wj/mSQXrTNhufNe8voO+
8rFEsV2DMk3VoiPLtah7/pad6H+R+evE+C9YfN1O1FMJ9cxlelQ71P9Vq1/d
h/muw3zPsHzVDsjnsJaPOsJ2ceiqI552/ZIbDgzv+sQTeaoyzqU7G3acsSYD
nKJ/2rzz+USci3R40bXMzny497xYpzbrfuo45wbNYEM/M31lW/lSixxvFSHO
9SeWsFy8q4jyxG7Artz9xsR5z+RaJ1ucN1RKv5zt/zaiKHEeFDKxnXOmodLN
+GZk/YYmxDlye2D4shxDpcs4T8i1NiHOoj/nLMbnnBugngDUwzk3RP3btfpV
Q8z3AebLOZdHPku0fNSrhjGGYwZ52512ulFiehHfv3J28nhVbZ7uExQbVrH8
ro0ZxNnIzN+g3Kqf0HDa66cRrvnEualXo4sHrhdREpfP67S6lD5xLttkWEDA
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
XhMxTiNtHDUb9eRq9aj95j70d/v8GWq6+tht/nmf8vqE/iHMH8Tv8pDlS+cU
X/dnwn/rAtfPdU5nOoHOC8HO9U/GOL+0cdQc1BOm1aPyucJZOz/Qd/HR6qR6
y3P57/tSXjuxPtuy+gSx3qxZnVBeSVhXtVldUV7JaK+DdrHemmnjUL3la/VQ
vbmzeqO5dC/qVLQ6qT/ksv1Iea3GfnKJ9ZM/8xXu61y2rykv3gccWR+gvJYK
dp7XEIzzWRuH+sMXrR4VsD/87P9ff6C8NqLOG1qdagD2zwTWPymv/dj/67H+
T3m1wT5syfow5eWLfbsn69uU1xO090I7z6stxqmijaMGoZ5krR41Dfv5Q9bP
Ka+jqLOpViedd53YeUd5PcDzeiE7rymvjnhutmXnJuUVhudsA3bOKjyv12hv
iHaeVyeMY6ONo/ZBPV20etRieP4eYecv5fUIda7U6qT5pBibTyivKzhfdWPz
FeXliHPOVDbnKDwvC5yLft38by6ivCqivRDtPK8RGGeaNo76GfUU1+pR7+K8
VJPNS5TXbdTZW6tTdcW5dBObSymvZTjflmLzLekX5m3yj8c5eSKbkykvYd6m
OAnauZryXaGdqynfPahzi1anOG+Tf552fiYOwrxNcXbi/DyGzc90LxbmbeKW
hfFvaOdz5UBR/3PW47+CbcYGi4iOhfT7u3VnxpR52rIQQisO3WcabUh/X7EB
7WFau3oI49hhHH6vv6L9vrRuWZtLgfsPFkCO/Zf9JY8V0LrdDOv2zJ9moNgu
nbru80wDWrc72u20drU8xsnFOHxdQ9wvx7TzqmIZ1jawJBRCYonFZ2DKV1q3
w9XDz9ZFGiruTU5232JbSL+v7Ij2h1q7WhXjJGEcvu477D+PtPOk4mZybGq3
GvpKzNiYy2Pv59C6D7wiU/tGGytnowI+dfr+jdb1QPs5rV29jXFiMQ5f1w77
eRHtvKes2xaw7kYPAyVq0Vdn/54ZtG7r43NOxU8xUcL39jrwoHUOrdsG7W+0
dnU9xonBOHxdPTwfvbXzmDLk6ya/u2WKKN9NK5Wdezie1s1bXxBV16mYstLa
5djI+im07tf/bVeHCnH4ur1xXrLSzktKbUOfex2ciyg9q7dupufw5M+6PvvH
Xikopmzd4hYX7fWc1v2G9m1au1oH4/TGOHzdPrjuZ5f/1qV3PO5fm/mDuO4Q
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
7Hyk+HfwfNzIzkfScxftm7V2NRfjLNfGUdufW7u7QhMvu0r7px9doP55H255
xvZKfd+n8GLV1XN1bf6c+9y/MvOnv8cQzmXy/xy06uqde4/tdibV7O/p/pj8
j+09PO7okpdwtn9+hXkDntM57tLfau0kaz878K5c5cYjHfmbTR9U2eryK9iV
Y+X2bGsA+ZcqnmHQNvap3dONPc/fWn+e/N9sP6s71uA1tFKr1rfZfZ38M/Mq
ts+eEmhXuevTacHtdpK/SdVyky6tfA0bjleaM3vPZvIvjfE9WXzi82zgoLDC
8DBo+3DV51/d71K+eZjvNpYv+f+o1GfbsN7PIV4/PMNx5Uvyd8V3+I7ad3hF
sNPv04U/GFzN/26wmFvg+0r/JMJq1wX5Gxun87lLMcS5Kz/pv7mL5yWNsw2/
i6v2uyhfUX8y0098ZHEM8Hut1n4vxcnguO1Er2CYc9msIugF/TXOkJalpvWy
DYW4GYMu1+vk81f9o2LVu42mhsHCynV6WzR5+Ff/QKyTmto6UYLw+3Zk3/ev
OguqsPpZrK0fcV097j/+UWivQ+Nfg++ufY47Jp+Gv/mrqKehtt6UCNRfjekH
iU6KU2tJ/3J3Y0MhYGNTt8jF6l/XfbhjePGAlSFwIazp9b5f/P7qPwO/7wj2
ff/qn4F19Vy7L5QTWIcnWR3+Na/6eB9Zqr2nKOWw/oska+pf/Yh94F2X//oA
7VPeB5qy70jr8v21iu0vPm+I69J3T8G8Xmn3izId+YzR1r/igZyvMs5kr4nf
6zn7XmTXYT200tYn1VUkqyuy8/qsoc1LCcL6MdPWD+2j6WwfkX0Y7se3bD+S
3RD3+3K238m+A7/jTu13VIrid/mWpLkPKs20585f9l1tpUOq5bdddrlw/sSy
Jju+/NQlugxdd2pVLWXdIp8kC28DpXtHt3UdW5mp/pWqpX8xrKns0Qs5WD/X
VNE5TPOd/KOcGju424DPXaopRbuuun/6XSmlWc0n4N+vsto1rYnllqyKikuD
FsOeOpdVMkytBwwbaKUOLz7F+ptjaWX/Nt8H30uXV6Y8sjTqN7W6On9Gwo52
z/WVpt1Pl3U7Wl4pf3FS5KCw6mqxBZG6G+ZP7ET/ucxfFeMPY/HVYqinJerp
zPSoewX90Uy/ugHzdcB8n7B81c7I54qWj/rMeOeG9HB/u072fbuM2h2C52Bt
KedRdS6aD+zzFRZ49anfJ/07cT7e5dpSzwfGSvrV1OI72psS54pDgjv0H1hK
Obm0R+sdb8sQ581uqd5uzuUUxdztXe+zFsT5aXLt5B4HLJSXm4rfcbG3JM6P
txXYFN9USVmw9PihSsuqEmdz6xXPKjetrOxfcsXcur0VcRb9OWcxPue8BfV0
Qj2ccyXUfwr1c84nMd8MzJdzHod8nLV81AVufm65Cc/sNrd2NV13LfivnEtN
uFN9c8p3iB35vODagK/E+Y7dA7s4G1PFvJvX/AJPY+JsvyBvw/s3ZZTaQU3s
Rw8pRZy79LId8fOkhTJ2RYPyG5eXI85XxpaP1rWzVPZ4Pp3vdsSCOOc0Pb/8
66KqSoUXITODt1UizuNLHPTMaWulOLhUmVLYojJxFv05ZzE+59wN9YxHPZwz
oP46qJ9zvof5lsJ8OedyyCdRy0e9MKzDgkZXgu0WPl8zeXjqs79yPjk7yn1O
zk9odCqo9LQOucT5usdqM5vmZkqw/pq4V34GxLlWiaX/tP1eTrn2w2Bobr4p
cVbNff1N+1RWEk4/iUtOK0Wca/l8qdKsn5WytPO0E7dWlCXOF5aldT8yubrS
KLlJdYd/53LO+YJrTsLekOpK9Mi7c2ufLk+cRX/OWYzPOT9GPYmoh3Oujfpv
oH7O+Sbm+wrz5ZzPIh9rLR/1ZsPdNefsDLGzz/124EO0/185p2adqFC2mZ5S
d3jTrTMPZBLn9kXG2vZyNVfaBh00Xhn5Q8c5XzV+Fmp1o4JyWz9q3mIPQ+J8
Yo1BqZR5VRQnvy1Q6Vcx4hwZbFHVd0J1ZdOqXr9KfTYjzgYNp2+y9qyhjPLN
s/VpWYo4L91zOzvHuqZiOejndacTpYiz6M85i/E551OoZzHq4Zyvof47qJ9z
Bsy3HebLOachn4ZaPqrp8etT0kqF2Vm27WloOuTxXzk/avGzzbJy+kqQ2+ql
N0snE+coK+dzb8+XUixzDJzid+cS5523OwXfzbRQJvQzbuRV9YeOc14SnBA0
Sd9KSemxbNebk/rEeWf/Ttafe9RQxpjcs9jQz5A4fx+1PK3L3ZpK3Ra2xjML
jIjzzC0dGs21rqV4VTqv1N5uTJxFf85ZjM85L0c9qaiHc96N+ieifs45GvOt
gvlyzjrk80LLR91cxGrbwwav7Q7fOdnfNO7BXzmPr+5o/eK4vjJsy62Fu7uG
EefRz2sE3m1cWvFYXs18lm8Scc7unrd01Y2KynEz40uvpnwgzlf2hQ+f/NlK
ebjwjEOPl9k6zvlCp4qtv72uoZzsWOOo6cbPOs653It7fQN61VJWdwnoOqRV
no5z3tFnSrGIoFpKb7vygdv883Scs+jPOYvxOefrqMcT9XDOOaj/BOrnnMdg
vg8xX855EvIZoeWjJjnevl4v/LXd6NZXW7hUv/RXzvMwP/bT25Nz5jzYz1ee
nHMX5Md+RnhyztGan3GenDP//2M/Ez15XL4O+5nkyTlzXexnsifnLPpzzmJ8
zjkO9cShHs6Z6+qK+jlnR9TliPlyzk6oy0nLB/dZuB37ud9dwllPrOdu7HuB
WM+X2PcFsZ43snoAsZ6vsvoBsZ53sXoDsZ5ns/oEsZ7bsXoGsZ65v1jPPL5Y
z9dRj1jPm1C/WM9XMF+xnh20fKieHVg92/2NM+/Pj1n/AbE/l2H9CsT+PJT1
NxD7cyzrh4rYn4ew/qmI/bkK67eK2J/vsP6siP2Z+4v9mccX+3Mc6hH78zDU
L/bnspiv2J/9tHyoP+9i/fmvnPl5WpWdp8RZwfO3KTt/ifN1PK+vsfNa4ZxP
4/k+k53vxDkK54GVbB4gzoY4Pwxj8wNxXo7zRgU2bxBn0Z9zFuNzzmdRzxzU
wznfQP3XUT/n3AnzbYb5cs4ZyKemlo9aAueNCmze+CvnMzgf/sPmQ+J8C+fJ
Z2yepD5bF+fPS2z+JM4+OK/GsnmVONfF+XYxm2+J8yWch+uzeZg4X8L5OYLN
z8RZ9Oecxfic8xPUE496OOd6qP8y6uecb2O+zzFfzvmi9n5BnN1wfm7H5ue/
ci6D950odt8hzvx+VJzdj4gzv0/VZPcp4szvX6PY/Ys4X8P72i52XyPOn/F+
V4bd74jzRLwPdmP3QeIs+nPOYnzOuQfqGYN6OGdF0M85P8B8zTBfzrmC9r5M
nC/hfXAeuw/+lTO/v89l93fifBrv+ynsvk+cLfF94Bh7HyDO2/A9oT17TyDO
z/D94Rl7fyDOT/C9Yi57ryDOZfF9w5W9bxBn0Z9zFuNzzju07y3EuQrqP476
OeezmO97zJdznoh8nLR8VGd839jI3jf+yll4rwPJe50iea9TJO91iuS9TpG8
1ymS9zpF8l6nSN7rFMl7nSJ5r1Mk73WK5L0OJO91xLnBnJTb7xe+A/2QOuce
3Pygs9zutfhFXC3FGu3FtHbVdVDs+xMD02DYPzPOuQ9NI//DaB+jtas/GhmX
hGsf4F2l6OY7lr4jf6PGzJ6htauv55e16j3vE3jvWjjfsXEC+ceh/YnWrn74
MGTv9YAs6Di7zskaZpHkn4P2Hlq7ei7iun+jNdnQICA1I2jJC/K/jPYWWrua
1fRh+ujYbHiXEZT+2OkO+eehPUNrV7PR/pjZgfufx/gVWXyyX0F7Da1dzUT9
Nkw/+eeiXdHa1Ujk84jxIf8ktD/W2lU95J/A+JN/MbSnau3qfvy+g9j3Jf/j
aB+htauNsH70WP2Qfwu0m2jt6pYVva6UdUqFogfLLk8tn0GcSwWeKO0+Ignm
9LHxL1f3I3F+6rrvzI1ZgXbLot2GO19+RfdBF4xjro2jvrI6O9SyTAaM67Lo
3ELnVIr/Fu1TtXb1ot7rrjk1P8J80wdGh8cmkb8b2p21dnWY4beNvXtmwYOX
uksj/GPIfxTaVa1dLVjuYFzXOhvcS4wPbt48jPz1VzC7TmtXy4OT+fCH2TBg
fd68qVN8yd8S7UO1dvXYpB8nSqVnA/t5y5P78zgdmD99l69Yt/7aulV5/K5a
f9J/k+kEUf89rV0djhxuMA7kPxrt97V29SpynsM4k/9dtDtp7WoofsfR7DuS
fzTaJ2rt6g6sE0NWJ+S/F+3FtXb1mbbeqH8K9Un+p5H/aS1/dfFUHUxwCoMZ
81dGl1seo8syvP8r+2stta1aX+e+JhyuNdn1vlpuFHC7R+2vJTdPCIVXXWsb
2TePJf/bWyxqTa371M673vWhY6v/+f0Ljz+dxac4+3+FOa21fml3MDi52a5W
L8m/1PjMbg86vIVBzS82/bgwguJ/71TpwKCLr+zu9azQccqCQPJ/c7l4tq9z
DPTr3vlq/SVh5G8V1+xK35GhdhVfTurvUM+P/DeouWvNisfDYLugfkdKB5P/
XGcw6aEfbldhUohBkWaH/uzfSSaXRn5MgPErT5iNXL2X/Oehf/rE//yJf/oc
x9O54QmwyX9Ssfq3r1O+dbo92dnvSphd4bZvl9wivcj/TNvXZ0bviYcp0Cni
6ZIg8q+O+ssy/eQ/5qHe7b1RsVB//WSrof1DyP8H8rnJ+JB//rTC70s/RUGI
w/2tsDGc/I8g/72MP/kf6nv2w7V5EfDd4vDCa13ekr8p1tUUbV0pgp36gDAo
rebzUj2sq2OsrjhPqb8e1kMXbT0o+1DnT6aTvossjh/WSWdtnSh5yCec8flr
nOVYPz219aOMxu/SiH2Xv8ZJ8j7oU9w4Aeokb8xfcfXJXznUTXOoo1xMgNDb
KbeMV7n/1X8j1u0Qbd2K/nrcPx7r1klbt1J/ndO2BqvGJ8Ccb61zD3h7/9X/
ENb5EG2dKx+RQwPGASTcKE5v5FxVW//KRvwu/dl3+Wuc9/jd/bT7QonAOunN
6uSvcbZhHaZr94tSGuu2H6vbv8aZgX1ymLZPKi1xv1zX7hfqS5bs+1J83odV
1of/3F/MA/13r3wNxb6kde/pGS3r52RfadT2vNWFQhi5+ebhxfWNlDvd2j2+
Hl9T+VFyZa9RA79AhSM9im1d+4PuO2ljH/y6sOPfvpA378ogozwY02J99MX7
tSiv4drzRVmK8Uex+CqPn4/xK7L4OjF+FRZfx+NvRP6Z2j6gvMPvG6Dd10pP
rJ8a2n2qHMT6HMPqk+y8zhezOic73y8H2H75s+7LKj9iHE2VVdeLL4po+EKH
ealXu2y4csRbX/HckzLn9UBf+j1CmQAvvesB3yFsTPOPW05c53mpfP+W1H5f
pR72AW/WB8iejPuoinYfUb/qpt0Xij/WeQdtnSsGWLcdtHWrNMA6PKqdB5Sf
JVldFWd1RfWZihwcGAfgHK4hh4OMA4gcpjEOvH7UFnrNzJu8zIICh4ttI+M+
U13d2Dl3w+AdPyDJNmHNC1tjqp8hNZvEjIV88F7uETSmuYHatvvoHe/a1FK6
3E5eM/eagRK6etH5RTcNqJ4bHzTvE9hTXxn5/nitNflFyG5i/8M+2L8AVi8+
MDYK9BUeZ/Syi/PfnfeAMWd9Zm/y99KV3N1p+q99abDvnn9IJfcnEPlra/1n
t17plvrUdis/Pg1CG56ff3VTEExd+DG2atBLstebE2h/5dEr2J7RY1y7U1G6
di/N1bKu7yEi5Mj62f/ynDWiWbRLSATZk8I2N9q8IAJ+tXr3pb9pku657arJ
v/99mdzIrlWe5MZCA7d85y6V3+vG3rnb3aVWEjh1/FlOT02EbX5PLEZceEf2
Lc+NLm21TQTbOmVGdpr07z3a0km393MU/IwffPhjhRSo1cY5/cbaNLKXVrZZ
2VskwxcLPddqDp909UtE3M7a9xw6n5v5pNPQ91Ci3or6Xat8kNprM7tOjF+J
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
wha1DnGZZkk3fyksm/beAVoOt9pYssEKanRIsbUIsKG/DNDbsyrWFoydtjps
uGYN3nWHOKf9akd3xrqNLxpkCfGrnthdSqwMdnU/RwRGVKV9LKyqTPhsCIaH
C2JahdrChuoDolYcq0Zr/nKS2L5NIJ08bOf0+bbOiwaUdqplbE/d6z6zn9HX
guZWX+24YnZFaDOu5fi8xZXpRluDw7PLV6Zui9zzri+1gObZ207eibWi0UZ+
LlGrqtH8LUZj+i4xgUPntPVpDctRD4vr05KjnWhgptXkvG1FJCDtocf2sBJt
Z58nN8OHuNApA7e2eGpwjcT2eOqdvuKW5rj5zKjiLy60HPbRfsb6aIv+2p6e
ld8de2MBv1wcFNZ6pTmtsrxJ/qHujlDyak7Ds3cqQUovu4lrelekei2i1/62
rwqEpg1y3bLNFmr31X9b5pENtflsXcZzgBU0922beNDBHu7bWJFGrlVoidf5
If/UMIaSzOyiUy2rQkP9fcZ6rexoxKMp87zyM8ihtj6T65Sxg5A/QvodaGxL
o3oN9Bm0zYx2H2wRFZxmA2VHWY/f5G5N3cvVqbSxhg3dt9HceNNcK3j0ZnVV
63qWdFTYoKa+iVXpzcNTVwf6lIPd5/NnnvAtQ/9KfJtcfZ4TvVPr6HTfZnpw
rvfjvFZNSrSWnkNXZLVwoRYjXnc62/4B6d10f6PcgBQtz+hMSf4HF/r2zKOU
TaUsofFa94Ge+mVoqRoH7juEOoJJ8w4XfdfaQPKCoNOn9SvQs1lXW96faQce
S/Werc6zA1e32xbTa1ekG+YHmB7vWRFi335yq/y8GhQ3HKLn39WaNnSg57t2
MYXbA0i/yXUcIdTLs2zTnjY0a2ZEh/FZ3/b/DWWyIz9WgU/XcnMOBFjRzwZV
TMu0sqahprWO63W2hkc9Zle2rGhBt89s/4dehao0o/T6J41nWcArn7aeda6b
0ITbNY69auVELRwCxoWcNISANmXG3JxYrG2KOvi7m5kLvfIjb78y9PiRt1+W
Rv3I27eHt+WvTi1zrirYDxi8IMndgr6Cg3UNPCvBGP22RVZrHCF9VubhO7aW
dGZFozlVJ5QBn4affvs42Qk6BdGMqWZWNHhUcYjFy3xyEfl3Rf6XGX/qa1wS
bXXYEua6N6x3d4wRndB/f7/Wbxypd2fnmAqNTeA1jAm41qdIO9Wp9aUj6c40
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
KPrPO9RKxXpX3NuAdB8o3qNN0D4VmX2EP0h2Fv6zEefLUDcOgSU4XxvZfIm4
Lg7PZSHsXCbukYa27FNn5rg3sl6wQrFffJzI7G+ra3+4gHYupWtn0Efcm6mL
e3AB7Zyki3vwl/QOmIH3gdI7tbgnDFfYP8NzWJvqBu9Il74++YPffyA8futV
2jjYPyyHbCSth8bVzedxF6TgPVI0u0cieI8EBnif9ojdp4E3nk+XBbeOvfpG
D25emniEdjICPC/ABpz3JWze+fkXTlhNHFelxlcSq+f1a/AeA9jMzkEg9xHm
fc2qYz/itqwfsWbN+hH/p58v7x8n9//lfeJ6YL/jG6zfsYb9jskk7I88hfVH
1nax/sj/6cPL+/rJfXt5/z65zy/v0/c5nfVlHsz6Mmu7WF9mcgj7OIewPs4a
9nEmVbDv8z3W91kLYn2fyV3sQ32Q9aHWsA816YB9q6NY32oN+1aT4izW53oZ
63Ot+bM+1+Q19umezfp0a5asT7fWEPt6U9bXW8O+3iQS+4D3ZX3ANewDTvZg
3/B1rG+4hn3DyQfsh+7B+qFrp1g/dO0R9k/3Yv3TNeyfrtXAfustWL91Dfut
E1vsz5639Ed/di2f9Wcnw7Gf+1DWz127zPq5k27Yp34U61OvWbM+9ZqGfe1H
sL722m+sr7225MTSJ8lNo8n5YRan873Xa/9cajy2JPiFlrQnw6LDA0omhyTv
mNo8lBxrV/mHv8n9Rnm/17spH78Oy44gfT+1N+nZYA+JfL7wh1+tS+19ycLy
DvFsejgn2u8CKfMqqdd3v5L7gfL+uVKfXML75DZyKNzw8Jv/LOtVZ/9zh72k
r/OOH/6zreTA+Y3f/OfEn7cbeNteJEmNtmd+95+/23ucfP7Nf04V2l1Jio8h
z489+zD1m//I/T15f2SpDzLhfZAV/UPlvsaE9zU+1bej4xqjMJJQ17V1VvPd
5GvlYT/8M2x6vVWBw2+S3ddc160yvUx8qj+c8d0/r9r0vLc9IZm09+i0qW+j
BOJXvdb17/75MeWE240dD4jfCYfZzZonkpZx5vS7f266+rzn8bs7SKMuPkU5
g0LIBr/8H/7ZuEN4wOglV8i68WHbO1hEE/vn0ce++2cZ2FPzZtu7ZPe0xHZ9
H94h62Hapxff/HP8qeQ1ad3uk1sVJ1Y5vi6ZGLjYt/7unyZNJyXsuhJLbKeu
Ln/94G0y83L1E9/9s1nXsBqGzynpeztym3+7aNL1+KGP3/1w7XCbJmP2xpN2
U0OvZr5JJMcOeEV998Par+cMm+ydTELm9POs8ewhKe747Pp3P5zytnL9M2Vj
yF8eTk+Sf/sWXzR9bPvdD1fGJq49uP4+mTtv/8UFoWnaitRxdbuHPiOFYQ1G
5nfJILOS2g+oGp6puZ7OTTrXLZPEVvGHpBZZxOb4sYKmv7/QgubGdb8W8ohk
fnzw2s42gnj3bnW5Cmia2eoO4777s9/lI3U856URm5Bdf9iOT9WO2ySNXdjr
GSkx/7py+KBM0jotc/qzwifazaIa1bZGPiWXg2tsv7Mjgyx/ZZqW+sd9LWP1
sI1lS7KJPs57MvazjmHzTlZEtNA3b51JnG6Vu/0kJU4bM41c+z5+DPbJTcd+
1kNZn1xtLY6vi+NHsfFas1njr65rmknOeh+fYx4arb2ruHX9dzn1wvyNP797
SYZZLOg4OeiWVsFt7YTvck46/nqx7YA8suWF66pFJ+I1Ozt/bf27h/+h2zK6
ZoB8hiMfM8ZHa4XfjcTvFrDvap8GXXnY+/ZTcubpPJes7JOa1622Pb7PS6nK
MZP0rr4kk3Z9Wp/zIkKr0u+wY8S3eYH1d04Xjs8jNbd0g6/zqNZz3Ml617/N
i0z3YXTNBPlMRj42jI9Wgt89j9/tzL4ry0MU8hCFPITLI9mZKOxMFHYm3M7S
vBM+75KfEO4nkl8R7ldXkb5Gly77LVH4LeF+q2fB6G2QfoPRtWnIxw75HGV8
5HVHFOuOKNYd4etOpgcyuvZB4tOE8dHW4ncD8bvL2Xc1af0Svn4V9WBhA9aV
bcnqytLurK6sFov1Qrfq1oOFeVi3djSrW0tdWd1a7bJunVtandW51WKxPtUf
unVixe/lHXXrK4JcJ9yV1enVpLq+WiNW11eT65C7sTrAtA3WK6asXrG2htUr
1qT6xppB3x/1jTVeD3kuq4eshbJ6yHQB1nP+yuo5a3GsnjNIdaG1mlt+1IXW
/LCOdCSrI63tZnWkNV532oLVndZCWd1puhvrae9l9bS16ayeNkj1t7UHrP42
ScU63qmsjrc28dqPOt4ar/tdhtX91u6zut+aHtYJv8zqhGv2rE44leva/aHo
Z3QV+zvESn2Ftir6E5U8b+03bcPDC7el8eewv0OCxD8J+ztYYR3dNrp1dIHX
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
XYpPxDqV4jRBl+JSQZfO7+IcId0zCLp0ryLoUYbjxp8YbQItx/8z58XtUvQZ
9vu2zltgc/FNaRjwYP25meEGgm5b6k0H5/OlIc3v5PkFqw1oMPa5tmy0p7tr
hXLQ5oz3++CDJRof363ANb19SlnIHThx/dAJJRof/0TblmL1rgwYPqDVzP2+
aDOxT/Tcr5cDLjbLJz08ltz2sXnI33Mh02HuAtNf9KAVMb5RY9MLUf9f0UcS
OkOc06JL5cH+wZYvpyZ+EPK81Buyusai8jDrS4tL9dt9EPLcxr7VXbBfPJen
Uqi2esXLfPJbTZeNK7veEfI44butj9Qv8tzGyOS6377brmGDxm9H5mrY/xpi
WjdeWFhsBtUSA+7N2PtGyPMB+4YbYn95Ls955APIh8uTg++zL3Tfu+GMyan3
5E8zOL/geTmXnWniu6XTjpVrM8scMkrcOs3Y81j7B/tHj8c+7xewTz2XRx7P
5TmH/CORP5fH5LLVsY3hZuLej3+3/7vD1bZE/JvXwb9bwf+u0V+f/6W/wv7U
Mp3LI/Ph8pSWvsvlkexMOB/JH4jCH4jCn4nCn4nCnwmXJ/6h3YbzX16T4xA7
dMiuLMLna098vt++vsWkvn3EhWpT34l+DYq+dSCtR1CsR+DyBGH/8eXYf5zL
Q8peOOpm/oo4Wds2HeL2QsjzGOuKB2FdcS6P6+RO44tmGMP6qya9/N4YAZ9f
CTeEPO2wX/kC7FfO5XFDPsHIh8szEfMx6mM+BpfH85ypd/ZRQ/BdsWP+k7Um
4rsJo/tvXd3XCEa2X2HpP9AUuF8NwL7nT7DvOZdHHs/l8UL+w5E/l0f6LlV8
lyq+S7k/y+MV36X8u5KdxXcle4rvyrjNvyuPV9hffLcu+oMZ8wfe31zuXy/k
kfGfyyPvF1weyQ/Fd7ej/9di/i/yXs7hegll60XIk47rSx/3Cy6PvL9weeT9
iMtT1dFU/2yJEXgZv78xJa9Q9B12OB5ouu3bOv/r2hSPOJon5EkcnflLq9Z5
JCRQPycnIkPIcxP3i864X3B55P2FyyPvR1weGf/5eHm/4ONl3OZ0Cf+JAv+J
Av+Jgj9R7AtEsS8I3JP2QSGPpC9R6EsU9iGK/VF81xT36z5svyaK+SKK+SKK
+RLySHGC+G46xieuLD4R/Sn8MJ5py+IZovBnovBnovBnovBnovBnovBnoljv
oFjvoFjvoMAfUOCVGC/jNqenYZzzEOMcLqcU/4j9QpXXN2HR9XMLD5WQoB2X
im8MNqB8P/2kN9HZx8kAJkTPi9lyuhSl2J/3M9InIl3D/rwSfyGP58nfnjSd
pw8O2YvaHuqmJ/hD2hmvkuNGoF20mf9PJ0PBv71E5/ylfV/EseGfapnp5RlD
qyYGS1cu1xN8zkh0zucy9hfujv3r+fhopPsgnY8n9fZ13tijDJQtGDyoydl3
YjwgvRzS+XjJn4UdTkd0exI2piys7TUjMPjLK8EnHOnrkM75BO4+GGzR0ATu
3Dselhr2TOCwKh9SWtfiuxtNxkwOn1Mg8vS4P6wodbNrJ4tv82kbtCHXLVXI
sxLpxUjn8ixuuGhH2AUTmHbQ7k5garKQR6KLeAz/T8SfnL/0XcLpVBrPvyvJ
Qzh9utPTzQE5//YB5PJI60L4uWRPIac0L0QxL+K70nlK8JH8hCj8hCj8kCj8
UIyX/BwUfs7tLscJwg7SugPFuhN8pPUL3M5SXCT4S7gBCtwQ/CX8EfylOFyc
46TzgqCnI26HYRzC6Yp4RnUuls+zAj+lczdRfJcoviv8RNV3W4HDtDBu0emG
owtJvxD93DZ3Pon1rsBVFU6q8ATujKv4pLCPPvQcU/+3VhMTxDldsd4hf/X+
D6kz/s1j4eMV61HmI/SNxe92Y98V+69inarWnco/oRjtNpTZTZzXFP4mjxd2
kM59gi6dTwW9FsYV83XjZNnOQh7pnkTQpfscouAv6PdRzgVyHz3duEvQJfsL
+uufzy9dKu0jfL2r+o5J5xdBl/xZ0EtG12n0IKmQhPeOqfP81/c8vwtGj810
XHzKHm7/tTI2NbIKXYp15Gp6v6/Ty6eIzM8dZe/foUCM75CcsTc20RQynGxO
bXuhL+pPBtm9uHgi3gHumi5+7vHOWvBZeJP2dvlYFcb4ty7VO6QSjcB6a80W
mq4PG/mZTGw/u26l3NeC/8x8g4DXj8pAeEJ+yMOBX3ieMLxMGaG/ea4VVC89
uTivWyleDxAC4l+VPGnuBD6F8fOKYy3Fd5dtMenWtIUjHI7p77r9TAXx3SUJ
jvHvGlUFnzr7l2U9Nacfse5Z2NHaMf+U/UIe1PY+ePxRtpBn2lK7QWdnl4Om
f8UsbjGxUMijqE+I+1QV3KeMMF6yh0lzjuvvB2fIGTfJzzGynJDzxb750cua
OEGLhQZlOliWFXJmY322JlhHkcsJyL8c8tew7lnO5DKDZ7UrIXcu7jz76mma
kH8V5l0br9PJu4a++/Z2bBhUCe4ta7+p8Mt7jcvP9ms73K95/GYP9boee3TN
3hG+Jlnnv/TX4/UtYb3HmDPz9V0gpcWdw3+ONRR68Tp7l7AeI9erPvLRT2Z8
uF7h+N11+F2ul0JOZT65C+YfTtXNY4Tep55/beZrBkGmY+YUBqUJO6zcevHS
3nLWUDpHz9u9brawA4uj7DGOyhF26EpXH3n+tyPsrXfvc9kNeRq3w9C5m+sO
6uMMo5qE93k3sUCLxHpuUp1GjdtHHs/t0w3570f+3D4rUZ5ilIfbRyE/vYDf
53jC9f2E8nI61xf5SfGkvahHyOlcX86P07m+3N6cvgrr1Ml0bgeZD7eDifRd
bgcqycntoNBLXhdCDslvgcsj4QBR4ADhckvrGhTrGhS4RxS4RxS4BwrcAwXu
gQL3gNtTwnmiwHkx34o6h3hOtMY42QL4PEn7Aij2BSFnFtZjLMZ6jFzOMxJ/
Pu/SvibkL4t1XbKwrguXf/i7lt5bfrGACVOGt4vsYibkZ3F7RYzPrYT8Lque
vr/WpzK861h50O5D1rxOprxvCr2keshCr5rIpxD5cL3aS9/leinkpK+vka/d
55SDqgPXXQ02qyDkZ+cCSzwXVBLyzw/P77WlRyW4ObxkotliWyF/80upuXWP
2UB43ogNQ4bYA1+/U7HOZBesM8n1ksdzvQKRfyzy53p9RnkmojxcL4X8dEbI
tvVnQwzhafwrhwV/m/D5ksdThb5UoS9V6EsV+lKOV/J4hb5UoS9V6EsV+vI4
ikp+SxV+SxV+SxV+K+wg1+vmdpDjQG4HebzCn6nCn6nCn4UdSqG+6br60te4
rvdivMp/XyDhD1Xgj7CDoi43yHEpt4Mcx3I7SLhEFbgk9FXISdsirqbqxs/U
CnHYH+Ntru9lrHPbHetyc70CEc+7YhzL9ZLjXq6XHCdzvaKRvw/y5/Ir4m3q
j/vUEd34nDrgvtYP43kuv1RnWMgpx71cTjlO5nKq6oH/gftyfd34nG7AffwG
xvNcHjku5d+V41j+3XsYP5zHuJrzkeM6Pl6KM4kiziSKOJMo4kyiiDOJIs4k
XB6Zrog/iSL+JIr4kyjiT64Xlc4dRHHuIIpzB1GcO8T+Jc0jKOYRuB3k8Yrz
CCjOI0RxHiGK8wjXl0r+I34nJfkzKM6PYh9X1OuW1xEo1pGwg3SuBMW5UuzX
CjnldUcU644ocAwUOAYKHAMFjoECx0CBY6DAMaLAMSG/tI+AYh8BxT4i5FTV
CZf2BVDsC0IeOc5U7OPiu9J+KvjI8R4fXw7P0YN062PL52sRb6t+DyjRBZ/l
+B1+XuN8pO8KPnMwXnqpGy9BV8Tbubrnenrq5+dfKo0X8x4gycO/+wblH4x6
cTklecT54v8AdLMwQw==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmwnYFtMbxmfCzGDmwzuffUlK9l1C9n1fskXSpn2Pon0haZUUSaFNaaNN
IdkqKQplKdkKaVP2nf/9657r+l9Xp7nnec+cd96Zc55zP/fzfJUatKnZukIQ
BLV2DoKddPwlCoJOaRCcJDxW+Iw4CEYItxXOhe8QfqIUBE+pz7XCP8pWPwmC
C8IgGKc+Z+r8cdm/0/lNajeqXZjpmjwIauizm4UnCtcT/lj9G+j4ofp/ItxQ
+CPhNsIl4TrCR6r//eq/p87vlX0/HZvIfpTsfWQ/QOedZN9fx6aytxbeS/h2
4Vk6nqd721f38JzwOcJ7C88QPld4H+EjNM59GmcP2bar1ZX9PNn31LG12i3C
JR3bqNUSnqPf/qd++1sa/xh9Vxtdo0Pwjdq3gfHb6ldPba3wWzrerrZG+Dh9
2E799S/YwDMKjHfXPdRS2yic6JiUBcHX/Eb1b6UOuwgvE7419ve+pvGuV3tH
+HUda6q9K/yGjjeoLRdeqf53qP97wquE6wq/LzxD979F9z9PeCf9pqZqV+ua
XXRspnaN8N46tlW7TfhVtevUlnGvsjVXu1bnD6sdqNaId6TxW2h8TaFgsGz7
qTUQfkjH/dUaCn+oz6/Xtcfr/A/9xjFqQ2U/X8fH9fyr866ERwifJrxS7Tr1
P079f5R9FO9J/Rfp3ifrNwwQribbQ+p/nPqeKjxY+Fjh04SHCB8v/Lvw02oP
q/+vOj7JNcKPatxKau2FX1W/S/RdFXXeR7/lMJ13lP039X2KsYQf02eHqd0l
vI17VuspPFy2Q9XaCf/APFfrLbxdx5FqveijMU/QmP2Ex+jep6deR6fzDHSf
J+mzl9TnJh1nyv6y8M3Cs4T7qv8q9blF51/puhd0zTTZH5B9pew3yj5V/a/Q
cSzzUH2e12czuB/Z6ul3na/7u4D7Uf/TZftSfWbrfKr63Ke+K2S/WvZpGudK
HcfJ3lX4IOGWwt2EDxZuJVydZ6n+J+q8i+wH6thC9s/5Xn02WbiPxnxffa7V
Z9PV5yodx8t+v+zvyX6Nzr9Q/5nqP0X2Ibq/A9TuFF7K3FH7jDF1bVP6Cn8h
3Ix7Z/7reGni5/668GWJ3+Uo1nPxLt6R/WrZj9T5G8KXJ35/z+t7h+p766nP
TOFhmefqDOFHhOsLPyf8sHBd4ReEn9F9NxZ+V+Nco3GOwtepnRB6DowNPa97
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
06nb
         "]], Polygon3DBox[CompressedData["
1:eJxFm3e41UTXxRPBM0c9c5XcqyhFir333sCKvbdXwYqA9N47AoII0lFAkCJK
F1AQCyACIioW7F0UFbH3+q0fK8/z/ZHnZs1MJjnJzN5rr71vnVtbX9FqhyRJ
JlZKksr6OzlLkmXlSdK0kCRXC79dSpLpwsuFFwknIUn+p/OzdVpMk2R0TJJn
1NZebbeqbaPGT9H4ecLThadrvueEOwrfLnyjxr6q85d0foWu/0LjZ6h/rdpW
qu0G9W/U+QadX67+PsUkSXVcpPPNOu7W+D4a30hjGmjMw7r/JOFHhacIv6L+
B4XnCk8Tbqz+HSuS5DDN8a/wHcIF4cOF/xOeq/HPanxrjW8o/KbwQ8LLhBcK
vyU8TfhJ4ceE3xV+RXi+8MPCNcqSZKrwV3ruU/V8j6j/aeEW6r9e/bfrfpV1
v0N1v3+EU427QX3n6HwnjX9Z4ydr/By1PaS2+/T3PY05Rn3v6dii/pnqX6f2
VerfXfd7Xvg5jdlH/Q9p/jLNf43mP054qMb3U//NGn+Bxt+v/nuEhwv3FZ4g
fKCuvVe4j/Aj+j5D1X+PcC/hB4WfFG4mfI3wHrrf3cLP65p9Nf8Dun6Y8Aj1
91P/U7rfYOEhwt2FZwk/Jdxc+DrhpRpfoedrrOdroOt31jxN1Hel+nYTflLj
B2n83WrrprblwgOFBwt3FZ4nvEK4jXAj5tfzDREeKtxTeKTmXyncVvhm4Sc0
fo1wF+EmrDHdb7XOn9H5Bbrfoxqf6Xka6nlOF/5A41/V+IUa84jG9Fb7L7rm
bPV9qmOp+teqv6v6m6r/MvWt0vlTiX9Pud7PcvU/ofbqwkM0vq/wTRpzvsb8
T+2v6PxFrmV96P5VdP8bdZ/ThC9X/3Pqf1r95wuPUv8qXd9ObbeobYZ+72rh
TsKNhWfr70+65iyN/UjHdI3fTfNdp/lOEN6k+7+s8dM17n6NX6+xfXTeVucH
qL+F+tur/wS11VDbGM3fWfg04X2Ed9bv6STcU9f9LPyh/o5X37DE62uVrn8h
/z58r/XC64XHCN/NmtbztBJupes+Zz1nxgerv4L1p/H98/3B+tg92DbcpvO9
NH9z9bdT/3Fqq4490HxthY8S3ivfn3+W+x2wX9oIdxQ+Vf11hFsJf63zU3TU
Zv0LD1B/y3w/dtN7WqZra+heb+voLDxGuLLOX9PRVXiucIXO39Txhq5/SddP
0/UTuL/6huV75wjWr55vd/2wO4r+fm8E76Xe6j9ceIOuf1HXj1XbELWN0vvo
IHyScE3h14LXMnvvMNaHzn9QW32dP8j+0vx7aP4mRa/fZpqvha4/QOM0VTJN
/buq/1r1H6/+or5fS96v5tjM+lN/G+EjNX5P4ZL6e7Df1P+38Dr97a2+Njrf
X9fXEu4n3E64jnA73a+rxp+ttoPV1l64m/A5wocIdxDuLnyu8KHCXYR/Ye3r
OJL7BdsSfEmm+XYQvlH4XNaa8GyNf4b1orYbWd963nL9nkb6PWeof4DaX9E1
h+j8HR27BPumqzS2ivCtGt9F15+ptgPVtkb9vXTeWuf7qX+P4L2D76km/I3w
TOFJifc/9vouXd8t398V6u+Q+7I91f+++jeqf4HaZvHMul9r7JHGbRFepv51
+fXNhD9W+wSd35v4e3RTf0/1X662k9T2rfof1vnkxL/va+EZwhMT24MeGt9b
469kDautu3Av4SuET+b96r1M1TUl1pqOkZmf51D1767+T9V3v86HJ7YHJ2v8
w2q7QnigcG2d91d/e+G6qf1xS41ZhS/CP+LLhddjG3N/3EJ4ZWqf3Vi4nfAL
vJvcvjUXXpHaZ3fDHpV5L9Vn/+n5HtPzNcz99YjM67ODrimHD2j8Thr/ksZX
E24uHIU3Ch8tfCf+TfhV4ROFB2G/y/zbLxOektn+3qn5r8Xf6nnaau51+E/h
f0rJdsPTRm1r1HYf/qjMe/smdc3M7E876/o74BOZ/V13je8h/Kuufy/nJ/jf
P4TfF14vvEb4T+EPhF8UXiu8SNe/XW6f86zwo8KjhHtovqHCYzPvv07CRwlP
1PNULbOv7y/8i+Z7V/1rcj70pMZ/Kvwa+0B4g8bXLTMXWifcVfg79VfS795F
bYs1/h38tcavUP8z6q9dZl+2jD1d5v5ddP8r1XaI/g4Mfvcd4XOZ7X9HtddV
2+c5fxka/D3Ya+y5P1nLusenOt+itoM0vr2u/0z4S+y9cAfet37P98InCg8Q
/kr9XwkfIdxNuJ/mPVDnbdmrmvNr9X+NvVJbd7V9qf6eOv8wNb+qruffp8J+
EP9XJ9hGYBvgQxuDv927Oj9Uxz3B3K+zzvfV/PcGc78uwvsJvx/8bd4XPlbH
Xpq/ruafrDk/EF6g56mpto/hDhoP/z1O4/um5nDwueOF+6W2af30e7/R8x+t
tp58U+FtwscI90rte/HBmjb5Uvf4Iuenw+B8artNeBfd7xWNPSix78MHfse3
KPjb4KNfTv2N8JX4TJb5loJtPTZ/m/Dmgu3tCRrXX+PPS2zLsen41u8LtuXY
dLjAD8IDdP6t2o7VNb1T+1Z8LL5mq/q3au6t+GP2B3wnmNt2Ss0f5qt/bz3f
J7w74anR75R3OVL4I+Ed9Hv7Bn+Pbvp7ouZtpf4fc/sFl3kktQ3FnuLbZqXm
IPuwztS2E7ZCbf9pvl/5zWqfwzflW7MX1N9S+F/1/6L+69U+W/hb/ZZ/4bfC
TwsHPdsfwrcIL07NF/G1y1PvX/gZvv3J1ByyoPG/w6/VtkhtH2v+Svo9/YPX
E3wJLv4way/xvhgQ7HvZH/sKdxTeWbgFnIP3U2GbdSM2KZ+PPfGbxjTK39cB
wr8KP4+9qLDNhU+uFd6zwjaaeOk64VS4rvBXifkq3HtZao6JfX8fviV8c+5/
4KLz4Pbqfye/vl3wfsSevqvxN6V+vh31+3+D3+qax1L7M3z1gtQ+Ff8Kt56f
2qfhL96Dywo30vGh3v9f2BCNWQKHFf5b+Dbhx3mfwv8I3y78BD5Hz/Oh8AbN
8YLme1n4I+GXhNcn5luX4xNTc6jWcAX1fZnYP7dl/wt/nfh9PKvr39L1z6rt
SfZAHg9drDkmwQ90/zfV/4z6l3KN8BvCTwk/Ljwvc7zXq+h4YVa0TcIWTRWe
q/6J5bZZ8O+tun6T8NO6/gnh74T/w1+p/5nU/O8ynU9JHc8s0PWvqX9pHn/+
pvl/hg9ozHSNaanxB2E3EvNr+FoD9Y1L7dOxu3cFc2XsL/zuQp4lNSeCH10g
PEG4VWI+cL7weOEOwnsLnyc8NjUHhO9eIfxQak77pp7ncz3PJj3Da8KVhD8T
fl14Y+J44yKNfyA1p9ynzP6rutpuVdvCkvWCc4VHCy/V7/243DE//GKZ8Cfl
1gjgI5U1/2bhN4RfzZ+vbx7P1E7tO+tU5HFzal+3X4XjOHweXKJGhf0tnAL9
AH/5YDAfg1vUVP9lBXMM/Chc5fXU/hQus3eF4wQ4zQ8l779i0ftpcLAdxh7D
p7Hd1dV/VsE2fAD2XPjUovkq3z0UvXb5/h3VX6ywD0EPaC8cKuxj0Fc6w48q
bMPhy3CfWhXmgXAguFM14WMK5lA9grnVhtTxWz9dv7P6Tyk63r5Kf98Jjt1n
CJ8kPIM9JHxXaj89LZhb4a9Zd28HawesvzElzzcr2P9dja8N5i4z1d9UuFLR
3OQp4T9zfeKjYPvyRvT3rVa0/WnFc+l4S32r8QEl27Odira3rfU34xmwfal5
3O78hsR87vXo9bNX0fblv5LtadWi+egw9ZeE6xfN59Myx99bg/35DWr/Itg3
zVX/gxo/VvNN1PscobY9y8zfXg3mE8S/9+XxHPHuauGRwuPy+G621u/ocsfM
2P816h/PehMeJTxH/WPKHSPgz6qV2V58EMw/puj+44Qnqf8+1oiuv1d4JL4Z
+yU8XHiU8F3CK4RHCI8WHii8VniC8BTh0cLrhO8Xnio8JnE8+kCuDxDPji15
fT4SzF/Q414vt/6F3oVf/DHYtuEf8aObg98N/vSvPP78JNje/53rEZ8F+wP8
8ufBvwX/vEOZ9ZdtapuN/ShzvPed8JzEfuG3YK6Kf8DPfB8cC+NvNpccD/8b
zC/w4zsW7Rvw5/iRP4JtO/4EP/KX8PLE/uTTkvWov9U2T22flRy//yM8P7Ff
J/6ekti/w/32rbC9hwOejm8Ljh2GCg8qef9Ogmcl1rLQtJrrfP9g7QENAi1u
t2BtC43rTuH9grUzNLQWwgegaej8J7XV032Gaf4+wb6/Ter4rpfw/sKtU+sp
aCloKmhNuwbHisSMxOZ/Few32Y8Xp35H+E3e1yWpbRCxKTEqsf2f2NyC7dOl
qTUrYiE0QPg0vJp4/jT9HZJaHxyla38sd5xJfIm+h60ZnDpGJ/4+S/i+1PpV
w+BY5vPU8UdzXdtEc6BBf1KwtoHGUQkuWHCsiKaBPcOuoTWgOaCd/FhwLFXK
40Vs/JXBsc9nwhfqWB2s+aD1oF+iH2CL706tSYzUXD+U2w5i/4j/sRXDU2tS
6FNnCo9IrSGgFaAZoCVVC47F9q+wTk1MRuxODI8W8reeY110PLhz0Xo32iwa
LbF9QdefofaFwdrlPam/+6Jg7Y/vP71k+7U4+H3CZ+B2zdLtoUhyKb4n2Hc/
mDrOmMAzJ4434DUbgn05/Ia4ZFxwbE588p6e74ty82r49MCS/c9E4prEcdh9
wdoK8diWXD8fjr1KHMeNYI0mjueIC0YGxy7EB8QRD7AGEscTg0v2Z5OD4/lL
1P9SMHeZnJq/1VFbU53r9SUxOLbfJFyeOnavXWGdjhi+anDs/lZq/ZXcAD4e
3145WItFk0U72TE4T4A9OzP1HodP1dZcTeC2iXkh9uec1DYEnvJsMJeBr/yC
PqH7vxUcn7yj8WUac01qH7ayYHtzXmqN+Bx4QjD3GqW2s4ktgrnXSOEVBdur
c1PbKPjSpmjuwx5pk+uZ++V6H3HpFvZY6pgKX4nPRJ8hBkCrQrOCa14SnKsg
ZwF3vTjk3DfaHuxQtK3H5q9U/1XBfPvvkn3ttam1cTRyuPCl2EzhYcIXCwfh
5zT+e3IoqW0G3LVWHv/BYR/H95Ws3Zdr/GJ8a8laXxXhJcKTS869ZMFcGc6M
tnJdMPeGgz8vfG0wN4ejrxW+Pjj3Qw7oZGxzcO6JHBS+7sxg34qPRT+Ak6Of
/FUy1+CbkevZnvPR+AuCczHkZPDV9YJzSeSU8KX1hTegxZSc+zkrWAuHE8AF
jgjWwtHExwufFKz94nPxtScHa/No9MQO5wRry2jMs4TPFn5CeDCasp5tnvBS
1jMasPAC4UW5vUc7LwvW1qqUma/CW8llzc39SY3g3Ak5lJbCNYU3aq5/eX8a
/7/UuSrsWVP17xWsxc7O/Vf1YD7yezRXPDp1PP9HNNcjRwW3g+MR7xL3wsXg
ZHAvOD2xwvLM3J2YAVtejPZd2HS0IzQk7Mc3BdsibBLx8mcF55LIKTWBiwXH
XjVyPQafjPZHDgb7gJ2AC8OJf4DLFMzV4ezok8TMrH00ALgCe2CBrh8hfKnG
76T5V0bHaHBzfOR89Q8XvkT9xeD4E00R7nldau2QnBz2BzsE94SDoj9u1yHL
rRF30fX7BueSyCl1Zq8H53rI+eyNvQjOXZHD6qT+usFaT3m0tkKMQa6LnFdN
7FMwl2N9wT1PCeamrEdyM0cGc1M4Krm5o4K1PDQ99Bp0G7QnNCj0MXQybDs2
Hn0MnQytZEX0u4BroQ2gEeB/8ENN0Pt0dBVOUmuDaIDEnmiETaM1P3xDmlrv
/SBam+EbXa/zd3XcKbwVvhm9HtBK/kish22O1ib/gu9Fa4T4oh1yPvh0tK9H
s0H7Yv3gy9DAiLVXRdsmYq9PsI3RubulPLN+zyvRe4HYgr3xarTWwR5Bf0bz
wpdVghPpfL2Oq+APOn7S+BeiuQwaOt+e9U8swhpA6CPmIdZBM0+j7TuxMBo7
WseSaH8BV4WfLovOJaHZYFtXR2s92FjW8pporYc1je2HY8At8AHw2eXRuSI0
K7SSJ7L/535oie9Ha09oimhLaHLwS3gmsQoxC7HG8cGxBDEFscYJwbn6q6K1
cDRxcuPbc+TCFwbHLtgMbMWxwbEHMQixyYnBtQX3RnOZprn+WC2aL5FTIpZZ
ke+Pw4NjH2KgjsKHBuvPVaP5BTkfYqFn8/1yWHCsRsyGnouuSyxHTHcU9gqe
Rfypo53w74lrG7bXOOj8omDbjo1/qGAbDjeFo+J/qwjPKneOsbbOv1Lbw8LX
RGsh2De0OzRB9Gw0PLR8NH20kUbB48kp8P5uzt8n/pdY6+rgXD85/0XC1wg/
ItxJ+AjhnzT/bOFewqcL/yM8R7iP8BnC/wrPFe4rXI+1X/B8V+t5nktcQ8Dv
vVJ4ceKaDrS3RdH8g9iJ2Jz1ihaDBoO2c2/m3AMaD1oUmhTx39HBenMpWm8i
x4gWiyYLtzoteH9hL4k1KorWYtFkiedODc5dkVNDaySHRa6YHDKxDjnjkq75
Xde/gW0I1mrRbIn9GgRrkWiSxHLnBmuzaLTEcucF73/sOdyqkNsz7D/crnLR
2tC4zLkY4ge0mz2j4yE0HLSh2tF8Eo2IWHB+Zv+N/0GLeSCz/0CTIXdwRjR/
gKuRqzg/ml+Qs0CrOiZ6f6FZoVUtzMyv0KyIJZZk5jfEFHDdqZn5E5wX/1YW
rd8fkz8fGha26Y+CY6Ea0bkaYiL0/r2i40FyuGhZ4zOvDzStP3P+g9Z4frA2
i0aLNvJr8PpAoyVW/z3YXqHREqv/Gfz8aG7U5yRF55ewh2jnxGA8P5ydfPvS
YF85PjoWxGfiu0dEx5L4cH4/MRXcLBa99wrR3Jc9SO68Cv4ycQ6d/EiMzl9R
I0B+Zbfo+JAaB/Iju0bnN6gpoNahIjr3QM0D+Y0sOtdFDQHfE42N/P+c4HwG
6w3tg5oL3h+aIPnXKcHca2B0bgUOBtc8O1rrgnOyHsh/wJWOC66tGR4dezbL
+U2rzLnL5nn8G6Jzo+T4WZ9omNQnjA5eT+jN8P8zgrnQxdHfC05ErH5YtJZM
zM56QyMlf35IsG08KVqbwkbC1fGf7Cc4O+sbzYP6l581fledd4mO1dBH50Xv
L7QRYij2C5onvvm7gvNlrB+0G+aAD3fR7xucuEYEPtw1M19GQ4M/d8pc6zM4
3+/419XCLxTMnzpm5qfk2LHNPYTHJbbR1MaMi47NyfNTazY2OnanrmSFfsOY
6Hw+eX34cLvM8QY1RfDdNsI3JK5BgA+3zsyvW+R8um3meIUaMfhZ+8y5YmqM
4GMPZdaDqEGC33XIzFepGSI3PCxzPEOOmFwoOdH6PH+wdoKGQnw8M1iLQJMg
fp8enEuFTxF/bytYa0NzIx9GXgwtm3i3QWLtmtwdOTxi8/uDc3Vb8+/3e8G5
lMcz67NoQ+QqyVliL8YG5yrJWR4jPD44FwvfQtv6reDcLXwObeDXgnPh92SO
z8iJo9UPz+zv0Ozht9My6xvUNBH/9MocD6FBzoBPs371e05MrR2iIZL/Iw9I
bIc/QTskxiPfkpRZq2UPoCWiKZJvIu80M9q/oE2elFpbRGMkP0Weao76Kgsv
FK6n47Fo+4ZWSMy/ONq+oRXiEx+P5oxwRTga2uF2jpY6rzY32v+gTVKzg7aM
xkw+jbwa8V3PzFyCGiK0Rjga3Iy8Ilofmh/1GY/l8e3dmeN3clDwhyGZc/nU
BJB/2VHHi/DF1PF9f/XPTFyTiNYEH0Q7pwaB2oWhmeN7+Brx/2OZ9VW0DuLt
wZn1AXJU6AEDM/sDNGDqB7aVrOVj44nHB6l/SeKcGPrAXZnjV2ro0B8GZI6P
qZlBq4Wjw83Jq1LfwXpDe8KmPVrumiFqhX4ueP331Jiy1Joc8e6dmdc3NZ8L
uV+0Vk0dEfHxpMz5i8YF6xNNhE8TvqrgsVzzaHD9EfFc08z86eqC9yx6LvE2
a5T4e2Lm/MftBesTLTLrHbcWrF80F74IPiJ8fcH6VkhdE3tdwfpbIfWehq/d
rvGHw0dyvtY4M59rkPO1OzL/fmqmuCf5l5j6N11bsF63Y2qbgJ7SMnM8elvB
v5n8De+LNUQ82ywzH7xGfXcUXP+za+qaS/Sw/aL1aGoU0cv2jdaPeb9H6+ga
HJuRQ0fP3Ef9pyauSUIvrhOtp1HThJ65P/FX4ppTajMPj87Fbq9rE64brXdS
w4Q+c5HwjMQ1wvhyfHr34Pw/evih0bU322tKhasLH5a4xgzOj75I7IdNRF8/
kPgtcY0fevgB0fos9hu99qDo2iz8B74fDtBbc/ySWK8/JDo+pgYVff7g6PgZ
f0Rt7BHRuU/q+tCHLoiOd6jZRR+6MDp+oOYYW3RJdC0XNuk7nR8ZXXs5MbUt
ujS69gybBF/untlWkSuhNgcOBXdCx/42+v7U5pFTTXN/Ty0MNgZbdll0LRk2
DT7cO7NtI3cCH+6T2TaR2/iVa6NrF6fh4/mW0bWH5NB/iuYH5LrISaN3nhJd
y0gOGNt8bnRtGzb6m2i+gbZOThl+3y2zLSdXhG0/L7oWDRtP/rB/dC6UHMFo
4b7RuclBqfNR7Fn2Khr9zJL5IdouOYRt0euL2j5y2ujjxJPUjqLZzyiZX1Hr
h2Z/LfYcHq5jN2xsyXyA3PGY1Prf5dHxF/aOGONNeETqGB99sUF0/gvteFHJ
/ILaSHLkS0rms9QekUPHn/eO3m/kRPD33aP3M7lV9G/4FLllanJaR/trtHFs
xriS+SRaNzmWxSXzG2r1yPFPE74nOpd5b2r/MUS4aurcAdzgnOhaXTjCi8Hr
r0/iulXi4dOi83HkOMmlkx84MHVOnXoeeDH8mHp17g3HWhX8DF1Lru+EK8OZ
qSUk/3Bwag0fW45Np/62TuJaUvT9g1LnIHh3cLSVwe+Q+qzTC66doT6fbwdH
fjz4G6KFYpOxi9hD+Daa5+zgdzQhs33HF8DB0fKwgdi+eom1anwCvgCbz15i
T78QvKdYO2gSS0K+hkr2EfgGbOjeeqc1i/a1jXXU0vmdGvup+u4Qbs67Kzh3
QL0tsTox+8kFawTUtx2u86qJ63nQDtAQWI/oCZOi8wnUWLAnyfcRBxMPU+9D
jDcomF+T30cLxudh97H35AOJk4mXsWfUepOvqJV/zy7B9VBoPd/DgYPrp9Da
vtHRROcfFFzriSa1Z55fRw9rmHqvYdPXhryeNs/Ho33ewBorOD+LvaGmtVNw
fdM2nX+ro7zo/D65hOtTax9oIGglaMLoTfWi9XVy5NQiky9BDyXnQm4AH4zv
xefxvwxHRdcv8D8N6D/HRetL5MSPKLjeCm2nas45ya+hn9+S+P9UyK+xX4gJ
0JeOjda3yLHzvw1HR9cz8D8O5PKxj8MS5/SJMamXRNtE80B/PSu61gc+i/51
enQ9ATn8+gXnz9A+0bjrFZwvQyvdP7G+Vj86X0HOntoA7C25JWoE0MOOFx6U
OMePxkJ9D9ooGjn62pnqH5s4x88zU4+B/sY7Qg8+IVofJt5CDz4xuhaVmoUH
Cs7nY6+H5zaBfD3+CI2H+JCczn/BGiu5BzgZXOH8/DdSPwE3x6agmYwK1iOo
f6EWm3wXejU5MHI/cCi4E5yK3BCcBi6DhkJ95hkFvxv+PwdtC84EV4Ij8X34
HxTszcHB64H/ccG+HBS8JqhvQe/rm/jb8Q1fD/ZxaGNwLrgWmg9aGhwNbgYn
4/9iqHc5MrXN5FvwTTYF+0D0r86Z+6mNQR/Ev2ATyGGjp/TLrBXwPwpvR+tZ
1GqR0ySeujXzeiC3iq28ObOtwGa2jI6/yN3C+Yi3bsm8Xsi1Yg+nlpwrhrOi
Ne4ebSvQHN+Kzq9gi5rk9oL4glwye4BaD3wsvpU8+F06bxdda9QndX31lJJr
G9BAiOeowfpY8zULzkXjc/G15Mnxr02FP0tsE8n3EKNgL2sUHX/elpmvkRtG
X1oYHWtR60G+54bM9ogcNHo1ORbsS5Wi42dqrN+E7+Z66E0aXyuxjSWXgd5F
7RU5DfJJDTPvf2oviZ8bZd4v1MYRD2GDsD03BdcywUngItQtoC/2zaxtUPtC
vExOFPu1a9G5il2iawnJWRBvt4nm/+S6se03ZuYa2HhyJeibWxLnTNDa4aDY
ajR3tOg9on0DmvSH0fkeareo8egTzZHgRnCKodEcAN+PDWsb/Q35djwDe4Ga
RnL97Alyc+hR1BaRo8PXwOngcvgc6s9/jK4dQCNqGM3J4eI/YX+jOSNckTVP
7mlBybls9jS1L9TAUP9MDRv5gCui9Wv+Zw7tHb2Y2jH2JP9/BieGC8M50Bta
RXMfahfgK3BeuC51hOSWakXbAnJM6DnbOVjqOkX+/3A7p0vt87ANP0TXEmAj
yK1Rc0juHp9CrqtmNLch58X/A8wvORePRomeQY3/JvxhsP5NjeNH7N/gWkZy
9OTmqWOhlgFOB5ejRq9XtJ5DLQwxWY9oPYfaEjggubW9o7kOOTbqLTpE1/5R
U87/T6APUXuHxsi77RRd+8c7Rq9pEW0bqOWgVoM5uJaawf8Dvc+wdw==
         "]], 
        Polygon3DBox[CompressedData["
1:eJwt13m8j1UaAPCXdK8mPzW3mSlEKctEaSZbi10kRLIne2W7XNmFUKEsqVQk
a7jZ92s3I1vRZ0IymiVNUw1GpqlpSnvf5/PeP577Oc/3fc77e5dzzntu+V55
9w0qmiTJLnGx+KREkkzOSZJ22UlyMCtJ9rBimSTZya4uniRlxT/Yv9VNYR3V
HVK3nw1nZdR+Ib9NlGNn2VPqOqk7zA6wv7NJrDX7A9vKzrGnWWf2FjvI/sqe
ZK3YbraFDXT+XPESa86qsy/VTVXXjR1nR9hYdp267+RNxI3sEflgMVddS1aT
LZE3FfO189mHjuXJB4k52i1YDcdGyy8rmSTHiiTJvWyhYwP9xuX8jLyWcDgZ
w8qzb+V3iqpsvryOmKk9l53Ud6i6Uuy/cR3iasf2yfeKLM/49az0nQxTV5p9
Lq8tyrJx7Hr2vbypuCnujeWwc/LK4gr2F9aWtfR7a9ky1kl+qbhSuxob4tiL
nt0plufeKvnt8ex9fdfxL7X/L7apX5+Tjo8YE23ZT2IBW8ae1beRvgXsU/kG
nsiLiDc0v2Nb2GXyQWK/+u/ZVvZLeZ44wL5lBSwjLyn+rO95tpEVlfcVu9Rt
zknfe7zrrn7zUl7OC3ic3x3XG+9S3XPyk+6tj/a18duOdZP/WlTUt566iay7
/DeiEqvPnmDL9f2Uvaxv87gP9jx7j/Vl5dlgtowVuJY57G62l61i/1O3KMYL
O86Wss3qZrNm8Y7ZQpbPnmON2Ra2Ou5N38WsDTvBXmazY5yzumxlvFN2gs11
zWfkZ8Xb8rv1ra99WsxybB17Ve0O+Z36Pu8c36ipJ2qw9iyfXZDXFdVZO7aM
FZU/o29fdspzOeV8O3JSj3YfXkZtP7+RxT5UU0Fc5NhFMebV9lPzAfuA5aq7
jJ+OeSU0k/4sW+Of8kqiGDvI6rOa+v5NPMnWONef+LRYQ2KMigvy6byX9kl9
33XsNfluPlB7Pz8gvnCuW0QV7daud6F7+1z+e3EDa8UWsPX6LdF/F2vCZrF8
+RY+3PnK832xbsmr61tV+0h2eiwWgGbxXOVd9F0Tz1ndDP17s/dc3wllK+UH
+Fjto/xYzLG4L95d+111Rx1byxazbWx7dno/Dzl/uUy6JsXaNCOej7on1N2j
vYsVxFqmZgyry1bEesWWsUdZnRjbbAEbqW/3GKvyu0Q1tilyvtf1D3QfvxCr
5YN5GX3HqOuvbiqr4JzFWBt2O5sgHy/yWedYA2MtjmsRr7KOrBGbpm9FdjG7
j93BHpOPE0tZJ9Y46uRTxUb2MGvLjsezcy2N2TqWH8+U3aCudDwndj9bxR6J
7xYbywawj2PtE/+Jtdl9DXeP78sz4hNWkQ1kA/Qtyf7FRutfIsaVP4Oc7yr5
KP5wjEM1JcTHMe71zdX3HXXj1N2pbj1/Td08lsty4vvCHmDLWR4rxUazPmw6
qxTfANaW1WELYiyru4INZl3j3tTcK9Zob2afxbhR95i6Jtob2HLHZuWk36n4
Nj0a7y7Gq7y5vg1i/VH3QpLOlxtZZTYuKx1rZ1h71oHtZJtZZ3kX5/xIfnNW
+h15U11DXjvWGzaZvS7fE2PDM9nDdsZcVFeb/U7d02xMks6DW2MesqlZ6Zx4
gzVgtWK9ZZNYT3k3v3te3jC+ceykuja8eayZbAnrIe8a67a8QVa6np9W1463
V7eDbYrrY7VYNTaFjWJ7WE12E5vMRrKN8g3iK7aRrWLH1LVkjdhi9lJ811nl
2CPEt4Q1j7nNWrCGbBF7MdZOViW+PYXzKMbkK+y37HLWg7VgeewB93E25pW4
hh1ijdTdqu4FNiXevXyTuMA2sdVJukY2Znew2VnperlFXhD7kux0vMS42aWu
anzzCudHLvsjq8FuZJPYCLYoJx37Md6v5Fvj93PSPUfsM8bGmBHP5qRreazf
A+S5oo9z9eRfOdc9hXuuvqwX+1reKvZObLx+D7If5O1EXdZPXW92Qd469j+x
Rqh7iP0oby/qsW2x11B7yNwbYryVEkvld2XSNe41dR/FN0T+hGjCurAVbI7z
9de/pPYA1tGxx9VMzKRr1/0xjxx7NfqJebGOxreMzdS3n76XaPeOe3FsBuvL
irNecc8xxvXbn0n3c3tZcde3Tb61cP4WsO9j7ZbvFOvYVvYjmxDP3fl+kncQ
9R0bwXrEHkHeLOZhjCv9tou18a7ZD7E3k49Ud4v2K1np/vMZffuwbNaTtYz5
pu6g2B17UHaJ6xspH5FJn3k8+wXx/dL3PtZCew1b6tjD8msy6XuNPfVMxx6U
l82ke/PYo09jK+WtM+n4jHF6nn3tfB1YD+032T7HJsb+yPW9EPtS0YBtlxdR
d9j7HeraSse3VT6B35Wd3m/c9xB9r+KfxdyIfUk8RzZM3fWFczrG81E1R8Sv
nOdt9hZbHd8tdU2z0/cR72WNvkNY2cI1MebHCnWtMuk6EOvBudiHxXhR1yw7
fW/x/ubrOyD2tmwQ68LeUXcsk/7ekVg7i6f7iqHqriucb7GPOMxGs9vZEjaH
vSQfHf/TaD8V66cY6lxDCp99zK15sTdRM0LtzfH82FOx7rNr1X0jn8WrxJyJ
/Yy6CoXrX6x1M9RMz6Tf2D6x3secjn2tukWx1sXeybHFbD5bL6/vHqZ7L2+x
Uey2mCv6zlY33LmGZdL5HfN8vmNzc9I5F/MsI18Va6N8Hl+rXc/5pjnfQvYK
Wx1jTXSLZx/rv/PNdbyFukP8Z3sr9/o=
         "]]}]}, 
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHXcFsXXxh92b3V31d31Ye0uVATEFgEFCwkDRQVFCUFEAcWmRBCkMQEB
QaTs7i5ssbDzZ3dhoFjv9fWa9+Mf85lzz56dnZ2dOec6MffmvU85bFBUV1e3
8ap1dbHqd4u6uvEqA9U4Jq+rm1fW1fUX/Zfo4Sqnif5b9bkqp4v+U/VQlcGi
Y913pfjPEf2q2uaKvrRWV9dPHQ9S/bjan1L7eWp/TPS5ahup0kn0opp5XxX9
DzwqZ4i+WG2XqCwRfUqgvxG9mvqcJXpT0Wernqnyhuiz1PftGsfh+r296vn6
PVv0SSr9a36XMnZbM9Gnqp6hsrxBXd0d4m+r8rXar9N9c1TuFL1hWlc3VeUJ
0UNrfu5bzEPk55aqt1OfJ4o+OvJzeN7/RP9P73G++umj32NUX6DSl7Gpv211
7Xc99/iar78e+EeLZxPRA2ueN8azMKurW6Dyk/gv0vUFpeeP+TglzM/qqnur
nBGb7qlyuug1VPdS+SPw9FB5JXLfA8N3KfTe49TnONFvxmG+Qvt4tQ/gO9b8
ju+r/eSa2z4WfVhVV3eX+I7U7zw891u1jw3vewLtseumkfvoF+ZqFbUPEf2m
6MHhWywTfYbqy1VeE/2N5uRUPWMfzdmdSV3dfqp3V3tLtXfRc7cTfYfa91X7
bqK/Uvsg8bfR769FnyK6regzxXud6K30zNdFH6PSXPxvqO6usqPoj8V/onj2
EP8rrCOVLdT+surDVDYX/ZKuNde3WF39LBT9ocq7fDvVLdW+idrfF72n6I1F
76s+j9W9e7BWVV+v/rdW+10a8/6p2z8Tz8lqb63fn4juL7qF6GvF01L1NuL5
VO0nqX1P/b5O7a1YQ2r/PvJcNYi8byYV3jtT1XZhzWt4rNqn61sMEb2Yfaly
jOhRuj66ZvpK1WNZu+wL8V9Wmp6t+trS/XXS869R/4eK3iL2/n1PPD1jP+sr
0dvH7vMD+hHvToXXzEL1cUnp/c76GVezrLhK9USV8aLnUdc8zmm6bzeVT9j7
uu8y0fvr2ovqf6VKB7XPYV5VPmMOSvNPEM+esftnfc5S+zUqk2suU1QWq/2o
2PQXog/S9UN17wZcF72N6HNq3qusT/ZjE/G/pnIsa1Jzf5a+7wlhDueE9z1e
976nOdpdv3dCnom/u9rPFO/FKsv0e7WGWivimabfY1XOUTmRtaH6UpU3xPMp
65y55XnsP32PruL5VfXbGtvJzLnaT8nd/xi1Dc49tt9yy3Fk+Brq70/1NUv0
CrW/o/YBotuq73fV99nIYbUdr2uHiB4hurfog0XvoOszVPqJ/r1ez1T7UaKb
qW167Hf/W/PwmfofLrq1+pwbe2ys+ykq7UU3Es+T6jeKLOMXBVn0rubgN/X7
VWp5e73KQl27V/39rnv3Fs8emen12LPiXy7+x9jn4t1d5Te1v6n2n9T+jNpv
0r0rYu/r99W+Uu0/pNYjC4PuWCOMAV2Tq/9RKreKrmmMH6oME/22+tkLOa++
Vuj+dxLP56qp5dyXam+j8o7KWWrvqvorlWtEf6jn/q3n/i7eT0VH+t4b6Bkf
i64T3VD0B6L/FM9y8Xwk+h/RdWqP9PwPCn+XRLzn514bJ+hdR+f+Fuz1M8J+
b8J+L62D0CNnqRSi19dYrhDdmu9YWF/wmz24qPR6ZS99KL4J4vlB79ch/F5F
4/hRvyep/YrSOvGimnXlaUE+b6XnTig9BmT24KBDuyGPC+tH9OTQoKM7F95T
b4SxjVD7O6LboSf1+wLRw2tubx306tlBt6L7FmV+9p+R3xFdOVTPf0h9dkPO
ldb19IGc3EOlEXpE17vkXkt/IKNir+2O8Im+HCyhvkeqzEd+qp6j8oWu/ZFY
zsHXOXzzq8XTTc/ppT4PEt0A2VZ4DVyg+jS1Hye6TvR7KmfyXH3bUbn3y1/q
47IgQwbzTQqPBbzCMxeyH/X82Sqf6Pdw1TMzz1F7lQ9UxorncPV3BDI5ti65
OPbePKjm+6ZF1ndHiK8NckNjOFb0gehrXf+YcYg+VG2Hl96rx7G/kdGiG8Wu
kTlva33+ovs/1lqdWVreTqpZ9p8b5H+ua2NVbhG9puoxKjdHnrcb1c+RKjfp
vmv0jKvUXun6eJX7RG+p9ml6xgT9vkN8vVXuibz/2IfIq9vV1kvl7sgye3KQ
212Qgbp/W/2+KfY+ZA/erLqbyrXod/VxrPruK/p10d1F9xH9muhjRB/Pd1cf
J2lsR6IX1NdtureHymdqn64yUe1bqL5M4xyte3ZRfZp+by/ezVRfot/nqX0N
lfORQ+LfXO2Xqn1Uan2xX2aZisw5TuUYMIDa1xL9ZeT93yXzd24IHtO9g3W9
XvQFok8VvT64SOOuF3+s3yNSz2dD9LjaY2SF+rhQ7Seqn8WZset0sJvoDVUG
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
YkX4KGaUzi8lx2Gz2PmwHSPnnvUN6/Nxje3g1Fj3I9WLU2Ng/L7EtfH57l/a
V0k8GN8zcVXsLeJCxLuxcfE331fYj8webR32KXnF5GGTP/CCnnVkav8/+u83
ME4D40/WB2ujZ+EcQnwqvNOC8F7ELcGo2DbrpY7JPxTZL4LfBN/I6YXz6MiB
JVcaHIoPFnx1pca3g+5ZhO85sY1AHHyo2nuq7WmtsYNy5zBjpxCDAas/Q9xf
7W0Zf+wcSnxi+LjwT+Gb2iTYVfCTA7tp7Dl8Svd2yp3/zJ4n35pc6yfUvk/u
POElotvmziVGViGziBUSAyFmx1oFi15V+Rr21nupba431D6v+k9O1AXc+Lju
a5M71+7heufdrSv6EdEtcscxnxTdUfSukWU8sh77iJjmNZV/k0vGXJIbfE3q
tcI6AUuSawSeJNf6o7Bm8PHfWNjPj78T2wK/KDGBmwv7G84La5F1iD8Q/zU8
+ECIAWPbYQuSs4R9Ra5grXR8ku92QOpv9zwx99w5Bvcnzg3gGz0h+pDUOQbH
Z47j9QnfBRuO74WP5erK9xC/5+wB5w7AucSpwZr3Vta55AEtU5mTWuYjE8EB
lehbxPta5ZjKsZljDcQd0DWvqH1Q6rwk8C2Y8+DMeArcdnhm3ww+oH0z40bw
JPlo4E3w3zGiz02dU9ct4HYw9vvq/9XK+PVi1S0K4/Gmqq+tvGfIHSaPl3lo
m3nfkbczQDx1pdfxtYVlL3liF1XOlcJ/iT5dpt9npc59A3+C23sSp0jNf4Do
41L7Q8iNwpbF5iU3o2PAG+Q5kqNIzsb3ufUf++Bm9f2D2q9LnV/RXmUfte+V
+dvxrcnr6KCybxjzS5XXfavM8grZhT8LHz34+bTK8XGwJ3b2zpn3I3lWxKJb
1az3XxbfCeI5MLNtjU1NzhT2E7YTORjdAk7jjEObsEfI5+mqcljkswx7qewc
+SzD3iq7RM5bQx51rTmmj/97m5rzFm6sHMe9FPldOAf+8hCrxZf5p+obUrdP
QrcXtkvYA/ga0KfoDPx9I0SPrdwPNhP7EHsPm25i5dwz/LusY2ynyZHz34gp
dAr+KDA9OWPoNmwtcOZlIRbcouY1tklp24D8tGtTy9KmwX7AxsHuwf4h5y3T
vbeltj8uCb79ndXP7MLvgt02t7BOZz3PCn54/HzknvULmJa4NDEh/Bjkj41X
+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

         "]], Polygon3DBox[CompressedData["
1:eJwtnAnYFtMbxr/eefGdwZnX12vnb19TtKJStkgSrVokW1HapL1EIlqspSSV
VFqErFmSZCv7vpNdliwVZYn//XPPdXWu79xzzpyZd+ac5zzPfT/TPuf1a9O3
UFFRUbNYUaF/FXOyioobyxUVndOKirZJRcUhsaKiRqiomFhZUfFntYqKEWr7
S8f666RPdWyQ8K/CJwg/KXyd8O4aY4bwv8IThXcTvl34H+F+Gneiyj66WA0d
q6H2Z6sqKg5SfZHaFwv/LtxceID6LRRurfEbCc/RfdwtPETjnSy8Uv0HC69X
+4nCy4WHCG8QbiO8Svhy4X+FBwp/ITxM+Dfh84TfFp6mscbrWHtdq4V+7wH6
+5Su85t+6xDhK9S2jfqMUv+16n+o2l9Qe1F4pNoPUvuTut9K4evUPlq4Uv0v
F/5O+DDh59R+sPDdwouEB6n9WOEnhEcK/637uUR4jfA9wluXNK7G/kbXGS78
p9r7qf0TtQ8V3ijcVni18J0a6wYd66T7aqNzDtffV3VedbWPFh6jtlR9rhT+
Uf3nCn+r8w8VXszvEX5G93eg8ELhgcK/qP144WXCDXTurbqfa/W+vtKxycL9
hOdo7BMTv5t2wgcX/Y7qq/1qfpPu4UvhS3Q/16scpPaGwmPVVqU+16m+QeMf
oXpdHWusPp/o2MGqP6X72Vn1mWqfIry/+iwT3klj3ir8s9o78XyFbxd+Sfew
lfDVPG/1raljR2q8j3TsaOGbeAbC3wrPU/079a+j+hL1v435q/FWCu+qPheq
/+E6drTqu+n3zVf9Ih2rnfefKnyA8EvC++j604VfjJ4PY9T+jtpO1/PYW7/3
cB27Xu176NhMFpn63yK8n/ATwjsK3yy8t/DdwkF4lvC70e9vmsa7S3id8NHC
S4VnCL8hvJ3wJOGDdZ/TdF5BeLju90q1B413hfD3ah8nvKPwzcKbhU9ibej+
DtD9HaFjd6j9PR0rq36b2hcI91L/o/LrfaD6Geq/X/7++mV+33vpWv9TuUr9
t9WxMWpbp/5zhL/QePvxrIUnCe+j9sXCqe7zEOEVet67CM9S+7XCZeaw8G/C
k4X3Fb5HeFv1v0a4uvD1whuZ78Kfa/x9hecKt1O9g+6nhu6vqY7NVvsnOrY7
ddY39kT4YuEPhFtorInqP0j939Gx2tFrmLUbhLvred6lMkXtPwo/rvbb1f9G
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
vAOePT7OBZltPHMTDhH7hb3fRXicyiThu0reW8eovFv2nsFe0QsOSm2LomPX
NnBUJdtobPPOwqcIv5SZyyRGwF5gT8biryXmY/7Krw/H2lTtTUrm7k9lfpS9
38IHjUvNnWHTseVwaNgr1ssQjfdxYi4Fm4OtgVOBq9hN+MvEnAX+/iaVZxPH
QCeo7fiStZF2Kieqvkq/59LEPh9zDxuBbWAOLou2Bz2FH1V5Xvhy/GW1PSH8
ZDQ/cLHqj6k8ITyiZNu0lDnKfhTNjXXUsSHC9wjPL3hPYqzfdM93ph7zJOHn
Nd4gnZsJz47mEzoJ36fymfr2ZP9Q2y06577o+OQ8tT2k8o7alwh3Uf3s1P5Z
JnyNrndCYv7qBeZf4pj4SuHPon2l84vmN9EvXlN7raKvhY3BtnDN9WXvmeyV
U1Lv/9j30zT+64n5lc/Uf6bqTdVnQOY9nr0djrd9vt/vI3x9Yv5zTLTta1g0
P9pHuDb2W7hLyXsEe0PtovnrQsm+A5rFxrLnJHMx0/0swJ4If632M4qOb/YT
XivcFg0k8/50rPCdKl9m5qeaqj478Vw5ouS9gDnzJnxFlbWT1qnj7T3y8U8t
Wk/BBmL7mglvKHt/ZK5PS/2+8T+6CT+QmL/9MLMtPUr9H8nso+CbdBDuU/I9
cm/HF23/5gt3EL4n3z+wx2cRL7F/lmyzscVHFs2XHKRjPwp3yu0J8Qhaysii
+eGreJ5Fc9TYK+IbtJtRuf+G/5kV7MP+XLYPhO+zRutvsur9o20DnPnNwnNL
9tVHF+1/M5/+h/1M7M/T3lJ4X/aYfD4SK1ysMpb7UalZcAwAJh6Aa+0u/Kf6
1il5L4ETm5/bpy4F+7wLS47HiJWvV/8FwreVzG0T41xW8hpm7Z5VtP/A+nxE
7evy86czZsExHfzKjMyxERw5+tktKs0Sc85TuD+Nd3XRmgDXI56C655YdDy4
iHcufI7OmVWyf4R/yTOHr3pI5ezEmsSMvD+x401F75/8XrhvOHb4YfjUk9iL
g+c284G9kDnInLw3mMtE03s2M0cKNwpHeXmw3cR+sifspf57pPaX+qtUqf5I
sD/IPe0j/L/UXNkA1ozq/wTzw/OYv8I7s+6Zu4l9sseCuXA4OmJXYli0tRd5
52pfFhz/DmSPzMypwKXAudyXmSOFG4VDvSaY68f3OjfxfgXHBLfEHoU9gUOD
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
+O0G
         "]], Polygon3DBox[CompressedData["
1:eJwt1nv8zuUdx/GvW+L+qR8PftWiLWdGheS0LMdaoSNWaSGH0copSjkks4bk
OERoRSxtjYmpFkKmH6lGUSJzGGKWnMlhz8/je//xftzX53W9r891fa/7OlXs
2ve+PpkkSV6nYtSvVJLUpfnZJNlNFYomycv5SbKzTJIMERehVzRoi63D2oo/
KJEkt2KVSyfJYm1L5fHQAW1P83TjnarcEjvI35PnAhViC7XdjnUSX6T1WD++
rdid2n2k/Z3Kq/hu00cbfbSlMTy96RrsQb7jdB/fCr5W2CzxLm2HYUXpVawn
doI6igv52mHPFiTJUGwIbeHvrm449qx4GG3FemBjje058XAao9zAOJsp/5da
qH9DvmryzVfXhJZiJY2vA98dPEfoduxvfPX4hujjKexJ2qyPR9TNVP638lDl
DP2R75x4h3wzI498R/EH+I7RvcrL5WvJd4SvLzad7za+N9WdxZ7AXsZux45g
g/U7EBtAm9R3wRorf6DcRPlN+arL9yj2L+xhbCvWHTsv3mkss+VrI98JdbPF
O/Cnoj++u9Q11fYQNcf+hFXVtg5fD7pa/TvYPHVTxdu07aP8XawhdTW0+4Rq
Yi9gZ4qYV/HHVAP7PXYKu7RskuRbB420OYZPMZ7qPBvpp+LRfKf5mos/1Ecr
bCnWwFhuwL6kOtgo7FLsqLFcIucoeT7ET2GdsSL62KCPcfhXeAfsLK3DxmKb
sFpyfUbXK0+U75x+e2vXh2bwDKXnY23w7DGW3/FdTn/F5mG7sZHiy+gt7M/y
X6vtPn2ck++yvHStreFrybMEq89XG/uK6mJjsOJYTfGndB02HvvBWObIV0G+
/fINl6s41eHZRjfG2uYroW0j8X/oZ/G/YldhLcRr9Xsr9nesIXYzto9+HvsK
K4dd5DkQ54Y+2suf0GSe7fjAmE++iXytse/pDmwxdhM2Sfw13wDsJDYBy8T8
ybczviMv/Q/a8P2Trw22MrfPx/N8if0a24s14buF7yA1w+ZjVfiO82zm/a36
OvJ9pm6ovfA03yD6XH3XWK/Ke5WfV86nhdo2DEaNxbPkuxJrEP8lNYp9i12B
FbN+8oy7jj4O45PjjOL5Tr4Fscaprrph+h2MP0NfxPmI14u5ovrKk+QrKd+N
MS90EzYBy8PGxH+uzWPYIew57IS4Az4xvl2fe9StFRc1nvLiXvSeuut8f0cq
rfyWtnP43uargr0Q51Vu/S3GKmNjxHn0F2wNdlg/08RVaCNWjeduKibfxpgH
Oi9ezdc0m57tccY/FPs3xoh9jHXIpGfQmfhe9aNKpefRFLpC+Um+w3wj+WqI
76d8vs/j7qHX+SpiI5Qv8s3mW4VVxf6AXUnvYzPE5f0fe7WdaQ4ydC+2wlga
8MyJPaOuR5w52IPYZqxL3Cl8q7BbsulcxZzFXq0UawhLcvdga/H7fDeIX+K7
gHWPcwh7ANuEdc6N7xA2BatEGzLpHXMhP71zWhak903iP1vod4n+uhpv2Tjz
tSvUz9NYNfFq/v9hv8DOyLNWPJ1e1K4k1jvubv0OjPNA/Ahdpe3X+Gux3/ny
sMeVd/ENiAeAeXo8zvJsev/GPRz309n89I5oWpDeVaOpBN+j2Dfa9svt3wLs
Cexgbk1OxMpi/bFvseHYBKwM1g87gD2bSe/Ui/npHduqIL1fj/m2T/iGGUMt
YynMpufVcrxezHvubMqYq+X4u3w9+crlpXf5+fx0T7UoSO/1erG+qBLfGm3f
yKb7/of89N5tVpCeAaOoOF8vbAdf30y6T8/lp2dD84J0z86lCvEewC7wzeJb
HW8B45uKVY51jnXENmDt4//ma4+ti/MP+0e8rYy3vzFlfUct899X+cfYnLhX
5N/F25CvtniEuqXiA9qOw66Ot458TfkWxB5RXwxbRh/FO4q3unJVbQepGxHf
q+332fQdEe+J3bF3qSd2F/Yq1lg8r1T6bon3y9ux18VbtK+tXDPmOHcWH6XW
cYbk7qNecQ/q41fYFqxb7rzKav8bbCfWH1sibkbvYGXk6yTfyFhX5mGa+KW8
9I3Rled6mptN126s4Qvy78FeU76b7wxeP/Y9tcTOx37Npm+9T3kfUv5Cv131
uz/OPuqLtdN2Hv8yviL6LRB3o6XYdp7TeOds+m6K99PD4pPy7Y29gE0qmr47
12PtsPW59+SiuEOx0VgBvZtJ38/XyDlYfCJ3v62MO4pvcqwDKsSmY+Vin4uP
8Y2Lu1b8Sqn0XRXvqyXqZvCVx55RPo6N55sb67t0+uaebXxZ+on4G30Myqbv
iHhPlMWK+96p6o9n0/dTw3hfUlvlS/BF2fQtsFLbm5UX5N6223hO4p2y6Rsz
3pqPxTnOdyj2LzYNq6iPRbyX56XvjXh3rOD7lm8S37WxRuW7n+8Uti/2YLwX
+Jbw7cdexH5Ey/l+iRVi94jXGcs9mfTe2oeNjXWRO+9b6HMZdZGnNPYe/R9h
Ssgf
         "]]}]}, 
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
UcwbUe24p5h2eLBeprPgkOC6SC/mZt+K9WrFsSOC9eshfK8PuJrr+yLxGa9r
09l3ZHDdRVzlqOB6hmLs8GANTmfB4GCt+bWos6l2o3g7JFjDGsz4vcGVss+R
w4JrMIq3Q4M1O52DhwbXdRR7hwVrfzorBwXXePopVyx775yhPVTtc2Qo7YH0
qSl7HWk9aV9Iw981d16julXP3Pm4NPweMf6ottUyt5alvEf5j85K1U2axZgs
bb9Fbu1uYeyj/EjP6GB+t1nZZ0E/cBPw4eCDwI3Bh3LNjcre+8Pw98Uf+HwI
Nqrss0UcRFxHPGT71DpTz/isB9K/hWIDuD+4adnrYQC4edmc5ABwQ/0WeH9w
A3Dn1Dm3zhrx25HBtTTx2xHB9SrxnKOD61h7YbXLjud7gmuVfXb8UbK2uo5n
ehDjd6f/Jj0LzSG4UHacvCxY21WcvzxYC1buohxFXGhFyfruP4zzS8n67r9V
PncuDtaa+zLmHsF6x+8l68pr6LOyZF12LXh1yXWeKu3ZkmubtfVMStaY19Pn
YMbZm3GKmmdwL3AKHgjeF1wCd0qtT+i86JZad9G5tnNqTULncofUepXOEfEO
8Q9xrT6M0zVYi9k9tdais/UA/LsF6ym9wbsH6zKqnTXJXVPomFqP0Xm0H/4u
wRrKAPA+4LrSMPhcr+xz4QBw/bLjVS/6dA7WcfqD9wInysXB3YI1o0Hg/cBl
jQPeJVhz6ZpaK9K5r7peo9x1DdXCWufWXVVT1rncNnF96r/M86/64OrINzT+
ibn1KNXg/sn8HFWD+zvz81U966/MtQnFgwmZY4LW50l8d1Ti2vSfmXPGH/Fd
wXW2K7umsCLmL6qFrcv8TFUfFEcSL1LNsW7uWoa0vh3KPvtUd1ubea2q7vBb
5jqRanBrMq8f6fy/ZK4TqXbwa+Y60TDpRqm1u+PK1sWkiY3U3EsfKTqOKe4o
5ihmngk+Jcafs8Cnxj1+Nvi0xLz99WDdRzHh3Mi1xEs35o7b0kOkSynH0R4/
H/9ZiWup9XLXdMTHxC8firxCepnOx9rBeYfyctWyT0wdt3XN4sItitayGlTM
JQbFuKOYo3xHebjOOM1/Ar4D/IvmGHxX4jxX+bbOvgPiPEjfVm23fu4ak+q5
xdw1Ju2v4+N5qvU8KrdWqbU6Mvd8au8cmlu3V71j/9y6ovbpCbk1T+2Lg3Jr
yFrzfSNn074+JrfOqXxnQrC+pvU/NHLUo8rOM5oVnR8cW+0cQe8ebJFbZ9be
HJS7jqA6eE3uup5i2vDc+qRqOr1ya2iKS8Nya6eKgYfn1jy13w/JrcVpr/XL
rXWrLl/JXR9UPb1Wbv1B9d/auWOX6lDzo+agOsuCzLU/1XkLuWOansXV3GP7
smvBmzLrnKr/ro+8VDX9OrnrMlrD/89H9N7CvMw6j2pDX2Wu26oe9Fnm2qLq
+HpXQO8J6P2BLHe9UjW4HzLXAVXPWhb1CtWhvsxck1UdanFmfUa1vO8z60Kq
5S3PXE8Ut78n+H2UOcHntfIV8fY7gt8LkR7ePMac7pFzSkMtBefR0pZ6Buet
0mv3DM4TtUdDcE4tDXgMbcPc+qQ4wqm5dchdg/Nl6aYPB+e8qll1jZqz9NFn
g3Nk6ZpjgnNqaa7dYk4nDbJn5MbSMtvSnljtd2akh4fc79WofpHnfn9mROpz
/jKd46m5yaVan6l51iXgUan5wpXiEqn50cWJc8Y3gnmDah/Vud/VOSY1p7gi
ce2gae53flTX2DL3uzeqm+j6dG2qiTTO/S6Qahmtcr9HpLpJm9zvF6l2/1Hm
WuFOUZeTtrpj1Nmk4Z0VrEtIR9TcnpKbgynerMsdc94KnhPtvx0q1jbFTztU
rLuKV0pnaBw1/F1p04rzDz33o3PXmfRcdsudB+jskM6guq3m/7TcdSl9V7qu
aju/J86XFN92rzjWKU/Ss9svNxesX/H7JDojFOf0zpJineKc3p24K95Lr8iN
pwXHDcW8qcHv0igvnBLMsZVnnxCsz0hDvShYC5IOrfvVnIj7ax4U55+L8/lO
5nyiuXSsirX+fSrWpvTO1LGp+d1VsY80TPHC2cH6jPRyPaNPM+coul/p1ZqD
41PzwWvimE2jtq93ynRvuq8hqXmBcgrp5e2iZi4NeMuoAysXHBfnU/qrNE7t
cdUcpU9Jm6oX8y/p06obLIi1g0NS8xedfcrFpItJE5O2MyJ3vUO6iPQRaXfK
EZUrKn9UjWzz3O+2KX9SHqWzSbryo6l5wtDU3FZ5kHLq14J5kvInzbHOqVLM
c6WX16L/G6nj22GpeZ+0GuXUk4J5g2qkmietDenc7aPWLZ1bWqBi2uDU/FHn
suLMm8EagfJT6X3it8NSc3DlZXvTti47F1M9S1qhdELltVqbOrul76nOKw17
TOL1qHd4Do85jmKX6lovpY75eh9Pmp30Ouk2E4N5YW9s57LPONXhu5StY0hL
uTv4nT/loFqP4hsDUnNG8ZYDU3N58THlTdIUxDH6pub10jmlw9wV/L6gakrL
Yl0piXms9r7qaxfHeCut5s7g9whPSJ27qNazIbceq1pKnailSR8+LnX+dHXi
uoS0Op1ZA1Pzd3GqGSXrWhOqXMfYumztWlrT+OC8RbrKuOC8Re8VSPdUHvdq
4v2td8n+DwvSkqM=
         "]], Polygon3DBox[CompressedData["
1:eJwtmnXgFUX7xS94F/TOgt+9y0WlQQWkREGQkpAUMRAEEQu7X+PV1+7u7i5E
pCQMFAEDEwMxEEUQUQEBi1L4nc/vzB/z/c7ZmZ3dOzvzPOc5zzQdc+bQM6oX
CoVl+lPU/5FpoTBC5TmBmjUKhb7lQuGNSqEwtlQoTNe1TXUKhflVhcIi1W8M
hcLBan9T7bVUb5BoDN17kOpNdW8TlTZqH6/+36htkcok9R2Z6T7V/1G/i4VX
qH2FxntSeKLwCLUfpPbNwlUab7T+f8XYGm+9nj9b/T9U/0t0fT+NP0v3FFSv
pT5n6t65wsfqvlOEj9f/4So1dG8jlQ26P80LhZvU1kzXJ6jvobrnQOFNGuMQ
jTdH1w5S25u6VlD9Oz1vpZ53v9qLwsuF/xR+THgb4R+F/xB+VPhfjf+l8I/C
dwhvFV4s/KvwfcLV1P974VXCDwhvVPt7wl8IXy28Rfgr4eXCdwr/I1yl971F
77Kr3qm13q+VykPCn6mcrLbZGrOe+rZiztT/E93/re6/SdceUVmhbzdebbep
NNQYs4SfUv16lYt070/q/5P6P8H7ay5e07VGqdufU9/Gqt+g+pMqO+rZr6r9
AF17XbgkPFO4vfA9wrU1xh6q36v6ZJVU7a+rfaCuTRE+OK6vbfUtvk48z6NV
shqe7wNV763yhOqzVK7UvX/r/dbr/SZp7ExtR+j/BWqrrnu2ET5QeKbwoypX
qP9f6v+3+k/U9XOFvxb+Uvhu4Vmqj9G1d/S73te1cyqe74Wq3xW8to7VtXkl
r7H/qv6Nrn2l+j1q76/ntVK5Xc96UeWjkr8L32esyuXMZ+Z2+g1Qaatyp/BE
lTdLXnesv2dVmqveV+V51W9NPK89VR5LPL/19cyOwverPlUlaD5fqXiemd8Z
rCmVSarfpdJEffuoPKP6jSp7qj5I5SXV71PZS/X9VKap/oDKdhrv5Yrfk/fb
Wf/3Zf+rfrPKOI39p955gup3qFyivj9rPn7WfDwVvB53UzlMbZ+rDNG93VUe
Uf01lfPUf5H6f63+9/LdhH8Q/l74YeHLhH8T/k34eeGWKp11/4O6d7rKVWr/
NfP8MY9/q72PyqvCD6vsrWuDVWYk3hOXqv9qjbda441Vv/Pjflss/KDwZo11
cvC6Zj3/T+1L1P6d2h9ivah9hq6NUf1StbfUb2tR9lx9orJU7dWFx6m+TGWk
6m+p/9DU63GA8M+Z52qFyu+qv1jxe/J+BwuPF+6t8Uew/oVfEO4lfGjisRgT
+4kdxZZh07YRPo61rvo4XeuptuHqv4twK+FUuH5iW4ZN6y98pPAovk3ZtpAx
h7J+1Kee6vVr+NvwjZaU/E2xpdjU7dV2WOq5Yw5/LNlm7a+2wbQnXnODVB+o
Uki8Rg5S/UCVkxPvSXwDPoLnHZl6L7Gnvi/Z5rM32aPflWyD2IvsycUl20Bs
MTa5ge4/RvcPUf2PzN/+L5WBqj/L/Or3HiC8n/BY4a7BPuRv4Tr8ZtXXqxwh
PFntQ9R+PD5AeDfhIFxPeI3w9mWvvbUq+wo/rfaOah/IemBvCzcQbhfnl+/F
t2+m0pq1iv1Ue3tsAGtBuKHw7sJHCk/BfgqfkNgX4hMHCh8tvE44Y0+q/kdi
X4hPHKD2o4T7q+3HzLZ8ucpg1Z9Xe7dgn7pW+JmK9zlrFt+ND8f/nRK8llgP
vCtrivnszjdV37rCJ6h9mu4ZTl/8p/BU4WHCZ/C9hZ8T7hLsM4+I9hvfX6X7
l6n9wortGvaMvcUeW17yntwF/6E+89X2MfYorqey7l0pfIz6vqF7XlXfi/SM
JepbKNu2Lkm8t9njv2u8f4p+/uEqdyf2ITuzd1TWqu0D7KHqjcu2ZfPgEBrv
at1fU2NXEtsebNAfGu/foud3T5Wlqqcab9f4vm0S29DTWB88U/f/N9qH5ir7
qf4p603+t5TbX+I352j84zT+exr/o6J9Ez5qo3CiPu0YH3+t+uLE9qODyjr1
raXnd4z7q7bqvyT2hfjETbq/Rvx9jVR+UP/3EttWbOxPJdtU5qNZ2d/ifZV6
ql+s3/CG6nNU3lb/E9X/Q/X/RP3fEj5B+APh+cJzhY8Xfl/446K5ysnC80vm
LN9rrJMq9jv4mx+Ez67YjzDnn6n/f/CxJdvYA/T89Zl99QbsN/5DeDXfAh+i
/mfhs0v2Ee8LnyL8Sck++kPh04Q/K9knw13gMCuF/yqaS8IpV5XMAfBV+KzV
JXOID4RPFf60ZE7wkfDpwp+X7KMa6H3u1vu8q3d5h2+q9jPV/mXJPgRudYbw
wpI5VidsYea1u0qlYbz/s6J9KFwDzvGa8MVaM4cLTxeeLHxuMNeAc7wufKnw
DNVHswc0/mxdmyA8THi88MvCLwofIjxOeIbwK8JHMIbw28KvCR8pPEf4HeGZ
wkcJzxV+V3gH1avp/cp6t1eC9xp77m21v6f214WPFn5LeB57UH2HVrzez0v8
7vyGmWp/U+07qb4NNhZ/rz6nx/2BfTtR1y6E66vPqLhfLoDbCx+Gr8X/wr3x
ecLnJPa/+0d7g/05R3gwPiDan7OF98Pf8qy4HwdGe449PVV4gPD+0b6fJTwI
HyR8WmIfeojK43wr7anz1D6EGEDtZ+naRP2+4cIT9PtegXMKHyo8qWSbNED9
9xTeTf33gY9hi9Snuuov4JPV3kXXOkd/hH/qINxKuKdwiq1R/21UH69rOwpX
V59c+FXh7YU3qH1b4cnB/rxr9G/Y22HCewt3Eh4iXEv1P9W/qPqLujZN9VG6
9qredxb7Tf33gp+rrZ/61I78GNszQddeUn0ka7LkNTiF/arrU4VnCk8WHqH2
KSWv4anChwm/LPyG8Ckav7/wYN1znMY8WbgfHIK1nZivdBLeA+4MPxTuKLy7
cF/hk4T7Cg8SHiP8p3DninkePv584QOERwifLfyvnl8n2ustev4/wnn0B9jv
Feq/Vte2Fs3B22O71V7R/c2Fuwi3i/4bf9xY9VJm7jRH1xoJb5eZC8yO8WXI
7NvgRPTlnq16Xqo+9VWvoWs74GvVv6HwtsI7wX2Ee6neHnuoeqfEY/OMLbo/
CPcU3l24mdr3oj3yV3zbc7yP2lvwTqwV7LfwrtF/1RVuINycZwa/Q5VwE9YU
sZJwWbgpezR4z9cRbiZcDF5zTYRbMgfB77yj8C78pugf6wrvLJwE7/Eaqv+q
99uo93s6+F23i/wQ/96Ad8v8rrPU/ovqpYrjCDgxa501v77kNUtf7vlHeLvE
c8mcbi55DxSE67JmS95j7A32yG8lv8MqtVcqjoOIfzarvSy8LvKDTcKZ8Frh
zcIbhauE1whvKpoP1Iv+GH+KLcOmbYj+GVuJzfy75D3Lt+Ub/ytcSrz32IO/
Rv/D3maP/1KyRoBtwEb8XLJGwLN4JnM7M/jdeEfGekl4FXtf15ZFvr1SuKbw
0pI1CPZu7ejv8G98C77JDyVrDPjDpGL+DJ9erWelKh8m5kjoO4eqXJc4Bh+h
9d2rYt0GveY49e0j3C/GD2gXaBgLStZ88H9oDPMin3lMfbtjE/H9wVoJmskX
0T8SP1SL/hL/ie/Gh+Nrrg/mEnAKfNU1wb4en4+vujbYV+Oz8UXXCT8u3AOb
quctDfbd+HBi+Rti/I5GNDXasycq3oPsveXBz0JzmR394wNq70AMoPZv1P6g
cMfMWsoi4Taq36VrjdE1dO3him0ItuM79BXhrpm5/vfB2hga2btRP3hS7b2x
aWr/Se2PCnfLPNaS4NiCGKOL8M/CTwn3wcYLrwjWktCUPo58C+7BN2Dubw72
9fh8uMD/grkAnACt7vxo37HnLxHDF80F4ARwiQuC1xprjr3xbLDvhwPg+y4M
5oZwRLjIlcFcFk6L7b8smBvCEfE1lwf7Ep7Js84KjufQtOZH/obvwIdMVP3s
YF+Fz5qEFhPMteBccM1bgrkjHBIueis2Tut1eNm+Gx8OV4Qzwl1vU/uwsmNm
/Dx9jtb/ManjR/QnuBUcawraTnAsjH52VOoYFe4LB4bbXAGnyB2TE4ufqvt3
0vj7qmxJPN69FfsYfMuXwbE9MT6x4l/BtnfP3LYYG4wtw6aBXw72Zfg0tMvp
wfHuKbnjKbSxxup7i67toLYWcBbhm4XrRn92t+ptsdGqL9C1nYkNdW2n4DXd
VPhW4R2FWya2jdhIfM/U4LXNGm8G9xZernr1inXD/48xq6x5fhvjcWwnNhRb
PUV9Nqh/z4p1ODg98eK+FesPxKvE2/tUrFegb6wU3oINS6zp4Lvx4fjSaeoz
Wu09dG2fYH3jcOHu7Hm+rfAo4W7YHOFDEmuvaLCLStZc66v9pujvd02sS49K
7buZU2JzYvSmxCbBsSwxbS/h1cHaARpCb+IROAvPKzsWJ0ZGa4DTweVWBcfe
xOB9hNcE69XDUsfWaJRoNXAguM8fwVoPms8AfEcwF6V/Ma7n++BKmb/1V3Be
nqXnb4IrMV/C16lPFvwbKsLXC5eDv+E9qrfDh6v+RbD2gAbRRPjTYO0CDaOx
8CfBsTD+CN/3OpyN365rfbEl8EXha4S3D76nX9n6GT6E/MBOar9R7XWCn3k0
369srQVNcAfhG9SeB6/RTPha4argd7qf/ZF5bX4drBWjGRNro1sSL+6jMoqx
ani/zY72HE7F/XOjvdw1mOv2z80t4bz81tYVa9K8P7//tWi/G8T5mRntNxoN
+2lW9C9NgtfL69Feo+nwfeZEe75LtP/z4vppHewP34/roW209+/F9dQm2H+8
G9cPMQGx/AvCNRPH9OzVGdEfsWfRCsbF7wNH4XuNz8z94IB87zfh1Ox14XVV
5lut9Xt/L9oWvBz9GTYBf/dW9DfNhR8S3os5SqwV4//eJuYQbhGsv2Kf4Npt
UtuLN6K/xyfC5ftpvvdNzOmJdfrmjo34fe2j/yX2+DGYe+M/aV8s3Ja9nlvf
RueGC8OJ+X7L4Myqv5NZu0aDITYkRkSbraSOBYkJL2ZvpI4ViBmuYP5Sx3bE
eJezflLHgsSEF2ELU8eWxJiXCNdJrd+v0e9do9+7W+rYixgMLrQRDoB/zq1P
o1N3zvwbeHf0QGLDfdXeI3GM2C/zPfTlWodoP4gNV6p9a5X5azu1V4v3E2MS
2/0a1zMxHLZvXXDsRww4Wnh9cKxJzMle3RAca2FvsJ2/x+9DzIWtXBust3Qp
O5fQNvHenhDtA3sc2zIp+gNsDNr1UOFBiTVstMtFmWN7Yny01G8yx95Dov9b
KDwyscaNvfsis9aNxo09XJDZF+ATXsL3xv7dUmuXfeP6Q8OEH82Pz0eDRSv9
WviYxJop2uhXmbVTNFK07y+zqJUGa3vPZ16/xIxoA8Nzx6poBKyHEbl9OxoB
62d0bi2AmJP1NTK3doDmgP3/JHMsTkzOehyVW5tAs2C9HS78n8SaAlrl2Myx
KTEqWtRzwhuK1qRYf4fl1jLQOL6ocs6PnNKCov3RZ5m13a7R33wuPDSx5rus
yv66pfovK5off5B5P7YL5r8fRv9DDA43RKNEm4QjYpunRH+BjYavfhT9057B
tv2lzL4UG49vnRr5Dj4W3zM58g98EFxlerTncBa4yrToz+As71Y5B0sODL0K
XzAx+mN8ArmtF6N/IsdFbmpMbn5Ejgot+tvM2hDzDV/+OPKtDtGff5pZ+0ej
nl6xJsV63Sd17vK43FoWuTbyHSfm5h/kkOGCr0R7SE4VboVPwBdg88gNfadr
lyXOEaGvX5KZf5MjJ99xUm49Ae6BtnVEbu1iZMRoXldij1NreWh6Y3X/qWqv
FfcnWig5VOaKOWMtXBUc24Tc2gwxzt7slbJzFd0T5wc7l61Fko8l1qmVe66J
eYhNagt/UHSMQm6meeZcEPwXX9k997PxmawV1gz3n6fnb8F3lq1Vo3ET+zbO
HesSAxObNskdCxOjokXsIVyVWJNAW9grj1pCsLbQMbcWgcaAttEpd3yMfyPW
3D53LEXMuVDvskfZuTc0erSLLrn1BjQMtIGmufcXGsE89W9fdu7g86K1ks65
/SeaCdrK3rm1EzQW8oNtyz6rQIzMXmRPsrduD85/1y9bOydHTaxNzM3vfTw4
9q2TO1YmBmZvskfxxXBqbBs2rlNqm0ZsXMkdKxMjr4t88/fEPgbbiI0kp8oa
xlfjszuktpFr4vdfk9iHYqux2V1S21TWPnuAnDJrnlxX19xaDzkvYvtc+Jui
Y3xitXLuWJOYDW1hJ+FfitYYiBfr59Yi0CjQJurl1h7QKNCCGuTWLtCEiB12
yM3NiSHQQhrmng80EbgKnAXfh0ZErJvlXu/EvHD7urnnH47PfO+YOxZB40Br
aZRbW0FzQStHM38erSE4N9ott55HjhQtsEdue4b9ItYg5sAfbBXuE+M7ziI0
TBxrEHOgTf4bzI3hyPiDJLXWiebJ/g6ptUw0TfxHKY3asd7nBWL3YG0FjQV7
XyN1rETMhP+omTrWIeZBO90SHDsRQ6FlF1Lnb1h/nA04P7H2igaLdp6q/fjc
HBrujA1De0eDv1r1+qlzgXB4uDs5QbR4NPmrsHep54d4Fi1yYbD2Tw7gGuEG
qbV2NHe0/Nqp/SmaO1p+rdT5EOwPZxMaqRyb+3wIZxSwAehRnDngrAExIFpf
m9z8F82P80LsP3Lz06Ke2Da3FohGSPzZLLf2h4ZH/Nw8t3/Fv6P/Jrr/hcQ5
QLTODrm1TzRP4u8WudcbmiLcDQ4HN/s28tOeublcg8j34HD7C/8S+Wzv3PND
/AFf7ZWbf6Phks/DPnK2462i7SkxCOPND+Z6cD7mAs2S+HfX3Fol/ABtuX3u
+ByNGa1499z6IJox2mO73PE3GuQxuc/rcOZjTtHxdc2yz6ZsjXpj69xaJvED
2utuubVMNFj0gF1y6z9opuiRO+fWRtFM0T5b5tZe0UDRRlvl1m7RSFk/R+Ze
f+R0yB0vzsx/yCFjH9AwGe+ZYH3v3sy5N3J66IH3Z869kdPjrMGTmbVk7Ae5
46cy5zLJIZPbfDozPyfHiX50TWa9hpwHueelet6SonPQ6GE3ZNb68H/Y0r8y
n0/BpqKH3ZRZXyRHVi3mi8mlciZnatyf8MltU/++EyLf3E74GLhs2dopZyzg
x0dGvls99bfhTBXncfhG5Cqfyazd4h85C/F45rMXnIkgf7g1cy6VHCT61iOZ
fw85UXKrC/T7Pi06x4o+9nDmXCk5VnKfz2bOdZIDRU97KHPulRwmZz2eyGzP
OfOxKbO+sDDxmSP01vsy51bJkXI247HMZzU4o1EVz8OQ6+bMDfrrA5n9BzlU
5p5v0CL1N0KvfDCz9ot/mxztGfy/mvr8o/r18GPhpxPzM3wsvrUX/ChzPqhr
6j1IPvXWzPyFM1zkLm/JrP+Sw0S/vDmzvkwOk1zltZn1S3KW6H/XZd4r5FjJ
v96WWU+FX6BH35NZq8T/kdt+p8r9yXGjD96ZWW8kR05ujBzZeOEzg3OH5BDH
CZ8eHEsSU3IWjBgE/fT2LObSS9ZP78isb5JjR2+9K/P3JSePvntjZj2cnC7n
WdBXFiRew/BlOB9cb27ky9hXtP7dU5/P2bbs3AhnCCox/46WwhkqzuugqaI9
7VjDtpozfZztwWbXiOeZOIvAGcJt4vkTzkZwBqoYzxdw1gKby1kdNFK0UTTX
vOzzipwN4wxOOZ7f4awJZ1zQg6/OrB+TU2Q/oSf24IwF3ztzfuKE1DEv549K
8fdyZgRtAo2Cs2HECJwXge99n/iMHWeJHs2cC4EvkKtAo0GbQZMhnh6Ye22R
U0WrIGYiVkKzwL8fktv/k9NED9gvd/y+d4y/B+WO18n5on9flVkfJ6cKfxic
O15Ds8RfD8vt38mZkhsg5iLWIkYjl4CmhJaERsRcMCfYFjRW+MABueN74mf2
BnuEuSJninaIRoU2hUYGn9g/d/zfI+oDA3L/tj0i/xmSW19Ac4W/DM0dX5OT
JddCTEksiaaF7cEG7ZLaJvUue//OLdrGYU/qln32D82S/XB55tw5OfVe8XwY
a21z5CdH5eYPoyL/apH5bBAaO/zpisy5Z3Lw8I9Dc/Mh9Ab43mWZ8xWckSCe
ujRzfoMzEuRa0ODQ3tDoOL9H/LA0iWdqy9YbWa+cSSL3QkxJLEkMDBdCc8TX
4/PRVtHc0NrQCOFHR+fmQ5yRQNtC40P7QuOqXbZ+1S3xmUtyTWhwaG9olr9F
Po/2hsaFrcHmNE1tA8hFocmhxaHZsRfYE+gV5OyYf/wLZ3WxofDLg3LrQf1i
/Lsxs20nBkBrRTNFK0XDJJ49N8bTdVPbsyszx5fk/OGnB+fWv/pH/ntg7r2I
Rvx/QSD3hw==
         "]], Polygon3DBox[CompressedData["
1:eJwt13fczWUfB/ATbnLf6HYfx8zMKqKSBiVEEiorpIE0njRpl7Q00H7aPe1E
tmxCIiErJCMjqUiUyCqe9/f1O398Xq7v+3yvc/3O7/6NS/U+t3e6rVAqlVoi
OdKwdCo1V9bkpVJlpBY8qM4UpFIzjFuy80ukUr/mp1LD+QfqzbnqIqlUFz1d
ZZa+y/h1+k7X84WsVZeVOj7rp74inUqV8vmV7C62m5Uyd7LxJbyR3MA2yvHG
bfT18tkY6w5kN6u78hHWLW1eS9+3gzWWafr+o6cLK6GnO+vPbmQ/SHF2MevN
Dvi+UWy8+ne/46Dv+5t9ysaxXewA+0Odb52p5rQz/yzZy9JsOmuvPleuYevl
OOPm5nfz2QPqXo7lRHYTe4JVYp/JojjHmVSqovFRydV3D5tr3eH67mPXsIpx
PvhjrD77XL5Vl5Ya7FT1bFmlLpCTWGX1JFmsrm2NE41PkZmygp0g1fSVVo+V
+VHryze+VjZIIeu24N31naSeKkvVJ+urYbxPCgqScx7nvon+e9nVjrmC8fXs
UZ+VYxNkYRybuWWNTzCvmb6NrK5M0VeLT5Nl6lP01TQuqe88fctZJZmkL4f9
7LOTrdFaRrEG6jmyWk9aarK+6o7mFtPTmd3KrmOXs6KsE7uF9WQd2DF1u7h2
2Q7XwSf8Q/UWf48droOUdUvoe5wtZSP0FWL57AW2nn3KKpg3Ub6O4/A7yhvf
H+dVXyXr3sgf1/eLNT7m76s3mfuLNdJx7ckCVt3cAuMrpb25R9kl0sfcHqwd
+1fdNns938y6spLW6MEGxL1ljRF8hHq7NXZb4yZ1Z315+rrxO7P3RyeWy65g
d7A+7DKWwzqyfuxO1p2l2bXsQXYH68YK4h5gD7DN7Jh8Ynwhry53q3vqK2d8
nb5BPuvPerAyrBd7KP6+bHRc5+rDjrkYy8R9Kl/FNe+8lDEeEOfG3Iy5vflA
ffewq1h51pc9wvY4ByP5SPXPvm+Pc1DM320nq6/vIhmjrwzbz5qWSO7puLev
Ul/q+1Jh5vdlW+Me1zvSuBWvKdtZ4YLk7x/XQV22jRUpSK7PuE7rSFU2WZbE
89DvqGK8K55z+sbq22dugzhfbIp8E/eHvmrGZfUc8m8zn3eQmXGdqovy0XE9
mVuP12OzZKW5+XEd+axpXI+yWV1FTme9/a5pzs1nzkdl86rIVvWH+t7S873v
2+yztaxA70tsI/uJ/cg+0vc2W8e2sDWstL4X2Qa2jW1hH+h7k61lm9hydoK+
oWwN28Dmsef1PRzPAjabfcVeZo+x2WweW83+x55n37CVbBV7mz3HlrAVbDF7
hQ1m89hCtoC9xB5ls9gXbD57kT3CZrC5bAl7lT3JvmRfs2WslGMewlaz9Wwh
K8meYMvYatbMvOZsG2soF8YzIp69bKY6J55P7ALWgv2kPk1asbPZBeyHeMbG
u5aNtcbDvJ96pDVGWiNXfaO+HvEOlUr6jovnIZuhr0i8B9hGc9/nr6pXZY95
HXuHvcxWsLXsS/YCGxTvTzaHrWfvsv+ylex7toG9x15h37J18UxU17XudFY4
3knWHadvEL9FPSqeifqWstfZ02wBW8weVPc1t3m8Z2Rw7Df01WAT9f2j7/js
70iz19jW7LP4B1aGvc5+ZDuLJO/z6mwCO5J9bnS1xiXsEGstV7Of9JVj76p3
6PvL3E0sw95g29hv7IZ08myL51npeF/IEX21+GR9x/Tl+ewYqxP3EisU9xw7
xE5in6n/1Vec/cNqsyksJSXYYVaTTVIf1ZfLvmVvWfdZtpgtdyw7WUV9H7M9
7BDbxsqyd9ivbC/r5llwhfSM5y6/wTHn+a4++hoa95T8osn1/AZ/Rs9X5i4x
dyV7kw1ji9gyVlt9s7m9zesT11rR5N1YgX2kb3d23/QNe03vU2w+W8S2s/L6
3mM72T72J6vMRrH97DjHOZflsYFsYfZY9rIqbDT7mxWKZyOrxsayg6wI+4tV
ZWPYAVY4J3nPbIrnpePtmn2XtYs9k+xWnyotY68Zz0j5XV1fWrBnMsl+JfYo
jdPJO/x444bGXxjnSQV9QzLJez7e7Welk73c9f7tVJCco16xz5SJju8xPbf7
fILjG+O3NYm9UBwjqxz3v+8rpm5g/lx1rpTPvgfrs9lxDFKWDbZuqdgXyenp
ZN9W1PhU4znGxaWcvkbsS1kX3xXPE3aGep58Hz3xXmHF1aeZOy+uR6nIdjnm
E9kn6j8d8xHH3CLeRbI99jRytr5J+h5nd6on6xsX1596rRxm58rl+oZlkv1o
7EHPSSfvvmczybsw3n/nppP3XOxp1sk/xk2lk7nd43jliLqJdMxJnrFL5Md4
t8mZbGgm2VfHXvrsdLLvPc94kWwxripnxD2hXia/qGvHMbLJfscTrL96qt8x
3u94PpPseWOf2zSd7EnPN14sW42rSSNzn8sk7+p4PzdJJ/vjM43ny/q4VuSU
7DX+HHtIPdEas6zRWL1ANsR5l3r6ns4ke53Y35yZTvbMn5s7VH2/8Whzp5t7
qbqNz/eyZtLF3A7sIvZnHKt0ZrPNHRbPMPVYc2eY217dWt8fcY6y57k1u5Dt
VJ8l7dksc4fw+9SfmjvN3M7qi/UdyEueL/GcactWxD4mfoM0Z13UbfUdjHeb
XJWT7DWe4nfHb8pN9h1xLKtkD2uQfV/O1PcMu1c9Qt9UfRPYo+w2No6NZm3U
razxW1yP0sHcqfqe5HepZ+qbqK+T+jvZH38baavvcvVq+SuuC2nDppg7mA1Q
Tzd3grkt1UvlZ1ZLzok9n3q5/KquE9clezKT/F8q/v90RjrZvz+VSfbzsYdv
lE72roWN6xnPivtWypg73rqP8FvVY6w7yrpz2LPsQTaezWQd1WtkX1x7crG5
v+mr5PuGq//Qd7hI8v/489l3rEb2/vg/gHcfYw==
         "]], 
        Polygon3DBox[{{4366, 4525, 3011, 3120, 4963, 4365}, {4969, 4389, 4388,
          4968, 3166, 3167}}]}]}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{494, 1, 490, 227, 3176, 16, 3183, 31, 3191, 46, 3199, 61, 
       3214, 76, 3229, 91, 3244, 106, 3259, 121, 3267, 136, 3275, 151, 3283, 
       166, 3291, 181, 3306, 196, 3531, 341, 496, 211, 492, 451, 1750, 212, 
       1751, 213, 1752, 214, 1753, 215, 2067, 345, 216, 2070, 347, 217, 2072, 
       349, 218, 351, 1754, 219, 353, 1755, 220, 355, 1756, 221, 1757, 222, 
       1758, 223, 1759, 224, 2078, 357, 497, 225, 493, 459, 3333, 210, 3319, 
       195, 3304, 180, 3289, 165, 3281, 150, 3273, 135, 3265, 120, 3257, 105, 
       3242, 90, 3227, 75, 3212, 60, 3197, 45, 3189, 30, 3421, 243, 495, 15, 
       491, 366, 1592, 14, 1590, 13, 1588, 12, 1586, 11, 1912, 240, 10, 1910, 
       238, 9, 1908, 236, 8, 234, 1581, 7, 232, 1579, 6, 230, 1577, 5, 1576, 
       4, 1574, 3, 1572, 2, 2079, 358, 494}]}, 
     {GrayLevel[0], 
      Line3DBox[{1136, 498, 1137, 3620, 513, 1140, 3628, 528, 1143, 3636, 543,
        1146, 3644, 558, 4239, 1148, 573, 4240, 1150, 588, 4242, 1153, 603, 
       4243, 1155, 3696, 618, 1157, 3717, 633, 1160, 3725, 648, 1162, 3734, 
       663, 4250, 1164, 678, 4251, 1166, 693, 4253, 1169, 708, 1135, 2331, 
       709, 874, 2332, 710, 876, 2333, 711, 2334, 712, 2335, 713, 2336, 714, 
       2337, 715, 2338, 716, 2339, 717, 2340, 718, 2341, 719, 2591, 880, 720, 
       2593, 882, 721, 2594, 884, 1122, 722, 1119, 883, 3784, 707, 1133, 3770,
        692, 3756, 677, 3742, 662, 3733, 647, 4231, 1131, 632, 4255, 1172, 
       3716, 617, 1129, 3694, 602, 1127, 3680, 587, 3666, 572, 3652, 557, 
       4228, 1125, 542, 4226, 1123, 527, 3912, 763, 1121, 512, 1041, 762, 
       2198, 511, 760, 2197, 510, 758, 2196, 509, 2194, 508, 2192, 507, 2190, 
       506, 2188, 505, 2186, 504, 2184, 503, 2182, 502, 2180, 501, 2496, 754, 
       500, 2494, 752, 499, 2723, 1136}]}, 
     {GrayLevel[0], 
      Line3DBox[{1497, 1190, 1498, 4268, 1205, 1500, 4282, 1220, 1503, 4296, 
       1235, 1506, 4310, 1250, 4658, 1509, 1265, 4659, 1511, 1280, 4660, 1513,
        1295, 4661, 1515, 4367, 1310, 1517, 4393, 1325, 1519, 4408, 1340, 
       1522, 4422, 1355, 4668, 1525, 1370, 4670, 1528, 1385, 4672, 1531, 1400,
        1496, 2908, 1401, 2909, 1402, 2910, 1403, 2911, 1404, 2912, 1405, 
       2913, 1406, 2914, 1407, 2915, 1408, 2916, 1409, 2917, 1410, 2918, 1411,
        2919, 1412, 2920, 1413, 3151, 1471, 1537, 1414, 1535, 1470, 4476, 
       1399, 1494, 4462, 1384, 1492, 4448, 1369, 4649, 1490, 1354, 4646, 1488,
        1339, 4406, 1324, 4644, 1486, 4391, 1309, 1484, 4364, 1294, 4350, 
       1279, 4336, 1264, 4641, 1482, 1249, 4638, 1480, 1234, 4636, 1478, 1219,
        4604, 1444, 1476, 1204, 1475, 1443, 2751, 1203, 2749, 1202, 2747, 
       1201, 2745, 1200, 2743, 1199, 2741, 1198, 2739, 1197, 2737, 1196, 2735,
        1195, 2733, 1194, 2731, 1193, 2729, 1192, 3173, 1566, 1191, 3153, 
       1497}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
      Line3DBox[{1572, 1761, 4971, 1573, 1770, 1595, 5034, 1780, 1608, 5036, 
       1790, 1621, 5039, 1800, 1634, 5045, 1810, 1647, 5055, 1820, 1660, 1830,
        4999, 1673, 1840, 5009, 1686, 5067, 1850, 1699, 5069, 1860, 1712, 
       5072, 1870, 1725, 5077, 1880, 1738, 5084, 1890, 1751}], 
      Line3DBox[{1574, 1762, 4972, 1575, 1771, 4981, 1596, 1781, 1609, 5037, 
       1791, 1622, 5040, 1801, 1635, 5046, 1811, 1648, 5056, 1821, 1661, 1831,
        5000, 1674, 1841, 5010, 1687, 1851, 5019, 1700, 5070, 1861, 1713, 
       5073, 1871, 1726, 5078, 1881, 1739, 5085, 1891, 1752}], 
      Line3DBox[{1576, 1899, 1900, 4973, 2164, 1916, 1917, 4982, 2165, 1928, 
       1929, 4988, 2166, 5148, 1940, 1941, 2167, 5150, 1952, 1953, 2168, 5151,
        1964, 1965, 2169, 5152, 1976, 1977, 2170, 1988, 1989, 5001, 2171, 
       2000, 2001, 5011, 2172, 2012, 2013, 5020, 2173, 2024, 2025, 5025, 2174,
        5156, 2036, 2037, 2175, 5157, 2048, 2049, 2176, 5158, 2061, 2062, 
       1753}], Line3DBox[{1577, 1901, 2080, 1902, 4974, 1578, 1918, 2086, 
       1919, 4983, 1597, 1930, 2092, 5124, 1931, 1610, 1942, 5100, 2098, 1943,
        1623, 1954, 5104, 2104, 1955, 1636, 5047, 1966, 2110, 1967, 1649, 
       5057, 1978, 2116, 1979, 1662, 1990, 2122, 1991, 5002, 1675, 2002, 2128,
        2003, 5012, 1688, 2014, 2134, 5134, 2015, 1701, 2026, 2140, 5137, 
       2027, 1714, 2038, 5115, 2146, 2039, 1727, 5079, 2050, 2152, 2051, 1740,
        5086, 2063, 2158, 2064, 2067}], 
      Line3DBox[{1579, 1903, 2081, 1904, 4975, 1580, 1920, 2087, 5122, 1921, 
       1598, 1932, 2093, 5125, 1933, 1611, 1944, 5101, 2099, 1945, 1624, 1956,
        5105, 2105, 1957, 1637, 5048, 1968, 2111, 1969, 1650, 5058, 1980, 
       2117, 1981, 1663, 1992, 2123, 1993, 5003, 1676, 2004, 2129, 2005, 5013,
        1689, 2016, 2135, 5135, 2017, 1702, 2028, 2141, 5138, 2029, 1715, 
       2040, 5116, 2147, 2041, 1728, 2052, 5118, 2153, 2053, 1741, 5087, 2065,
        2159, 2066, 2070}], 
      Line3DBox[{1581, 1905, 2082, 5121, 1906, 1582, 1922, 2088, 5123, 1923, 
       1599, 1934, 2094, 5126, 1935, 1612, 1946, 5102, 2100, 1947, 1625, 1958,
        5106, 2106, 1959, 1638, 1970, 5107, 2112, 1971, 1651, 1982, 2118, 
       1983, 1664, 1994, 2124, 1995, 1677, 2006, 2130, 5133, 2007, 1690, 2018,
        2136, 5136, 2019, 1703, 2030, 2142, 5139, 2031, 1716, 2042, 5117, 
       2148, 2043, 1729, 2054, 5119, 2154, 2055, 1742, 2068, 5120, 2160, 2069,
        2072}], 
      Line3DBox[{8, 362, 3546, 23, 370, 3553, 38, 377, 3560, 53, 3205, 384, 
       68, 3220, 391, 83, 3235, 398, 98, 3250, 405, 113, 412, 3567, 128, 419, 
       3574, 143, 426, 3581, 158, 433, 3588, 173, 3297, 440, 188, 3312, 447, 
       203, 3326, 455, 218}], 
      Line3DBox[{1586, 1913, 1766, 5146, 1587, 1927, 1775, 5147, 1603, 1939, 
       1785, 5149, 1616, 1951, 5103, 1795, 1629, 5042, 1963, 1805, 1642, 5051,
        1975, 1815, 1655, 5061, 1987, 1825, 1668, 1999, 1835, 5153, 1681, 
       2011, 1845, 5154, 1694, 2023, 1855, 5155, 1707, 2035, 5114, 1865, 1720,
        5074, 2047, 1875, 1733, 5081, 2059, 1885, 1746, 5090, 2075, 1895, 
       1757}], Line3DBox[{1588, 1767, 4978, 1589, 1776, 4985, 1604, 1786, 
       4989, 1617, 1796, 4992, 1630, 5043, 1806, 1643, 5052, 1816, 1656, 5062,
        1826, 1669, 1836, 5006, 1682, 1846, 5016, 1695, 1856, 5022, 1708, 
       1866, 5026, 1721, 5075, 1876, 1734, 5082, 1886, 1747, 5091, 1896, 
       1758}], Line3DBox[{1590, 1768, 4979, 1591, 1777, 4986, 1605, 1787, 
       4990, 1618, 1797, 4993, 1631, 1807, 4995, 1644, 5053, 1817, 1657, 5063,
        1827, 1670, 1837, 5007, 1683, 1847, 5017, 1696, 1857, 5023, 1709, 
       1867, 5027, 1722, 1877, 5029, 1735, 5083, 1887, 1748, 5092, 1897, 
       1759}], Line3DBox[{1592, 1914, 1915, 4980, 1593, 1778, 4987, 1606, 
       1788, 4991, 1619, 1798, 4994, 1632, 1808, 4996, 1645, 1818, 4997, 1658,
        5064, 1828, 1671, 1838, 5008, 1684, 1848, 5018, 1697, 1858, 5024, 
       1710, 1868, 5028, 1723, 1878, 5030, 1736, 1888, 5031, 1749, 5093, 2076,
        2077, 2078}], 
      Line3DBox[{1750, 1889, 2060, 1737, 1879, 5076, 1724, 1869, 5071, 1711, 
       1859, 5068, 1698, 1849, 5066, 1685, 1839, 5065, 1672, 4998, 1829, 1659,
        1819, 5054, 1646, 1809, 5044, 1633, 1799, 5038, 1620, 1789, 5035, 
       1607, 1779, 5033, 1594, 1769, 5032, 1571, 1760, 1898, 2079}], 
      Line3DBox[{1754, 1892, 2161, 5145, 2071, 1743, 1882, 2155, 5143, 2056, 
       1730, 1872, 2149, 5140, 2044, 1717, 1862, 5111, 2143, 2032, 1704, 1852,
        5109, 2137, 2020, 1691, 1842, 5108, 2131, 2008, 1678, 1832, 2125, 
       1996, 1665, 1822, 2119, 1984, 1652, 1812, 2113, 5132, 1972, 1639, 1802,
        2107, 5130, 1960, 1626, 1792, 2101, 5127, 1948, 1613, 1782, 5097, 
       2095, 1936, 1600, 1772, 5095, 2089, 1924, 1583, 1763, 5094, 2083, 1907,
        1908}], 
      Line3DBox[{1755, 1893, 2162, 2073, 5088, 1744, 1883, 2156, 5144, 2057, 
       1731, 1873, 2150, 5141, 2045, 1718, 1863, 5112, 2144, 2033, 1705, 1853,
        5110, 2138, 2021, 1692, 5014, 1843, 2132, 2009, 1679, 5004, 1833, 
       2126, 1997, 1666, 1823, 2120, 1985, 5059, 1653, 1813, 2114, 1973, 5049,
        1640, 1803, 2108, 5131, 1961, 1627, 1793, 2102, 5128, 1949, 1614, 
       1783, 5098, 2096, 1937, 1601, 1773, 5096, 2090, 1925, 1584, 4976, 1764,
        2084, 1909, 1910}], 
      Line3DBox[{1756, 1894, 2163, 2074, 5089, 1745, 1884, 2157, 2058, 5080, 
       1732, 1874, 2151, 5142, 2046, 1719, 1864, 5113, 2145, 2034, 1706, 5021,
        1854, 2139, 2022, 1693, 5015, 1844, 2133, 2010, 1680, 5005, 1834, 
       2127, 1998, 1667, 1824, 2121, 1986, 5060, 1654, 1814, 2115, 1974, 5050,
        1641, 1804, 2109, 1962, 5041, 1628, 1794, 2103, 5129, 1950, 1615, 
       1784, 5099, 2097, 1938, 1602, 4984, 1774, 2091, 1926, 1585, 4977, 1765,
        2085, 1911, 1912}], 
      Line3DBox[{2180, 755, 5276, 2181, 768, 5280, 2202, 777, 5283, 2213, 786,
        5285, 2224, 5287, 795, 2235, 5290, 804, 2246, 5296, 813, 2257, 5300, 
       821, 5301, 2268, 830, 5307, 2279, 839, 5310, 2290, 848, 5312, 2301, 
       5314, 857, 2312, 5317, 866, 2323, 5321, 875, 2334}], 
      Line3DBox[{2182, 2344, 5213, 2183, 2352, 5218, 2203, 2360, 5224, 2214, 
       2368, 5230, 2225, 2376, 5236, 2236, 5173, 2384, 2247, 5178, 2392, 2258,
        5183, 2400, 5242, 2269, 2408, 5248, 2280, 2416, 5254, 2291, 2424, 
       5260, 2302, 2432, 5266, 2313, 5203, 2440, 2324, 5208, 2449, 2335}], 
      Line3DBox[{2184, 2345, 5214, 2185, 2353, 5219, 2204, 2361, 5225, 2215, 
       2369, 5231, 2226, 2377, 5237, 2237, 2385, 5239, 2248, 5179, 2393, 2259,
        5184, 2401, 5243, 2270, 2409, 5249, 2281, 2417, 5255, 2292, 2425, 
       5261, 2303, 2433, 5267, 2314, 2441, 5269, 2325, 5209, 2450, 2336}], 
      Line3DBox[{2186, 2346, 5215, 2187, 2354, 5220, 2205, 2362, 5226, 2216, 
       2370, 5232, 2227, 2378, 5238, 2238, 2386, 5240, 2249, 2394, 5241, 2260,
        5185, 2402, 5244, 2271, 2410, 5250, 2282, 2418, 5256, 2293, 2426, 
       5262, 2304, 2434, 5268, 2315, 2442, 5270, 2326, 2451, 5271, 2337}], 
      Line3DBox[{505, 3624, 520, 3632, 535, 3640, 550, 3648, 565, 3659, 580, 
       3673, 595, 3687, 610, 3705, 3706, 625, 3721, 640, 3729, 655, 3738, 670,
        3749, 685, 3763, 700, 3777, 715}], 
      Line3DBox[{2188, 2347, 2189, 5159, 2355, 2206, 5160, 2363, 2217, 5162, 
       2371, 2228, 5168, 2379, 2239, 5174, 2387, 2250, 5180, 2395, 2261, 5186,
        2403, 5245, 2272, 5189, 2411, 2283, 5190, 2419, 2294, 5192, 2427, 
       2305, 5198, 2435, 2316, 5204, 2443, 2327, 5210, 2452, 2338}], 
      Line3DBox[{2190, 2348, 5216, 2191, 2356, 5221, 2207, 5161, 2364, 2218, 
       5163, 2372, 2229, 5169, 2380, 2240, 5175, 2388, 2251, 5181, 2396, 2262,
        5187, 2404, 5246, 2273, 2412, 5251, 2284, 5191, 2420, 2295, 5193, 
       2428, 2306, 5199, 2436, 2317, 5205, 2444, 2328, 5211, 2453, 2339}], 
      Line3DBox[{2192, 2349, 5217, 2193, 2357, 5222, 2208, 2365, 5227, 2219, 
       5164, 2373, 2230, 5170, 2381, 2241, 5176, 2389, 2252, 5182, 2397, 2263,
        5188, 2405, 5247, 2274, 2413, 5252, 2285, 2421, 5257, 2296, 5194, 
       2429, 2307, 5200, 2437, 2318, 5206, 2445, 2329, 5212, 2454, 2340}], 
      Line3DBox[{2194, 756, 5277, 2195, 769, 5281, 2209, 778, 5284, 2220, 787,
        5286, 2231, 5288, 796, 2242, 5291, 805, 2253, 5297, 814, 2264, 5302, 
       822, 5303, 2275, 831, 5308, 2286, 840, 5311, 2297, 849, 5313, 2308, 
       5315, 858, 2319, 5318, 867, 2330, 5322, 877, 2341}], 
      Line3DBox[{2196, 2497, 2598, 2498, 5334, 2666, 2504, 2603, 2505, 5336, 
       2668, 2511, 2608, 2512, 5337, 2670, 2518, 2613, 5233, 2519, 2672, 2525,
        5328, 2618, 2526, 2674, 5292, 2532, 2623, 2533, 2676, 5298, 2539, 
       2628, 2540, 2678, 5304, 2545, 2633, 2546, 5343, 2681, 2552, 2639, 2553,
        5345, 2683, 2559, 2644, 2560, 5346, 2685, 2566, 2649, 5263, 2567, 
       2687, 2573, 5333, 2654, 2574, 2689, 5319, 2580, 2659, 2581, 2691, 5323,
        2587, 2664, 2588, 2591}], 
      Line3DBox[{2197, 2499, 2599, 2500, 2695, 5335, 2667, 2696, 2506, 2604, 
       2507, 5358, 2697, 2669, 2698, 2513, 2609, 5228, 2514, 2699, 2671, 2700,
        2520, 2614, 5234, 2521, 2701, 2673, 2702, 2527, 5359, 2619, 2528, 
       2703, 2675, 2704, 5293, 2534, 2624, 2535, 2705, 2677, 5360, 2706, 2541,
        2629, 2542, 2707, 2679, 5361, 2708, 2547, 2634, 2548, 2709, 5344, 
       2682, 2712, 2554, 2640, 2555, 5363, 2713, 2684, 2714, 2561, 2645, 5258,
        2562, 2715, 2686, 2716, 2568, 2650, 5264, 2569, 2717, 2688, 2718, 
       2575, 5364, 2655, 2576, 2719, 2690, 2720, 2582, 2660, 2583, 2721, 2692,
        5365, 2722, 2589, 2665, 2590, 2593}], 
      Line3DBox[{2198, 2455, 2501, 2456, 5278, 2502, 2458, 2508, 5223, 2459, 
       2509, 2461, 2515, 5229, 2462, 2516, 2464, 2522, 5235, 2465, 2523, 2467,
        5289, 2529, 2468, 2530, 2470, 5294, 2536, 2471, 2537, 5272, 2473, 
       2543, 2694, 2693, 2680, 5362, 2710, 2711, 2635, 2549, 5305, 2550, 2476,
        2556, 5253, 2477, 2557, 2479, 2563, 5259, 2480, 2564, 2482, 2570, 
       5265, 2483, 2571, 2485, 5316, 2577, 2486, 2578, 2488, 5320, 2584, 2489,
        2585, 5274, 2491, 2592, 2492, 2594}], 
      Line3DBox[{2331, 2446, 2726, 2661, 5207, 2490, 2320, 2438, 2656, 5201, 
       2487, 2309, 2430, 2651, 5195, 2484, 2298, 2422, 5331, 2646, 2481, 2287,
        2414, 5330, 2641, 2478, 2276, 2406, 5329, 2636, 2475, 2265, 5273, 
       2398, 2630, 2474, 5295, 2254, 2390, 2625, 5177, 2472, 2243, 2382, 2620,
        5171, 2469, 2232, 2374, 2615, 5165, 2466, 2221, 2366, 5326, 2610, 
       2463, 2210, 2358, 5325, 2605, 2460, 2199, 2350, 5324, 2600, 2457, 2177,
        2342, 2595, 2725, 2724, 2723}], 
      Line3DBox[{2332, 2447, 2662, 1116, 5348, 2321, 1033, 2657, 5202, 1110, 
       2310, 1031, 2652, 5196, 1104, 2299, 1029, 5357, 2647, 1098, 2288, 1027,
        5356, 2642, 1092, 2277, 5355, 1025, 2637, 1086, 2266, 5354, 1023, 
       2631, 1079, 5341, 2255, 1021, 2626, 1073, 5339, 2244, 1019, 2621, 5172,
        1067, 2233, 1017, 2616, 5166, 1061, 2222, 1015, 5353, 2611, 1055, 
       2211, 1013, 5352, 2606, 1049, 2200, 5351, 1011, 2601, 1043, 2178, 5350,
        1009, 2596, 2493, 2494}], 
      Line3DBox[{2333, 2448, 2663, 2586, 5349, 2322, 2439, 2658, 2579, 5347, 
       2311, 2431, 2653, 5197, 2572, 2300, 2423, 5332, 2648, 2565, 2289, 5309,
        2415, 2643, 2558, 2278, 5306, 2407, 2638, 2551, 2267, 5299, 2399, 
       2632, 2544, 5342, 2256, 2391, 2627, 2538, 5340, 2245, 2383, 2622, 2531,
        5338, 2234, 2375, 2617, 5167, 2524, 2223, 2367, 5327, 2612, 2517, 
       2212, 5282, 2359, 2607, 2510, 2201, 5279, 2351, 2602, 2503, 2179, 5275,
        2343, 2597, 2495, 2496}], 
      Line3DBox[{2729, 2923, 5459, 2730, 2936, 5470, 2754, 2949, 5481, 2767, 
       5374, 2962, 2780, 5380, 2975, 2793, 5388, 2988, 2806, 5399, 3001, 2819,
        5409, 3013, 5510, 2832, 3025, 5521, 2845, 3038, 5532, 2858, 5427, 
       3051, 2871, 5433, 3064, 2884, 5441, 3077, 2897, 5449, 3090, 2910}], 
      Line3DBox[{2731, 2924, 5460, 2732, 2937, 5471, 2755, 2950, 5482, 2768, 
       2963, 5491, 2781, 5381, 2976, 2794, 5389, 2989, 2807, 5400, 3002, 2820,
        5410, 3014, 5511, 2833, 3026, 5522, 2846, 3039, 5533, 2859, 3052, 
       5542, 2872, 5434, 3065, 2885, 5442, 3078, 2898, 5450, 3091, 2911}], 
      Line3DBox[{2733, 2925, 5461, 2734, 2938, 5472, 2756, 2951, 5483, 2769, 
       2964, 5492, 2782, 2977, 5499, 2795, 5390, 2990, 2808, 5401, 3003, 2821,
        5411, 3015, 5512, 2834, 3027, 5523, 2847, 3040, 5534, 2860, 3053, 
       5543, 2873, 3066, 5550, 2886, 5443, 3079, 2899, 5451, 3092, 2912}], 
      Line3DBox[{2735, 2926, 5462, 2736, 2939, 5473, 2757, 2952, 5484, 2770, 
       2965, 5493, 2783, 2978, 5500, 2796, 2991, 5505, 2809, 5402, 3004, 2822,
        5412, 3016, 5513, 2835, 3028, 5524, 2848, 3041, 5535, 2861, 3054, 
       5544, 2874, 3067, 5551, 2887, 3080, 5556, 2900, 5452, 3093, 2913}], 
      Line3DBox[{2737, 2927, 5463, 2738, 2940, 5474, 2758, 2953, 5485, 2771, 
       2966, 5494, 2784, 2979, 5501, 2797, 2992, 5506, 2810, 3005, 5508, 2823,
        5413, 3017, 5514, 2836, 3029, 5525, 2849, 3042, 5536, 2862, 3055, 
       5545, 2875, 3068, 5552, 2888, 3081, 5557, 2901, 3094, 5559, 2914}], 
      Line3DBox[{1197, 4274, 1212, 4288, 1227, 4302, 1242, 4316, 1257, 4329, 
       1272, 4343, 1287, 4357, 1302, 4378, 4379, 1317, 4399, 1332, 4414, 1347,
        4428, 1362, 4441, 1377, 4455, 1392, 4469, 1407}], 
      Line3DBox[{2739, 2928, 2740, 5367, 2941, 2759, 5370, 2954, 2772, 5375, 
       2967, 2785, 5382, 2980, 2798, 5391, 2993, 2811, 5403, 3006, 2824, 5414,
        3018, 5515, 2837, 5420, 3030, 2850, 5423, 3043, 2863, 5428, 3056, 
       2876, 5435, 3069, 2889, 5444, 3082, 2902, 5453, 3095, 2915}], 
      Line3DBox[{2741, 2929, 5464, 2742, 2942, 5475, 2760, 5371, 2955, 2773, 
       5376, 2968, 2786, 5383, 2981, 2799, 5392, 2994, 2812, 5404, 3007, 2825,
        5415, 3019, 5516, 2838, 3031, 5526, 2851, 5424, 3044, 2864, 5429, 
       3057, 2877, 5436, 3070, 2890, 5445, 3083, 2903, 5454, 3096, 2916}], 
      Line3DBox[{2743, 2930, 5465, 2744, 2943, 5476, 2761, 2956, 5486, 2774, 
       5377, 2969, 2787, 5384, 2982, 2800, 5393, 2995, 2813, 5405, 3008, 2826,
        5416, 3020, 5517, 2839, 3032, 5527, 2852, 3045, 5537, 2865, 5430, 
       3058, 2878, 5437, 3071, 2891, 5446, 3084, 2904, 5455, 3097, 2917}], 
      Line3DBox[{2745, 2931, 5466, 2746, 2944, 5477, 2762, 2957, 5487, 2775, 
       2970, 5495, 2788, 5385, 2983, 2801, 5394, 2996, 2814, 5406, 3009, 2827,
        5417, 3021, 5518, 2840, 3033, 5528, 2853, 3046, 5538, 2866, 3059, 
       5546, 2879, 5438, 3072, 2892, 5447, 3085, 2905, 5456, 3098, 2918}], 
      Line3DBox[{2747, 2932, 5467, 2748, 2945, 5478, 2763, 2958, 5488, 2776, 
       2971, 5496, 2789, 2984, 5502, 2802, 5395, 2997, 2815, 5407, 3010, 2828,
        5418, 3022, 5519, 2841, 3034, 5529, 2854, 3047, 5539, 2867, 3060, 
       5547, 2880, 3073, 5553, 2893, 5448, 3086, 2906, 5457, 3099, 2919}], 
      Line3DBox[{2749, 2933, 5468, 2750, 2946, 5479, 2764, 2959, 5489, 2777, 
       2972, 5497, 2790, 2985, 5503, 2803, 5396, 2998, 2816, 5567, 3161, 3162,
        2829, 5568, 3166, 3167, 5569, 2842, 3035, 5530, 2855, 3048, 5540, 
       2868, 3061, 5548, 2881, 3074, 5554, 2894, 3087, 2907, 5458, 3100, 
       2920}], Line3DBox[{2751, 3101, 3102, 5563, 3138, 3104, 5480, 3105, 
       3139, 3107, 5490, 3108, 3140, 3110, 5498, 3111, 3141, 3113, 5504, 3114,
        3142, 3116, 5507, 3117, 3143, 5560, 3119, 3163, 3165, 3164, 3152, 
       5570, 3169, 3170, 3168, 3144, 5565, 3145, 3122, 5531, 3123, 3146, 3125,
        5541, 3126, 3147, 3128, 5549, 3129, 3148, 3131, 5555, 3132, 3149, 
       3134, 5558, 3135, 3150, 5562, 3136, 3137, 3151}], 
      Line3DBox[{2908, 3088, 3156, 3155, 3172, 5571, 3171, 2895, 3075, 5439, 
       3133, 2882, 3062, 5431, 3130, 2869, 3049, 5425, 3127, 2856, 3036, 5421,
        3124, 2843, 3023, 5419, 3121, 2830, 5561, 3011, 3120, 5564, 2817, 
       2999, 5397, 3118, 2804, 2986, 5386, 3115, 2791, 2973, 5378, 3112, 2778,
        2960, 5372, 3109, 2765, 2947, 5368, 3106, 2752, 2934, 5366, 3103, 
       2727, 2921, 3158, 3160, 3159, 3153}], 
      Line3DBox[{2909, 3089, 3154, 5572, 2896, 3076, 5440, 3174, 2883, 3063, 
       5432, 2870, 3050, 5426, 2857, 3037, 5422, 2844, 5520, 3024, 2831, 5509,
        3012, 5408, 2818, 3000, 5398, 2805, 2987, 5387, 2792, 2974, 5379, 
       2779, 2961, 5373, 2766, 2948, 5369, 2753, 5469, 2935, 2728, 5566, 2922,
        3157, 3173}]}, {
      Line3DBox[{3176, 3415, 1760, 3175, 4971, 3334, 3177, 4972, 3335, 3178, 
       4752, 4973, 3592, 3336, 3543, 4753, 4974, 3337, 3544, 4754, 4975, 3338,
        3545, 5121, 3416, 3339, 3546, 3417, 4699, 5094, 3547, 3418, 4976, 
       3340, 3548, 3419, 4977, 3341, 3549, 3420, 3593, 5146, 3342, 3179, 4978,
        3343, 3180, 4979, 3344, 3181, 4755, 4980, 3345, 3421}], 
      Line3DBox[{3183, 4700, 5032, 3182, 1770, 3184, 4981, 3346, 3185, 4756, 
       4982, 3594, 3347, 3550, 4757, 4983, 3348, 3551, 5122, 3422, 3349, 3552,
        5123, 3423, 3350, 3553, 3424, 4701, 5095, 3554, 3425, 4702, 5096, 
       3555, 3426, 4984, 3351, 3556, 3427, 3595, 5147, 3352, 3186, 4985, 3353,
        3187, 4986, 3354, 3188, 4987, 3355, 3189}], 
      Line3DBox[{3191, 4703, 5033, 3190, 4704, 5034, 3192, 1781, 3193, 4758, 
       4988, 3596, 3356, 3557, 5124, 3428, 3357, 3558, 5125, 3429, 3358, 3559,
        5126, 3430, 3359, 3560, 3431, 4705, 5097, 3561, 3432, 4706, 5098, 
       3562, 3433, 4707, 5099, 3563, 3434, 3598, 5149, 3360, 3194, 4989, 3361,
        3195, 4990, 3362, 3196, 4991, 3363, 3197}], 
      Line3DBox[{3199, 4708, 5035, 3198, 4709, 5036, 3200, 4710, 5037, 3201, 
       4759, 5148, 3597, 3435, 3202, 5100, 3436, 3437, 3203, 5101, 3438, 3439,
        3204, 5102, 3440, 3441, 3205, 3442, 3443, 5127, 3206, 3444, 3445, 
       5128, 3207, 3446, 3447, 5129, 3208, 3448, 3599, 3449, 5103, 3209, 4992,
        3364, 3210, 4993, 3365, 3211, 4994, 3366, 3212}], 
      Line3DBox[{3214, 4711, 5038, 3213, 4712, 5039, 3215, 4713, 5040, 3216, 
       4760, 5150, 3600, 3450, 3217, 5104, 3451, 3452, 3218, 5105, 3453, 3454,
        3219, 5106, 3455, 3456, 3220, 3457, 3458, 5130, 3221, 3459, 3460, 
       5131, 3222, 3461, 5041, 4761, 3223, 3462, 3601, 5042, 4762, 3224, 4714,
        5043, 3225, 4995, 3367, 3226, 4996, 3368, 3227}], 
      Line3DBox[{3229, 4715, 5044, 3228, 4716, 5045, 3230, 4717, 5046, 3231, 
       4763, 5151, 3602, 3463, 3232, 4764, 5047, 3464, 3233, 4765, 5048, 3465,
        3234, 5107, 3466, 3467, 3235, 3468, 3469, 5132, 3236, 3470, 5049, 
       4766, 3237, 3471, 5050, 4767, 3238, 3472, 3603, 5051, 4768, 3239, 4718,
        5052, 3240, 4719, 5053, 3241, 4997, 3369, 3242}], 
      Line3DBox[{106, 1659, 107, 1660, 108, 1661, 109, 2170, 472, 110, 1662, 
       111, 1663, 112, 1664, 113, 1665, 114, 1666, 115, 1667, 116, 473, 1668, 
       117, 1669, 118, 1670, 119, 1671, 120}], 
      Line3DBox[{3244, 4720, 5054, 3243, 4721, 5055, 3245, 4722, 5056, 3246, 
       4769, 5152, 3604, 3473, 3247, 4770, 5057, 3474, 3248, 4771, 5058, 3475,
        3249, 1982, 3476, 3250, 3477, 1984, 3251, 3478, 5059, 4772, 3252, 
       3479, 5060, 4773, 3253, 3480, 3605, 5061, 4774, 3254, 4723, 5062, 3255,
        4724, 5063, 3256, 4725, 5064, 3257}], 
      Line3DBox[{3259, 4998, 3370, 3258, 4999, 3371, 3260, 5000, 3372, 3261, 
       4775, 5001, 3606, 3373, 3564, 4776, 5002, 3374, 3565, 4777, 5003, 3375,
        3566, 1995, 3376, 3567, 3481, 1832, 3568, 3482, 5004, 3377, 3569, 
       3483, 5005, 3378, 3570, 3484, 3607, 5153, 3379, 3262, 5006, 3380, 3263,
        5007, 3381, 3264, 5008, 3382, 3265}], 
      Line3DBox[{3267, 4726, 5065, 3266, 5009, 3383, 3268, 5010, 3384, 3269, 
       4778, 5011, 3608, 3385, 3571, 4779, 5012, 3386, 3572, 4780, 5013, 3387,
        3573, 5133, 3485, 3388, 3574, 3486, 4727, 5108, 3575, 3487, 5014, 
       3389, 3576, 3488, 5015, 3390, 3577, 3489, 3609, 5154, 3391, 3270, 5016,
        3392, 3271, 5017, 3393, 3272, 5018, 3394, 3273}], 
      Line3DBox[{3275, 4728, 5066, 3274, 4729, 5067, 3276, 5019, 3395, 3277, 
       4781, 5020, 3610, 3396, 3578, 5134, 3490, 3397, 3579, 5135, 3491, 3398,
        3580, 5136, 3492, 3399, 3581, 3493, 4730, 5109, 3582, 3494, 4731, 
       5110, 3583, 3495, 5021, 3400, 3584, 3496, 3611, 5155, 3401, 3278, 5022,
        3402, 3279, 5023, 3403, 3280, 5024, 3404, 3281}], 
      Line3DBox[{3283, 4732, 5068, 3282, 4733, 5069, 3284, 4734, 5070, 3285, 
       4782, 5025, 3612, 3405, 3585, 5137, 3497, 3406, 3586, 5138, 3498, 3407,
        3587, 5139, 3499, 3408, 3588, 3500, 4735, 5111, 3589, 3501, 4736, 
       5112, 3590, 3502, 4737, 5113, 3591, 3503, 3614, 4738, 5114, 3286, 5026,
        3409, 3287, 5027, 3410, 3288, 5028, 3411, 3289}], 
      Line3DBox[{3291, 4739, 5071, 3290, 4740, 5072, 3292, 4741, 5073, 3293, 
       4783, 5156, 3613, 3504, 3294, 5115, 3505, 3506, 3295, 5116, 3507, 3508,
        3296, 5117, 3509, 3510, 3297, 3511, 3512, 5140, 3298, 3513, 3514, 
       5141, 3299, 3515, 3516, 5142, 3300, 3517, 3615, 5074, 4784, 3301, 4742,
        5075, 3302, 5029, 3412, 3303, 5030, 3413, 3304}], 
      Line3DBox[{3306, 4743, 5076, 3305, 4744, 5077, 3307, 4745, 5078, 3308, 
       4785, 5157, 3616, 3518, 3309, 4786, 5079, 3519, 3310, 5118, 3520, 3521,
        3311, 5119, 3522, 3523, 3312, 3524, 3525, 5143, 3313, 3526, 3527, 
       5144, 3314, 3528, 5080, 4787, 3315, 3529, 3617, 5081, 4788, 3316, 4746,
        5082, 3317, 4747, 5083, 3318, 5031, 3414, 3319}], 
      Line3DBox[{3333, 3542, 5093, 4795, 3332, 5092, 4751, 3331, 5091, 4750, 
       3330, 4794, 5090, 3619, 3541, 3329, 4793, 5089, 3540, 3328, 4792, 5088,
        3539, 3327, 5145, 3538, 3537, 3326, 3536, 3535, 5120, 3325, 3534, 
       5087, 4791, 3324, 3533, 5086, 4790, 3323, 3532, 3618, 5158, 4789, 3322,
        5085, 4749, 3321, 5084, 4748, 3320, 2060, 3530, 3531}], 
      Line3DBox[{3620, 4233, 4234, 3907, 2342, 4038, 4166, 4167, 4079, 4140, 
       5350, 3785, 4039, 3908, 4080, 5275, 3786, 4040, 3909, 5276, 3787, 3621,
        5213, 3788, 3622, 5214, 3789, 3623, 5215, 3790, 3624, 2347, 3625, 
       5216, 3791, 3626, 5217, 3792, 3627, 3910, 5277, 3793, 4041, 4850, 5334,
        4081, 3794, 4042, 4168, 5335, 4868, 4082, 4141, 3795, 3911, 4846, 
       5278, 3913, 4254, 3796, 3912}], 
      Line3DBox[{3628, 4235, 4236, 3914, 4796, 5324, 4043, 4169, 4170, 4083, 
       4142, 5351, 3797, 4044, 3915, 4084, 5279, 3798, 4045, 3916, 5280, 3799,
        3629, 5218, 3800, 3630, 5219, 3801, 3631, 5220, 3802, 3632, 4797, 
       5159, 3633, 5221, 3803, 3634, 5222, 3804, 3635, 3917, 5281, 3805, 4046,
        4851, 5336, 4085, 3806, 4047, 4171, 4172, 5358, 4086, 4143, 3807, 
       3918, 5223, 3878, 3919, 4227, 3808, 4226}], 
      Line3DBox[{3636, 4237, 3879, 3921, 4798, 5325, 4048, 4173, 3920, 4087, 
       4144, 5352, 4145, 4049, 3922, 4088, 5282, 3809, 4050, 3923, 5283, 3810,
        3637, 5224, 3811, 3638, 5225, 3812, 3639, 5226, 3813, 3640, 4799, 
       5160, 3641, 4800, 5161, 3642, 5227, 3814, 3643, 3924, 5284, 3815, 4051,
        4852, 5337, 4089, 3816, 4052, 4174, 5228, 3925, 4090, 4146, 4147, 
       3926, 5229, 3880, 3927, 4229, 4230, 4228}], 
      Line3DBox[{3644, 4238, 3881, 3929, 4801, 5326, 4053, 4175, 3928, 4091, 
       4148, 5353, 4149, 4054, 3931, 4093, 4802, 5327, 4055, 3932, 5285, 3817,
        3645, 5230, 3818, 3646, 5231, 3819, 3647, 5232, 3820, 3648, 4803, 
       5162, 3649, 4804, 5163, 3650, 4805, 5164, 3651, 3933, 5286, 3821, 4056,
        5233, 3934, 4095, 3822, 4057, 4176, 5234, 3935, 4097, 4150, 4151, 
       3936, 5235, 3882, 3937, 3823, 3652}], 
      Line3DBox[{3666, 3886, 3938, 3885, 5289, 3665, 4180, 3951, 4098, 3950, 
       5359, 4179, 3664, 3949, 4096, 3948, 5328, 3663, 3947, 5288, 3946, 3662,
        5170, 4808, 3661, 5169, 4807, 3660, 5168, 4806, 3659, 3826, 5238, 
       3658, 3825, 5237, 3657, 3824, 5236, 3656, 3945, 5287, 3944, 3655, 5167,
        3943, 4094, 3942, 3654, 4178, 5166, 3940, 4092, 3939, 4177, 3653, 
       5165, 3884, 3930, 3883, 4258, 4239}], 
      Line3DBox[{3680, 4241, 3890, 3952, 3889, 5294, 3679, 4184, 3962, 4102, 
       5293, 4855, 4183, 3678, 3961, 4101, 5292, 4854, 3677, 3960, 5291, 3959,
        3676, 5176, 4812, 3675, 5175, 4811, 3674, 5174, 4810, 3673, 3828, 
       5240, 3672, 3827, 5239, 3671, 5173, 4809, 3670, 3958, 5290, 3957, 3669,
        4853, 5338, 4100, 3956, 3668, 4182, 5172, 3954, 4099, 3953, 4181, 
       3667, 5171, 3888, 3941, 3887, 4259, 4240}], 
      Line3DBox[{3694, 3892, 3963, 5272, 4847, 3693, 4190, 4191, 4106, 4869, 
       5360, 4189, 3692, 3970, 4105, 5298, 4857, 3691, 3969, 5297, 3968, 3690,
        5182, 4817, 3689, 5181, 4816, 3688, 5180, 4815, 3687, 3829, 5241, 
       3686, 5179, 4814, 3685, 5178, 4813, 3684, 3967, 5296, 3966, 3683, 4856,
        5340, 4104, 3965, 3682, 4187, 5339, 4188, 4103, 4186, 4185, 3681, 
       5177, 3891, 3955, 4261, 4260, 4242}], 
      Line3DBox[{3696, 4244, 4245, 3971, 5273, 3830, 4058, 4196, 4197, 4112, 
       4152, 5354, 3831, 4059, 3973, 4113, 5299, 3832, 4060, 3976, 5301, 3833,
        3700, 5242, 3834, 3702, 5243, 3835, 3704, 5244, 3836, 3706, 5245, 
       3837, 3708, 5246, 3838, 3710, 5247, 3839, 3712, 3979, 5303, 3840, 4061,
        4860, 5343, 4114, 3841, 4062, 4201, 5344, 4871, 4115, 4153, 3842, 
       4063, 4861, 5305, 3981, 3843, 4255}], 
      Line3DBox[{3716, 4256, 4257, 4111, 4202, 5362, 4872, 3715, 4199, 4200, 
       4110, 4870, 5361, 4198, 3714, 3980, 4109, 5304, 4859, 3713, 3978, 5302,
        3977, 3711, 5188, 4823, 3709, 5187, 4822, 3707, 5186, 4821, 3705, 
       5185, 4820, 3703, 5184, 4819, 3701, 5183, 4818, 3699, 3975, 5300, 3974,
        3698, 4858, 5342, 4108, 3972, 3697, 4194, 5341, 4195, 4107, 4193, 
       4192, 3695, 4848, 5295, 3964, 4263, 4262, 4243}], 
      Line3DBox[{3717, 4246, 4247, 3982, 4824, 5329, 4064, 4203, 4204, 4116, 
       4154, 5355, 3844, 4065, 3983, 4117, 5306, 3845, 4066, 3984, 5307, 3846,
        3718, 5248, 3847, 3719, 5249, 3848, 3720, 5250, 3849, 3721, 4825, 
       5189, 3722, 5251, 3850, 3723, 5252, 3851, 3724, 3985, 5308, 3852, 4067,
        4862, 5345, 4118, 3853, 4068, 4205, 4206, 5363, 4119, 4155, 3854, 
       3986, 5253, 3893, 3987, 4232, 3855, 4231}], 
      Line3DBox[{3725, 4248, 3894, 3989, 4826, 5330, 4069, 4207, 3988, 4120, 
       4156, 5356, 4157, 4070, 3990, 4121, 5309, 3856, 4071, 3991, 5310, 3857,
        3726, 5254, 3858, 3727, 5255, 3859, 3728, 5256, 3860, 3729, 4827, 
       5190, 3730, 4828, 5191, 3731, 5257, 3861, 3732, 3992, 5311, 3862, 4072,
        4863, 5346, 4122, 3863, 4073, 4208, 5258, 3993, 4123, 4158, 4159, 
       3994, 5259, 3895, 3995, 3864, 3733}], 
      Line3DBox[{3734, 4249, 3896, 3997, 4829, 5331, 4074, 4209, 3996, 4124, 
       4160, 5357, 4161, 4075, 3999, 4126, 4830, 5332, 4076, 4000, 5312, 3865,
        3735, 5260, 3866, 3736, 5261, 3867, 3737, 5262, 3868, 3738, 4831, 
       5192, 3739, 4832, 5193, 3740, 4833, 5194, 3741, 4001, 5313, 3869, 4077,
        5263, 4002, 4128, 3870, 4078, 4210, 5264, 4003, 4130, 4162, 4163, 
       4004, 5265, 3897, 4005, 3871, 3742}], 
      Line3DBox[{3756, 3901, 4006, 3900, 5316, 3755, 4214, 4019, 4131, 4018, 
       5364, 4213, 3754, 4017, 4129, 4016, 5333, 3753, 4015, 5315, 4014, 3752,
        5200, 4836, 3751, 5199, 4835, 3750, 5198, 4834, 3749, 3874, 5268, 
       3748, 3873, 5267, 3747, 3872, 5266, 3746, 4013, 5314, 4012, 3745, 5197,
        4011, 4127, 4010, 3744, 4212, 5196, 4008, 4125, 4007, 4211, 3743, 
       5195, 3899, 3998, 3898, 4264, 4250}], 
      Line3DBox[{3770, 4252, 3905, 4020, 3904, 5320, 3769, 4218, 4030, 4135, 
       2582, 4217, 3768, 4029, 4134, 5319, 4865, 3767, 4028, 5318, 4027, 3766,
        5206, 4840, 3765, 5205, 4839, 3764, 5204, 4838, 3763, 3876, 5270, 
       3762, 3875, 5269, 3761, 5203, 4837, 3760, 4026, 5317, 4025, 3759, 4864,
        5347, 4133, 4024, 3758, 4216, 5202, 4022, 4132, 4021, 4215, 3757, 
       5201, 3903, 4009, 3902, 4265, 4251}], 
      Line3DBox[{3784, 4164, 4165, 4031, 5274, 4849, 3783, 4224, 4225, 4139, 
       4873, 5365, 4223, 3782, 4037, 4138, 5323, 4867, 3781, 4036, 5322, 4035,
        3780, 5212, 4845, 3779, 5211, 4844, 3778, 5210, 4843, 3777, 3877, 
       5271, 3776, 5209, 4842, 3775, 5208, 4841, 3774, 4034, 5321, 4033, 3773,
        4866, 5349, 4137, 4032, 3772, 4221, 5348, 4222, 4136, 4220, 4219, 
       3771, 5207, 3906, 4023, 4267, 4266, 4253}], 
      Line3DBox[{4268, 4652, 4653, 4603, 2921, 4677, 4676, 5566, 4477, 4269, 
       5459, 4478, 4270, 5460, 4479, 4271, 5461, 4480, 4272, 5462, 4481, 4273,
        5463, 4482, 4274, 2928, 4275, 5464, 4483, 4276, 5465, 4484, 4277, 
       5466, 4485, 4278, 5467, 4486, 4279, 5468, 4487, 4280, 4961, 5563, 4605,
        4673, 4488, 4604}], 
      Line3DBox[{4282, 4654, 4655, 4606, 4874, 5366, 4281, 5469, 4489, 4283, 
       5470, 4490, 4284, 5471, 4491, 4285, 5472, 4492, 4286, 5473, 4493, 4287,
        5474, 4494, 4288, 4875, 5367, 4289, 5475, 4495, 4290, 5476, 4496, 
       4291, 5477, 4497, 4292, 5478, 4498, 4293, 5479, 4499, 4294, 5480, 4575,
        4607, 4637, 4500, 4636}], 
      Line3DBox[{4296, 4656, 4576, 4608, 4876, 5368, 4295, 4877, 5369, 4297, 
       5481, 4501, 4298, 5482, 4502, 4299, 5483, 4503, 4300, 5484, 4504, 4301,
        5485, 4505, 4302, 4878, 5370, 4303, 4879, 5371, 4304, 5486, 4506, 
       4305, 5487, 4507, 4306, 5488, 4508, 4307, 5489, 4509, 4308, 5490, 4577,
        4609, 4639, 4640, 4638}], 
      Line3DBox[{4310, 4657, 4578, 4610, 4880, 5372, 4309, 4881, 5373, 4311, 
       4882, 5374, 4312, 5491, 4510, 4313, 5492, 4511, 4314, 5493, 4512, 4315,
        5494, 4513, 4316, 4883, 5375, 4317, 4884, 5376, 4318, 4885, 5377, 
       4319, 5495, 4514, 4320, 5496, 4515, 4321, 5497, 4516, 4322, 5498, 4579,
        4612, 4642, 4643, 4641}], 
      Line3DBox[{4336, 4583, 4613, 4582, 5504, 4335, 4521, 5503, 4334, 4520, 
       5502, 4333, 5385, 4892, 4332, 5384, 4891, 4331, 5383, 4890, 4330, 5382,
        4889, 4329, 4519, 5501, 4328, 4518, 5500, 4327, 4517, 5499, 4326, 
       5381, 4888, 4325, 5380, 4887, 4324, 5379, 4886, 4323, 5378, 4581, 4611,
        4580, 4678, 4658}], 
      Line3DBox[{4350, 4587, 4615, 4586, 5507, 4349, 5396, 4902, 4348, 5395, 
       4901, 4347, 5394, 4900, 4346, 5393, 4899, 4345, 5392, 4898, 4344, 5391,
        4897, 4343, 4523, 5506, 4342, 4522, 5505, 4341, 5390, 4896, 4340, 
       5389, 4895, 4339, 5388, 4894, 4338, 5387, 4893, 4337, 5386, 4585, 4614,
        4584, 4679, 4659}], 
      Line3DBox[{4364, 4589, 4617, 5560, 4962, 4363, 4682, 5567, 4967, 4362, 
       5407, 4912, 4361, 5406, 4911, 4360, 5405, 4910, 4359, 5404, 4909, 4358,
        5403, 4908, 4357, 4524, 5508, 4356, 5402, 4907, 4355, 5401, 4906, 
       4354, 5400, 4905, 4353, 5399, 4904, 4352, 5398, 4903, 4351, 5397, 4588,
        4616, 4681, 4680, 4660}], 
      Line3DBox[{4367, 4662, 4663, 4619, 5561, 4525, 4366, 5509, 4526, 4369, 
       5510, 4527, 4371, 5511, 4528, 4373, 5512, 4529, 4375, 5513, 4530, 4377,
        5514, 4531, 4379, 5515, 4532, 4381, 5516, 4533, 4383, 5517, 4534, 
       4385, 5518, 4535, 4387, 5519, 4536, 4389, 4969, 5569, 4537, 4690, 4965,
        5565, 4620, 4645, 4538, 4644}], 
      Line3DBox[{4391, 4674, 4675, 4633, 4691, 5570, 4970, 4390, 4689, 5568, 
       4968, 4388, 5418, 4923, 4386, 5417, 4922, 4384, 5416, 4921, 4382, 5415,
        4920, 4380, 5414, 4919, 4378, 5413, 4918, 4376, 5412, 4917, 4374, 
       5411, 4916, 4372, 5410, 4915, 4370, 5409, 4914, 4368, 5408, 4913, 4365,
        4963, 5564, 4618, 4684, 4683, 4661}], 
      Line3DBox[{4393, 4664, 4665, 4621, 4924, 5419, 4392, 5520, 4539, 4394, 
       5521, 4540, 4395, 5522, 4541, 4396, 5523, 4542, 4397, 5524, 4543, 4398,
        5525, 4544, 4399, 4925, 5420, 4400, 5526, 4545, 4401, 5527, 4546, 
       4402, 5528, 4547, 4403, 5529, 4548, 4404, 5530, 4549, 4405, 5531, 4590,
        4622, 4550, 4406}], 
      Line3DBox[{4408, 4666, 4591, 4623, 4926, 5421, 4407, 4927, 5422, 4409, 
       5532, 4551, 4410, 5533, 4552, 4411, 5534, 4553, 4412, 5535, 4554, 4413,
        5536, 4555, 4414, 4928, 5423, 4415, 4929, 5424, 4416, 5537, 4556, 
       4417, 5538, 4557, 4418, 5539, 4558, 4419, 5540, 4559, 4420, 5541, 4592,
        4624, 4647, 4648, 4646}], 
      Line3DBox[{4422, 4667, 4593, 4625, 4930, 5425, 4421, 4931, 5426, 4423, 
       4932, 5427, 4424, 5542, 4560, 4425, 5543, 4561, 4426, 5544, 4562, 4427,
        5545, 4563, 4428, 4933, 5428, 4429, 4934, 5429, 4430, 4935, 5430, 
       4431, 5546, 4564, 4432, 5547, 4565, 4433, 5548, 4566, 4434, 5549, 4594,
        4627, 4650, 4651, 4649}], 
      Line3DBox[{4448, 4669, 4598, 4628, 4597, 5555, 4447, 4571, 5554, 4446, 
       4570, 5553, 4445, 5438, 4942, 4444, 5437, 4941, 4443, 5436, 4940, 4442,
        5435, 4939, 4441, 4569, 5552, 4440, 4568, 5551, 4439, 4567, 5550, 
       4438, 5434, 4938, 4437, 5433, 4937, 4436, 5432, 4936, 4435, 5431, 4596,
        4626, 4595, 4685, 4668}], 
      Line3DBox[{4462, 4671, 4602, 4630, 4601, 5558, 4461, 3087, 4460, 5448, 
       4950, 4459, 5447, 4949, 4458, 5446, 4948, 4457, 5445, 4947, 4456, 5444,
        4946, 4455, 4573, 5557, 4454, 4572, 5556, 4453, 5443, 4945, 4452, 
       5442, 4944, 4451, 5441, 4943, 4450, 5440, 4695, 4694, 4449, 5439, 4600,
        4629, 4599, 4686, 4670}], 
      Line3DBox[{4476, 4634, 4635, 4632, 5562, 4964, 4475, 5458, 4960, 4474, 
       5457, 4959, 4473, 5456, 4958, 4472, 5455, 4957, 4471, 5454, 4956, 4470,
        5453, 4955, 4469, 4574, 5559, 4468, 5452, 4954, 4467, 5451, 4953, 
       4466, 5450, 4952, 4465, 5449, 4951, 4464, 4966, 5572, 4696, 4698, 4697,
        4463, 5571, 4692, 4693, 4631, 4688, 4687, 4672}]}}},
   VertexNormals->CompressedData["
1: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
/w/BFvlWE3g3CO2m+NKTGSwWwCd3vNaP5IO6qHVtcBy3Bv4PuR1Zbq7PQlup
dZUrbDsF8W/TntNkXSg8gHK/9qgONAKc+YMMtoBDq8v45hBel+DHTJ9JPZG3
3BWMb+OylBf075E8FErqjyzf5mF8H9u9bBDPPs6I4zuNZnFdyl8MLwPO6suq
6YBDWxe7dJ3H0A/G0WmRZD+gi9S+WqXUFAf984Mx4DvZP4jWV15i98Ig3njc
phfixks4MH+7/UtuA462hqE34ISNaWL8Nku9auhnRu9fbmQ/o0vWq+wA/0Ff
Lz3siwH/h5Jk/6NVTyn6tJgET8O+uLNpHx/EDe0p+3r/rZefACdX4/UVwNkm
H4zxe1Tpd8N+NBn4E0DuR2TWYIb5+55d1Q77t5hX7je5f5EtgzTGl9srVwvx
gVmFMYjbHZvE+AdNuGUA5+Xe966AY2d/FeNHnbiQCPPkTZbGdXKeIEGNEIyf
u+06nksvU/o/kfMHfaHOJZ+B4iqIn7c/kQLxW/95LiHaXOJwyvtyoY68ryVf
u/zxcTth/iHnl0LuEDrbypWc31CD5PjK5KXEG4gW+/4q/9ejhOOS5JzGL63I
UHLCl7m/mRCcc8X5ogo7ouKq6lDaot+F7Wa1hNIDSv7ZWxWsmgod6I+E2yJK
rCc+CCfi/AYX6WB640YkZC19TkKlmqBfUo7zk65JH3b624msg5enXmCsIeaz
KHzUKhYkPG2aUVeOb+nQ9VLS55fhfA1Z/yfbmbvRkHaBfwp9CWHt2IPz67xq
T1n8bUHZOxb3xv/OI569b8b5b4V4hqeTu5HYvXPmaQuZxKmEfJyf8evTynvz
rUhDpGvuqGIawVbbh/NnWvXc5P92o66VHDYdacFEs74azuf4+FoswboNPVxR
ZtmOAgg7EQqfqLtr5M73dKPq3nCBR+pJSCTg1xTkm0TvmPHb14YYjt35JmcY
jzZF/8X5AjcykIBVN5paggS+fMlHnuORGP+1xlOOKb9WZKRpGJkqmoX6NKtw
/oOyL8WVPl3oYuiL27vWVKD6X7tx/k31fM1nmi3IVXiHEV1xIdp8eATn70iU
Cvpt2ImOad2zXjCvRcu863D+hsZa7h0OTajq+nTTQ7YKdMWyG+cj7o9v28l7
pYXIihiF5kZkWbljGvK9dAVytEQaUKvGtTPHW2qQzpNRnP9kUe6gZ1czmjSQ
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
8E4HMhmrCu172IPFT19ruq/pjlPLDHZd+duOEhIHJqurenDlyASTrBaZFxbP
NedY3Y52+YT4Z8f34JMp7FnELz4/WN5S5P4ZzemzZouc/wnPWzpM+Ztesgqd
0GpDs+V2Z20KacV96r6U/1FB+7LwpE70p3r3RKN1F75lOfUM+FeF9FeZp3Ui
i4Mco4LHunGUnncZ8B8qq11ifaoT7eVeGvD1Szee3bRwnRvhn+yigk8VdyO3
cvsLBww78bEAu0KyLhzgt/R+oE43yt0gXSiT0Yk/T8z9SexgVUEx0eOXu9BF
FQFh9bROHPK1Ohv4u110577NUYa8+v3FIs3z8eXpH5T/oF63aU9oB8q/E6m4
O64RsxwspPw9b+9riojpQconMu+yC7XjTFE9X+DP7xO46EVFD/IJ5pGwm92B
133wrQH+sn9j7Z659aCnf79kf3DuwMtlTLlBf/8XTC7Vz/tQ9rUzoiKFrdil
X1AH+KcLnhtcJtWHtrwrfCW+Cf4u9Asz6M/ZZS7qfaAXGSYsFXbWbMNHFgpl
Av/90svPJNqUk3rZL5t09APeyvOX8n+sIW0g6daFWNUPxKg6VuOYgl7Kf2FO
EVPf+n6U13oxM7ehCQ8tff0c+G86mjq+37wfzc12OWG+pwXHsKh/Bv7BXBwc
KVv7UdYfe7HA8ha8i4/fE/SfFdHd4NkwgMJq+zY6BNXjIqmvLcBf7/pzdWbH
AZRr2epx26MBp07/mAX8hRLuin0J70dO7waXuLM24qOXRPOB/yGBwxXejhXI
pYJz7FlpCu6/yIifgJ16S9umutHTtpTe13WleLFeLuU/aeJ99c6iQfR39kue
m6VVeP9ZDn/gnxu8NH7cehDJWbyWmTCtwQYaTwqBf5K3TnbL4UFkzB2VfvNB
LdZLtNIF/T3uMO/OvTeE2gd73vitrsDJbk9tgX8rb2uLjMoQkvyWExEpUokv
zp0cgPix6fG/kGc5iCo3H4kMaKjEh45v+wD8G+6Vb43fUInEmrkEhPrDcasY
x23g375k7wnb7z3obvM6MZXEHDxYKk35dz3xVbYwHUJ2+htNLXyLcfQRqcfA
P0eG/cpE5xBSTbCf8Hb7gvMeXegE/r0/emrZ6odQbWnTYZtvpVjmrbUI8B/p
FLZN8hpGS5Vrk/rscrGhW9J54H/3nIvD8zPDaOjU94LzUfn47ZEpen7THh15
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
3mwJ0M0qcNdfohsSi9Cj3/P3GQ+BbqMcQ4vhPVWmxEf6ffq11edhX8pSNBbC
OyLmjzV0XakbO0RhX5gsHpbCuyP5VwwdWn2fboV9F5daqQrvbXRq5aj9socS
/LDvbafH18D7nDnvGH3RbdJIQFxZBGdugXcpPmaY2nc3X8oHcSVocfY6vGNx
YmXoFiNSsOXiuUrk4pC4OGD9Fcx2QaZ4EdFtE7fusYYzleiK/f7VE6qPscD7
zRT3nblHGv7PPdLHmfsc0f/c55ybuc+RnbnPEZy5z1k9c6+y6z/3KsMz9yrf
/nOvMjVzv8E893/fb4zN3G9w/Od+Y+3MPcPUzD2D0n/uGRbP3DOUzdwz/Jv3
U2fm/fb/zPsV/5n3/83dt/6Pubtg6n/P3f/m4rxP/3sunj0zF1+fmYuDZuzs
UQ6k+5J7+6p60Por6PVOhv636x4dhX157ni7lOwL6p/aTvF/86zx/zHPyv5n
nmWdmStX/B9z5YWZuVJqZq4smZnvdvxnvnsxM9+J/We+YxpnzFmh/5mzbs/M
WTf/M2cZzsw7tf+Zd67MzDsX/jPv+M3MHe7/mTtyK79KwfulHU+2FcHfTfx7
v3TquqEU/B70VuWv9nWmMvzCzZH+HrQs31QocaQAqaw+IPPyXin297hEcc1x
vRWAy3XHbiE4yrx2leLzbD+8F9TNQiJpNY57WrPxao2LeQ8NhtHQL4V3c9hL
kdq+pNruu+X46JErQY2PBhFbqmJRp2wFOjyuG5g+0Ihl229Mdvj2IfvsEb6r
qtXIr2eM50xbHbb3mT8F+BOBczUuVjUoYfwz7yH2dlyd12EUEETm869RjvGB
jciIuy994bJWbHKA1Rhw70aWw224AQ0ny7ttNOzCTKzSd6YKWtHmgLJr58xa
0dkwJu2m5R145WFmil9b69nf9L0ZsS+ujhds6cGRzw37PW7XIL5ylf4B3XY0
UPknY6VuF7Z87zAIuMVix9zfP1rQgJT6tijTPvxANm9T7J9CdFWi0GWvWwfK
b/95IzetG3/WUJAE3LD9RA58/9DKXg6+dxF8rU9w7DnrjjN8v2fTzevwvcXV
Y0cAH3mp2wV8rq4peAt8AodjmD1v12CNtss9wMf4IU4HPme4ZSlu2DxfC9Z7
WuzYXVjvufe+bmRdeFZp6VVYr+ApXk1Yr8b0HYqnv7YsAz1P/M3jAD392eLN
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
bEC3K9ncn8t+dSCuUQvO+GPdeEnXxCToJqldWLj/cDd6FlPe+GyqAxf6RKwH
3TqYzJaWPu1EXuaLMpOlOvDRDeKuoNvVvRWzVdjaUbvX5co3D9uw+R5bqtuR
eQ6RVbHNKNKVV3tseQteOTeS6sZvO39k9/Ea9DynzV+wphbzSx2iugW90Ane
cbYU+YrEOp4SLccvmRKobnoDGyJ0G3LRX10X5VMW77DRNT+q29sPx0PDNCvR
5F+3BWe0P+FZsp8NQDdD4w0TLGyNyC3iOoeTZSXe58RGdfs+ukBafVMb6qtJ
7XEpqcMP+J5R3Vafbyuw5elEJz22cUXItuCh0VGq2wLP2dvDOLrRnKQFAQa3
27Dn+Fsab79Mkx6zL+5BqUYSmZarOrBpZNBv0C1hkbH9icV9SOGcwPFLVq3Y
xTljA+jGP6h/7pxCD3IK3Dt9vbcFT0uH03jbqsO+7vf1TiTQXHppWKsZ122/
lwK6Ndz6uO70RCuSsA53qjGox9z2m6luoWzu0SmF9cj9pYnF+hVVeJOOPdXt
+XhFjEd5OfLPxQr79n3B7rfjqW43LJ5w9T3PR083clpt2pqEhZ8z4i1hbdHF
CI4qJDWxIbBqZx4uTfhBdbtXUDJw9lUzOmDU9HR0aSk+OykaArqJfTYe2tvf
jlxyd8pu1f2KH9w6Q3UbOeZhabOhG91dUmU6a2kdHkktpOfU5tLqrmbLXrTH
bfVlQ+4mPLy5geqmoKXVFJ7Qh2xbQpwVb7bgI0+Tf4FuNjsXppzSGEAV35lq
nFfW47KWBhpvx67XD/mS/uS3Oorhf1qHg7MMaLy1GO1/GHqrG70RPDMt2VqD
rRO8abz5KL/M8chsR88yV7oPTX3FMczd8qDbA9sD25RfNSEjjs72qqEyXJlw
kuq2NF75d3x9Jfo9JdIX4vcRx/G+o7rNmp9l8Ly1AE2xLZfMWB2NNRMYujVz
LVgSf7gadf6xs8h3zcCD2WL0nN470Td44ksLMsKTCmUN+VhrvJzqJnnC9JOB
QieqtfPiW97/GQ+aGlPdnmU464QX9iCvV4kSngoVWMQ6jcbb6acmmUba/Wio
bxxtdqzC52bF2YJud47FzJtdMIAOv1Ie4GGvxQ0290ZBt8eb/Lrzvw+iBPXo
k+8Ky/H1YwdXg24JQZ3nV80ZQHIag9XPi8qxzZvj90G3Hv87P3Pm9qLbn5W1
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
1Q/n8lBc2PW237tf4wuLQ3duMhzGO71t7UNM4tCo6MRKm8OPsXNzqv7wt2Ec
0P/xkvWWa2jPvFEtMXtL3HZYODOb6Am/932VbHkyUom9tU+86BG+NnQ7pKpv
GB98V7im+vRttOXCptkGRZfwWjmzOcFk/Yd2f+sRWTek1SfD/E79AnZOV1pv
TuS8l7p7sifvIY1lmx12Er7HfWqEH34H6NhbPC7UmYHMql4rCPTdRe+YVa9B
3i3VM11e6lCGvv+ydTNhikSjvYV3Ie8ShOsjawqa0ND7crne/CQUUx9qDnn3
9E2mxqnpLhR8JuzOqHMGKg9BNadI3mlWxugHsA0iwc03ewXts9BPsZO3Rkje
fVz0Yvm8jGF0ETOvOfUdowtLl+qtIXmnuDbaRTu7B+0U+h2w0PkVmp+oZSdI
8i7zzrqBlVqtSPzE9w23mF4gkYGOgytJ3q3dJPlQPLUSdRY6sx+fF4XGN7R4
QN6t5f2V1LgnB+kmfvL68u0uilNfywV55z+svzfvdghS32x7JYxPD13VODsK
eZey+u0JtQ166B8iXY/L6p8gflvw/JXv4KVUNF2iKyNyIRDZ5nx89KJ9GD1h
ZVFgMShB1wSOFqfuS0Y7daVtIB8vPjmY77S5AXkvVtO5fCILNZRu6V1C8vGI
nV6Eu08n2v7lW4Lr4Xwk2HB0L+RjoG9/y828ftRk/eqPiecn1Lny7Or1JB9z
G4tkhJuGUIlbxE73+6VI2FGrLJ/k47MRGaWYPz1ocpSlvfdAEeK1nfl985zD
q1W+dbaiReMJ61yncpGzZEEZ5OlKp3exsrOr0YJj3I4+g6nIN+dkJeTpvkbN
S7/T3iHuRVc9LIMfo1/TLj8hTzscN39I2BqFDk/fE2LldEAtSYWz5pM8fbpW
Och80gItX+vnu/WcHNLsbqN52q3g8OuobRF68u68Dn9CGvIXFxGRlyH946oj
v7lQPZIe9J3TtvwDanvC+WeC5G9WHhPrwap2tCov1X+1RSkyv9zw4hPJ31Vs
K1nkF/Whjw80z7L6V6F7zK+Tukn+csaasJy5NojKQqUDUnbVImX+eG5ekr8l
7Ee5mnnaEJo3Vz5y3ydUNK5Af09c3CFtJKeuGj1mDbjXP5WDokfeu0JeZ8Ty
eA9mf0AJpn+z5hgnoJP8GhchrzXdnqVKsj1DvxazMB3b543eyD5bBHmd+ddS
kmXfFXTAIvdulboOUuPXo3ntVOc82SlQg/50775wblMhMloaFQq/m/m1+qvd
cGMreqjct+uWSyUyDJ/1bl1yD9JWsOEK/9WNFgoaX3Df9AU1r4qRn0ppQRK2
Vl7mQf0o8aMyX4RQE5KP5NppkFWASibGUuK25KNOFtnUwrPp6HjyJWXADcVy
5lcqk/For1pYYXBNMHJTiTIE3JiVJhThYeiAeG8HLaz6aooKTXZS3BD0Kwqz
Tk1EuwSPPnPdF41uckyEAW6oGSzwnzXliFINP+Sl1NkgnuhbFDfUPsn8alC9
jd6fvn2nKucmOq5rSHHDUzznlx+pR899A7fHk3qkp2UJ9Qihzzmj8Lvw11+e
2Juh1I3ZC/vz0k2rkHjRRCDUU4MzWrSeduy5NypW9RTvLTBQgfrbxqn+Gepv
RsM51rHSelyxybMb6nXQWKwQ1GtW8836pF5j8Tz/o1DfVVUuDe0h9X2l5J5s
gjP/X/5w/8IuWb6yNlR98+W5yeBW/PuqxqNlf9rQIvG2v0UOXcjxRpl06FQH
li58l7k7tBxZFoYKQb3rmG39COrdD+NAH1LvsMgmQwOoj9/5xKdWkvrIPpv/
MamPuOCuzXaop7ssdn27T+qp5q3gdyR/cYuT20movxeLR+yh/noGsUuS+ovz
M7OVAy2akYapcOnR0hrsaLqUm8QnMt01tPPO7U5UIn33PV7XjDvy1saKfW1F
h8M4dunt7UU3xZ4XKOxpw4atcqryt0vQ05rXDlC/HDk+c0L94jsmcIHUL1ye
KhIO9c53xGY11LucdSvXknqH2b7vOgH1cVOPbyvUR89rfltIfcRvF9THQD19
sXiuONTTM8H3ZUg9xXP5LkxDPDfdDtMj8Yz/xXPqx/XsEM9vD/IkOrpU4rHT
DzeuJ/Gcum2zPchXmubsJHGO9RlxHrHM4kMYiXOXQ09H3DZ9wZMaQu0Q5xVP
P/NA/N9SWHuGxD9uZMT/vqLRyxD/khrHmx8LNeEVZwLljEj8h92b8wDk24e7
5pK8wHsYedG4KOg+yP0nZOeAvHNRqBWR403Kd61Avu5MSgPoESkWcCB6sJ3X
Wzb47r2LazThu+Zy57XId/G3qVNvwE4By5g+sFPmSs8IyAdCii1hX38Fg8Rg
X96VrUVkXzhS4gMLyD3+DkaDHxb62W0jfsAi/je7wW8Kkv2K4LfVyicjid9w
284IbpDjK727jIn8eeBgLcg/jYVPAB7auhwab13+Ae98soziYWy8Jj/g2H4P
UyWCY/i6S5QtxMnCTznzACdjK685E5zEb9dXUpz0+8ZyLfQ14fdWchPXzlTi
C3d27RMn8TM8+XE+4GdzcaAywU+8Wy+L4mfolrRHRycGEA9TK6t3Xg3GDkpq
CiSuFh7vZgVcXffywR2Cq/jQ2Rlc/XDy1FyQn2S74A7ybtlL8kSOnw9WBoMe
k2ATFtDzpGCDK9GD1yirMsF3TY+I7IfvBs0LqyLfxVd1xC+BnYn53j/ATnGm
AHViJw5tPzKtQPa1l1XQBvblXv/tDdkX3u+f3Qz+mf1eqA38o7lFcBbEZ3PH
viKopxanTDaReooXhW2j9TTQ0ykK6umGsx89SD3FWiLqtJ5+KjVsh3oq8M2v
itRTvNL6MK2nU19/NySWDaKkCd1jnlqf8d12O+m9BAe4bnjJQp0d3vFtJamz
ePH8W7TOLk1GCOQR73L5QD7LlE2+gOCD4xqNOtDzzF/oKOg53LDzFNGDq0XH
6+G7FyaWFsN3lc67K5Lv4iWFfoFgp6mWvSPYKX/xwCHADXu52Gewr3RVVy7Y
1/CfZ9/JvvCPdQFRwK8WBqYvJvwKh0Y/pvzKPUWJ8qtvS5seE36F0w+rU371
xtveAPhV/lqVNMKvcFzmDL/y//N2BfCr1tibzTrfMT4iJUT5VWz/d8q7BK4t
oPJryY2X1hJ81nWrOA56ih49iwc9LbOcEogeHOERdRC+q5TD7g/fbVkf30a+
i78lJt4EO+enyi0EOx9rul0BfG7+27kM9Cf4eK0GXvfQ+xPVP/7xrzboZ3/6
pRl44Abb21S/RRa3Iuhvsn7nALxxn2MQ1d+bcY3qd3kaww88U8/WkeoXMUqo
B/8HNu64Q/yPrndco+f4nuPaXjgvhyXWO4AvrWhtlYPzCh+8UUvj4ab0d+BX
3EvC6bkMaJv5w7mw7u+LAD4W8F6engu3fEoMnMuyq6/Egb8pLUyg52L87vZK
yFO+X+wawDekJcJpnlacjLOFOJce8lx8/UwlEhWTovlo5feC5gvrNollJF/Q
28ozNO+K4puYIb/mjHL6A5/p+WNB82vCU2xSjuTR8oOiJ4D/aHa50zwa25Q8
BflSbz4FOICWL5ug+RIXrt4E+bJWKaiX5Ava93UlzZdRs6pFgFctG2STCF6h
cQZu709fmgu4l7SmbxbwkL8MfJ56aWgB+Mm/JesnwU+0koHDVuMsHiBnq32y
HPhJHwNvZ28+Ox9wlUvRSA/0/MNVLhl7ip9XZ78TB/7zgIGfnAyc9JvBSfQP
JzMkjN9CPdore/kEqUfI5G8E7e/Uj2gegLqJP/+sJXUT/ehbRuvmy+dtp6Gu
/aiaHCd1DbnrnqJ93xvOFZJQTx9kNJeReor0k9bTevrezi8C6qOggPkWUh+R
9tcg2g8qrPfZDnU2MtDlE6mzSFBFjNbZCwhdgzo7UfhtGamzyGznO9onKi12
tgM56/snPCCX28pG62+Qzm0J0JNiZ/wR9KxX/eVJ9OAfexofwnd36lRugO/e
4OWjdVmTS3oj2Fm+S+ID2BnieOo1sRNfNQk8Bvs6q53UD/tysn5A6/XSq+/E
wQ8F202LwA8GV9L4gd+WdClEg992CHDvAL9d/epH67iBAPcF4CG1n2xDCA9B
Izlq9B5A+ODcncBbNn3xYffd34RapYvoPYDx1G5p4EucVUIXCV9CGXEHKV/i
Dben/KfxuNxCfqd2FPBSgt4PsGv/GAUedfO3ljzhUUhbLJbyqINH7QSBR+2r
PxxDeBTqb1lF7w0GuAwEQP5o344nIH/dcnOGX73O+wl6+M1qZUCP64R6K9GD
EzIOnYLv9r8pYIbvPpxgp7yr8UHKVrDzvp2CMdh5q4wtgdiJ8+Q/iMG+LqwK
myR8DN1a60v5mOv1Vergh0vvOJzBD7rCHJSPvQ889hN4rFxxjBThsegfjz13
TCYG3lGIzpWyrU+S+e9edNyBzwD45+0Fa9n25taibzc+0/slA1m2EeCr86dz
thG+irLDuOj90ntexaPAb/m21tQQfosqx7To/dLHp10/gCe7MvvIEp6MAjgG
KE++o3/AD3hyZu3hxYQno7YpbXrv9Grsoy/I/WOfc4L8cbgr5c8yhp+HQM9G
t7zdoEe4V7ef6MGK1waV4LuHgozK4LttetqUV6v0t7eCnWfS2UTAzqPsGymv
vihjegT2JTr3yDfCq1HAj12UV8f/eH0M7p1c3zk3vSH++XfvVJ/amQL3gcN+
ES08cvV4q9rM/aRsmcBjuD/00mRR57Ntw3a+r+j95PLR55Jw35hunNHR1tGF
35Z60vvJBLx2zlKnDqR2pfNNkncPnhuSRO8nd5t5i8F6cw7/Jlg/7hRP7ycP
JUV7gP7ZggYKoJ9vjDkZ7idLwrcEgz0c2k4fwB4bIRd6P3nVcfcNuAcOPdKh
iM1rsFN3Hb2X1twZ1AH3xsOKG1+0GrZgfq4Rei89a+k9e7hnjnQzvFer2YGX
Pual81xBh3kf4V76UlT+ksnSTrzMtp/eS689XEzvsacdS11hfWxBEL2XLlV+
8QX0H2geeAr68WlDei+91Y5JH+y5X6ctDvaEZx2g99IfBC0yYS7Q8qmBS3hf
JdaOaaJzis8hVrkwR/hYdLD+5voGfKJnZk5xouGDBMwd2n30N5RYt+K1So/o
nIJpzuufMKcIH8rxF37dhpczzWaGOUV1SvgmWP8u5udaWC84NjOn+Dgqmw76
U20FikD/8/0zcwp33jfBYI/EqYFpIWJPsLIa9WeJrDqd265XDXCwMklGUysK
qZ12W8bp3HbeCtuaN1MZyCdGis5tR7f5BcMcdqQ7651JThba0/iUzm112XOr
YG7bLxjXuKgfI9cIZTq33TB3EZ3bvo2sfw3rrUV76Nx2vuEQndsW3bf4CPoT
hufTe+n7Lh50bssXamIK9py7L0jt5Dij/wXm5uFn5PsmD+agBwsr6bl/6Qt8
AHP2MxoB51aWFCCxgN10jt/3q/QkzOWPzp/7+LpzCVqS/JCee3ztLTrHr6tM
qxqKK0Wlq2fm+Daqqeqw/mxaaiCs//Q0kc7xDaw+uYH+8yJeJ0H/dKkCPXcu
4+I0sEci3qMW7NluuY6e+82oB4nwjuLGs2RNcb5CZPr6GM2jEFuDVnh3USjh
88U7rBzxFp2l/kwaGzgN7zRYxNzOBtRXo6Hwr/Rdx13VdiV41xFdfnLVwKVa
tOHFCvquw/P9Ni1Yf/Gc2wlYr/ZtMX3XcavHqQb0S+FqeDeCnN6/ped+M1rq
Htjzhfe7NNiz91co9Wc8tueGdz48vfzDYT6l6N87Hz+rWfSdjy6TmbTm4lp0
ivHO5+r4mhF4t3NazjZKLLgBTTLe+cRNHpkL73xMiq9e7klsQkdYeOk7n5hI
kWFYX3B4OBTWBzLe+fwt4qDvfISCvcRA/zvGO5+9ift/wDufCSeHT2DPv3c+
O8Nb0o8JlyGO5YmhidqVOOWmC95qOogWq4vFglxZgt8V5K8tVuYRORaOWTX3
nUUFit5i0tKzqRyf3Blork/WX8kY/pFL5EovzEtAbrj4tDWRY7MtMZWfLKqQ
9/mtqqYOJVjJsjMb9FcEbfUGPrPCdawM+jvfj6teQ7/8eOBtFqzPfH5OHNYf
C474AN9N4VK4AuvHdux/Deunp6uzgf8I+Ba6cljXopAMwQv1Nu+w/uVeqj88
LNcM5COLfmqC/Br3ONUTKxhaNmZSh1wnNVuchl/hdAFXaj/PYoU0kM8O3fUZ
5KHeFtT+q+8zBVhn1aOx8+83Na+JxRbMR6j+Uzq+TCB/793DBvJAt3nUP7Z2
j1aB/CzvgDWRI8eFM+svjllPzyXyg0Z8miC/5TGz/t1i5lL4rqqezCT5LjLU
uU7t+a2SngryY+eGakHuaG9G7WlwG3OCfUVXxtuRfaHNAt1UP7uqiinIw7fP
0wd50e8Jul9JLWUP8Jtr/4OvxG/on5/Vk5eXgZ9Tlu05QfyMfLTaqJ77DD8b
7KR+RkxMNdTPGYqsmbB+zoLmHbA+Qi2S6t/88MQsiAexJT6d5NxR5NwAaj/r
olsDEA8jz+SqQJ5WqEft9/JblwFxNUffHuINZcc703irupQSBfKszpq7IL9o
xUP9U6PWkrzOPxGN8dx9pqWagpcLX+w/2TCMWDVGZ08ltKOnDyuv8Pl04/IF
QmI72CtQkUD/j59GHYg1+9HJM2Y9mH3z3dX35mai1prDR6JvdyCvZPPRV149
eKNAwtrKTT4oRenhvMOknrrYsRbeIvX0303Y1N2TdP3yIAe63j/Y36Fikw/W
bjSh+p82MlP9W6denCL68Wx+R2pPxqoFl8Ge79uG9hN7sN/q0OFk6xeoPvZb
5VK5ZFzC1FKqS+zvi13qZ2TbhRKt1MS9B0gdVLheHbq4Ai3c7O34UrEbqR5w
/2ST3Ik3SfOnz2LLRAOccdKOpJ6qPY++zEzqqfgPxfmrxX2QVVPlJDLtRpGz
wpemE/k/+31MYuj6pkeRdP3Ub0cRsh7XuEzdBP31B5io/uTW19+Ifjw9tvE+
2LMrM2wz2MNccaOf2IPrTI2jHY+/RHP8lLwM++LxPIb/awSreOd39iCtuhLm
vJFW7Gccdu8pVwV6tDhgqebnXjQrky+YK6wNC1q22ihxZCL5w7XiGT96UTJP
66DGqzZ8eZnullUSPuggR8fQPVJ/h1uuGQ0S+T/7U/2a6fqh+510fbN4QAe/
hA++NruPG/Tr3Hv8EPSzyy9LJfrxHtNNK8AevrFWJrDnWfLxx8QerJf/UbHn
eypSRmUnrNpicI4Gv4w6sT940+Ap7W99KHjjK9Y/FxtxjHjY8DHuCrSA+ciF
poF+lPPV/FX77SZ8757cuAFnJnKpOYL3cQ+gY9nqNQMJTdjASLGngNgvajvM
Cvisv8z5IrzD/Gf/fDZNuv4Pjw5df1leJ5Wsx1fNHU1Bv+QF7wzQnzN7bM9Z
zky8/afTSbDnUXHYbLDn+xKluVrcFTi76UMyT7V+9qbbogk11zRk/kzD3zDe
cenUglse1Uhmr9lU6WgO/v4pYVZn1SBa91mVbfpxO0rafOJObvdnfGbrj9nz
OXuQiXq1/jb3XmQglTjutaIKqw/2HN9ypQUpxu0w2+czgB711fdzOdRg0Veh
d+Ac5/jfnB4MGUQ+t77EVqjW4tr9tvZwju+nOIcS8gbRPhZDyxeXanH3ZeYP
5FxQk0U5cySppwU/RSMsLWv/88MV5fl0/dZEXbre61AhCzl3PCXV+hf0bw1R
pfrNZOUT4Byft2afB3tul67sBXuYro1GwjmKnZXWBfuH0NefYL9bj4s+sR+z
F0RO/SX7PfW44wLsV0NOcTHZLz6qtb3ekfhni2R2DfjHj3toIfEPTmSeb7uq
1yD7tKBG6OwClf/82V9U7alnUYOsi/KurOhLxyumHtUuqh5Ex5qevuixIP0V
13Dty+YP+FnQKm1b4k+p4xu94/z7UF3NkhM8wsX4nrPW0HPizyAeI3ftbIL3
RmlvXAw+4/x9s8ohr4MFlviWVQ0hZxeBsekbpbhPc2cO5PUijW/zEdMwEreP
WXc6vhRXLPBeCnm9TGXJyB7Co5bXp7nqPy/9z5/heJiuTw6PouujY3T5IK/x
l2f3QX/k45JR0D+QkNYMeS2qfd8Z7Gls6E0HexbXf6J5PXHN+w7YXyKarwH2
82t/GyP2406tZ49hvytY35TCfrXXMBmT/eL3HcInwT+das5y4B++8fFW4h/s
0fmnoeb12WydXD7e7PX7//Onxu+MNTv+1CBlK+Elaiue4uFfpTQ+kefLSIGh
DlTpL7/98oI0rLzvIjPE5+Hn1xY47epHo71f3E6dzsRupi1aEJ+Pjz4/2Goz
hDRbRJ0UIrJxZxqXKOC8xnVur3DfYfSlNtM0GGPseG1wEeD8N928Q6x4GM2b
WhCybwBjqxYjEcD53paCzgWEP/8qn+uqMIj/86fmu3K6vjNwBV1vaKiaDzjf
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
be1fg5SBVP7Pp1ehiLlOcS7/cSQ7vxW+9vK+fvRou8J8t6KIjLoR8BLqqUA7
5wa0HKfshDmL4uhxIQt29D772gMSnxJfYPsantgLeRxDMENdlx4vDgeuWqq/
IDrHjB4vzqSyS/h31Rvdkdje/cGhTvx/saUv09Bv/NN7jlJ+g+0PV9PjmAB2
0fj7GiVKYY8eqSosEPDZi/a97ns5E/2/NuHWfK3cDJDfyhjfkd4bnNjvL6u1
6faqQTEV6JeMnxV7cBwl9ZYoUOMINl1hWTjufxn+A+Hn90Kx/XH501kr1BSz
cvsj6XvxDQYh5XgvPsnEnsaDc0sQ7deuhV9DsH2pnTnrXccy8uL4gBLq53i0
fgfqrx/upnGy6vnjF2h/M9u8YGz/MbXpOGU/4RJTYkf7s7ZJzkb7Fyxg4CdP
8PU59M/BbIPH2F72jtIQ5R/y8IRvAvqnfYaOHvrH9Ml8GldHHjS30v7j/foY
/Xma/dgV6v/Jn1lN+ej/vlWHStD/9qPsNN6SdkvJof+y1fJ9sX2C2tlYyj5y
TkySxuHlmJW7cXxN617QOLTJtklA//mV8l5EXM0/ITqT6j/xbXksIndeP+tF
xLuG0nfxGf/gkGXT+gDkgSN+duEUD0CKw22aJ/NVbV/uKYuGWX1Cvtqm3tDC
jDOhX4PmzxKdgAcUnwBXuivNn+uUdWj+5FlaykPxJ6wIvcrgTwHO08hX2qvb
/1B8BWl2aTR/Kj3+NoD8Jnc11I7iN1hvWkjHmbXL7ESQD/fpl2+g+BAul7yp
Rv7k4d75DflTij/XH+/jW4ZaliN/HrEsXILt5+ktXoftlTfOoPnzNbtrD+pn
P73VBvX7j2XQ/DmklmeM9pgrrv6B9lyqGaLjzHMNCXvQ/rQ/brT96ZqjNH92
Fryi+fO5xGUH7K9KPIM/Y7Jv0/zJWrRqL/qt+V0HzZ+6HPkpyJ8cjk8EKP7M
+sfP2wfdN+H6vmUsQ4Fa3+Ge7wi9vn/ZP+p9MPEV+JsHLuGc8QDeM+d1Z80+
XVwHL49o/qHWQTjg5Euv+zKvFvLiuslxTewitW6ChFQvve7nHCq5hOts2l/b
e9Q6CxMZfPS67wx3inBdjnmZ6EWty9C6bvgGrvsGzg/pdbxlS1UltY7Dc0VJ
eVz3q1OH6HcDEqxG4/DdgGX9Z+h1f9eHYTds3ysYX47tl7Qb0+u+XMJALur/
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
MTkTRsGN4jHjJX/iUL/DAddaSj8EKi2j9UcVLqD9EC0glkX5AYRuMPzwW//9
V+zvztVL/1D9BfNxhp/Hw+N70J/3VBU+Uf6Ef/x8JXLaA+W+fOF3UB6wv472
c3vAjQ4cx9qoiY3UOFLjzhjHsiPuu1yocbyY/N2DGkcwkxql/WyVzNWH49vs
qKSM8h/6jN89UKJ3HvUYW1f7t1F6VvgLaVJ6yO3Ur87GVBy1zk45xOtuOOx9
zvCzMc+7q4grFvE3m+WbMiCzwYL2M5+IjRjKf+5b10LhDbr9GX7merLzDsZj
KzRq06l4DLbJMOIxLy9dP6VjCVAqsHOu1nQyWVD2h9uT6u/nD515GP+bHt+1
lYr///3+LDTaqI7tVz69k3WIar94lc0sqj3Jm+5ddHsiCay3Knq4uCWSA2u7
pH0pPfz530s9KHl9ps0ulFts0NpCyclDPo3agh0p8GN4Qd/evDeEbfZf+ndf
cR1wRvkM3Q0vUX7g2zlafwQT/43/wX+Lfsj9+1HvQDlogeSD38/JcjeGnpfM
eRH1n3lRMbdHFtuPbPxWdZ9qL/KWYX/vy3MBIjnp4NXlfmRcP4ioBTLsX6D1
djPKR86osKB84Pkh2v6J2zPN2c5kwLeRuL1X/b1JUQ7jd0WvFbCh/NYF9jpH
Sq6vwtC/SMZbOullBkQLLQ599EhQITaTYb/0lNxpbP/1b6EDpQe25zL0ON5p
YUV5pGUDH8rfTDH8sDPYzh/tmXW9wYuyBwTed9J2yt/6JYXyy0L6Qih/FcGw
0+ymqz/2N+2hyirKP1B9gYUH9Z990L8Z5dIxPX2UH4B1N8NOjucM/Ef/B//q
hLUcx0We13mMGhdIDJim7TRjzosL/5kXsxP6HLC9tDxLAra3n83Qr3dGhw9x
skDO0pvCA/zWY9i/O3x3MeJk+e6kvSj3v8S0P67XB/FWp6fIS+ET+LQZ/pFf
l3gQ5ZqLfQmFQ9jJy9DfqbS4PJHyc/LUfWX088yVDHts2g/E4H7NU+HMCLVf
A+kARvzz61rmdHZhNNgeabqpcPYNLLrKmHdFHxfE4/cEXbV3chKRmv/if5S5
r7n+n30N5/Plmvg9Z+8WSa7+h2r/tn/8Kv0Szmv1vR/dqXlNTBwY+qM3W17Z
GPAQOI6x594zuUNmPWDY87tE1lTYTjfL6FD5mmQblX/13GPi+e5/8Myv9eg4
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
RWmbU7eMQcrSLVJ4bqtemOu8o7aSGM18GnZHeBjehn7SwvNfdfeefWYe7USI
+7WKXnEGOTLHkj4vvlLqsCZwcRsJjuA31JauJ36mBvPwfPl0r92myE0tpEjA
dOdt3i6yedQ4F8+pVUYrSU7SO7LPK/dGyrUx2HNq8Aiea7P3pkbfYCsis8L4
9WfeH4ZNx/yX4zm4OYsTnoOTx44GB31VBuDLN69LeJ5eNLqPd8PpRrKnvDdR
MSCZCIt62eP5u/LNQe5Z9g1ky+jwJp+rtYTrW7EIntevSVFkizevI5XBrB0H
9neSDx821uL5vmaf43t9nWqyxdZTuIqtn9T+OTWE+QNbphvWNi14QzpOOhSp
5lD+ybzEUcLZDsOaZQ+k1TOJb2WjpvmMEUh2vLID8xNYFy0qUfHMJ+1xOnwd
XQPALzVUjfkMHA8PQvXpEhIbe/7BWq9uUNRedAHzIras6i7/HF9J2kLO3luZ
/ZriW46lmEex13Or4eeoCvJFc82wWXY1Gb3H+RnzLn6dEZ/sWlRGzL9mF8my
dhDprhXjmKfBcmSDir1IMRH+fGIOv34fMfIdjsa8jgfZsv2zPuUSA2dpZQ1h
Kj603uWDeSAR4ZfEm0LTSP/3BxZ7746S3fnXnFemVIL/6jNKZheCiILV3gWq
09Q6q/AkDPNPbner32fPjCbbnOQ2mtqMQNu+2ZyeV6i4LDTSiX08kTh/nvHA
/NIgyMYq3MT8Fr/A5lh+1jSy2tG656dSD7RcsjXFfJgenuxFHbUZhCNGptpj
bQsIbrG/h3k1xpK6i+v+EjKHc8F4e1wQYXvAPxfzcHw3cfUobyTkxQbrJk2W
KqJUdWsE83bONN5sOFeZQXo+3/+45lQbYfvxygLzfI5JKP2c+pNKcpz0vqyP
6iXGKrNfY15QUqe8dOJYInl3kpVFx3+IfGLer+nqT8jG759/LzDu18xm3pfR
e7EiDu9TzGPel8lh3ouJ8tSKQnkV817MTOb9F4WvvS9Rfot5/yWRec9lrW8f
fW9lNvOeyyjzPoviZl9avpN5n+WfeyuHJE7T91as7w+9x3sr15n3U1KmTtP3
UxqZ91NWMO+hFM5aHYTyceY9lBzmfRMe+aWPUL6Ned/kMPNeSUnG5EO005J5
r8SSs3MEz9M/2aWv8JGKgBI3xvmy9MciYczXWrVAYu755ZWw7rhnM/KVfjM/
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
9Q/En+C63J9aTcD3GuZJLqbvhU02msy66u2duTjPrpzuGozTB0k/mXXtYc9R
W7HnqCXYc9QvlmtOQT+o93woR3z2hixj1uVSlfME/ZaiomtL/QahgnHMujyS
vJl8N1/5JOY7EOr5xazLdIZnIj7vNDjfGv0M/qnM847svYq72XsV/6v7BCMT
b6M+vygXqoT6fEOxNfN8180tF1FXXG9firqCvBRvZPxT1WU3D9c7tFtmLa53
8qo/fhZn7yX8yd5L+N/vJIc1RM+hXhLR3ZeFeqmAa8E8L2m6/jyOH3tpcDvq
lv/Gt2Lvy9vI3pe3mL0vb9LB7ZY4ztZAjj/+LnSsVpnxsx3MnYjzmVuQMChM
9z06ZjtjX6m1iIP7m5IRE4j7e06jhdFFEbVzNDGPcGUbHmIe8Rtfzuiiqey9
Y3LsvWP/nc8X9XY/i/459sRICuv3mqaZzPjJkZ+C0M8HlxgY4L7sTVdj7Dny
vosmGGVD1dnkl45tmWS7tGzwj8O9sDZJ3iCunweNwXHncy1ayDUyc7yvcD5J
qcrPd9vyBmzKxpZUTU0nOrIpRiuO9EJwS+vtunFllA/VXisvKCTikuan1wR1
w/g6ZQmObTv0Rm1W+rKfS/q+GtY4TMonpt8+jdnTS+vH+NLFIoYcstU+SMvX
r4rk/mWQ8LM+Fx6XKPLOtbwkayqtbynQ8Z+Ur1nmEFQO8HAgUpU/j4janlKN
puO/d7gzYq/TAMWaRd8OpX0kRUph76UiO2De4HF+U69O2BMbr5w5u56MvXh5
3onJNJ8X+SnVtLeDgoPCS22rWvK6sfEvpetV5PnEh4fLtreCQVjDj/1x1SQw
TsZitJhDzKXLmsqk86DB1fVml1kSiYlIZda7euLNguklFZCzyvJbeFAWMXXW
yo+i85l5Rs4kzb8R7Pau0yr3zScXUvuMF9L5qAWltouKtcBPKxFXQa2PZNy0
PreihzzgSKg7V63tBgV1sQyn0QqSezXz0XHqH+VbPjf8nDvBe/F20bLkchJf
vaJIg/pn3hTrujf/tMGv251GOuGfyOWa5VxjOs/GGysLBIeb4Ul0XkF88UcS
4GLmtvohj3hUri+5sOgdjJUZ4atd+YjMkZJh9ne7W8PI7tRK6Ogy/Xt6+kti
PcZmWIrO3+hyZaGqAgc6Y9oPvtqaRR5sSl6gFNEB3UL3F57vaoGz8cm2yfxv
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
AhNESFw=
    "]],
  Axes->True,
  ImageSize->{304.6288329154884, 432.},
  Method->{},
  PlotRange->{{0., 10.}, {-8.414709848078965, 8.414709848078965}, {-10., 
   10.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-2.614795819930848, -1.5733288365783258`, 1.462012035539807},
  ViewVertical->{0.5103819553645935, 0.26647983928694213`, 
   0.940529747539664}]], "Output",
 CellChangeTimes->{3.4769937922742443`*^9, 3.478001338899884*^9, 
  3.4780014659855413`*^9, 3.4780136752910624`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"SphericalPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "3", ",", " ", "5"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
      RowBox[{"3", 
       RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}], ",", " ", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", " ", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"Mesh", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"5", ",", " ", "8"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.476992421984334*^9, 3.476992442958756*^9}, {
   3.476993079948702*^9, 3.476993081146887*^9}, {3.4769938186980133`*^9, 
   3.476993822376913*^9}, {3.476996834988544*^9, 3.476996870217019*^9}, {
   3.477053507572288*^9, 3.4770535173778877`*^9}, {3.4770536989373093`*^9, 
   3.477053721937964*^9}, {3.4770546936351643`*^9, 3.477054713631536*^9}, {
   3.477066928435214*^9, 3.4770669355190287`*^9}, 3.477066970012047*^9, {
   3.47706702504574*^9, 3.4770670711636677`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyEm3lYTt0X95uLUpF5jAzxyBwK7ROZKfM8JGOPec48D5EpMxkyRwhlSNqn
FIUUDSo0z5pLA5W3Wnut+3qf9/1dnn/uq32f++zv/uy1vmudfTxt7VZOWKii
pKS0pp6Skmr156QPznesW2+3KN89sL3n4A6D3v6p+S+PXUl3DfFy82EXb2T+
eThggcWCLi77t33IYzf3fDh0YssH5qQ2y7tVi3UWR9MDf1/slccMLRZojzaK
ZK0CLjdz+7LN4n1aVcCoPrls9dySLXLAV9bdMS1e/8IeizapZy/7RGSzsXM9
eyzRSGSPn5SM6VXnoEWb4ak2s5v+YNssh2VeLUpmC3T4msIuThZBM+6sfK2W
yeab71h0+Woa2/+uUEet8JhFyAD422w6fO+rtCW5tdsJC5/B8PsVQ+F+d9rN
e2RreNJiti3MNzEZ5l/1u2iG3oxTFt3ngb7MFNB7VFLTMJtw2mIDg/W4pML6
Sou2vPFVP2OxaR+sf4kx8Cjea3t3zpozFoczgVdwJfBr2HxFlfeZMxYHzg1z
q+Hr/Sq9n+vyrRYLN24c2DJ1vgVybtJrc72Cei9ZUuGGgorcaww5/6Nsc2d+
0jvmv3GdtDvsMUPOJZWNqq4WhTMf33pqxdkvGXI2c16SHWEay9bMslzCp/oz
5Pz91rLg8PoJbN79ymOl294w5OzX6/RQ5cgk9tS7/NObme8Yco5d3sjq6MxU
lpJ897p3SghDziuDuo+ZfimdvX6WGfF8fxhDzi+8Kljrk5nMpuyjSULqJ4ac
x+x6Kx/p+4OVqnRMWKIdzpDzsOHbd8zbnc0GrtXKc61eB3LurR3ab/maHNZi
5HB+5WIEQ87KesPbuKvmMpeg/turBTPkXPigz6WadV8b+Sm35vfIeUJnlwxj
p40WVV073hzzdg1x/uM6vG7skqfs6aID7SvjHhHnbRkdo99YvWHy47xx/f39
iLOl+9aCZ9XrjE4K61XDBzkHaZ20ifaKZDbBvScOHPeJOMdMaK3d8EosGzXk
1Y1o80jivDJt972LveLZkojNY1smRhNnteNbw2I8Etnb409PDe/3jThnnhoc
s/pYMnsyc72LS/XvkPO+su0m9bunsof12vyWUxKI88HzAQHbDqWxFdf6BoaV
JxJnB+eF7Wv2a9fz0c9q9hk56/czW9VtQQZLWTKqi/PaZOKs0WTE4W3fMtjU
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
eC4kzn7wHMhfwXMhcZ4B5xq+L+GcgzhHw7kGbwrnHIp4hnMN3hXOOYjzfTjX
4KVwzkGc7eFcg4tzDuI8Gc41uDjnIM534FyD+8M5B3GOhHMNLs45iPNLONfg
q+CcgzgPg3MNLs45iHMOnGvwsXDOQZx7wbkGHw7nHMS5Ppxr8D5wzkGcT8C5
BleBcw7ifBbONXgRnHMQ5+bPNGrO6V6JczvibLnmac05na84tyPOLu0715zT
+YpzO+Lc23JizTmdrzi3I87v8jxrzul8xbkdca6b9KLmnM5XnNsRZ6s3G2vO
6XzFuR1xXvDTteaczlec2xHnd+Osa87pfMW5HXHu+qpHzTmdrzi3I84Dtso1
53S+4tyOOP879qO62YTTvuLcjjg7m1vVnNP5inM74uz5vFPNOZ2vOLcjzuEF
fWrO6XzFuR1xjjrjmLVqrDtbr+TraDpwD7vpdPFty6I8tr/M3WzOo20Woa5t
HVp0m0R9yK47X+3ve2ey5f+Yndm+1Y816anrtWlvErs5TPniii9prGd8XNp+
FkPjQ+dH/tnv8oOtef29b/lrf2bZKsRU+hnHVrlHv++9J4MNHbnHeE7TrzR+
0zrOcWuHHDZs3YJudUNfM9e1k+OStkWzYWtycnQTMtkwzZTIX+e/0Xgrnz0/
XcblsvjASV6TLwSwG98Xn3Z/9ol1jziU5ZKZxVyXeO7Zw7/TeGbQbasOzfPY
myGbx481CmR6AwzfRK8KZNYm2tE1OssvtDQdvi+Oxjtfe+rmtCOPySWJ+v2X
BLIs15gdw73cmUvCMytLpzym26ava2z1dcizKrS5t1PJD3bJoGxQcEYcXX/G
w+veYEM3Nt9h1OjywIvEOT2J/cqYn8jMtrRr+Wh9MnEr2Bza86xbEnvhZ1Vg
mJRCfGxevXvY40kyy1+z0XuydhpxmPNt18I521LYuoAZd5xz0mi9iUdSV51W
T2UfxvdZ8GdfOq3L4FPdERHK2cyh7kMty+r7on5rqXB0m1GpTPOxV/9Hn9NJ
f7Be+qYuba+zlDk2f3IX3yT9YalLnR3Kw1n7/Dqdd7fMIP2vvjtOcloZyU40
aT1Gr3rfUP+538tfX7oaxRpePTzCZtwP0h/Vz0aOOviFhS7UPHd1STbpb+LY
32N0h2jmGFkSXBMXqL9xpwXPvSaksvTWOwaP/ZZO+hvUiUpSWxfNLqzw/LZn
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
iqvpu1HP9JEOh4uHfuIbDBudq+m7UI9uVIlLp4ufqM9BPZfj7e+8GHODX4BP
0hOy2LmxPDOe99KXlGv6VdRjnfdhlPrDBOpnUI910tfr6zYn8m5hK11qnidQ
T/q7POMr9ZL46mDVhJp+EvUM3XWnwb1FSdS/oZ5VwIW3Ak6kpy/o4IGgi/Ts
Ff3AKNBFenqBDj4KdJGe9aCDJ4Eu0tNc1GsJdJEeN4gbvhDiiPQsgX3iSbBv
pCdB9BV55rX7RnrWwz7xENg30uMA+8THwL6Rnn9F3VeGfVP8uzXIK34N8ox8
8j7EMXeDuKb3JlcgjvltiGt6b1IJcczZ4dq4pvcm9hDHfO3V2rim9ybqEMfc
HeKa3pusA9/hs8CHSE8PyHPuD3lPeoIhzzmHvCc9bSDPOYe8Jz13Ic/5Psh7
0tMN8pxnQ96Tns7gy7wf+DTpaQI+yOuAL5KeePBBbgu+SHoWgQ/yMeCLpOcR
+CDfC75IeiaBD/I+4IukxxvqFl8FdYz0FEGd4A5QN0iPFtQJPgXqBukJhTrB
W0HdID1foE7wC1A3SE8DqBNcH+oG6VkE9ZKL+knzrod6yUX9pHk3Qb3kon7S
vPOhXnJRP2leFaiXXNRPmvdlYY8d6x7kMrl0dpMJd0KZvTTc8HaKH/Nf3XbH
3mlZbGB9l/2HLyTS+BnjCd8u10tm/drbe5mNz6TxT4caHThtEc70kwub7OiR
S+NOk4wKqla6cMuIhivmuufR+INu5zbuPR/Fh3qY9Ot/IYfGJ+/WdJqxOoV3
/nXlrqNpBo2PXW/vfHbUDz5gcEGnkc0SaFyjqq7vE4M83m1ISHHRiyAa/5Dv
EJs1N4+vd3zU494zP47jvaqCWzzsmM0DG+rObd34O43vnm+ZfDkglQ/UP3Nr
ukY6jVcMHmvNkmJ4uKm7ZbPsbBoPg7+Z5pDa72leU/g9c4T70bg3zMdMYX4a
HwP6WAjopfHhsB6uBuujcQnWz0cBDxo3AV58HPBT3Af48mvAm8bFfnCribX7
Q+O6sH/8O+wnrbcH7De/AvtP430hPvgbiBcafwDxxH0gvmhcPXKi8z+XXZhl
cL+cOzbzWcSzvZpvK/JYL4+xLULi81ipy419PXZ7sWzH7Nvdn7uwbnAdF7/j
eH0iXMfF7zhe3zwqdkq3wJO+PmPG764538M+2UKv/NPhuFO+mvn3Xtecv2Kf
/I+vR/ALz9O+LB3OxbFPDjYc8UJj6Bnf9eWp02rO8bBPNp9j1kVDdbvFwrHn
d2+QrOi5UszHzn7TmVo9vwXOK+ZjD76bfK6e3wLnFfOxI3fTa+a3wHnFfGzs
5p0181vgvHszD+3vPCyP+YcnBu1p7sX+PX0r53lZEKt/4taEb855LKnv4EFD
rb1oH93hOi5+x/H6sTfTBs7c68WNem8yVk1WnE9GegFXo/BnN9edOmOBPFsP
Pv4zfaiV78sDtX8Tf/E3m3j0dc33Fjgu7svmwzz0fmEc8PIV/Oh554bH9pr5
fMX8tI8LO6tpJLR6wrdrjdq6YFI23+Fud+3n3O9sfpcSXZPmnjz2xSCDke9y
+KvWljOTP0extebHX/tHenLb6YOUhiXk8on/RJ26XxbKPgAXLjhRHIr7MgeY
h+H9xX2ZA8zD8P7ivuwgzMPw/kr/3/+0JEcDu47Dd0TS9wd0R3eeE6MptfO0
vOs+K5XG9R6qqP1cqClVbL/cPd8zj8Zv5A1t2f+2hvRJamR+PLyYxifvm7bj
yBV1ycazV28Xx3Iaf6L6TmXYBDXJO+XTxNU5lTT+fFHAWefXKlLMsvgPG8qU
JByPFX/j9zj+Uvwe74fj48R8OD+Ofxb6UC+OV4r14Ppw3EisH3nguNP/xUuL
xuseujzGbNPdgf+L846QjOC1oyLY1YvXRjks8qH7Lut+wf5d5xR2eYpWH7/+
H0jHi9r15bDWC3OvehVEkO5RD+89mnuniD3d/2D1pT1faZ1y+CT/V83L2PxN
vT0d4hKIy+rrj3R3swpW3mW6ekRAMkOOcc49P95VU5K+BF8MOLQ0jSHn1Bt5
zVWfKkvpbwNyDN5lMOTsFfYzako3VWlO0eLYj9FZDDl7DGq0JWuJmhQ2qWNY
ixPZDDnP6p00OnieOq0DObdyrNv4cyMNqYfZ+4rlmbkMOfe8cN/Sb7eGlNC8
77G0XXkMOeO6Me7+xjloVNOQax/DWOjTSQ83fXxHnK84rf156kkCixvtO3ni
9VjijOtEPjjfmKZBk+xG5LMxrfJDppdlEufe9zf1syktYse+vzG3is4jzrq1
9ytlpc4rIyPuFBLn0nFNdIc7/mKNPmy3Wt/5J3HWXH68yz9TKxn+DjkPfdDL
9MKbP6xRrwbKbaeWE+eXt/cfj0tXkmYXZrg9L/lFnNPEfuE+I+eYl1cbGo1W
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
9JzIvc1j2fav73Y8ffObbfzSxehkW2UpebDThRt5hTTe/R/1GQu91KSNo9Qd
Cjt8Y89PttDJ71fKDO5/0FlspyI9ro2fYhqfN33Rnlbf1KUtnkY+h59+Z9p/
VCrt5xSyNUoX7LWXqErGbse3bln7k8Zzg8dHrPfRkL5vLE/Ymh7HVGdsXrX7
ZBYrqrc6w7S7mpQYs7LU1aaExsNL2+m6TNQUzxXxbHvHS1rXGiawbkJnS+cw
r+LkEhr/EHfrjNsVTalozovWxroJrCTqpXLRgUCmc+OyVk83TWmruA7jcK9V
fb/MMjXp+K/rfc90K6Xrh4ZkzPg3UmaFdRuGjIzxJp67Cj5mfG/0ix3d8nWi
Y49K4vZgVtSw+VW/2QfrLL2eE/8Qn0YdpMPBTpVMfcSdljsPKknIodWNiDa6
PlXsVZ7DB5NeyhKuN1Ge/cj24B+mtWX6lB03lCVc17vKQ/ZzldWlp+K+qL//
3KAN3fP+sKDM8Y/V4pQl1L+hk7N1/cynrFmbVx+bDfAn/VNN1nqYluSwi2of
j85rpCKh/hHtyx67GeTTvqF+8JV8tuzpykUDtqqR/tA+XkddbxWwq94HbB2s
1Ul/z7edrcpbFFJcoP4w3X2N61f8YdcvhD0zS1Wm57vOUqGx2tRCts08NMTO
SIP0/3Zo7N60y3VWb7F3qFypyNPHIj/7mg4fm31IlfRXCd/A/UT9NsIXtor7
o/6XIv9n2LQ/fkZDk/T7CV/COEL9+LvizIVfx3XVIP3HhL9YHbjZ8GG2Jum3
vKf9zWjkSb5z3qzjoxYq/Cf/yIsm991TufLqJvPLPir4X/1zyers4HReLPIA
9UfNNTt05UgGvyI4o44xtf6dyWOVFyobddYg/Y8C76va9c7ieSLPUD/qQh2o
/0iz/GUfD2Zx5IDX3fB/0KrJw8f8yQS7gU0XKXz1em09KOHylXTtgTl/KP4D
37ZfsMGmjDsIX0H9L1fNMFntVs4x3lD/Bg336x89fnEVwQH1W9bLyrSw+82b
Ct9C/UrwPbfKHzQkQU+hf++Y3a/3v/zN+4l4QP3veicGNVjry9/DJ+nnoJvf
hHWQfqFbfgProPwVumUfWAfFgRLoljfBOsivhN/KQ2Ad5EtbYR4+6avrpI/O
qqRfxLG8H9ZB+/QYuPNbsA+kX8SNXAxxRPpF3MjXIY5Iv8hPOQbiiPTHQNzI
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
s68NbakpPxDxgPqN772sSJkbzDvDpyL+QbcMdU2F9L8F3fIWWAfpF3kij4B1
kP7JoFvWg3WQfuG3cj1YB+kfCPPILZx6FtyzUZw/iziWW8A6SH8WcOcc9oH0
i7iRr0IckW8L/5TrQByRb4v8lBMgjiiORdyIPuAn+XA+xI3sD3FEftscdMs4
H+oX+SP/gjiiOBNxzxtAHpD++2K9z0VdxfuJvJUPi3qH+oUvyHNE/UT978W8
OqIOo36Rt/IAUR9Rf3+IG1lNXIf6Rd7KzqJuo/5E8B1+EXyI6uw0EQ/NwUdJ
v/BNeT34KOkXvin7go+S/n1iX+6Cj5J+4ZvydfBR0i/ml1+BPnrOFb4mnwEf
Jf3/gO/zvlAHSH851C35JNQx2k8VqFvyMahjMuqfB3VLToU6JqN+C6hbciOo
YzLq14O6Jc+HOiajfuGb8gv4PekfD3VLVoE6JqP+jVB3eUuow6S/HfQrXPQv
pN8e+hJ5I/QppP8q9B+yrdgf1G8OfYYs/Jb0y9BPyBOgvyD9S6BuyUpQx6iP
NYS+QW4u4hf1n4c+jK+Fvoz0p0Ifxp2FT6D+TtBvcdHXkP5d0FdxjAvUXwX9
E8d8Rf3noU/iMdA3kf7GcD9Z9BGkfxb0SRzzhvIXfsfnQN9E18c93vCj2b4w
H4xHvH7ax8Kzj97pSk/W7Ovt5PSTfGlVp6IJ9/fpS7O/BTxoaVhKvnRieaH2
p1X1pRG/Tw82ty8jX9o3orj0o1ED6efwqQv95peTL61UHRi7yKWBZPj+/pHD
Or/Yf/JCwhNL1DMkf8XGhjENpLmhdadumveLfMnjS4eoqbvqSA0XrTf9NUWN
/N866ILHnzna0jil0Uap4erk/4GB9s6OKTqSxS27h4fqapL//9u64TK9erqS
VtsRgSqlmuT/f3Inu0ZF6Ep8olnrSWe0yP+t7ebWnWWmJ111LQnflqZFPr96
85IX3WYqS9/Ph3wecUWb9MwqqLvT7KqKtGW3v+qZG/VIj2FxxeOxbqrS9hdN
09eN0iM9P++45DdaqyZ962l77/1QfdKz2sPhktbv6nU+m/Kq/JGint5Xvaq3
iqlLIQ+dFyzJUNTNBuqzGy6sk8M+PEns8jNE0Z8oG4W87d45j/XVGxb+Tl/R
X5kOdD4xaU0+exUfu+iuqqK/suUZL1q3KGB9l01eethH0Z+cXTizLMqpgF22
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
p7c6v1bBv937HZlE+zmX67IhnOBxeL+qJH9o2Oje8W9U8D0ppAreW4TH8RPl
lcT//yIVZ25euPZDlV/S2dh48c3661HA8bmxurHa5lSy9mP8cd/qROm8z+D9
oH7wnnfU+3DzqSbpbZT4rb993VZm1Uh6nFZpbRhuHksWcNb93mmmS3pM4P0f
+F4n1JMb6+Md7fmLtEvwuK10S5lHPec7+rpcaBVKln97fXz0sCxJD76/Gd+r
jnpGXNXZP8cljah2XPUo1llN0mMzuOe1DaOe0hn79+QGPPqr5wi8h+Oo+B6x
v3q0k/xavwr+Rpee9GkxR1Nd0pPSrqDmtkMk3b+y0CxiZYak5zO8PxLfY456
lkQ7N0pvVUpn3JxZWJCiIun5vf3wYj+nH1Rhh/gp6cH3dsTAe5BQD23ZrumW
1QqCwD4lPfsYDprGcEl68H2N+N5w1GPCcAjLGC4pXibML9Se+UnSA36h+N4h
1AN+ERozP0l6IE7UkcWNoh58P2JreL8r6oE4CcNY3CjqWch4Q08zHkl6vOG9
G/g+ItTTnvFGyGI8kvRsYDymnxivJT0v4b1+wGtJzzbGYwq8FlCPDstDCnkp
6fnN8o3ie4pQzwqWVxTyTNKz/Vfg5GGnXf0h7yU9x8T31nn74/uTUc+uQKcA
v17B/iZMTpDFC3lNZH4m4GcpXmqQD/0gP1AP8jhFxh/wM773SdLTAfIzDfIV
9SCPgddE5meC9UOyC+rFA6gfqAd5LM+vGqhrrlDnUM9GqF/lUM9Qz3H0iyzf
NcX5fJc5rKOoR6fP6o2Fy2M58LOk5wzwWF5/qiHucjwzIe6VMjwOwOOFsnr4
DHjoJ/PPBuDhE5l/oD7T9bL6DPWUmsji1RbyokgWL+RxQ1l/wTztKOOPCuTp
ZBl/kMejp3ismrr+CievG9ZQX+V1oyiR1Vc5Huh3Ul5APaX4fl7UYwp1bB7U
V9QTDv5ZA3mPeqCeUqyvqOcV1NUA+EQ9ZyFe86EOoZ6vgAPrK+pZDjiwvqIe
Z+DPMqiLqMfp374j6emYMXr2ursqfNGalZZV174S7NeNSmz27xyjwruntfyq
dChFOp4ZY5Oe/1yJn7vdqGSs5k/p+LC3QQ2nOSvyb27csfNvVS4dXwL9rJOs
bgNufpWsL4Q+btg6cnUtCYFP1HMl74uqYm4lSd/hYVB/dcHj8UDoT0GyPrUI
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
J5YST2zb/PDQ3bSV2wTnQz9vnVW3RMF0D7cN8KGftY/ca7n+liXXE+xBPx+y
mvzVOcyGWwz2o58b110nWkpHuZfgL/Rz5GnlwJtlx7kP4F/0czvrvR/jL53k
UA79vBr2m3AynqxjPKH9ZTzZwnhC02U86Qb7TepkPFnIeELnyXjynPGEesh4
AvtMaB8ZT14zntAQGU9aMJ7QRjKeNIf9JjtlPAllPKFhMp7YMZ7QOzKeLIP9
Jq9kPAlmPKH7ZTwxhucbN8vqyVpWTwKNZfWkD/MvNZfVE8hDuktWT6rhOcl+
snoym/mXLpPVk7vMv5TK6kkveK4yXFZPgph/6UdZPQHe0ymTnz92nniGQ7uA
39RtrUts9x4uHOIHftNp31Lbn6zw5BA/8JsOveU46tTTxxziB35TTmHCnel+
vhziB35TXqm3RYedzyX+Ar+pTRuFC2qJ/hzih79Tvf1qt6tyKIf4WzN91M7s
+ssLE4M45Elrdn7ap+PtOO3VrzjkyTuGl765PrDT1LHBHPLkFLOPburb9O6R
jGAOecL2JRXSjv2XtfGaGMIhTyDONNHwtb3dhhAOeTISeLIU8k/yJ/CkO+NJ
IPJkIPBkBeQl+jkDeLIR8hL9jM/Ttoe8lPIReDIX8hL97Ak88YG8RD/3A56E
QF5K+Qg8oZCX6OetYM8wsA/t2g64e4MdiH834E4BOxD/AMBdBXYg/uWAexbY
gfgFwO0GdiD+r4Abnh+W8H8C3Mh3xN8J6kkDVk8o8qQT1JNt8Nwx8uQr1JNg
Vk8o8uQ81JNbrJ5Q5MkmqCeB8Jwy8uQz1JM98Jw78sSjwMq44vo94kFe68ek
3SBHVpd0blpUSMa0LegTSoLJsR3als2Nn5KmLa3tT9oWktt1mxZ8X/CZvLX8
0MnP6BXptNDl6cnHBSTu7qnxB47V41pcZNkq/g0xH1zk8/JAPtm1bPCRRb2S
icPwACN1r6+kwN734JrqbGL62vPsmEspJGvd+NwHeyPJ0OkVrbu+yCR9d899
ND0sjXzP0VcZVBdFLHI+5B/rmU5UNQqMdnlnkHU3jw+2HBxLJrf61i1gYUp9
PbbZcHRuFhF+t1BY3TyeKMSMavDsSiJ5sGmk1Yh72cS9X8eT4bcTyGzL1OQN
baKJS2MdY48HueSDvbLOl7IkktzcI8LsiAeZZnziee23h2QoF/xiuNNLcrfH
rc1mQiEp1T6x0z31NZm9Y6pydulX0rLXzNHlegXE551avt3iL+TZz6uB3fUT
ycGLHxtb/sghoZqmgw3GfCOHhaIjHex/kGUNrwdeDMkivaL7H1qR9Z10fF6d
4/09lehsKYssnZdBLiy+4jqu+RyuvPe5Ott23mTTir35TbMLyZXkHXrhZCNn
eupLbcn7MOLS/+2wPtsKyUytDSW1n3ZyDydYFY5N+EqapbmtbXiu/jqw67PN
hsMPcMKPpWHfLsaQ8ODXC/fNzieqka0eF5Yd5iZNutftrEIqCe2VHz+GZpOF
5k+XjlQ6zrne3+xUGZxOjtIHI7vtyiQm60d2GR10grtzfWvMtFFZxG/Ozzy7
pDSyZlfVuw7dT3GD2mYNtTfPIUMevkp/ppZC9PuPmdNukAO3PO/wpPuT8wif
OLXyRWYCMRqkcDJisyNnNvrYvWdv84neWaUndEUUiTXquajWxYk7cjV617iq
QmIaYN6mrONt0mtg2R1rq8fU71iH8y+nBxLNvr8zmnoXkmkT2y/ucjuUHptV
01S4HEEGhpE1WwvySffH7dSrH3+h/c1P6HV1SyQj3/QrtPfIIUaG3MxnTt/o
78M55iPDfxDjGZ9dttpmkWc9728b3ieKhnxd/71R4zRCO6seW6eTQZwc+LOX
Z3rTA1VfLkWbuBFPw2iviORCUvv1+fqq8tf0mn9Cy7jFz8nmXO7umSX1x/u8
ufyrLpxenrrovN7NYLLVrPPtebsKSHbJgmf+77/TZ+carjo28x3J76Q3VqdH
PiGJXg6tTOKpvpFacJv54eRVgVd0gk0uiQ3UffrgZTJdUtvVa8nMCNKlMLC2
hU02CRnzoTbfKJUyfN9JgIg7k6jprUp9aJxOOdGeaNJWtDON5J1ceduoaSbl
RftjSV/RLz/IsYgjh3p5ZNHW43w3fLOIJ8s71Ew73T+BRF1Z0DAhN5sOFf1Y
f38g+vc7uWC9fYdRXA7ta14+x0spieyaUutMz38mM9t/sk3ekUt1xHgkERMx
TkHkJj9j7XifXNryp1O3nbVJpLWiWezOY84kf2zIoK8GwXSZ3fjoq3MvcQbn
jK0PuRaSpUuKB1k6htO3Aa5rk9vd4T5cejzkz3PhyowXdHGbgS02fnvAbQG+
9Gf8ol7XOhdM/f2UGwq882Z8pAdLlCOa33rBuQNPbRh/6Z63Fw175wdw7sDr
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
Wabh6nzl8XXzAjcmE6UHPw8v2ZpHIm8FPN57So0PCRtW+Ukrh6gcD2h381Q5
UVzjfLx1NxV+/prthVdXF5CpCokrB82sImN1fV5tO6vEz/Ds2X9S72Iyvu+T
3w1f1ZJEtdpTFUEKvNZLh0dr727l4i/+WjH2yQfSvLtG6ZcCdX7thM7P4x7a
cqOmj31SHv2DnFpdtCX1nDrvsuzx0wODHTgLi6xBmVPyyLlu73W1CtX4Doe5
1zN6nuc0dj2xS+pXQpaoe4Qu+q3Kz7Nsdz7T/Aan5p76Jv5QDckLif+x3USZ
3/tu7xcvRRfukePxwdUzFXh7f+OMxIuK/P0eS+4V67pyjeN9tlb1VeKv2+mF
Tjf5Te5uHp91OekO97166LAN35T5NQbVDwy0qknM4nO6Mevucv5fhoxXHKrK
Tx+ao/hhczlpOrXF8gBXd86z2/tPk+ap8ZvKNhw0sSsmxbVmd6ec8ZDmieCc
LItdXbQP7PTkTHafbu5Trc43C3q+ef0zf7IqfYDFKPKOzgpd8VX75Xdy1ce9
2DRUnTec8mP5kqpkatV3ZHqb9flkksbbMxHb1fib04utfp3IoWW7opSv15ST
XxXlT7v9VuY7t1tYfSa2gFqFLfNY4ldFeh5o8eLsSiW+Nt/b2WxVMe352PRt
09Z1pObzhZsfTyjwnwtHb06v/kBpspPWj5cCMdbVD7ueVX/ewEZThlsk0ze2
EQG3VSOIVbmRau+j6nxh1OuDOy2z6UffnulG5glETW10iGK0Gl9yOWj5x2bF
NGOA8aL0gFSyptYzYHKyKr96WoHO3OFlVG/fSNs+h7NI68i1Zp1dVHjH9+Ot
DhtVUqOlHub21Xmks1lztfPtlPmh2s6laW41tFbEV0QUCv7gVuRPOjeOVI/+
TXuJ9vwkvUQ768i2DrdGzDJVFKpF+0uIm+iXKnIo+2CnFEsl4ejuHnOWLSoj
VoaHb+eklxHzI8Wf082VhWmiH8tJC9G/9efp1bzlrI4qwoUrUaFKoyvImSZm
JiaPMon7tftrsy6oCDfFeFQQczFOsUR/2JmPA8Pqj1/u2LZpXQUpPab98Uwn
b3Ki6WC/59fiaYn7vWul/BPOIP/a+uUv1fmNjBd06cXNQ02WhUp8Wc74RVfe
X3vRgnzhooF3zoyPNLvATvvbrwiuCfD0JOOv0HB34JGUbd+5x8Brk85Xciaf
DqcP7O7sKGsVTPfWJjfZ+0OdX1/aq/WvAz9ow4GBWg79vtHmcx4o2u1W5+fb
bYs9uC+HfuvdkbY9m0idjrb/oCuo8UuyD95a6VRMBz3ZYNR+Uho9vaJ92kJB
ld8W3Pthxf0yqp4VZrpGPZuWai21ub5Phfeav/ZBiE0l7dR5VEbjXfl09jIj
k9KfSnwz35QYc7VaGiXmfxE1EeuCIp86clreHEMFYYRYL35SVkfqSN+Duroe
uxSFytV/6kspDRXrThUZ2uj9p9CrSkLB4HUJqQfL6MUbk4Z3X1JGIn8eNag8
pix8EOtUOa0R61cRmTFo86PJA1WEE3ypz/bZFdTK+J1v0dEMonx4TZrjDRUh
Xax3FVQQ62AUGeCtMWd7fZ9YXPAl9Ej9daiNZuGM0k63SRfh7iGd6k90+8D2
ray+xdKh0d26HnyozkfN3JjaUyGWfpl023/j4Qz65KG62pLm6ry2WHdT6PjX
6aTZ3EKqEP+nHqvxw8T6nUtvXdupGhVVQXeLdV2ZPyPW+0Jque7iSwvranpD
7AOKvLLFn/5QTI/b/Nrn8LWOeoh9Q4E3fP19rtNZgbQX67g3aSvWdXX+FYs3
mcfiTzDu44qmLtN/sIxrCfVlOtSbVyzPaRLLeynfiwRRju63DLWZa3pGqk95
rF7ThWN01BtNd+GwbuswHLQuRMRFEY9Skdhf6TzWbyn2WR9tumJQsgLfQ+yL
JaSR2CdriO/5oSGf2irxo5w8RwQWlJKXK9doxe+rIDVDG4dqd1Hm48T+Wk5C
xX77k0w4/rr7zUJl/qrYjyvIcrE/5xIFh7xBantVeF2xf1cQD7GfJ5M9Tfu8
OxqowjcXcVSQPLH/hxF7mF9R+P2lYskxX/L8q86lOeXq0rxBnK+F1w8/Qe4k
fA/lGd9/kkabmvk12KDA9xfzoJYoiX2ylPRmvOaDgc+/GI/JEMZr/hzw2UHM
szLicfsZP/e7Ej9SzL9S8p3xm0QwvkOfLiJnxXwtJ7fNB+W/9Vbm08U8LiAt
xfyuIDYkJ+WzqQrfTMz7NLJP5EUFeeNqvnaTlwoviLyJIGsZ70lflgd8e+C/
t/3Q7UVT73DYR9Whrx7IyT1A8t04+ZyiM1dKl9Ex7hz2Yy3ozx6tB+1vN9WD
w/5tCf3coMsqT31lT84e+v1Y6P+bvneuHLfWU+JZLlwvPNx2V19DWMcViXF4
Lfkf44PX9/jvfBYvekoWrw5inymhGzZ5DNnipMA3E/tPDSlj/YPuZP2EvwN9
xJr1D2rD+gl/APrICrG/ldFD5vq0rliJTxP7XgkZz/oK3cH6DN8M+ouS2CfL
6cpA9ddH3ijzn8T+mU8OiH21ghoZrp+9eJkK/0Hst6lkiJiXFdR2jEXEVR8V
/r2Yt+HEmfUb2pj1Hz4E+s46Zo/QndlHDMEuK4ZPWM/wkhTAuYLhELQYLvIG
8DRlOARbhouEAh5rhkMYyXARCnggH2ipLI+s4PpbBfiBcYH40cXea9TK9lzh
UD6H8UwwzNpY5+USzWkA36JYPxRGXZxcYjI1hlsJ12NwHSaUZC0+UaEXx+H1
GPBPGN3b7foU3XgOeQj9VnhU86WzxaF4Dq/TgJcC2XZpq/7oBA75CbwUTHvb
Gbk3SeSQn41ZPxemzvHo+2p8IneY9Xu8nhV8k0y3rzqeyCFvoY4KXrPmt4q4
lMjh9Z4+qxfCVFY/aF+oG/dZ/gvHWD2gw6EO3GF5LtixvKdJkO9HWJ4L+izv
qQHk+3uW54I5y3vqA/kO+UCzIT/Q/zYQr1+wHoPxKgO5E/A9lO/L6jh9wuq6
oA/1fD+7b6H32H2M0B/uX8az+k6fsHovBEKdH8ruZ+hMdn8jdID7mh+s7tNK
1geEN1D/1cS+Wk5j2H2PoAL3O7dZP6DjWH8QVkNf8BP7cwUdbLqxe62iivBJ
7N85pCnrE7TutNg3hIfQL0aKfb5ej32gZ3tbFcFIvA5IJO1Y/6A7WT8RVIpY
H+nM7q+owO63BB24z8K5RTPjbs3+dKaEWMa9s3oaWk1gXg//tvbEhmWKZcTv
bIsGRUMqpLlLJdlr4mb0LCfav5VqNyytv86FeUljikaMSW5UQZQX7jO3OZsj
zY/Sdr2u0c+jglh2vqbh0jhZmsfkJ8apgpRDvZwDOGBOEo94PgAOnC+FeMoB
B8wx4hHPOMAB85N4xKMDOBAX4nkJOGB+Eo94dHMFvREX73CzRFzKEh6lNYtD
zve4y70TcalKeDy1tW7O3eXOlYq41CQ8uSqHGi409+DGirjUJTwno0nJHiNP
roGIS13Cs9q0Y5LDFk+p7iAeU+Yfad4U4nnD/EOTZf75yfxDn8j8M4r5h/aW
+UeT+YcqyfzzlPmHDpH5B+dZzZPxB+IkfJLxB+dN/ZLxB+dcTZTxB+dA6cr4
g3OuAmT8gTgJTQ31na/9iuYQD8RJ0G7qEjv2QyyHeCBOQpLZelu3SfEc4oE4
CVbF10LLNyVwiAfiJPS5vEXVoU8ih3ggToJBZpRDpVMih3jegX+mQtwQzw/w
TzDEDfH4gH/yIG6IB+IkcBA3xKMM/lGBuCGeoeCfxxA3xDMfcIQBLsQTDjgS
ABfiqQIcjwAX4pkEOHoALsSjDzh+BzJciIcCjoGAC/HgfD2cU43rb/h7D855
xvU3XMfHOdy4/oa/9+BcXlx/w3V8nDuN629zy5wPmm90k9ad8bwLNpjM0ou9
K61T43mPBrg5Z9W4S+vaeN4V7Tv9nvbZQ1oHx/OOVOzT6+p0T2ndHM+L8xCf
yezFuX8LZPbiPD53mb04D9FAZi/OCTwpsxd+LxHuw3onnhfnME6H9U487yM4
71VY78Tz6sN51WG9E8/bBc5rBeudeN4JrD/xQ1i/Ip2gT402JKsu3Fbh39xv
b1j+rYJcP+u67sbD7yT+Zq+2x3p5SusRjnDdcmrggTUjiSe3c3q/gq3v1Xl+
Z8eLNxrFkGQu5uC4MyoCdRm1qUKoIFYBfkdubokjU7OnnF15XEXQM6ussPet
oFvykhuc+JBACtl9NVFk99m8D9xft2ByZBL7Hr8P5J3Zegr1ZOsr/GpYV/Fj
56Mp7Pz8STgv4BMuLXI8RhYlclMB52dmJx3F7BY8wd6AAkfPqecdyaC9hk8a
dLYlNeq3tv34/d+/M/bpsWjVQS8TbrL2q6OP/e6TD60OKOTX/ffvTeZRA5un
nntE48Xr79vkqnhdrs6fydzi++G5D+1x+lqTqwV3SbffuV1Uav9bz4ZdTqeG
nL9JB4j3XWfpavF+TJ3/0jdMu0IpgO6umh5RRh9RC59V1Z2r/vt3jRwN8fuk
LdNHUI8j+z4pZPoI6nnKcNO5zA4J/ziGmz5idkj4XZhf6JhNH7Z2nWnDoX+0
LUT/UvNC0d8U/Xwb5l9chTlpLcS5Pv/93lWc12EOc5ZSxLlLBvxRmAOCc/x8
xPlS+jzO3ZgP89zCxPlD+vw+mAeS+89cPV3eFuaG4Ly+RHG+VCMe53rAHCQi
iJ8NpHkjOKdrvPg9Df462IP2oV3bAfcqsAPxWwJunGeC+HEO3TmwA/EXAG4L
sAPxjwfcOP8E8QuAG+aU8Ig/EXDD/BAe8W+COWY4Dwnfo/0G5vTh/CR8j7Yv
zPPCuSz4Hu1UmKuG81XwPdotYW4gzlfB92jjvAecR4TvLe22yjHO75Utdw3k
/n88MVtnVZ7tcpbbBudDP7dxS2/Bd7rGHQB86Gf/rjHFyR1vc2gP+lll6uv+
hyzucnlgP/p5dBEJtbe5x40Df6GfT24/nK8x4CFHwb/o501ca5UT5DEXD3Lo
5yswz+qOjCdbYd7fGhlP9sH8tGMynuCcr4synuC8v30ynuD8NFsZT/xhztd+
GU9iYN7fQRlPcH7aKhlPcM5XlIwnOO/vjIwnyTA/zUHGEyOY87VTxpM6mPeX
J+OJC8ztufl/15NDcp5AHtKdsnoCeUitZfUE5/8sltUTyEOhSFZPIA+FybJ6
gvOCQmT1BOf4pMjqCfCerrdM/h4Y+5RDu4DfdOo4a+0y31AO8QO/6+8j6oKe
xoZz/9YTReH4nASzvh2/c4gf+C3kn100ZGXnOA7xA7+FuemBU3t+SeIQP/Bb
eGwgtArRSuEQP/Bb0DTu4Rn/M5VD/KBP6G8Ysc3/cjqHPIHzCy9M9sXp1GZI
+Qd4hbgFZ4Ysa5LFIU/APmHFdKtmXZKzOOQJ+EPwVoy4F7Mwm0OeQJyFV4vL
C3NtsznkyV3gyUXIv//gySHkyXrgySbIS/QzzlnaAXmJfoa5bXQW5CX6+QDw
JB3yEv2Mc884yEv080HgiS/kJfrZCnjyBfIS/QzzRulNsA/t2g24V4AdiN8W
cMM8OQn/EsB9BuxA/D8B9x6wA/FPAdyHwA7EHwq494AdiD8NcOP8NsS/FerJ
Uph3hTx5D/UE5uAJyBM/qCc4vw15kgH1BOeMIU/aQj3ZDvO3kCeqrO8I2TB3
CHky9Gdv44VjvpDh16LnqBcGk1GpD/bqlBvwc9yzXz5rlEU2zjjd6tabOHL6
cfiQIU8M+NuTXml2vlRCKtqljOl8M4PY6t+cUdHbgF/b6Ni+RdlVZMLomWqd
DApJinXW1LLN+ryt3uvDT4aq8CfCWyjbLagg4eeUVrYZocsPutP6yuyR6nxQ
3q9TMd+riMfb60pP3BvyfaPWWbev1OQ1Gn/Y+qq2lpT3i/fz2KPFt9kcfmTm
8gb8yZ0PKnRWKvBRi64MNitW40+2O9alq5kOXzfnzjlLR0W+bKNhy5ntlPkf
CbOs1LR1+dlDBm1YeVSJb/D69Z0xXepIezX9MLupevzYsMp7LpXKfM7XH5U0
4zPxzzo7snV6BOmr+kbrtfEPYt4+7vWYaAO+9PR9pzOLc0kPxzZjOzypIP0X
78ge9l6fb/9l4b773mVE+eqb0IXvlfjvlt3DCj7o8jtmJ7WMnlVJzs/ROdiz
sP564vV354AyHb7Ptsl1Fi41ZHhX+nv5Bw2+9dM7ecX52vzAbe3PRi7fx6VE
VLqlZkcR4aNauVexAW89vCzkxzpHLihqm2VRYD5p69HqWICbAa/RKXt0gNJl
zvHFKKUL5ypITcWsVcdbGvCttzypzHe9xTUItkx/W/ubfOqbsu/DbH3+xshi
t00DPLmHTwNqngnqfHPXlLUnmuryO03fqn9S8uL2jT+t+mugNj/S+JnVjpkN
+ZeV7Ve/9XvE7TaKXn3LVIdXnvjcxKypFv/skbHZXOMn3PEDDx/OO6rLd3d0
e7nmuBq/fFrn1IHW3tz2GNsX97z0+LzeY+5/e6TEG2wM2jfRzod77lL3Xf+6
Pu89ZlHnPsa1ZJLlEW1i4ivNA8U518OHlHv7az/l8p7t3rSpxoDPaWu+qGdB
GInInmO8IimSFn12OzywOIXYXGhQWvDZgN//9UN50ZQ82iTCO3ur9S8yIr7G
VdVXnz8aVEItWpfTCvsByjFdlPnpFnub/fLQ5W+2eN+509NKSjp3ajh9rBo/
saPtySmuOvzMIdZztKprqEnglq8GRpq868Lq5YpntHmb7Sv7ki7RlLQrWfsh
9T050tBhxuG8+uuTzJAufjtz6a++2pm6Pkmk8a8cr/2XDfgJdp/XPx1ZRiPz
TM41OZ5FVFWHfJqrWW/H/dG37lnW0HOHHu0+t6OIdI9YVZJlrM9HnA9dsf2x
ouC3RvNSly2lpFDt3sN3/fT4X3UvGjvnqAhBHU5plHX+RS5o9tS6ndKIX2hn
tXtDsrpwV8RXTeaKuBvwkyKHxy+y0xKmivbUETfRTk0+IH2FXnJ8A8FUtF+B
Pyn6RY2P7NMle2+EjmB+qjK04wdFfmPApYRLRIm3Gzup18YBusIo0Y9KvK3o
3xoSuU/IK3yjK3goalbfX6HMV+nFml0MKCHPoh3mmHXVE46K8VDmE8U4pZO0
w64K92fUH+/x9vL6OmV+9Kn1CpOzKZkUGLXldXQmvWjUevFos0DOcVzveeGh
BvwjxgtqMWuRyivXrxJfOjN+CZVv59S0ofGcHfBOgfFRaDZhos8j12TOAng6
gvFXWLHybQjnk8IdBF7HkAf9vl6Mo3vSDQyd4z9Th64Z/qczDPiHebeOXeuU
T30PXR9QEZFML2zT7bn9lAH/boLm4EDdcrroQMmkK/uyaUfzsNmryvT54sMH
VrpOqKU9qc3Gq5lF9JZby8ApbfX5gb/c/DvoKgnqefuNrOJK6Xvv22Yxunr8
mVIrx+mjVYWdkwc34ex/0cGl32zzzjXiz48646vRV0PQE/O/mrK6UH9dZPDd
Lu2zlvBCrBd1dKdYRzT5mk6hzbcaNRQ+i/VFQegk1h1VXjPk7vwpqo2Elsrf
T2VlKQp1Kuv73f5Yf/3Z5kq663hdoYdYp5SEKrF+VROjeY9GjPyuK7wZtHuU
1jZlYWPcwYtvXv8kC8b8Xn+7j56wQax3ysJ7sQ6mkns5/a76mOoJU4u9Ol2u
vw49/CL1aF72Q/L+3Ulh8JcYuux78Wi6KIPGJLafmuVvwC+5HK0f7plOe69P
mOAV/JM2CVgU68Ib8Ppi3S2gLy3IoMatqugcsR7r87Fi/S6nT6JPHj6eqCyc
Euu6Ll8l1vsqSr67b0vPVRM0xT7QkH8o9odaGmbW0WnPQ03htdg3tPjwa7oZ
V2++J2liHadknFjXDfiLLN4kg8WfYNyN32w0cVizkcuD+oL1ZgzLc+rA8l7K
9zdMjn78OrmP47HrUn0qYvWajjJ/pW1k48Vh3Q5iOOhdhosinnmsv9JJrN9S
7LPR60f+mt+2Af9J7IsKvL3YJ9X53q7exQ8G6/DLP/kdv75NkS8+MNu7gZMy
b+LTbnJgbiP+h9hflfjJYr/9TZyKK/eqXqu/Hhf7cX2eiv25nPTYcznqoY4e
f0rs38r8VrGf55JhI7vMMp+kx/MiDmV+nIgvgmTD/MmwhG3Wk4uDSJHKs7ri
CgNpjjXOx8brh7cglwXfQ/lBIt9/kxB1ywS6QJu3EvNAg49iPOYrGa+hj6ry
HRiPeVXGa74G+MzyTInf+jJ+k/GaRvxAMf8UeNaHlfhHjO98GfCc5asSf/z4
/XFdN+nyG8U8riQXxfxW5vMHBmdGFejyVMz7IuIo8kKZrxng3V2F0+PPibxJ
IrMZ73l3lgd82nPGf37XYZ9WwmMO++gj6Kvrx2wdodXCm5PPGb5jXf5551Af
DvuxLvTn1IK5TqGNfblq6N9noZ9nlN0davzAl8N+Hwr9X1VjSlXab1+JZwVw
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
9QBrz16p
   "], {{{}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{562, 1, 551, 227, 16, 349, 2284, 31, 356, 46, 2538, 363, 61, 
       370, 2307, 76, 377, 91, 2551, 384, 106, 391, 2330, 121, 398, 136, 2564,
        405, 151, 412, 2353, 166, 419, 181, 2577, 426, 196, 338, 564, 211, 
       561, 433, 212, 213, 1803, 214, 215, 1804, 216, 217, 218, 219, 220, 
       1930, 547, 221, 548, 222, 549, 1805, 223, 550, 224, 340, 565, 225, 559,
        339, 210, 335, 2374, 195, 327, 180, 2511, 319, 165, 311, 2351, 150, 
       303, 135, 2491, 295, 120, 287, 2328, 105, 279, 90, 2473, 271, 75, 263, 
       2305, 60, 255, 45, 2454, 247, 30, 239, 563, 15, 560, 347, 14, 555, 13, 
       1931, 554, 12, 553, 11, 552, 1765, 10, 9, 8, 7, 6, 1763, 5, 4, 1761, 3,
        2, 341, 562}]}, 
     {GrayLevel[0], 
      Line3DBox[{1105, 573, 1106, 588, 1108, 2619, 603, 1110, 618, 2945, 1112,
        633, 1114, 2642, 648, 1116, 663, 2947, 1118, 678, 1120, 2665, 693, 
       1122, 708, 2950, 1124, 723, 1126, 2688, 738, 1128, 753, 2953, 1130, 
       768, 1132, 783, 1133, 784, 785, 1977, 786, 787, 1978, 788, 789, 790, 
       791, 792, 2104, 1101, 793, 1102, 794, 1103, 1979, 795, 1104, 796, 923, 
       1144, 797, 1141, 922, 782, 920, 2709, 767, 912, 752, 2850, 904, 737, 
       896, 2686, 722, 888, 707, 2832, 880, 692, 872, 2663, 677, 864, 662, 
       2815, 856, 647, 848, 2640, 632, 840, 617, 2797, 832, 602, 824, 1143, 
       587, 1142, 929, 586, 1137, 585, 2105, 1136, 584, 1135, 583, 1134, 1939,
        582, 581, 580, 579, 578, 1937, 577, 576, 1935, 575, 574, 1105}]}, 
     {GrayLevel[0], 
      Line3DBox[{1699, 1167, 1700, 1182, 1702, 2961, 1197, 1704, 1212, 3287, 
       1706, 1227, 1708, 2984, 1242, 1710, 1257, 3289, 1712, 1272, 1714, 3007,
        1287, 1716, 1302, 3292, 1718, 1317, 1720, 3030, 1332, 1722, 1347, 
       3295, 1724, 1362, 1726, 1377, 1727, 1378, 1379, 2151, 1380, 1381, 2152,
        1382, 1383, 1384, 1385, 1386, 2278, 1695, 1387, 1696, 1388, 1697, 
       2153, 1389, 1698, 1390, 1517, 1738, 1391, 1735, 1516, 1376, 1514, 3051,
        1361, 1506, 1346, 3192, 1498, 1331, 1490, 3028, 1316, 1482, 1301, 
       3174, 1474, 1286, 1466, 3005, 1271, 1458, 1256, 3157, 1450, 1241, 1442,
        2982, 1226, 1434, 1211, 3139, 1426, 1196, 1418, 1737, 1181, 1736, 
       1523, 1180, 1731, 1179, 2279, 1730, 1178, 1729, 1177, 1728, 2113, 1176,
        1175, 1174, 1173, 1172, 2111, 1171, 1170, 2109, 1169, 1168, 
       1699}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
      Line3DBox[{1761, 1806, 1762, 1809, 3351, 1767, 1812, 1770, 3362, 1815, 
       1773, 1818, 3352, 1776, 1821, 1779, 3366, 1824, 1782, 1827, 3353, 1785,
        1830, 1788, 1833, 3356, 1791, 1836, 3357, 1794, 1839, 1797, 1842, 
       3360, 1800, 1845, 1803}], 
      Line3DBox[{1763, 1807, 1764, 3361, 1810, 1768, 1813, 1771, 3363, 1816, 
       1774, 3365, 1819, 1777, 1822, 1780, 3367, 1825, 1783, 1828, 3354, 1786,
        1831, 1789, 3369, 1834, 1792, 1837, 3358, 1795, 1840, 1798, 3370, 
       1843, 1801, 1846, 1804}], 
      Line3DBox[{8, 23, 2290, 38, 53, 2298, 68, 2313, 83, 98, 2321, 113, 2336,
        128, 143, 2344, 158, 2359, 173, 188, 2367, 203, 218}], 
      Line3DBox[{1765, 1847, 1902, 1848, 1889, 1849, 1904, 3379, 1850, 1890, 
       1853, 1906, 1854, 1891, 3374, 1856, 1908, 1857, 1892, 1859, 1910, 3380,
        1860, 1893, 1862, 1912, 1863, 1894, 3375, 1865, 1914, 1866, 1895, 
       1868, 1916, 1869, 3355, 1896, 1871, 1918, 1872, 1897, 3377, 1874, 1920,
        1875, 1898, 1877, 1922, 1878, 3359, 1899, 1880, 1924, 1881, 1900, 
       1883, 3373, 1926, 1884, 1901, 1886, 1928, 1887, 1930}], 
      Line3DBox[{1805, 1933, 1932, 1929, 1888, 1802, 1844, 1927, 3382, 1885, 
       1799, 1841, 1925, 1882, 1796, 3378, 1838, 1923, 1879, 1793, 1835, 1921,
        3381, 1876, 1790, 1832, 1919, 1873, 1787, 3376, 1829, 1917, 1870, 
       1784, 1826, 1915, 1867, 3368, 1781, 1823, 1913, 1864, 1778, 1820, 3372,
        1911, 1861, 1775, 1817, 1909, 1858, 3364, 1772, 1814, 1907, 1855, 
       1769, 1811, 3371, 1905, 1852, 1766, 1808, 1903, 1851, 1934, 1931}], 
      Line3DBox[{1935, 1980, 1936, 1983, 3392, 1941, 1986, 1944, 3384, 1989, 
       1947, 1992, 3394, 1950, 1995, 1953, 3386, 1998, 1956, 2001, 3396, 1959,
        2004, 1962, 3388, 2007, 1965, 2010, 3398, 1968, 2013, 1971, 2016, 
       3400, 1974, 2019, 1977}], 
      Line3DBox[{1937, 1981, 1938, 3383, 1984, 1942, 1987, 1945, 3385, 1990, 
       1948, 1993, 1951, 1996, 1954, 3387, 1999, 1957, 2002, 3397, 1960, 2005,
        1963, 3389, 2008, 1966, 2011, 3399, 1969, 2014, 1972, 3390, 2017, 
       1975, 2020, 1978}], 
      Line3DBox[{580, 595, 2625, 610, 625, 2633, 640, 2648, 655, 670, 2656, 
       685, 2671, 700, 715, 2679, 730, 2694, 745, 760, 2702, 775, 790}], 
      Line3DBox[{1939, 2021, 2076, 2022, 2063, 2023, 2078, 3393, 2024, 2064, 
       2027, 2080, 2028, 2065, 3401, 2030, 2082, 2031, 2066, 2033, 2084, 3395,
        2034, 2067, 2036, 2086, 2037, 2068, 3403, 2039, 2088, 2040, 2069, 
       2042, 2090, 2043, 3408, 2070, 2045, 2092, 2046, 2071, 2048, 2094, 2049,
        2072, 2051, 2096, 2052, 3410, 2073, 2054, 2098, 2055, 2074, 2057, 
       3412, 2100, 2058, 2075, 2060, 2102, 2061, 2104}], 
      Line3DBox[{1979, 2107, 2106, 2103, 2062, 1976, 2018, 2101, 3391, 2059, 
       1973, 2015, 2099, 2056, 1970, 3405, 2012, 2097, 2053, 1967, 2009, 2095,
        2050, 3409, 1964, 2006, 2093, 2047, 1961, 3404, 2003, 2091, 2044, 
       1958, 2000, 2089, 2041, 3407, 1955, 1997, 2087, 2038, 1952, 3402, 1994,
        2085, 2035, 1949, 1991, 2083, 2032, 3406, 1946, 1988, 2081, 2029, 
       1943, 1985, 3411, 2079, 2026, 1940, 1982, 2077, 2025, 2108, 2105}], 
      Line3DBox[{2109, 2154, 2110, 2157, 3422, 2115, 2160, 2118, 3414, 2163, 
       2121, 2166, 3424, 2124, 2169, 2127, 3416, 2172, 2130, 2175, 3426, 2133,
        2178, 2136, 3418, 2181, 2139, 2184, 3428, 2142, 2187, 2145, 2190, 
       3430, 2148, 2193, 2151}], 
      Line3DBox[{2111, 2155, 2112, 3413, 2158, 2116, 2161, 2119, 3415, 2164, 
       2122, 2167, 2125, 2170, 2128, 3417, 2173, 2131, 2176, 3427, 2134, 2179,
        2137, 3419, 2182, 2140, 2185, 3429, 2143, 2188, 2146, 3420, 2191, 
       2149, 2194, 2152}], 
      Line3DBox[{1174, 1189, 2967, 1204, 1219, 2975, 1234, 2990, 1249, 1264, 
       2998, 1279, 3013, 1294, 1309, 3021, 1324, 3036, 1339, 1354, 3044, 1369,
        1384}], 
      Line3DBox[{2113, 2195, 2250, 2196, 2237, 2197, 2252, 3423, 2198, 2238, 
       2201, 2254, 2202, 2239, 3431, 2204, 2256, 2205, 2240, 2207, 2258, 3425,
        2208, 2241, 2210, 2260, 2211, 2242, 3433, 2213, 2262, 2214, 2243, 
       2216, 2264, 2217, 3438, 2244, 2219, 2266, 2220, 2245, 2222, 2268, 2223,
        2246, 2225, 2270, 2226, 3440, 2247, 2228, 2272, 2229, 2248, 2231, 
       3442, 2274, 2232, 2249, 2234, 2276, 2235, 2278}], 
      Line3DBox[{2153, 2281, 2280, 2277, 2236, 2150, 2192, 2275, 3421, 2233, 
       2147, 2189, 2273, 2230, 2144, 3435, 2186, 2271, 2227, 2141, 2183, 2269,
        2224, 3439, 2138, 2180, 2267, 2221, 2135, 3434, 2177, 2265, 2218, 
       2132, 2174, 2263, 2215, 3437, 2129, 2171, 2261, 2212, 2126, 3432, 2168,
        2259, 2209, 2123, 2165, 2257, 2206, 3436, 2120, 2162, 2255, 2203, 
       2117, 2159, 3441, 2253, 2200, 2114, 2156, 2251, 2199, 2282, 2279}]}, {
      Line3DBox[{2284, 2453, 2578, 2375, 2283, 2376, 2285, 3351, 2377, 2286, 
       2378, 2287, 3302, 3361, 2288, 2379, 2289, 2380, 2290, 2381, 2291, 2447,
        2526, 2382, 2579, 3379, 2448, 2527, 2383, 2580, 2449, 2528, 2384, 
       2581, 2450, 2529, 3303, 3371, 2582, 2451, 2530, 2606, 2607, 2583, 2452,
        2531, 2385, 2454}], 
      Line3DBox[{2305, 2463, 2537, 2462, 2304, 2612, 2613, 2536, 2461, 2303, 
       3313, 3364, 2535, 2460, 2302, 2459, 2534, 2458, 2301, 2457, 2533, 3374,
        3312, 2300, 2456, 2532, 2455, 2299, 2390, 2298, 2389, 2297, 2388, 
       2296, 3363, 3305, 2295, 2387, 2294, 3362, 3304, 2293, 2386, 2292, 2465,
        2584, 2464, 2538}], 
      Line3DBox[{2307, 2472, 2585, 2391, 2306, 2392, 2308, 3352, 2393, 2309, 
       2394, 2310, 3306, 3365, 2311, 2395, 2312, 2396, 2313, 2397, 2314, 2466,
        2539, 2398, 2586, 3380, 2467, 2540, 2399, 2587, 2468, 2541, 2400, 
       2588, 2469, 2542, 3307, 3372, 2589, 2470, 2543, 2608, 2609, 2590, 2471,
        2544, 2401, 2473}], 
      Line3DBox[{2328, 2482, 2550, 2481, 2327, 2614, 2615, 2549, 2480, 2326, 
       3315, 3368, 2548, 2479, 2325, 2478, 2547, 2477, 2324, 2476, 2546, 3375,
        3314, 2323, 2475, 2545, 2474, 2322, 2406, 2321, 2405, 2320, 2404, 
       2319, 3367, 3309, 2318, 2403, 2317, 3366, 3308, 2316, 2402, 2315, 2484,
        2591, 2483, 2551}], 
      Line3DBox[{2330, 2490, 2592, 2407, 2329, 2408, 2331, 3353, 2409, 2332, 
       2410, 2333, 3354, 2411, 2334, 2412, 2335, 2413, 2336, 2414, 2337, 2485,
        2552, 2415, 2593, 3316, 3355, 2553, 2416, 2594, 2486, 2554, 2417, 
       2595, 2487, 2555, 3376, 2418, 2596, 2488, 2556, 2610, 2419, 2597, 2489,
        2557, 2420, 2491}], 
      Line3DBox[{2351, 2502, 2563, 2501, 2350, 2616, 2500, 2562, 2499, 2349, 
       3381, 2498, 2561, 2497, 2348, 2496, 2560, 2495, 2347, 2494, 2559, 3377,
        3317, 2346, 2493, 2558, 2492, 2345, 2426, 2344, 2425, 2343, 2424, 
       2342, 3369, 3310, 2341, 2423, 2340, 2422, 3356, 2339, 2421, 2338, 2504,
        2598, 2503, 2564}], 
      Line3DBox[{2353, 2510, 2599, 2427, 2352, 2428, 2354, 3357, 2429, 2355, 
       2430, 2356, 3358, 2431, 2357, 2432, 2358, 2433, 2359, 2434, 2360, 2505,
        2565, 2435, 2600, 3318, 3359, 2566, 2436, 2601, 2506, 2567, 2437, 
       2602, 2507, 2568, 3378, 2438, 2603, 2508, 2569, 2611, 2439, 2604, 2509,
        2570, 2440, 2511}], 
      Line3DBox[{2374, 2523, 2576, 2522, 2373, 2617, 2521, 2575, 2520, 2372, 
       3382, 2519, 2574, 2518, 2371, 2517, 2573, 2516, 2370, 2515, 2572, 2514,
        3373, 2369, 2513, 2571, 2512, 2368, 2446, 2367, 2445, 2366, 2444, 
       2365, 3370, 3311, 2364, 2443, 2363, 2442, 3360, 2362, 2441, 2361, 2525,
        2605, 2524, 2577}], 
      Line3DBox[{2619, 2944, 2782, 2796, 2710, 2618, 2711, 2620, 3392, 2712, 
       2621, 2713, 2622, 3319, 3383, 2623, 2714, 2624, 2715, 2625, 2716, 2626,
        2790, 2864, 2717, 2912, 3393, 2791, 2865, 2718, 2913, 2792, 2866, 
       2719, 2914, 2793, 2867, 3320, 3411, 2915, 2794, 2868, 2932, 2933, 2916,
        2795, 2869, 2720, 2797}], 
      Line3DBox[{2640, 2807, 2875, 2806, 2639, 2938, 2939, 2874, 2805, 2638, 
       3329, 3406, 2873, 2804, 2637, 2803, 2872, 2802, 2636, 2801, 2871, 3401,
        3328, 2635, 2800, 2870, 2799, 2634, 2725, 2633, 2724, 2632, 2723, 
       2631, 3385, 3322, 2630, 2722, 2629, 3384, 3321, 2628, 2721, 2627, 2783,
        2798, 2955, 2954, 2945}], 
      Line3DBox[{2642, 2946, 2784, 2814, 2726, 2641, 2727, 2643, 3394, 2728, 
       2644, 2729, 2645, 1993, 2646, 2730, 2647, 2731, 2648, 2732, 2649, 2808,
        2876, 2733, 2917, 3395, 2809, 2877, 2734, 2918, 2810, 2878, 2735, 
       2919, 2811, 2879, 3402, 2736, 2920, 2812, 2880, 2934, 2935, 2921, 2813,
        2881, 2737, 2815}], 
      Line3DBox[{2663, 2825, 2887, 2824, 2662, 2940, 2941, 2886, 2823, 2661, 
       3331, 3407, 2885, 2822, 2660, 2821, 2884, 2820, 2659, 2819, 2883, 3403,
        3330, 2658, 2818, 2882, 2817, 2657, 2742, 2656, 2741, 2655, 2740, 
       2654, 3387, 3324, 2653, 2739, 2652, 3386, 3323, 2651, 2738, 2650, 2785,
        2816, 2957, 2956, 2947}], 
      Line3DBox[{2665, 2948, 2949, 2831, 2743, 2664, 2744, 2666, 3396, 2745, 
       2667, 2746, 2668, 3397, 2747, 2669, 2748, 2670, 2749, 2671, 2750, 2672,
        2826, 2888, 2751, 2922, 3332, 3408, 2889, 2752, 2923, 2827, 2890, 
       2753, 2924, 2828, 2891, 3404, 2754, 2925, 2829, 2892, 2936, 2755, 2926,
        2830, 2893, 2756, 2832}], 
      Line3DBox[{2686, 2843, 2899, 2842, 2685, 2942, 2841, 2898, 2840, 2684, 
       3333, 3409, 2897, 2839, 2683, 2838, 2896, 2837, 2682, 2836, 2895, 2048,
        2681, 2835, 2894, 2834, 2680, 2761, 2679, 2760, 2678, 2759, 2677, 
       3389, 3326, 2676, 2758, 2675, 3388, 3325, 2674, 2757, 2673, 2787, 2833,
        2786, 2958, 2950}], 
      Line3DBox[{2688, 2951, 2952, 2849, 2762, 2687, 2763, 2689, 3398, 2764, 
       2690, 2765, 2691, 3399, 2766, 2692, 2767, 2693, 2768, 2694, 2769, 2695,
        2844, 2900, 2770, 2927, 3334, 3410, 2901, 2771, 2928, 2845, 2902, 
       2772, 2929, 2846, 2903, 3405, 2773, 2930, 2847, 2904, 2937, 2774, 2931,
        2848, 2905, 2775, 2850}], 
      Line3DBox[{2709, 2863, 2911, 2862, 2708, 2943, 2861, 2910, 2860, 2707, 
       3391, 2859, 2909, 2858, 2706, 2857, 2908, 2856, 2705, 2855, 2907, 2854,
        3412, 2704, 2853, 2906, 2852, 2703, 2781, 2702, 2780, 2701, 2779, 
       2700, 3390, 3327, 2699, 2778, 2698, 2777, 3400, 2697, 2776, 2696, 2789,
        2851, 2788, 2959, 2953}], 
      Line3DBox[{2961, 3286, 3124, 3138, 3052, 2960, 3053, 2962, 3422, 3054, 
       2963, 3055, 2964, 3335, 3413, 2965, 3056, 2966, 3057, 2967, 3058, 2968,
        3132, 3206, 3059, 3254, 3423, 3133, 3207, 3060, 3255, 3134, 3208, 
       3061, 3256, 3135, 3209, 3336, 3441, 3257, 3136, 3210, 3274, 3275, 3258,
        3137, 3211, 3062, 3139}], 
      Line3DBox[{2982, 3149, 3217, 3148, 2981, 3280, 3281, 3216, 3147, 2980, 
       3345, 3436, 3215, 3146, 2979, 3145, 3214, 3144, 2978, 3143, 3213, 3431,
        3344, 2977, 3142, 3212, 3141, 2976, 3067, 2975, 3066, 2974, 3065, 
       2973, 3415, 3338, 2972, 3064, 2971, 3414, 3337, 2970, 3063, 2969, 3125,
        3140, 3297, 3296, 3287}], 
      Line3DBox[{2984, 3288, 3126, 3156, 3068, 2983, 3069, 2985, 3424, 3070, 
       2986, 3071, 2987, 2167, 2988, 3072, 2989, 3073, 2990, 3074, 2991, 3150,
        3218, 3075, 3259, 3425, 3151, 3219, 3076, 3260, 3152, 3220, 3077, 
       3261, 3153, 3221, 3432, 3078, 3262, 3154, 3222, 3276, 3277, 3263, 3155,
        3223, 3079, 3157}], 
      Line3DBox[{3005, 3167, 3229, 3166, 3004, 3282, 3283, 3228, 3165, 3003, 
       3347, 3437, 3227, 3164, 3002, 3163, 3226, 3162, 3001, 3161, 3225, 3433,
        3346, 3000, 3160, 3224, 3159, 2999, 3084, 2998, 3083, 2997, 3082, 
       2996, 3417, 3340, 2995, 3081, 2994, 3416, 3339, 2993, 3080, 2992, 3127,
        3158, 3299, 3298, 3289}], 
      Line3DBox[{3007, 3290, 3291, 3173, 3085, 3006, 3086, 3008, 3426, 3087, 
       3009, 3088, 3010, 3427, 3089, 3011, 3090, 3012, 3091, 3013, 3092, 3014,
        3168, 3230, 3093, 3264, 3348, 3438, 3231, 3094, 3265, 3169, 3232, 
       3095, 3266, 3170, 3233, 3434, 3096, 3267, 3171, 3234, 3278, 3097, 3268,
        3172, 3235, 3098, 3174}], 
      Line3DBox[{3028, 3185, 3241, 3184, 3027, 3284, 3183, 3240, 3182, 3026, 
       3349, 3439, 3239, 3181, 3025, 3180, 3238, 3179, 3024, 3178, 3237, 2222,
        3023, 3177, 3236, 3176, 3022, 3103, 3021, 3102, 3020, 3101, 3019, 
       3419, 3342, 3018, 3100, 3017, 3418, 3341, 3016, 3099, 3015, 3129, 3175,
        3128, 3300, 3292}], 
      Line3DBox[{3030, 3293, 3294, 3191, 3104, 3029, 3105, 3031, 3428, 3106, 
       3032, 3107, 3033, 3429, 3108, 3034, 3109, 3035, 3110, 3036, 3111, 3037,
        3186, 3242, 3112, 3269, 3350, 3440, 3243, 3113, 3270, 3187, 3244, 
       3114, 3271, 3188, 3245, 3435, 3115, 3272, 3189, 3246, 3279, 3116, 3273,
        3190, 3247, 3117, 3192}], 
      Line3DBox[{3051, 3205, 3253, 3204, 3050, 3285, 3203, 3252, 3202, 3049, 
       3421, 3201, 3251, 3200, 3048, 3199, 3250, 3198, 3047, 3197, 3249, 3196,
        3442, 3046, 3195, 3248, 3194, 3045, 3123, 3044, 3122, 3043, 3121, 
       3042, 3420, 3343, 3041, 3120, 3040, 3119, 3430, 3039, 3118, 3038, 3131,
        3193, 3130, 3301, 3295}]}}},
   VertexColors->CompressedData["
1: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
9HzRvwDfvlSf
    "],
   VertexNormals->CompressedData["
1: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
LxSj4Wy3B7PWDqIFwnGrIU42r62pKHm3lOm0AKKj/v8+jrewweukbipmi+94
OW+wG+VIz30JcaoermlbtSQNFy5YZ4jLe1Fl30nal4/pPBNYb/caywxqzfms
24+kAz0or2q1Vn0f8EjHPG5pbiduD6BbX3+7Q5wGAx7HZu7LwF03wjZfOTmI
Gm+tTIA4bzzhqt8QkoGXSqpwJ+JB9DLOXxLijJ2zNTw+9TQrUsCM6KXr/+KU
vHz8ZUhUBc6u+xB5wakTCRw6Q/m/R5F7JlaownpynOuKJLtRar4kXb+Ubms5
E/akGotNu67WHd6DRkze0/oae/lIui+hBmfWNyySfdmLNAReUzz3ndgyTUm3
Fl/tdFKyPNeHVtv70TixA89dn7RaXHPu3gqBd33I30yZ6oTG150ZV5wvsr5Z
2cxZyGv7L840tzcvJC1b8I0vt2LIJzryqovm5y7bj92f37fiqS3hjeQThRaf
pHH+dHbzTuhsw9l96i7kE3kgJYon35ib3C5WO27XPSlFPpGg9kHKk6k/6/Xy
FDuwg16COvlE4RzLXkOcTks7XG486MD97VNtySdqVvVUgDhvDP3hIfGxHgcv
TCDx/ovz1pTv0QRHvMzyYCDBFa378o7q4UR/ExGCI/7Pm9XFUqhCfQvtKJ+f
n9mmRXDEM7cfkyG4oqxD0yohTt4Dh5cTHLGC6QdBgus/PF/ovFcnOOJXBfmt
R3Vr/+GpUlu3huCIzx/6fInginwZPEfCgojOuc56pbSV6JzT/+IsY7mkkLzE
g/mYl+Qpymby81jvJyOSl1jCtNuM5CmqYPLz6rml80he4pPLLZ4I271GXyqs
KJ5WCskeJC8x12YOE5KnyIvJz+HIS2IkL3GTyr6PM/Zl/MtPDx+zOSQv8R77
AFmSp6joLTvNz5VGz4iesWcJLtmaLp28+18fSTxY9J3UOe4572RJ6h7HsovR
ea86elqN1Dmuq5j1ldQ9rrtXSNdHGbvU95I6xzkF4Vqk7vEQU+/xAeLPSJ1j
f6nFvqTu8TShb1RfHV2IjpM6x89yONZ7LCrGkVmLab1v5XC4R+ocnwtlP0bq
Hv+td4n7tUS3XGMNKskvb7lm9C9OzY+nRAlv4imzV81dmluLFf3SKC8dldTy
JLyJ19+u2kd4FL+b+4Pm54avgjGEN/EbtgAPwqP4L3++s7OeSngTK82Zspfw
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
EXyyJ0UL8Pk8LZrms/gdnRSyDsRT3a7PA99VJbMePJBe+530Razu9GQB9L2f
L8YozlM0rb+BjytCfv9asi7EXMx6MHrFtzCYr2S3OY4wD8q2PyhvGFffNwT+
N3RvFABeP51zjPbBqam+x8Cn1PDonRP4j8LFbXIA5/49T99CfX33zvsAdWNy
c0Yx4JwcYL0D+M3h0owe4C09Zj1oMnH7M/hw/IxP24O/pv+KSM/BlwqsKxN0
XwNvjqT7HPivfi5TWlIJerjoVXkd6MoI+0mc/8ywTgVe6P0sdgDqS+9AA8X5
6CZF9qG+dNz9RKjz0fAnnBIsTnHuUDwpCXqv7cXsKeBrX87sbzjP3r8R8n7r
xS8NkD/OKZEU59VcnOIwXxuFXsP6F59i9jfqHh+sJzoGW0h7UF1g+nd/Y3la
HcyrPeem64DP+uIblJ/1OS1XQX3lz86zhTztuBdD14NtFaM50K+blT+x3SZ9
T5rZ3yj4KJ4HcX/R0sHgzzo09Qvdn5C8ZesBfCgnKW0LvGI5aPYGcPa7MV8a
+pEF5wxt4HWuN5eGIJ93Np2LJb/D+7+MfAb/UXiDk4dr8xHWwVq6T4dKCui+
HdZk9uuyJ+Ry/oyJSjH7dphNYhLn1/Krk/+MSUtpTO7b4Uhmv45/3S0Wf4ec
FLN/gp8x+ynaPy4edn52VMp1ct8O/92vu/dg+SVRneNSapP7djiW2a9bNrF3
vX6OmhSzP4DHmf0CtV/Z3X7rNaUsJ/ftsACzXzecOzB/tpmWlOLkvh2WYPbr
cP7Nnc7PdKSmTa5/sTazHn75RS3pz5iulMbkvh3OYPbr2lxTDqQt05Mqn9y3
w8+Y/brFe07JwPV9k+s7/I1Z7y1c855+f/Hkvh3ewuzXyR3Xpdd/Te7bYX9m
v26h9rFWM4V4FGYsIyG22wm1dVwqhPdrxo59q6UFYpCjeaTmSG4g8v8xeV0A
OcYKC0ag+Tc3avcZRqHyicnr2Z6ewS2jfmie2g+NCpdY9Ib5/rtCmRrwlWhP
7XR5GROPzvxnSa9zvNwxb12hN7bo/pg0834cWtM1+f11D5eqlQY9wqz9U/fl
GT9B+79PXg+WsFAg/8bB1b8Okr//u+71XTuF/B4HRS8pW1vojYSY+3DE6sJ4
OO5kbQ6ch//IXH/7Nfw4iQ9vd1yWQeLFGUyc7iG3jpPnwef5ZZLJ8+FPzHOt
c4vcS54fn3m/bCPBA//FoTqcu1p0txOOFpjZSfDD69dPPtfG0ykZ1Txx6KJR
yPaQ73fRBtbk941+6LmDP2SG78H7V69mIcFrl5/AeaH+A/U14D8ZublhNfja
ygzHo+G6qX77avC1XZAIXfIj+y2SvR8yHd5ThGaKLRR36kJNj3tIXtYivxgh
bvr+In5+IviXrsV/6Zlemo0eypqEw/uLI3tn7gB/VP8uLjbwtVkktYbAdem5
CXzgt/k1Gm9yLCAHpSc82AvvNdJeFm4DP4/EmxuPHHE9kjWLPUTPy60pNwRf
W3k1W+/h1blIo+P2cOWFXJR+8PYqiHNMzvPwQZcGNPu1+Thcz5KzzQc/0n+F
R2O3ga/t8PSr+5PjUf90Zx14b/Ld+MQG6vOxeFPn2iPJ4olnm3Lrey8qP513
pKCrAZnHDITB9+X4OwxaLR6jxPhgA7GOMCTaPYnnG6OGg936zShwKL3jmVUr
GnkvEQW4ud+qdQJfG//A1DTwtd2rYlHcHLVMpou9aEUOT05dBV9bcM+USMDh
xOBwBvjaYi70GYOvraprzgF4XrXA/96Bry1hH5sg+NqiePpG4bn4H+Z4wvuj
nToBC+G+hRWbct9a7mMNib0KB1/bnY43g88+dqK0z5deQPwmfVwmS71CkPiD
UxrvFaOR8MBk/Ae5F/JeGfuETNgCeMBndPec0GOIf7R5QRf42jw/7ZOEeZt2
nm0GjFNy7TxZj1Wgzq3d4uBry1UsjKK+PFakbqVbJWqsv+wMfquN57r30HOD
8VfV5IWq0ICO0zPIi8UOO+i8HJlTyJ2i0o5Wdy/4IV/XicJWlOwQ+28/K2PA
+TqnZRWatmNbJvjOpL3eR0H8gpu6rC7fckdrr547O+VPHFq/cjLPV0VnFuaS
+pw3V+sc+JjK/lOKgPg9lcxuI8Ibfd7BHDCfBU/9OCH+fQOcbz8TXjj4500G
3L/lrXcMxG9w8/QMqP9tlefPgZ9r/jy0D+LPUT01G3jJtlWjEPKoee5dmm9i
Qj503la8DC+F93UH9ugovTssxbq7e5To+3ikZ9UI/hi080gczR91T82umpQr
WPpSrOEc13iUx9Tvp87RreBr81Fn1YCfa2FeMcU/e1WYBfjaPil10TpgqT3m
gvjNbWUNwNd2wafBHnDeqWNN41i93fQ/8LVh67Y48LWZlGnR/HlddB3fty7D
a1fc4oU6O3n0yhDEv9J1WQrEta+TvQji8Khj3SvfcISlsS00GnxtnOdsjQGH
XNuBCvje27KTVyy7H+LqsPF+q/oY1LZoEv+PIxqN4GvzdLn+DHxtFXUVNP4q
gyeh4GvL5JpWAbxit4NF40/MWPcBfG2P+37MhXwru3ggDOIvNU22Al8b1+on
nwGHLdf/0Pw5kqekCL42ybxrTsBbGU4NvyD+2EtOx8HXdqo1+Cm8F40f71y6
4NcR1inOLg/wtZ1xUj4N+bCQrSAB4i9jKV9IlY/E19auOks+kWbPJP5zrju/
Bl/bN5eQXPC1iSz7QOv35rHiZvDJBCn+vgO+tp1eydMg/p3svMvAx5Q92JcF
vrY8ja3BEP/vtjVN4C9rz/6oD7627R0XDtPz5yt4vMGv8nXJ4z3ga8u7J8QG
fFO7pR7Oj+PaPwpLwNeWc+bd/HF2RRa/3x0z8HkVqXhdAV/bi8zpGOKf+V/9
MMEdjz0b0yXz8A9/kdlxDTCudejEhGRHMfqv7xbFX+fF2E7wtcUMTJcAX1uR
sMgsiD/2rJEL+Kck5dccAl/b7y33aPxeBtsSwdfm+jx7Dvjaou68OALxZ+of
Wgm+tlETrQfga3NB9jT/J4aaBcHXJt7mGQbjsautK7Mc3MeqXWRtDv4yqyxt
V/C1KVv9eATxB3CfNSZ5j42Tp5mROkDpo5P43ypZYAzPe1DLMQb6qt3LShp/
13p/4GH80NDpNvS7X1P2zIb4F9v/ZoFv67pH7Efon+NCggEQv2yygQmMuzxd
fjEX6cNX91XSfiF3/0EB+HPaYhYqmZP++Jhfj536wtZIPIf39+Z598VpX5F0
5Fap28OSvVyZC742P5e8Uejbu5j6Pau0R5/wDl4lHfWc8BCe1jQZ/45VqQsg
H9SmZ20nPIqTPUpo/vw0zdkKvrYzx6ez3zr/Ge+zWTwX4l/5eY4o+NriAh5e
JzyK464+pn1Qw1fzKsyLub3uDcKjOOL5uYMQ17E10nHgX9r/rP0C4VG8gOHP
EAdOGB8vmbfyw4HkeJxulvtiqoQk65uUyyvAZ3iHVAT42lQ1jqRD/E7ct1QI
7+PnZp2OpA/gv/zfcDi7jvQtvE0pRAl8bd66HhT/Bzc1E8DXdjOiwBt8bXeZ
/hU9teUi+NoCOnfMJ30MP1rg9xji3/tTUwt8bTbCU4vA11bJ9K+tz4YWga9t
iVZsBfjaIpn+NXvz/kI4VzHyxpEFvjYRDreFj1l7WSOfT7eRvoUXLVVNBF/b
gYr1eRB/R89NTdJ3sbVyixnpw3jOt8n4Z4hnzAZf2+bowBaoV52dmMb/269E
mugS7DcaxEt0Cn444wjln/6hbc1j/nX4Q5IBgvl5mFkQAfF3o3wnojNwsvIq
BHXj5rSa6pA+5T0biZ7AmnKnN4K/7PrJ2p8Q//Q85V7St/Bqua+8pI/hjqVn
d0L/0v5PbAPRDXjinBwX5O95Rj9U+QgtJToMO+weyiK6DCuPTcYveFvsMNFh
uNX/jhfwRJ+DO9VjqpG8b75nv8W+t32FYNzkg//R/Jld43GX6CrMFVL7HPKi
sUaa6ivdd2JsRD9hSUs+fqhXYTF+mv9uy8eciU7CI6Hrz4GvTY3RS1Ymq7+i
kQZ8Mv2wH5x7CY/Rn1cx5whLrt5Igugk7CCzvhjq5sV8A6ofQmxM8snvsGFy
qj6cb9mG9PYNqh9hya52pXp+z2QfwcuZvrL+2a9ncH5Ugvfj6O49ZcjOZ28k
PNcia4NXcF7aTi1oZInDR5TldpXqxkQbjiY4H+xyQrbitOsnJJml+AieK6lz
YBjOxfL63up9f7QcyS9Nonml4zX8A86Bj326M6uiohw1rugfgOeSZvrZq9lO
9DzA3z63i28Yw3nfTBHJy/l8n9HXMfv7cP3WUk878J3NSRUe9ZVpQlyNkjR/
TLSHT4HvLGWaXLfS5WbEHnqF5n+4wvIG8J3tNVmkDr6zoD8zaZznmuregO/M
8XOzBPjO9DN990OcXrmFCjKxXcj4iZYD+M6cX8XS/uthbT7j2c8udG7j6voH
va1o2rhlBMSz99ChW0tzaxFnr/xi8JeNcKRRPTOo758L/rL7ThzmcD79/R6O
mVQP6G5ecsiqEa030XKD89hqCTtoPbIr8rqDv0xU8UQLnEPOKa6hfOInJ58I
/rIak3p9OHd/4cJT2o/WC9mWg79M08K/Es5Rr1272w/iwfmXd6fuykellaLD
cO63aYs15bdBbpN83F+A7CxCT8A59+8/FdkhnhN3xXe6KhUi76XXEJzrZjtj
SOMJkv5g90C7CMUOfUqA88z6xQW0v6+U+bHMc1ExWmBlrwjn98+7Vn0HfKRM
fXfxXChGbJy27nAe+3yUz1OIJz/75FF13VQs0xKVA+eNy2oO0LyyPOpyS3BJ
Gn5zKs8azte7W/3ggHhWF5llrbN7jbvHQ1bAefJMlyVULwXiFWf7PdLxqscj
D+AcNbfsJ1mIJ2nTRMX0fRk4feL5buoX+1QwBvE4t/7auz4kAwf4XlwM58Bd
pWs8IJ7kn2uDwBd2vCA/Gc5RB/BK0flS3TC3m6VQhTnOPd4JvrCfvoFUPxsc
tj0IvrCV4wnGcE7+6JATrV+lociV4Aubf3vbejgf7pgiSvlnh/Sx5qO6tdh6
ymE98EMEbOr4CvEMidw9B76wgEzeDXC+HZlEZ0A8zfVjaeD/WuIRnQD+r/z0
QDpfa+och8D/lVM8twP8XykD8VQP2x5Y+BD8X8u2PfIE/9fekBQaT0nFfSXw
f7E7yciA/yu+PksG4lmk/MwQ/F8XLcO1wf8VPDVjGuQPq3u2O/i/iviv2IH/
K8VkZTzEM0118DWc6z4tVHodfF6qh+NoPNG61Qh8Xo42SqXg8/rF4GPUb2oB
54pl9dTWgs9LmcHnBfdeUTiPLWxxdSr4vDQL3BDlN81kYzjnWm3QkgU+r3Cp
ZSOAT7+++hY4L70g+Phh8HkdYPDJX9WeDefDzR/wfFTTTUWCckWUb1W0HlyB
87Wrdt/iJnmEXJn8uWuuKAjnk9uqSzaSPEJuks5BEA9/bFMAnOte9Iq3o88j
HSXyrJKGeNZPlEnBedkohxxE8ggtK/5D86fzmd5SOHe9aNOZWOGQDCSeHf0W
4lnwXO4LnGPfucDoPKkz3MjU1x7tLcpwDriZTW9KZn8BLhUroPV+vSN1N5yj
dlhU4kLqDAvfa6D6gSvzcwycP1+cOyuT1Bm27dtJ56utauAwnOuNb7ugQeoM
mzH1lR2+yQXOh+P6fBdSZ7j5fNIziOc4a4ILzucX6c17DP6sWd/TKB8qXsvQ
h/PNQ9oWXeDP4tr2k+rhu9N87eF8+PvSN7sID2HxUNFA6nv6qlMJ5+oVAzwD
wJ/1luEfPsEoDTiv3CsYzQJ/VnXAUqoHthSMFcG59w/NYx3gz9rO8E+w45lB
wst43sxCR/BhCY0NU3xUlks0El7Gp4RXnQEf1tcz9RSflJZCBfBh+b9OaQMf
VnP+Iso/3C8XbgIfVvPLijzwYW38MkLxucTTdhF8WPpfutTAhxWUtZPqq8pX
nz4QXsb+MWgB4WnMyfCz3LbH9aSfYR1F52TwJdy65UX5Z9+GpArSz3AVx/JM
ONf9RjyE5s9v0/lJpJ/hPM3+NjgXz1ob8IT+fzzKzN6TfoYzVomPgZ/gMNPX
1F7e7vtcUY6LE97/hnPapaPRdL1TlB2sTvoW1nEVzIXz/l1M/1Le4qYHPG7R
nuTnvu4teq1oT/fxysqsDIAv1mWIb5RVzkYmLmWT71lGXn2Hvpk489Pi8t05
KPf2GN3HE/EIlAf+dU02lt7VmYN25G6ugH08ttl3KA8e8uHuPa6YiyJCR7th
H2+GVLcx9CGjlRfVHLbXIMEHiL4Xtt+2QhL47mjQdV3Dtlp0V6yKjtv3hTMV
+v7uh73jjjvqUVyBTC6My6+3Rgn6x2UJYWkvkQYk6vaCvkdbZah6CXjcpthy
Bvikvod1/IRxRSZEqsEPtXWtWt4s8TbUlbCE7g83xwyPgh9KK2vRTfBDtUQu
3Afj4sRPA+CHGhlKHHBx6UC5AeNZMO6yzfbe4IeqqDm/EvxQgqkT9H0059x3
Cvqi7ejoPtGH4Id6uKbpB4x7j79xcX1GOVplNEr77OZvgnTcF7x+L8H3lH8y
8Tzw+W2x73TcLbzrDnPxV6KAuvfNoGsOneimz7s2Ujo6sakSLeY5Bf5L9D+q
zjyeq6eL40halCIRbWiR0iotimuJCikihRZkiUQRWSJ7UoosWSvKvoayj2wp
a5QQ2aNkiRap9Nxzvl+/1+t5/un1m2ece+6ZM2dmPnfeHJ0VUgzPvXZ/dJXt
sWZKfsZ7IVindnPv+ArPvbhcJKVaLZ7KylzeDOuy98kT+B0toEfBHM7hFr+7
NkP9fx5/FONcyaLPAbqf8sUZxbDf2dEti+Nb3VRRxvI3iWrcewXXU6mUMPzu
EHdb9N1872RK3yiWD9Y1D0mbmfDdoeEFS9EQSy2JmV3WAfsH7UB/HN/r266L
AcdU0Gm4Htapn7+LlOG5q2f/vgwck+yPN19hv9bld6ISnqstFqAFHJP2zc1J
sO6/EW3GOLsruRgAxyTZWxoM62/SiMsCeO5CJ+FlwCstKnzOCfuf1n+u+B2c
a3WuGvBKT9jFMmCdVXYdxXsdfgv+JQCv9GyyKg72m+V7V5XAc9+qLhAHXsnC
UHMQ9i2VHSb4Hbx9CeEFXiku/VI+7B/Ebs78DnE+y6rHB3UvwDaADbiktl53
HF8/QdZCWL/sqVhZ4JIGlB/jdzRfZftMmP8v1m69B1ySUU8I3tsJXcPgcNfw
r1wKXJJkuiZ+rzxialIJ686C+05swCWtYz63xV2gF+pkkfEbV+CPjjHjPM9P
C9e7Z441o/++1FH24Zr4vePDx6afUC/yln3TBP6oqs0R87mnbRFyu1HGERLA
HzUx4xzV9Sgc1innew9kgT9KZcY5PXYp7PPIzIsa1XAunM6rT/r/NsG6+eCu
tYltewIpZuaVxqOdkE+kx4oot9Lnl4KCEALPVZD2ug7ryPaM7w1wPrZYfwvz
StpjEeQT2X/eaxjO/QXSkQPwvk5lCe6wXpAEtU30fCLJGc4Y5/sm181g3X97
/XIN8ES+zHmkeG5dO9TNJZf4Tej5RNZJVeP3yh6DJClYB/cK7CsHnmi7wn18
38513wRgvf7bk6RIzycytCFtEJ6rMa+yALihSN+ZvcAN/aFGMc48XoIOwA1R
L3Q4hHf0kE5m3egyWt1D1wsy7s7zG7ghae3b+P0uxrOOB7ih+2JcUcANLdz2
uwLnr8Phm8AN1Ud16AA3FNzowgpxjr4iswP4oF75kxdh/bx86zHW56+GxfJ0
fSTaM7cqwj6oehm/LDz3sbP8e7o+kryUTlxHEpl10sb6Ez9dH8mn2G5d2BcY
xInhd5bmy9e6zEo/kJIZGVdh/+J2exMvPHer87A0vR6QDB95Y1hvc5jrwrxz
qjVK6qWk4YMp7pu+dU/i+Pqcf/GycW8ZCdn++xesO78O1GPd6M3I6NvdX0a2
zNBQh32E3FvG/dX7yrbu9HpAvidNyMJ+h6/qJK4L+/pEU4AP+rT8NTkcX0ed
lfytHdv7nHKX/V4NfNBwNVkJfFB36OhBaL++Umv3/fk91LO3vVeADypne4jt
KobHRIJlGinJplEO4IO6za4dhvZRvWsPJiwjSEgztx3wQfZprdh/9WUhdeCD
hCtClYAPUpx5VhnadYLf3gU+aPvjzBTgg3qs/6lBu4O/VzzwQc/mH+EGPmip
ogH2T6vnqQc+6NshNWHgg4K3OONzV+11aAI+SPHmQ7vkZ89J4q6HqtDesfPY
aOraL8RZTUd0JV874XDJxP6qUvLuwAdZLLPh1OHoJwHCK45A+8Jmv3Uy3S3k
ie05X+CD2EwGsD1Pf6078EG/NZ0O0f8/xcpsL8iMmgQ+qNQ3MAj4oDOJPErQ
XiQdP4t+HuUh7DVBP5+azXxu1beRPbR/VFdQUDPwQUlMPzU4RQzp9yEX66qr
gQ+afq8Szj5h4IM63YqigA+ajoOyqmku8EFCTROewAf1MuMWx8uvBnwQ+7tu
MeCD9jHjXPc9CsaDPLXUFP9hGUE9MnmH42KcM4sN+CD1ElM5ejyJA3UW7dhu
droIfNBWzY0K9PiTMua4/3wZPR/4oAdhC1qAD+pk5slMoZmWdD6RhweNnwAf
JODAjXklt2jZBuCANj3ZpLXBLZtazvYtUTQngorl1fdc75ZNvCZUNwLvw8Ns
l2lnl4Lvnuxn6/xA97i14h6eO25l66TDd08Bhp5PNjH1/bkxXPh901h6TTro
hc8sv+N3geqMCtQ9ONs89UEPSXyyGPdpKTtXa+2j92VLoroDtLRmysixMnTa
N7cvXdt/JII6VBP7XUjGmjJifq/3sZSZv7IunNoboTcSlOFE6R7mw3bln5Vt
L0RCqT18cUefV/r+d8/t3hPNoiVdIRRLxDXWA59uUwvVGf3tWpXqFq+6S2k2
HN3Caxb0H+9wbSrn9uQ+f2qm1tEc67Fg6q8Go3/3Dhtegd+eVGx3zyK362H/
3e/qnN3wVfeiKyXnOSrzTS+cSlJj9Ncp4pvVUHqCkvsedj4kOeK//n6vXhqY
VxwkVA/7/n3ZEVTyIUb/H1rRTjo1LsS9zOtd/b3w//zff2yNUaejB9Fc+HAl
eRNG3WL6r2R90t8x6g5Z7G3SLHw+5L/7wHtkSraZegeQodsj3zW+BlEVKoz+
S69gP6Jljj9HmTP790VXdroW3CPKYe1JHzfdotYdZfQ3fo1+EKt69Ou/+Acb
xMX0rI8gxa1DX46ds6VkmPY/DOF7kvwwfnhvMu2/9cklc6H+rHl9eC/nAiuy
WpnRv/YtxpFs2YVxJdPxP2r6THXKPZQknd3+a8bJG6Sb2f9wDY4TievHcfvv
3tey9EvzP+XdJT71plmeHwLJxSOM/l84MA9I7RTmxX/9HRrOvuy97E14tdkd
h3aEkTnHGP3vv8I8I64emHf/9b/nt7jr7y8hmSRGnhKKmZ+zGPOBilz1Bbkb
f+a8mP6+Nc3pbGPOC3PGfKAOpolg/zzmvFjImA/U5FAN6m9pzHnRUGgQCTxa
o7BDorNgNjVntHwX8GVKbGtMgUfb8GsJi6xaNjXZm4x1T3GZ0+hVwWyyvWnx
A+DRHqv8EoP+50+u2aPlkU3et6ftAh5Nsj5ji5ukStHQ1BF8v5D1l/C5QgOH
H8N877wfsQP4sn1eP/7RP0fF8OV/4o/ZU5RWcwXn7yfGzxFBZv+mA+dyW5dn
Ej5nqXvAkcU5V1oA5zVPUfaKqGAW0U5h2QIcmW9EyyLgvKY4rFkL32aRyvPC
S4EjY41z7EueqKOeLz58lFLLJnv5J84BR7Z/Tyi+1+/rwvGroyIogaPX3e8f
NqSyNBnj9dW58hI9fpRi2dNhejypUWYdOHohKZbOA+rK3MmldF5Qkcx8GJrk
/EDnE7Xkd+BROr8oD+a85g8M5aDzkhoxfMdJ5ykVx2zf9XnvTu1ztiTI5Pt9
Ot//y/NycccX9Dwh36peNtPzhiphtsfxlrEc/RpEFEOer6HnH6XFtLPqweG1
9Lwli+sWyNPzmFJntreqqsD8J/K6fs7nKg5S8sw89LZU2k3XESK28+RivYuu
ZLqemM4ITKPrEVnifTycrk9kimknrCSlb/+n28T/5IMXdJ0j3Mz6sK/ZJZyu
j6TkcywPXS+JDjM+6Wc2v4s6bEi21i5JpONKtqoy2oPCVwQDr1e45oLr++WZ
VCJzHCM+LN0EvJ6mQfuGdYJZ1C3mOL5sPiYAvN5By+NJ9HhS7MxxVH7B4PU+
1jB4vc/M+z98229KwD7rtfRwaGiogExqocFNuP/Tyz/3H+yPfDdUPQkNFZNh
sSEz4P6PiFJZNeynVM2tI6B9zevxOrj/w7Hm5wnYf70qWv04NHS3DLfXC7wH
+/dEtTDs1ziWCYRCexCnwgm4/0N49vTC/R3RmpJwaG+Ym2oN939M3i7Bv6dm
xXYO2yWi+/D+PEdWNd6TXc9qju3eQep4r5tLJFcX7E3P66CALtwPZ1A2yOtt
7uCh+x+U4V5yC/eHgls+vkb+69HHMGh/R2Lw3PGl15UD3q9E5Ra2H4xIwfP7
U6oO4+HXNRIK7QuHrBcj38Tk9ULxfwdlTu01KVqrKlt07wGD1/vSxOD1putV
nGtaDty7zT/P2wr3h7nzGHFu8l6rDnwKpenZAZzNGGsVxll7PLgXODevh0Hr
gdfLLedk8CDzTk3APenkDX2acN/bd3kjxrnes+0d8ETHq3IPARf1Knj+cYjL
BX6jM8Bxfdi69RzwaE2WezDOXAkD5+Be+46SKwuA19PdswHjbKEywxH4r/VH
tyDHJj/HEOP8oO0BckrmOZNywFvt/SeA9zMTK+J+AYcgrGH1EXiKHQH78F63
B4cN8npqZXc/wntILfDGOK8r+Ye8noHfd7jnSy2KMm+AOKeWSpwAbiT8t5UO
8C/K89tYIM5rmfk1nXeNVpaeHnmyRRMpDF7PiMnrTd+DTZLvXgC83unF2dVw
vzp0iBHn7xGOGcAT/b7i/AA4JB73CoyzEHHE90yaMc8A4rP91wQ+bzHF4gD3
2jdanQfOg9qryReH9zNtBg8C/6WSErcWuDGh7vWYz2aef5DXO31tdy3weqEx
xhhny62s8PdiqJUPOJHXW8mfgb/XPVNz7jLg9eoeBnPCzynet8Q4h1cX2wNX
VnTCPg14tGO/uvA8+8DWng+4kXkm8tbAm/D6dWA+3ypKugLjtcPjsgGM81tV
IYyz9UvHMuCmfo0lvQbe6tuqiHqIs5JcXTtwPs/MW/cDH1R3JWwG6iTM+Tc9
LxdEp43eaZArOjOYh7ze5joGr3eeGecCX8lwuNfON/PiONw/n/1VH+Ostb41
D/gvvtKRZcDrsUa+wDiLfTwtC3l5oImXkT+L+zDOL6suvAMO4faHC53AC+hY
VjPuz5fFvQVeL2riUjJwdbKB45jPU748qyHuO1RrUyE+PrWn0G+RYz4VwI2o
l18VAb6Du2krxtlYdYU8jJe6dftViOtOnpd4b1BSqiUG7CYerxUAXu9oyw/M
59BLXE3A+ZRcm9sOPE71MRfUK/TNWF7D/LrzloL7nNS8y3XIKQRfbUBe79N2
W+T1zq2j8Fw5tOn4NeCy1gT1IK8XzTuFcQ5k1qfputX9VLbCUlu4yHCsH3m9
jyz/z+vJrzmeCRxCdwGrE9zP3zpliHFW00srB14ve9sjU+DY8lXLMc7/VKvz
oY5MiFsnw/waftWOcU5beUcSuBGvvb/XAU/RqlmIcS4QZ7kO46UaL/oR3iP3
nhnm88RFJReYJ+mfhTB/ph6vxzgrihUgr7fTRB7u0VMORsL493pa69/egvn1
WDTjJeSdjYcixvm7gC0L5IGesMZ9iE9TzAHM5+Pyjgfw72Y97yT499TMlipC
nMc0vMSgHgp8lboMdeLr3A94f17aqWYbvOfLrTOOA693V+s5xnlb5twXwNH9
3GC3GfiySvkcUYizMrN+DzHr+itFedbHVbJFNz8eR17PQIXB603vh9lWpV8F
Xu/Mtuxu4B0slzDiHJIozQLcQvIY+xg8JymRUTcMb7yYgPvJ5w+PIV88/nUO
1mfD9PEx4NHUB9cFAp+yQ8UH47zsffR7uJc/7/CwO+SFZ7gcxrl5yYUBuE++
yS10H8zHqezLyEWmcrddAt4qLltJHHiiNgdLzOfIiEq8d54VY4C83kXT9Xjf
uHVB9Aq4/y9av48b8u1plQjqUWbRZ0SAJypt3Yy83nrD51if8y99q4Z71Ys3
CSAnPTk/H/WZ7J9HU4HXUD4Uhrxe6UU/rM8lZ/byAS9jZ+yFvN6n1yVzIc7l
la+N4d7weGcCg4ve2br58HnZosoeBq/3su7/eb25kcIvID6chy58BT4lOYBR
N0p3WZwDrqPi+OxzkBfHPBn7DaJldwLub+vW83bC+nKdrwXzuUI2QAN4vbH8
O07AE9Wzf2HsN3pTgf8lHCfF38M8dv16AeM8Nz0YuGty6bmOFdTPcnE1jLO9
8jVr4NHSMq/B3+miZj55h3F2tU90gnv56jsTeaHuFocOY33e2VLZAXxEV2d/
E9SHub1LMc5JLXXI67XkCyGvl5q9BuMcVPRgCng9kqqJvJ6llBrqjUULnTYA
z2KedAx5vcLiByXIU+9qCAKeaHbdB+T11jlGz4E4D+Q0n4J71eseheG9atHi
mmL+XfJF85m8nrj0//N61lbbjkD+nD36SwF4oo3rGPks0lbhDdzLbHLLEebx
Az1GnMWlfvMArxfz7Oc/4PWev2Ksu5o3q+0hPvKWdy2A/3pe3YNx7uAbbgSu
gyPqbxnUXeWUZRjnhy5PFwCv13Xc7B/wes7rV2Gcbz1R5wBeL6D7/i/g9WwM
D+B+I7y+G3m9i/ozkddL+ZaIcZ55Kh15vR+ydoJQz0ciMzDOB86xI68npVq1
GMbrglA7roPXTDZbwb38mxFhyOud2CKF62DV6wPI6xVmLUBeL29n5BuI84kj
PduAtzLyVFuDf08t+NUiiLMik9dTZ/J6L02/C+49KFck8IzB64kHM3i96d8P
MHNm6E86j8k9njuJwH+96WbE2SbMyAq4oMdJ75Sh7k7ns9LNT71w/5/VQ14O
9m+Cx1mxbrxVeO0G+RNuk7AdeL2rpUK435A+zAPcKVFxSiyGdTJQsx7XwYMr
FOyA1/izWvUt7E8ente6BHH+PEcSeT193UOnYLyC440xzoO1TcjrrZHkMIR9
zXNmPmfFSsE6R7jZvcph/Z3O517FGlvg9fpmfzWE+ZXGzOeBw7zI6114fOkD
7EOtmPl86R1/KfBQilv/ccD6spT3E9YN7+3pgsCjWUsWXoJ6WFb8Bb8HZahe
SIV7+ZkKW6TALkfOQ8xna1kGr/d9hMHrTeshhX1RvXRdJpdXr/vunOxDRQsz
4uygVTMOvJ75yQRXWCcTmPW5WUzFAPiIXwdEQmG/PV2f5Tf63IX55djx4QKM
V6ytMMZZy8/dC7ig3aUJO2Bf88viFMZ59J0Z7JPIeN3tW7Cf/PdUGtfB2rmf
gKMmKg/fTvnQ8+s9sz63GDj3APfSNa5UDrzej9cUroOW9+cvAv6oP3nkPuyX
puvzH2lu5PVMNrRHQD2crs+xsoa6wHUYyW4+BueGBzduFkCcNZPSkNdb+sZi
KewHUjIOYZzZRffNBF7PZ/k+W1i/JvnV8TvFLNE3yC10yvHXwH8/1czH+vzv
23nk9VYvY/B603F+qhl0Bep/0SHtEeDUp/cbvXVtRsCt9e7i/Qm83pGCMoyz
7WG7eOBTvoWLjACXU97EOKe41LCugfrWPtvOCep69txcrBuFBT29wGX9vDjV
AzwasQjCOMuyKMLvBSDvn8ojr2fDq4ZxHvF1KYT5yz3+9C7Urcj9jpjPegEu
yOvt4K0tB95qer9xdHE08nqpZSKbgHvrmTLF/YZwlTHyep5spp4wL6uZ+w2z
+ink9UL1dxoATzTK3G+EK3gfBV4vT9jQFd47iLnfcD6/EHm9sI/bOYHXS9k5
hN8ZnW5bIq83Hj+bD3i9gQ4b3G/kZzJ4verVDF5vum781M8eYAO+frl0AewL
Ds5ixPnMuMYi8Jtfo6kV4vNmZwnGefst0d3AE31eFH4CuCVp5v75bI53E6xH
C8t//YR1b2FKPsY5N1n9IXB0ckan+oHXk2Hun/f9OBcP/Jf0L7NdwJlN75+5
dgZDnSVTSk86oK5P759JIifyer0/ZE8Bj5bv2Ih1Q6A2HHk9EmX9HJ4jpCyO
+9p0Cyfk9SZsD+LfgfRhNcfvmz9DbS4AB7XHpbwHeKu5zP3ztttlyOs5P1P6
CnnxW1r3PcRZbj/rbJgvhOe8P8zL44E75kOcTfZY4d9hsquj4PflEa2YPcqe
IvJFf3czeL2tgQxeT58ZZ4O2SwT2V7MXXhaEfdM95nnw4gnpQMizeAO5fMif
6fNghPHbQ8B/zeXy/QNclwTzPNh18WEr7B/UPNrcYF9wZ8VcrBuKv10EII5r
BM9pQnxWMs+DcjokF3i92qkji4HXC2GeB73kJr8Br2fkIskN6970eTBrzZ5x
4PXyHxevAV5Pnnke9AxrRV7v0PBmdxiHicx4rBsSXnLGUP8LCvJWQl1fesgZ
v1/L9T9EXs/mYQvyevZPWPF7X97CJcjrRbEPIK83xDwPnmadh7zeAreTyOv9
nDqOvB5lMIa8XoQoD/J6m6TEPshely3KTWHweoLRDF5vev9c2dFUDPvhYRbB
QthXLmTqGxKbHMqgLjRmlGjB/IpPrcY4Z/KqzgRe7/LJlgHg3pRDuzDOLNZL
dsF+b+K7yV/YN91g6htrv1wXgbyPl2NrgfxJmR2JcRacuXMHjJdtVutZeO+3
TH1ji7rHe+D1cqVELGBfcGu7GcY54NnedhjXBqVZLhAfOaa+ceer1SqYXyUr
qxwhT1cOf8C64bT7KfJ6ejtesgKvRz56URDnhI83X4DfF3pnPgdej6O4FOvG
cr6dPlAPk39K2ENdWcjUNxwpBXlYj24m/NGDuv5w5OkKiPOekYvJwNHF2Ycj
r3d08foPbIvki+o+MHi9T4zfs0V2MvW67hekcK3qFhmmbkem9bqfr+/WrFWV
lelh6HbknzVjv7G3fNZKqUsHZJj6CZnW6xQkesrWqh6RmcnQ7chCpl73bYXX
eeD1mLodCWTqdQ9HhXbf5NOWKWLoA6SeqRf8rZCfMVBzQuYsQ7cjW5l63UWt
r0++dp6UmcHQ7YgHU6/r2bSGrFU9I8PJOP+SAOZ5eMcihyJoT2PodmQBU68b
NL0T8yZOX2YxQ7cjb5h63fVXGtg+wDjfkf3M897wA87rbjMMZTIYuh2Zx9Tr
MnyrvKF9ksnr6TL1Olv/ed+BiylvuCgGvF5Dzln8jjBy33cz8HquL0KvAK/X
cJ3Rbuat8RR4vV1JeWbA6/1wY7Q/E9JJBV7Pcny+GfB6TrcY7U5GNZ+A14vy
2hwCvJ7nfUZ7jEiWGPB6aq9GngOv882U0c5+hv8M8HpLTj8+ArzeltuM9qUp
sjrAFXhtyNcAXk/bjtG+dehuBfB6Kqb3PwGvRxky2i+ZuwTDvX+hTinePc/P
kTFVRnsLn50h8AadrFHVwOsVvma0851xPQO83soDpc+B1/vOfK/8PEMN4PVe
W7NKAb9QEsFo73/h2Ae8XgV1aAJ4vXdGjHbqe2I13NtpyZiQA14vy4vRLl2f
irze2GSaK/B6ORv2IZfn+DoYeb3gJ70bgddbvzsF78U9O+GPvF6D3jFW4PVc
VrDj/eoVhfHcwOudmFQ5BbyecEUy3pfzNdNGLst/c04/8HoRZ9mQBxnum4m8
nrtSFSvwem2OfXjvca3EPuT1+NcdNgZe7/q6DLxHt+D30e3AKekvWfYIeL3f
AW6q0G64tBR5PZbtlR+B12N5qoD3IX1epQqDn7WT8WrA61V8+Y33AH8fWQS8
BnUiLzYUeL3Ia31hcM/toOmuM/BdKXKECMB904ELJbdum8oWtVuO/IW/W9Zy
XF0beL2ILBN36F8m6GAFvJ59IYcN8HqLmHnyq/fSfuD1dj8+3Qu8XqepKN7/
vHtT1RN4vdgMkgO8Ht+2v3h/b+2B1tnA67E9++EIvN79La/xvvfJr+zFwOtp
D5sbA69nt4PlALyvx+UHVcDr8Q+mrQBez9tNCL9/XbEsvAHf1yaTNPjBbvqC
Wq+Y7fJFkd6lj4DXyziwYRh4PbPqy1fBf1MVMxvg9VzX6poDr+fgyfD/Vf9T
PuD1+vWO8QM/9YZYYD40G37oBV7Pyvod8nouCfvx+5138gpD4PV2XVooCbze
jrZM5K30/33TB15vz1VhN+DIfm4UQd5HQ7lSHXi9+eQS8AVUisebIfD/6PMB
LuD1Kr5s/A683rlM07t3RmSLrhcccgFeb34jhbwe355VVuB/VpDZbeD1hM+X
2gKvd4FZB/rbTPuB1xvNyTUGPotrVDAJ/O/KvWsHvN4P513I661mP4T37XfN
W1IKvN5eI1Hgfiij5gK8D0yJ56yD+V+j1wfcD/WpcxXmW46eyGaoS1MSe5HX
WzEzDHmH/duU78PPeTnn1cP3zKyHS7d0iMsX1Xv9CQNeT2b3Pvw7dE4soefA
/zcGa8eA12P1yb4CvJ7TA4b/VnOuSwKvV7PjVDNwakoW7Qng/22n/Q7A6wnG
Z+6EeaDjIoP34TuTMy2A15O/VOYKce7/PisY/Nip9WAr8HpdB0sTgdfb1PYe
759v1X1QCLxetG4w8npq+8hP8L+81dEE/Hp18yDyDc27XplLasoWRU2RdOD1
3li2m0IcnM2UZKAfdW/+TeD14oZL/sA9wb2ODP/3r/dsAV7vKf+uNOD1rkqm
JYL/nwK3PABeb67r4XdQV5wjGvB++Mq0y3XA61HaQQsh3wS4XmH+j9vttgZe
z2+LJ/J6qpdzMP8vDG1CXi/qWhfyepsbt+B94+H923WB16teF5cM341Ff3fG
vXspW3RYgc0HeL2LkXUGkA+t49U3wf9g6Ugn4PX215KLwOtty2X4b1vd+Ax4
vZvVpAJ4vcPkIub/meAZncD/zH4tHAC8XnxvANa3r/MUBIHPKl4vXgq8nsJX
Vqxvy6riO4Cbu3as3Qh4Pee9f/D+7SnRcj/gcAoEmmSA15v2X5gnG3m957Zm
yOutHjz4qIpVviicRRu4U5IrcdIReL0Nvgp4j3qwvnAG3J9jC1loCbyeNDP+
i/P7kNezciifAl7Pb8lJvF/N8vQj8nrqen+lgNe7o38JeSX3Ii/gaUnaVjlV
5PWCgjCP50TdzgBez+FxCCfweofucOF9+OMeX5H/kb998R7wekeY+bPPeT7y
el/Vn0XD8zyu9DwG/3X54iyAm5MNlroJvF6Y3SvkDZ3arRzg3p7rybe2wOs9
esjw/0bwTOT1qty2ZsG6ylHdhv4rzY9hAd6pUudLNKx3R79bLwT/XXs4CfBo
ivR2B9ZPGQeHUPDf7LqkOTw3Y0hACXi9kHccyMtULpj/ErgjO2XXa8DrLWfO
34XruZHXGzGPkoR+4hoy8ZA/y+d0IK+3Z2fRumx63f5zQw/nr2+jnzXcR9wQ
G/ICeD0LZv2xZzvGDfkwP/jHTuD1bNqUsP7fO7tMEngwcYsYDuD1Bk4aY/35
Gm2zGXg91TMSyOtJMuun/OnNyOtluJzxAF6vbtFN9D8rojIR/97YQW9r4PUm
/3r+Af/b7gy9BD5qe2HJZ7h38XbPB5y/C9jtkddbuPQN8nr6eeNxeO89VEIf
7mWuOOkVCLyedQDD/5mXl74HXk+nzAl5Pd8DJpj/t9Ip5PXmZ/fdAV6v/7YO
zt+vzfrWwOv5nDdbBLzeK4k8zP+gR6f1gNd7qKWAvN5l5vp19HEs8nrD9u+R
1/Nkrl/1n8tfwr2opUEdxcDr5cv4jz6LlC3KtinqAV6PHDdLR16vXvga+F94
NdkYeD2F6BoH4PX+MPOngghwAq8nUxGKfO3r3T3o/wyxAuT1zE0FlgKvN1cm
Fv1v/CbaDbzes1EVORifDwfikPfcIPXRFXi9e/ZrZGDeWFuoIG/758UHMeD1
uM1bkNeb3ldUBZR/Bl7Pcr2fIPB66mzuH2bN2F/UxtWzAXi9DelLkddLzs05
jr8fILlPGHi9RHprC7yeO3NfevFUgSLwevOuScK+jBT72OLfdaxQYisGXq8k
8c06eG569aoZ4P+hDSduA683/9SSLMiLUOb+6v3H+D8aYWVkq0Edztfa72q4
j9qozukDvN45syJz4PWmshn7JbuvZBx4vbi//oFwb00436g15PrKIkNitAN4
vboOT+T1/CU+nAD//Wy2VgCvt461HHm9hjTFJz1N3wtNjq3AfX4ZYx0hxcx1
pWO0LRXuT3O0if0BXq/ZWBXn9eBhtVy4t28mtvwb8HpjW5WwLp11eIq83hVR
81rg9WaOmiBHyfm0bgzufy+/OzQGvJ6iWzDOi93aLsjrbTjnPx94PbFgKeSY
XjLXs8U8c/D+wPQ6x5WsXAT31/XufXEBXk9NTxXXBZ0t1XbA62kPPZ0EXo8n
bDnmj+9uvRPA67W2hn8BXs91vRD6qfrdrRV4vft9XieB1yOzpDD+rXYbC4DX
u+YjuBt4vR9lVrj+fl7EpQq8XpxguBvwem8cS9DPp42HOIDX0zb50gG8XmLK
JT/wR58n3wN4vfi1FYvgvnqUYzH6oyn9qhR4vdX7VloCJ1H67DTWkwueY8jr
KYbuugEcwbIjcejPZK3pdeD1/vJJIK8nkCqJ+dzmKZsMvN7PB4vgHi+Ve6YQ
+VP76IHXwOsZcZm3ABcg+PGlIfgz0y9zE/B6Ft11wBVRgmL1uD+5+nJWKfB6
P5OfaAJvIWb4G9fHmPCW/cDr3YiNkwUeQWp8Evf5B407XYDXy98ynAz39q88
50KedEUB4QNeL3CR92HgRVRmcX4Ef/zsIpHXE4l+inxB0Ji0OfgzSzxGBXi9
gBtiz+G+/dpju9Gfj+9tvYDXOysnZAuch/1bWeTT5aX/NQGvtyE3dSVwELaa
hffAH9ugJGfg9WaJLEJer3ODL+5Xrzx+VQK83mCBgDRwKhbh83G923+qeBvw
epwdr5HX28IpeQr8WVFxLgh4vSuZ0sgRvNzCjftPBb1bn4HXi25YLQX8ykKL
Rqw/3dlKCsDrPXzKZg58R1DAEsb+P7wYeb2O/u+iwEHc1GnC+im0yrsTeL2J
qjbk9Vh46z6BPwe2ayKvN7njEfJ6zdwvZcGfO98jc4DXM/IqTgFeTyipHdcj
ueXcyOttY2nuA17vUdkpzB+uEhXk9Vge89wEXq91tiX6o8t1RB14PROFfAXg
9SZ/luJ4pRrImwOv9/aTuh7wevsDGjGf07eII69XYBSCvJ7B9iv4e1E4kppy
gXdgzSp0Al5v8FYG+jORIikL99RHfvFWA6/npjiB+ZPs+hl5PfO/95DXu8uM
j96C9ZuBX9B5/pYVeD1fZnx+Z0qawb1zfv0YArzel5yvyOuJEz8J4A5WNdxS
Al5PSbD7AvgjHt1YAtyEtfh4I/B6Bj9kMX+6DrQD50n0B2ZzAq83nT+tG1aK
wP1/n+21YsDr2THz55ecF/J6qg4MXi/hlT/eV8yt3UnB/fX1jy6JA69nzsyf
qbHzyOu9XrYpHXi9UOM9+HsMPDJvDQPfcU1MGnk9Q9n3GJ8v0aLI6x1eZ8QG
vF56dy7GR+50sjRwCgbigk7A6+1mzq95p3YnAq9xd9WycuD1+LlikB88nsim
Avfsv822PQG83lUJHdx/Gvw9i7xet56RG/B62qNbE5DL3rYKOBnSY1WPvF7N
4/1Yt92fdp8F3iDx3Ole4PVKmPUnkG/fNeAvthlE7wBeb7r+2ItZNQOHctWU
E3m9yXU2GB8twxm6wA/wsbUVAq+Xw6w/blfGqoEf6e3q6ANeb7t7mzr4o2r+
fAh4PUv3Rlfg9US6rLEebuU3QV7vRZKYEfB6SqHeyA+e3luCvF6ztNBH4PWy
BFsxf/z27N0AvJ66j+AL4PUem6/H/BGOFUFeT1e4/jjwek/6M3B9v5y3B3m9
Kxbfkde7Gl6G+fPF5xnyertmWWYAr9M56yfmz3Xl9hbg9SoWpRQCZ3ElZjbm
z+vbt5DX2zwnrR+4k4oFjP2G8vfqKuD1Hn+3ngD+xlbaAetP/1Q88nrOcnJ/
gZtYzVzX3A6l6QCv16fysgy4mbedbf7gT+jNkbNQx2ec2ucGvJ75gZmo47kd
MTeGelF0JFMQeD0r6VL8zuJ7V3MC1s0Um0+CwOvNMXmC+v+oue0hqL/PHWIl
gNf72/gCdek3E87I693NKPgIvF7GQdvf8P3qakCVGaxDfaaemsDr+Xqtxud2
enlivXtZya4PvJ5i6RX8juYUcA55vUCHFazwd81OyB1EnfYz1wTyeo9Tr0sD
r3dUdFUNPFdBccVlqOPmdSvYgNe7ebBmAnmfWu73wOv1iDeXAa+Xsaodn/uv
Un4SeL0Uj1F34PX+fFuM79vqcmMUeL3PL0yGgNcLHBnC51p5ewcAryeVOW8Z
8Hoie1rwe7Q41w114PWeJdwIBF4vm/M4/v7YUxU/+YDX8zo7wwfWWbZjBfjc
NR9WpQGv1+lx9gLU8+wnMqrI3SxYfwh4vYSda5DX+/BsCfJc5nzmj4DX0zfN
w/WR7UTyO3jud7volcDrlVoaAh9MKbsVzYbnsurI3gReb+j7EVyX9y5+IAjP
PZGuJQbncMHrXluh/sdftUfepztqCHk9TvunyOtxG8vi78vtutlRCrxe/h1z
4Kuoe1MzO+C51iWG2cDrrb0ahrweC5coNzy3h8f5CfB6/g8/dcL+Yd/axfi+
5d/+7QRer9v+FPJ6aZNJqA8/NZtwBF7vQJ8r/n6FhyGmefBcoz1K6sDrXS+z
Ql7Pm3MS+bXYsU1mwOs1aScHwfq74Lot/v7Yw85eK4HXa991dx7sfwS/MnTp
7EKew8DrNQ4W4jqb/UYIxzd+siMOeL0vGTsTYL+pyXEdeT1H37H1wOut6bVD
Xm+jVBbq/xw2u3mA1/Pqji6A/cPMdU388Fz2I6Xw+xGIQ2UVB/B6V8SO43NL
qn7j+qXV2y0HvN6YXz/ms37Bmicw//U2O4YBr6dmth3v7dzdVPsd6vmRScHl
wOtpR2shR7Zn/esKWHfK9e+wA6/nLu+P80j5kSnyel/8lrgArzceZ4TPnfPH
F9e76C3LkNebjvNUKzvyeieKTh0HXu/s9YM4vm+7ddOg/i+5wLMDeD0fZpwL
ZQuR12uf/UseeL2LC7/hd//WD0LAf5JFy2Xb4VzIsTIa82qxitwWWDerNqje
Bb0hlplX9n/vwu+7ILP+SCKvt5CZV5nL1JHXW7J6zWw2+nws5f8Zeb1jQ59h
n0Syq9pmLKDP/UrOvvh78ue1XfOA9WLIXnIb8HqjSjz4fcfvuZIprPu75iZX
A6+XyZxHFnqcbVA3l6pUGQGv186cRyX923bDOnipt7wSeL2/xxnzyLGleAms
1+sWXVQBXi9ff84XeK7lGXvk9SxCLZHXS2PWjXUPbOyB1/uxYGom8Hq/mHWD
66oH8nqvbrv9AV5viNsJ62TIskjk9ar9wyKB14urbcTvHVF3tHyB13u7uEMX
eL0xqQn8Hn3nN4sk8Hq7yKJLsH4WBjB+P7DY1BLk9bbkpirAPuiewR4c3wcf
4tqA1xOxHXkO6wjX+vnIJ56p0UBez3izN/J66sw6eUvCpxN4vQIRY2fYv7gw
6+RjHT8KeL3hu79gfSDa+SZ4//vuSo0q4PX6rr5CXu88c13oCo2qBF7v+WmZ
SVh3Dr6LwDhPLPvwEXi9v7q5R2Af8Yu5LrwNdfMAXo+3YgvyerdjBpYhbxsp
mwq8nva7J1nA6x08538IebcsBq+Xp7lUCHg9z/WK+6B9pMxIEni9ddV2jsDr
bQo30oB2rV87+YHXm8XXPxt4vb/+p5ELi0iX6AReRn841BZ4vd2/fbSgfcow
ThN4vXf3chSB15OubkUe7dq3iADg9cYd01OB14v/Oort6uaKyOs5tIkgr1eR
I3IU2g2f1dQBr+cre2I18HrW4y/Rn0Nr5iGv94NE+ACvd6CyB7m5vauHhoHX
a3M0FgdezzfDAPuHtPB4AK+XejNxLvB6ZyXtkNc4qOUnBrze6TbfG8DrHZTw
1If2yuZE5PU8Oncir1eTyKMI7RlLfyGv57A3ORB4PSOmnXNJHf/g73npe1lM
Aq/nw3zu/tSvksDr/V3GAn9/jDrI9DP3dcI54PUEjugir2fDfK+Kl/eEgNf7
9OUp8np2Rq9OQrumejHyep9Xbkdej+oNxTg733x4CHi9lcvXbAJej/MLhxy0
1/CvRl5PaDzxCvB60+OycdiBFXi94UBBJeD1lvvPRf4uuTILeT3HzBfywOuV
iBmqQPu7HDYu4PVWcdW/A17vivcljM8cbgnk9QISRZHXmyVli356hHAir7cr
WcUYeL0DG7lFgbtRF6m/Abye4n0h5PUG1+ZuWke3p1C78LtnYFfEbdA9dF3T
8VwW+DIQv2O6MfR8osDU9xWLo6Ohve/USCrohV739HCfJvryJOoe0usrkNcz
q96A5w6hJ2eNgdcrTmoeCw2dI9N2jaHzOHgyeL2iKgavN82jKTwW2wy8nu6S
IpbgDCeqKIML2z/3MXi9Il4Grzd93/tx198W4PVYv6mJAa+3MpnRX6Kaweul
1jN4ven+e2MtY4DXU/Q89AZ4Pe3HjP5lTgxeb38Xg9eb5tdednHP1LvoSj2J
vXsaeL1PSYz+i/wEkNfzGWfwetP+zz8xZA68XtkHgXPA6wXHMftzM3i9+yUM
Xm/6XlNy6loX4PViW3dSwOupMft/Pcvg9c56Mni96fsMaYZn9wOvV7N3cuHR
r0FUDNOf684MXm+vGYPXm+bj3m9SngJe76wmay3wes7M+HBWMni9hTUMXm/a
/zMBP8qA19u2UG+W9jlbaoxpP26YwevVhPw/r/fgS9IGqD9qUzuPAq9XyIzn
0DsGr+e44/95vVI/BzPg9a6YHhFkP3mDfIhl9A94yOD1Vnxk8HpWzP6bY3LX
AK9XVKNVDbzeQqY/j4tikddr+cPg9abvL9nZVfQBrzfv7dIw4PV2JzL6+zox
eL0nbgxeb9p/wSqdH2tVhWRWMvKUTOfnPcZ8oALuSUeAbnaSOS+mv2+x/v2C
epoSc158ZswHag+nH3I3Psx5ocCYD5SSyynsf4E5L4IXb4oCXq+y6m8o8Hqb
fx4TB/5OczjfBHg9Fe6Gf5RaNqWffFwP5jWbrNs48HqX9DjvA68ne2GrDPQP
Djy2D3i9VVwhyOtNfBZ9v+ucbBElIs2I96Fk9Ocpe81fqANVwZHI623lDEde
b9v1r8vUjsoW/bJswXsIUoyfIxnM/vN13IqB1zOLKgkBXu/GzEOWwHkln1nr
CrxeyIjLZuD1Lur8WQyc19+uiB8Fb7PId0dr5PXaHql0A+fF6v72MPB6m47s
MANeb0ytHNev00dnvQJez9+dSgJe7zUz/9uNowKA1/MJEJvVd9mbUmKOu3jb
vSLg9eQfym0HXo+b2b5/rTnwn9Tt1u5LwOvZMNsnBuS4gdcz7/+3EXi96fz8
cChUDni9A2o8JcDrPWH2l/wZ+Al4vWw31R/A611g9m/T3LsUeD33xBN7gNfL
ZPp55eR+JeD1olQpHeD1DJj5vNt7P8x/4pvd0Qi8Xh+zjlmITJ4AXm+tgOQ6
4PX6mc/9lzz0Cng9ZZa0NOD17jDn6ePmGE66rhHNo/09wOutYLaPXHxKgNdL
FPWRAF6vlOlPvNjgCPB6kd9ZqoHXm47n6ENf5PVCP3/eDrzeaKgsjuODyqiN
wOsV8atsB14vtG8Ex3Gdy1bk9QRbtGqA16taJ4Hj6MhZumjnnXqK97wD79pM
O5lzdw6TjwPDVMZun+0+++qoB8nWxg1d2ZTCuDK2iwpce7aSpZPSWqNpM7HN
W6bO0Oae6dNB6lpXiYPX9g/Utcv13ZdXlVO8nmbY/v7IfYmr9L/WqmP/rogH
ylwRD58/8a+DOsNVXlsvPkRFHZBwHjB7Q+0TenPHi/Zj3GT/in0fX1I6mVIx
tnFl1O9N6vjchIO/c7+xt1Auh3lbKscbqcMqO9D+5mDbG57rByjhjzNLgxV7
KKnT//zAjgSv9ey2+8+pcQFP4eB51dTQRjW0cyC9y9uH4zV16m37/rtL3lOz
B0+inUfbJN70XuykIiqrC9jEP1NbvZPRTuS1GXkHnVKoV29CnPrX1FOHZx1C
O7aBFQKVjgWUX+rV0ZZtHdQTA1G0oxCz4KygexUVq7uzyU5kmGresgvfq0vM
lWthciR5vbngya3L9dTJ+cfQzk25iObhhGRysvX27YLqDqo+aTvaWbwvblNq
Wj4pkPs9JvhsmDpz+epNsDNYk9UzlxSQuztqHcOaa6hccw20s+RqbODPsioy
ufvG8+9v2qhtMbFoZ8XGbWOeDa3krH+2rXTLIGWZYnob7Exue9/tf/4FuRve
8Jb+l5oKUEE7l14nKFU9aCLLLDX30P9SEsI30E7wnzOP9r7vIwsfc4XS/1L8
HM8xPkm8+h60H0TSQqCY9us/f2ZYHHlF+0GUPNitab+ojdH2aOfdYVNn2g/S
GrK7gfbrP384VX9l0nEhYUYOXguSIylvR1W0I3Oyyp+OC9EbC5Wi40QdE2XE
p2rx8Dc6LkTIb/6jlLR8yn2VB8bHVmKnAz1O5FOxzRQ9bmTZHl20s/zp5CA9
TqRS+O4ZetzI+jMH0c6gYEoDPU4k1y4ymh43ouTLiuN1SWoxP503ZFfuHwE6
j8jBHEW0s8VNQJrOG/Kv9G8wnUckzD8F7Zjxb3lC5w2JftfUS+cRmWWfiO91
g3dxIJ3HxGdIYwOd1yRi7z60s39mXwWdx8T+pU4FnddkUiUD7cSotj+h85i8
OnczhM5rMln+9hbYYT/wcA89D0mD6Lc99LwkW0QZ8RHnHMqi5xv5KajsRs8/
omB+C+0ctg3ToecV+fRA+C09z8i2xT3oj/EFuxUWfTZFeYx5T0yZ871IRkmI
Q9SjyJwxv0kNc17P67/9LND5btG38AsCbQPDpMwpCsdd/Ei/SsKmesrl4Ort
sxOiqRNta3k2jw5TC3Q1zl+t/0CJs1ht1VxRRE29/7V18tUgdeXZLc5fK4ep
wMJDa+7eqaKOFJksXRhZT925aXB7lLWGCi/0yDXbXERZXViPdsJshR+Kh7ZS
dgXWz+sPvKZ0a7LQjrHlwlm+6z5TsmyacZRNJ9U+a2AF2JFI0b+8wqiC+lGz
NsGz8QVVEiaGdio/jDk/MmqkvHLMOy0FWijdLQlox817WamPHF0vkuR1QjcM
UOLUMwGwY7zVqDvTJ4+SmmEoVtZdQ6UZrUI7Z9b4l4bOKaOGU92WfFrygTK1
uI92ivfee3rT4A0lejsgxpmuZ+Ha8YJgR8Vy65ZiqSBqr2mRbZJKPfVRcRva
UXXzPGn/y5lULTYeiX7WQXGc9UA7MgW6p6h0GRLsO3fTxv5hqrAzlx/s6Py0
2fPaI500/PJa7R5TR2lwSqCdlLzPT/Tby4n7iZEg7hftVORfjm1gJyFvwmj2
xTdkUX7V+HexISpGbS2+V7zajsetMiWEUlpsECtSRS0IEUc7QexOwWdE3xDB
u15HRp2bqZ0DbGjHX+P9UZ/9PSQ/jryoXztAFX7MRDvBK5t+8Wx+RYJOSp5c
HVxKNQZvQDt1zU/d2Ja/J2r9cqtY7Oqpxybj+F5qrIG/7tPzItZWO7rYopMy
0MnE+MTMTDT+s6mO6HqpvCxJyaT8LjDGS2Lmtz0PZ3UQZ6vPbVPaeZSlQAja
YVOe5E8VHiZKbRpNcZeqqHTHjiVgR7d+n8UV7Xoyaq9co7X1Gomy3Yh2jupM
FmXbdhC+ZlbrT0LpJJInA+04uS9pY8keJhy/aiMfV+cTFTeLZWDHaI7m42b3
WnL592mLUZdnZIY+Iw/3/b3nVXmyjbxWKXeRNKomha/4MT5FiernFzQNko/H
mk9MvGslHAmv8L2CDtwNZflSSf6V/P0ov6GcTN0XRjuhG9YVvFvcRK5lFyVx
lTeRUklBtNOkITmh9a6PPJB92vq8rY8UrUtfDnZczy/lWXa9mDydubZZc0c1
8VVag3aGFNlvZ8W+Ih2KjdkqL9uI3CxGnNljxW+Lvmol27yF5xrS9VVVNgvz
p9mIt2t4dQLZ11F/0pSznszgYIxXzoV04R+348m+XiVRm4AOwtvOgv4EXnM2
PeE+SPHnFYx58uVSX0eTlvrN6aQy9W29ZVkHKQ09e31Ot0pKY8QX2z/2150f
Gx6gLOXeZHEvaaZ+8qUIQru3z5cmObt+ajxEXDvYpJ2yWqqC7ctVFlq/eTpM
XQmZ8mt5nE+tMZHqCLlbT5nJf2ah/aZq3OOe0O9BDcgexHEZHRjTXe/XQ/Fs
P3x4ZXgPFXX2EdoR+aZ8cJ5KF2WSMWNL3IM+alNHLfpTdEG3lo4j5erXxH7s
XR/VyKqGdnyEds2c//MdtfyPRU7fjwEqyt9iGfSfv3ry17huA9X4Vj9qudBn
SlruPdpZV7pxJz2u1B/5URt6nKnju+dg/n+XTKts9cihlo59ijL2HKSiepah
HYnY6qZ76hrUL4eHw2Ppg5T0QVVst3zRy0vnGTWr/sYHOu+otqx4zFt3Kc5k
x5eV5MmNpt/ifz9Ts5/+wPcq+Ny15PTuBmJwOd9l/drPVBDHJ2yv7T6yMv5S
FclwL1pEzwPqyE9L9OeOQi57hFc7eWav8MrNop/y95XA5x4/oVSTu7eLHEuY
t2xRch91RnAvtj+YGZ9Bz0NSwT0xQs9LKrw/BfP2RajVGrofmXfQvJj+Oaqr
Xm859H/L/7uBtkvcp/wHwr3aqbm159FOii5PI10XyDmbFEW6TlDbXFPQn6pD
tzxov0mCefuvU7sbqPpZ7RhPoeMHp+j3JLaibJb0e1ND0oVoJ61XZZKuU8Sq
VlmOrlvUT/dojI+OcwDEkagqnR3KUdcgM1hOYv8NlzZH0nEnZ2Xy97/3yCG2
KpzY3n7NayNdN4mvArdsepoM9a3lAa4vIbGuofS4EpIcuvibbgNZWtqL/tia
Ozyh84B8alUVovOCZCrdxXb9kSeRdB0nvI9uvaPrOjm/2R7t7Eo1FqXzjBBV
t6N03pEzOqb43C+bIhXovCQDvg1GdJ6Si9c/Yvukp6wava6Q3TssXtPrDFHK
k8J5PZmssIOeD4RzTnAHPT9It1wW9tfgYQ+g5w8Z+xdvTc8n0tIjiPFfofUm
hF7nyAGtZG563SPZtlcxzjO5LwvQ85Asr17mS89Lwn96P9rhEiw6Tc9boisS
YEbPYzLnSSa+V+Qzg6aAO1WkLnzZQnodJpUyvPheH/TFr5+i11PhWYF3jqo1
UA9C1+L+fAPlGJmR2EddDuus1t7fRbGPLp0H7c9Funf8dWqn+Lcr+Syi57fR
0IsF0B7b3XEuLbGSen59MCySfZByPvObC9q/Ub6fYhtyyCLHUr0un0HqVn8y
ttt7HRc6Na+ZpDuHdn36OUC9MklA+3fKfXNu3+shrQq6qfS/1OyBLmy3k1b+
RPcjl2dHs9I/R4UFF3JC+6a2k6dou0TJJ9eOfg51k2mfNYUtlPaDsO14cJ/2
i9hE82B/E7U8V9pvIh7Bc5R+D7LJfBTbD94IK6Lfk2zeoRZPvzcx1r+PcRDV
0j1Hx4UsPJN0m44T4R5dhP3Hr76XkNUYpNL4BaSd/Uuozzxc2H/Lvq0cC+yH
qQ9JGzIassuoQsNVuO+qkWDjV5AboI6Xxn1yqGulXDUG5kJ/sXzVfo/5g5SA
lCv79v526kzocX/oH9jTKmZo1001RF9zH0/opZ7592McvD9lJWTd66VKr3EV
ic3rp4Y8d+N+zH7jD5tuybeUxiLdtTZhn6jRIywYB5FXf8f3xr+j2C8YhHv7
faGstAZxn/xHa2XDo7Z46u4s6RmaSYOU4nJ97O/cobi6MS+JuuSfc/Rc2zAV
fswY+4vxainPSq8lnDU593c+/EzdV9w3B/rnfE3WWbn8NblrIxcYljlETR0N
wv1q+XyVqDNzOkmvr2rNn9CP1Ic95zE+0T/MR752d5EtnQNi5pKfqIsttRgf
ngiOJrofObn84x3656gXYlGYV5a6qRJ0PxJiE9tF/9x//VeXNUbTfpBaWbnZ
tF/U2sBy9P9BzP1Q2g8SVZcsSftF/Th/GP2pGj7KRr8nKZK+8fZxWzyZfl/L
bds16PckKemz5N/kJZFDy/fg/l/+eKIQHUey7KPlHTquZIgZz9L9EoF0HEm3
5efF0vHvyMH7bBj/i82n7elxIlt9f0jQ40Y8Y/LR/9knfmTQ40SEv9s/pceN
dK7mCID+61qvvaDzgJxvfrWCzguSODaI/V+vudcl0d9Ouucnf6Xzgng2hGP8
w7JsJq/6l5BAsfQddN6RPma+DS5U1qPzjKxTrJ5D5x3JY+bbzt0FmXIX/Ys0
1PH8TS4xz93XGPt4SpxoNMeKB8tUMPfzE6X5H5sf5xN1P4vL9PpM5pTJ4Lq8
yb959a2aJLIq9DrXyPthomPq+AHay58enU//NzX66aijX00SpVt1FdsrWt9y
gp6guumn5i9HcZl3JqeL8fw+uUMX9ATOwdNrX3dlU2GqhthuKrQjD/SEjW7v
2X/rScrkp/QEw7mDfVVsFugJlVrG6TaryikZftkQaL977ybqCW4c/07KaCvK
tHC24XuNuPOxvqb330YtMmf6zd5QE2rV+F5/guVNQE9gHbTcCHqC/3IzfC7X
WAf3d/YWakTTyQr0hJUqEmh/v+i296AnmN1ffQr0BM0Sbcyf/JX+uqAnTCTM
bQ2aV031ZhmhncniHZ2gJ+hoay0GPeHyyFq0Y2F7R7TvYiclbi57HfSEBy/z
cFxslWd2KTulULM/cp0HPeGerR7acZn3Y/9LxwLqn0hFD+gJtQe6MA45Xkc9
lrpXUXpdLypAT6jIab4OdubJ5JzgSo4kVkllKaAnfFxtinaKzW33DyUkk2Fl
jzDQEwQXpaGd4d3zg5LT8klsC88E6AmWxm5YZ0Y2VySAnrD99K4roCdwaeij
neN++hdAT0jk6m0APUG99zraifX7UwF6Qse6KFfQE1J82DE/re7VNIGesOLl
01egJ2wwO4t2eju5VUBPWKQbJgN6glDdBNq5sUEN9QS1N7/vgZ7A88gb48Oa
6OYCesIvjefeoCcIyliinfc+hc2gJ4weclMFPWGbnQjG+Uz48+ugJ2zz50gE
PWGl0cANsCNUcz4V9IQLIusq5idHUiPil9GO21kziAtRtX6f9CUhmXK21kY7
YndjJkFPSE8ZWkjHifqSewDfK/6mzTnQE3Sa+SVUnFJIlgRj3B177neAntCZ
pnyXHjfCdbMJ38v/eM9z0BOaVvhV0uNGtmeuwHrCWSFRT+cNGUoQOg96Qonj
SbRzUlhjLugJd68VfgU9wZqZP0lp86+CnrDY/tZuOo9I71VujI+8xFFh0BMm
Jnkugp7wdw5j3EcXrDMGPeGwkPkyOq/JOEcq+tP4KEYd9ISarpJe0BNkrzxF
O/8UF7DT85Ds4S3WBz2hPl0H7XB63Aii5xuxefUnD/SEX/k1aCfq4m45el6R
NVtaOOh5RhZHWGN8Ni6b+rjwsYIMc96T6fl+6cfj7zE9GjImjPlN8pjzWlmo
+NTx5QYyqTJZqCfklwWjnQGfVAXQE7Y1rM6ZlRBNSXZ6LIJzylhVzU3QE96t
un9HY0URNbds1hY4p0iyeRwAPUG/I2Tm7TtVVKj3ajzvHBFQdwE9Qbkp7x7o
CVNW4WinNSm3EfSEtY9YnUFP6DnNh3ZYRhRugZ6wd/6TBhkbev8kvRDPC/Mt
xLRBT3glOi8O9IRw74doZ41eVTLoCd+2SpeCnrCJSxbtXNZWu3RDrocad+6r
vbdhgPJZ5Yz7WA6l4CugJ/gbbkc9oZjyRzu/svl+gJ7gtzyED/SEI7ntm8GO
dNTqzX4Gb6hF5vUGoCd0PXJZBHacistLCqWCKLbag5agJyRsu4d2TjvxrwU9
QcVx3g/QE9Yl3Ec7wzoqc4sTZYheCENPsPimi/78E3T9BXrCY/6dP9xi6iil
oQDGezV19YOeYHFiF+oJg+qRaGffFv/9sy6+ISk2s9f+EBui6mSq0M7bc7s5
3suUEO0vqbNAT7hcewvt8Gf8KAE9QTpScQfoCVGB+Qx/FArGru/vITbFgnyv
1w5QmaG9vGDngbn0vkWbXxGfP2/frgouperUQtDOkVWpqaAnmAlF9f+zracO
By/AOJscn10GekJy6cqfoCd4+1fieLl/vOkNesL8/neGz1MyqQ7vR2gn1MdH
C/SEVMspnb/aedTkzvVoJyfoEAfoCby34qfocxXFeywTdSTrkj+nQE+o3bui
1WDrNZL8IxrtPLiYmgV6Qszd1vODQunkQg872glbE9kFeoJaUfecR9X5RCe5
A/f5rAe694KeoG/Wwjfm8oxMfWbEZ01bwAHQE07o/AneYVRNeMYYebjj8m87
0BM829TWg54wXncB9/kcY6s7/w1WkoQ0k/sKG8qJUlwg2rnLWSQHekJupdim
BeVN5FRkNsbZudbwF+gJ4z9MUU8Y1FyIdjTySxYsvV5M+GWcj2ntqCbWkYxx
L/+ZuyYz9hWJee3Io/qyjaxeGoF21v/4awh6wt21E7ygJ7Q1JuB4GYptYv+8
OoGw/7a/CHpCgDTDjv3yjDkjt+OJq1/3PtAThrYw8vlc3RZn0BOkDyo0ufDl
UmGp6XhOGQ3+FAZ6QtzFBLa5bpVUiMwhbN+8PSkf9ATyLNpo4ZJm6ozILzwH
+V+M/QN6QpvJsndBJu1U45YqbB9XaLEDPWFx4hA/vX+h/j5u64Z9iK7rtXmg
Jzid2uoGeoLQrkLMk0LlTy9BT7i2YWPnivAeSv6WOT7XSUrGDPSE79uoxaAn
GK4/g+3Ox+1qQE+4yn6VA/SEeg51zH+zdz9HQU+42P3GBfSEddGXsb+truZK
+pxJnbyzMAT0hJo9fOjn8JTbLNATJH6KuIKeMH77EMbT+Z36zg8eOZTpo/AA
0BMmCqTRjtLLzlkR6hoU18ePqCcscm/Ec9yV67puMdX5VK7q9V7QEzZLX+ED
O2ni3CoOLyuJa7s/18a/nymTKB987iaTOmnQE9zUz9qBnqBdzr4C2nlfT8kk
gJ7gdmQG6AlXv9Rinmx/L3aXPueT05uefwE9Icx+MfZ3Yg8bAT1B8a0QC+gJ
3VI8aD/EfPfs5xadRN8xMg/0hOq6q/henOvdOEFPeF1g3w16QsHPavQ/g3f/
D9ATGkM5r4Ce8OFcHL6vtLSAMF0XyM7xVT10naCitXRwHrWLjTmCnrBE+5MI
/R7UJoG96M+/Ja+56fck84wKFtLvTb2UzkZ/3J4/XU/XKZJFta+j6xb1mi8L
7agsMB0CPSHqdD9LvroGOZ11Gu3ctme5A3qCeipnAT0O5N+3G2iHvD6NesKE
j6T8zkQZqlbHAO00PtLyBz2hn0tnL+gJZneWo52N/RuvgJ7g53BiPtfPd0Sv
pAzt6O9o1QU94fB2myN0XSc3wr3w3P0j6xQn6An7rWLtQE8Imy+N8dmyaOAt
nZck4WlrI+gJsztbMD7bwl1L6HWF3H44w41eZ0jR0nJc7/bGfymh5wPZ5jFn
hjx9rh3wzsTnbu32PELPH6JsJf0c9IToMmls97Q0KaPXOfKjYm4I6AmCy5ei
HZ/6+blz3CqJ7Uz/SNATDoy14XsVLe1bQ89bwpEj6wJ6wu+ajSuh/fNgSbzf
nSqifNTiEOgJXREcqCNp22dkg54wvNDUW0OtgZopxLYQ9ufVt59/BD1hOKbD
CvSEzRdO4Xk2+PO7V6An9LgG64KeMM/UCvfzvJFSJumJ9LhafbgFeoLE3r14
Xj5Rd//G44YcEpCbZwB6wjlOUTyP8z859/PkvGbiWtvyGfSE97k38byWdILk
gp4wbDQP9YTdKRloJyGyeBT0BG/p/g/0z/3XPyzM4SzoCbUeJlz0cyhTpv0R
iQgf0BOWP9F6TPtFgk7Eov8PH8zTAD3hiPycIdATWtwG8FxssV/QBPSEqKGQ
IdATRPS+of2jye/M6biQ8c0bCkBPuHk7DP3RGt+nAnrCnBWyi538Syi17aKM
76STwUKgJ9if6laszy6jnrHa4rlmd0zBUdAT+L46zAE94adbONoveb98vef8
QSrr8j9u+hxJbR6LxvOmlV6vNegJC3mC5EBPOJ2ihP7bqq75A3rCxOhxG9AT
IgMvoH2xIyJsPZJvqUMH7s0BPeHfQ3vsL8avFUifeym+b40OoCfMarDA8wjv
p67D8W3xVOInW1bQE8I2JGIczrsnc77LS6JmcvIfAT1hv4I6nqd02xWec6TX
kveuu+JBT5i42oTvm9gYswD0hH15g1GgJ7iORqA/m3OlgkBPENnS2gB6guXy
fjwvt/es6gc9gX9B8RbQE3TrRnyg/7Yz0h9AT4i5utkb9IQI3m4cR/WfEXtA
T3hreu8t6AnW/CF3of+VdWeSQU9YMW+FF+0X9UJgC8ZzbXltNOgJrP19IyuW
v6aa3L2x/+U07n9HkwaJ9hJDnYS2ePKq5yn2P3PcVg30hBnpawWa85KI3xpj
jH9Z1Cs20BNaye2ldFxJDqcRN/R/YyxpDXoCD1trJugJgRnfcH8euebgTtAT
Th2+7AJ6wicHcYw/z8xyE9ATdnEYzs2+10s8fcMwnvc2nB61r2slfatv6ICe
0NnKjvE5rGv0dVt/O7Hpld5O5wWZIMd9oX92jGyBo38JifoWfAj0hLLEVTzQ
30k4rbMuu4ys2uWzGvSEC83z8Zxo4hYZq5N5WuYO4/xN3jLP3ZmMfTx1pNEG
z+NFzP18v8Dl0+8e5xP5TcscQE8wadPsg3XZPdnsiGNNEqk98m056AnLrRR7
oL12Sc4y0BPM+XelO9UkUenDFLYvNf7GA3pChNzi1opoMRkXyhy/VybzBpuC
nvCNTVwc9ARRWwdslx1oyAY9IVi/pqoiereM0LbzoXDuuKoQlAp6gk/VnGzQ
ExZFpeL3zQVHrLaDnjDwtFzlHo+cjLbkC5yP+e8usICeYBaQagh6gp70RhyX
Ny7xVqAn6J9s3QV6whD3JXyu26uouaAnxMUPnAc9gSg54nPnXr3ZAnqCW7fG
adATzldexngayNmeBj0hXCl5APSEmwUWaGfjxaVtoCecFDy7APSE83J70U7I
64WoJ9wfl0Y9Ye++crRzpVvgO+gJXKcLLoGesGOuGdrpNW/aDXrCWXe596An
+C12RTtjJl/dQE+4qZNXDnqCCu9itJNnG3sS9ASu/sYs0BN6I20Z34Uvd28H
PeFsuD98h6cUzh9FO/t/+MWDnrBV8uxP0BMEeK8Hgp3vdTnPQE84U7DXE/SE
bZpn0U7f4F8D0BMy5g+8BD1hTk4Q2qlKUn4BesKDs6PXQE8ICOfD8/JKaWW8
n+BqV9kIesKTDYxxvx/5RxH0hJ0fh3eCnnDpzym088z4NeoJl46mhYCe8G0o
Becp5+pTt0BPqOQRuQt6wtY3F9COv2kM6BqkXCZJAfSEoWtKaCcn8gDqCTYC
wnGgJ2xPrsD5K6HbkQ16QtYf5ZegJ0zHZ5tddyDoCbsO5YWBnhCm+w/zatmA
JuoJ2dEV3KAnGN2yxzq2I+OKFegJFauO7QI94UXEZbRT/1GpGfSEdXO/+YGe
MOflL7STpHemBPQEZ3/FKtATfkpY4fydEv3RBnoC9/bbl0BP6L55Du1MtcWy
g56wO11vCPSEhEZJxrhvLkQ94Qa/3C7QE55SvZjPswq+iIGe8GbNHSfQE6bz
uTv+f1y9dzzW3x//Xyll71JKU6EIISInioYoMwoZaZCRMkJRErIqCQ2UkV0Z
2U5Eyd5k771pGOX7eh7vz/d3+/7+/Fyf6/26znVe5/V8nvO43y+5G0KecFHz
GSfkCblBduQ6B/Z0n4U8oU5igeQJTw5Ok/Ujz5vEBHmCwkF3S8gTCgqsyXU2
NzzygzyBVzfrI+QJpqyx5Do/K1IQ5Akb9s+vgTxBcsGOrJ95UUEDDfqjcv89
9/h/z3tk/SdNDXoNObT8fGPe/55ru8S6C9dijeRO/snlhjzh7Fwhue/PDpaf
gjwh/emdZMgTbk6HEO5pT1v3EPKEf6NxLyFPSB1wIfx080F1kidcKU1ZovY1
qFx6iexnqp5+8oY84UfX7mjIE05xJ5Lr+LrnlUGeUKLxzRHyBFFLBcJP16Fc
b8gT5tbL10GeYPXXZStc5+vw4EXIE+z3ziVDnsBzNJZc5/ErqxjIE3gl7udC
nrA4rkKuMxtrcQvyhEDxojLIE/rf0JJ94yt6c1fIE9iSZyUhT1BtekOus9vN
dgzyBHv6QGbIE+JPXCfXCXm7QRjyhO+Pw4wgT5heuYfsY+tP6ExAnpB2/68t
5Anqb5LIdbS77qQ4zN3FxcezRiFPYLlxilzn2Ezx+Yw4OSzxkA32xWg7zQvy
vVRHTvyFPEH4gP5q8BMu6USQ63hFpbdDntBEm+MDecLYI21ynRx+z1OQJ+gs
aPFBnpAdRE/mOZ5NgwnyBPmaZg7IE/6sCCfX+Znsnwt5gvk8537IE3Tblcl1
GFftn4I8QeBDIxfkCb2BoeR7idKFnYE8wa4/rh3yBLns5fG8/HspFvKEPs/w
bsgTDKrXk+tsaF9D8gTp829InlAS3EjGU11yNxDyhOAUbAF5wox1HLlOpOeH
M5AnyBRfUoM8IfrWJFk/Kepv1kKe0LD6/TzkCZ5Dn8i57OB57cuQJ+g/TS2A
PMHiaDy5zo52v0TIE/7E95tBnnDJg4mMZ+tv1A15Ql9xPjfkCd2Fr8n+PLKJ
RhnyBK7DnzdBnrDIvPy9+G+YKECeYOba4w95gvcCL7nOq84Mkiekp50keUKU
ngRZP5q/H49CntAW7B8NecKiRDS5juRTW1nIE37tbdoNeYIYw/J63v/Kk/gJ
B31DSZ7wbtKOnKMLDddzQ54wxiRkDHmC0p/l+7W0YWwz5AlRDbXrIE/YKhlB
rsP5S9kY8gQn9ikOyBN8o0+SvEVCkXc95AkV0VP2kCewrVx+vsq7JddAnuDY
ukMW8oR7EvrkOhckTpE8wc/3fjzkCSZvHpNzTQPDjpeQJ7gppC1Q5xhUIx5M
zk0uX5uyIE9YeIEtIU+g4agj56zDloPzkCd8nwjvgDzhwinr5Vzi1COSJzAk
hu+FPIFdnpvsQ1KsvjFAnlDLfcwN8oSYHS1k/S89WFsCeQJjsGYX5Am7PNsI
r9/T30/yhLNmq9ZDntC/JoK8/uNxHfETpLN1iZ/AUWFI5vPTGMs45AmsJQz3
IE9oD3i3fN7nt94GeYL46yySJ2z79568zlOpsg7yBNqudy6QJ5x2nybXiQ03
Pgx5QnzXFMkTBqMfkPdX7tMjfkKMSSHJE6JXsZLv+5Yu5wHkCdon3HsgT5AK
TCHPkariTQ3IE9x0p1ggT+gtM1v+XtMu8pAn/KuYd4A8gTHaiLy+4YuMEuQJ
ZkmuqyBPGNVMI+O5zxPzDPKECcHFMcgTTExDyHic4qUmIU8o9AwkeULUihLy
uszPd7SQJ5hyvCF5gtful+R57N1sTQ95wpXdKSRPGAlZSe473b3Wn5An3N+1
+jbkCTppVeR70c293wZ5gkjjzl7IEzwiN5H1fy3SwxnyhKtfvXdCnhAvvczZ
Waf/kDzhedcEB+QJUmt2ktcv017eB3mCZ2L9LsgTxLjryXMt8P7PKOQJw+Kp
Vjlq6jj3xVZyLv74+4o/5AkNyRhDnlCyxpGco03EB0meEHXxc/GeODm046IF
yVtmM+4+hTyB17pADvKEGnEvMg8qDoK3IU+wv+LHDHmCvmgxeV3qKqMe5Alc
LfvVIU+4EL+G5FHnznqQPEFtsz/JE47YbCXvFygoI3kCV9VcHeQJq0Rfk9cT
3WbzIU/gk1G9B3lCmOhR8jwm36olecJAh/lqyBPSAjPI+xfkS0meoMHyuADy
hN9HuMjrbBwhXyBPEG+8+RzyhLeIhlxnpc2nbMgTkjN2hkOe8KpQiawT/mtR
/JAnPFJpuwd5wvjzN+T1AJe7UZAnxFo5kzzBfHaG3Pcb+N4nyBN6zo96QZ7w
1neQnOPCI1/2QJ4Q4f7gFuQJMcdoyXmk42tvMeQJXS/26UOeMC0VSPbzo9kr
zCFPeLhm3gfyBGtnd3Ke0t27RPIEnrPpRpAnxFwJI+c4uhmROcgTgq/7jkCe
0LS0hnxu04d3JE8IdrJIhDyhp9eaXEdvMGkK8oQ4+w2tkCdEjeST8TBbOJhA
nvBO3orkCe/+u/4fpwySJ9RcvRsJecKE+vJ13lX9JHlCevr9QcgT+Piuks89
dUmM5AklUzHjkCdkNbeS1x1YkCXkCQHptVmQJ5Q+fU0+V+Z4KckTuoq9VkCe
MPdWn3yuOWskyRN+p+XJQZ6QMX+W7Lc3bV1D8oTsGzzMkCe8dFn2DVa+thKA
PEHpmA8H5AkrB06QfZrJjzu2kCdo+g8fgTyhpUuFzHO63IElyBOmrnRZQ54w
Te9F9s+sxhdWQJ5QZvuX5AlYz4Rc/6fKZADkCfrG7LchT0gd3xgI7+e1jpaA
PME88gnJE2rlwkiesD94ahvkCerv0+GcjZIV/j6H9+vOy32BPOHPn8ZYyBPi
J3+uJf5DBQ0b5AmJOvIkTxhT+032qyJvdz+HPIGNZ6EW8gT9X21k/N4eO/og
T9BXySV5wt6hWDL+HqbaVsgTbN+/9YQ8ISJ0joz/7rPpQ5AnaE+/bIQ8QT1g
iuzzN9yyJHlC1YEfHpAn0Cs+J/dFtZc+EvIEOTefccgTHq5lI+fl2n+Z/yBP
CON+aQF5wrpbceT8foe2l+QJR65cUoY8IeZ8Lznv60cs0ECekEE/sxXyhPWq
CWT87md9bSBPUMye/wR5wrDUanJ/1y/ykjxhZKeuK+QJ6U7e5P0zqxlJniCu
d4XkCW9CHpH5MXMan4A8ge3d9wuQJ3z3e0HWW6L1/ATkCf08dw9AnuBWWEbm
J7WqLA/yBANOizOQJzS4upD35+YmtUOesC84n+QJSgIsZDyPTCS1X6kYyjEu
n7+x1n/nbtXlfTzyO65r1fvypJz6f/v5i9btWpAnBGj6kzzh35klkvMrbrx4
DPKEpYtfSJ5QnrSK5Ax22SokT7hcptMDeULizxXk9Zb7gVssHDMQ07z97xKl
BJSqUxcyUD6Bcot2J9YkOMmx0qL1yTNWcp//+3d3OlYHrjuoXYxSu2Qtf23O
QaqBTkLcUhPI0nFs+hZHDaoTUa107SpEqcLYbuWRcSQ32iGVU9SIpi6J6bPa
laKjL9gCWAdH0ebTGnryIm1oWLb8TVsLtd9VevUz68AIMv6S+K55WxfKxIct
5b/XopKQ+jXee4bQr5jt25Nu9SChq5e1vW43oMasewt7v/ejx0uyKdHefaho
XcP0g54mdGffVjabrb3I2/b87CuPBHR3LkxsITEDSXQnazJT3ytR8YbVvgs5
yLiE6aeXRzFSrVlzplycen3k69F1TEWoPq/T66tEDZLea/zij9Q4umSZUxYa
V4oOfDf7XjneiHqD57fdbB1FmpYfHBL+VCHjjMa7aXptyOSJ/hvFnSOoofyg
vkd/LfI7c/ofzcEuNGtz6P5L9iF04Zfwv3OBDehcb1LrLq8exD2Q/zvnQz86
3OsWe3SxCSX6HPTlfN2H5hUzVNas6UX3Be7/sudsQVn5Ys5vbQbQn7ec35mZ
u9BLy5UyqjWtqJRhj3zC7CD65KeS0l3TgsQUfs/KHWhHn+YsxJSofciC/2Dx
pv31iGMl+8ZksQ40vbuTzY5mBMl9ZD/t61OGUkVjhdXKO1DNzMzsOarON74/
XmWfnYOQy5r8Rys6kWSnXYkgdZ5UfL7L5zmjk9xFLcPzKn4MWGfb274C1Rzk
bnLb+As1nyuvX20wrw09rJqkwnS430Uu/7918kZ6RlrAlAfHcgcOu+0qQ9aj
eeHeByeQsdT7tCCdXZg36IBefH8dctpJt1AnN46EpWnbD+UL4i7ZWHdO5xY0
IWCydlv/KEoLmM1Rvi6CdQtiNiy2d6K5m3yx8yIjSMzhfWug4gH8V7l5p0BZ
D8qyHt9Gv2sIRWoYaHP3SOAD1kfdxpz6Efvuyys4i/qR0I6TjH0yUjhZ6VrV
nr5BVCsrq0PD04s2ePmG6lxIwGPmBZ0pQRnIonn7T0fqe9WPyiieFMnB5dJm
dRdsilFJ+IbXNpITSD1ej+XheCEeiEj3Ft9Tg1L8q82dZcfRzI/n0s0PSrEh
t0VAUlsjMmZ23HSkexTZ70TpUj1V+Pw6jpPxp9pQfbCXv/PeESSle7MnrLIW
O9/1WjIR7kIWrFszGbcMoYXwrnHGuw14zjTpUvK9HiQ/J/J2OKcfFRy+m3un
rwmbniuutA7qQ2vPDkQIs/ei0+HXVx9ka8G1AsWlQjcGELfL/gu6bF1IufBV
8bPKVlxXVXnmy8wgGlhzhfZPUwtKE87KpxNtxyy09D5dfMOIJ5irSES8Hs3H
BrGPiHTgh2PcCXeodWKWlEDbHlCGTpo+Gawp7cCXdH0Moql18vbOQ0PeLznI
dcOudx+WOnBgHE3VE2qd7OFu0NbLdZRrkOMaouYRP1JSvU/NK5JWXp7PST+B
2K+vnfKG0wPLWXqs/u86sfPzbKXmF29pFROg5htFCS7Ps0b/9BNqfvHXAck5
9/FCFGbVSOa5bGD+JTW/WFe0l5eab7Ti42kyz51b+tSp+cUFTl7R1HwjqY/O
ZJ554gPXXBLuwuJjYhXUfCOR2n1knr+v+3uVml9cLynZTM03YnnxMgLm+UAW
ewM1v7iwgT+Cmm/Ea68SBfPsx/8e1j2m87OTrvVlQDkyy+t/v/r2EWp9447g
9OFPl3hQF2/68jo3KrpArW8ch0TfHtbZhbTMNpN1rvqcEdY31pZJmMOfBVF6
sydZ598mvsD6xo0SZi2/zUVQvREXWee1vJE7qPWNA9zqF+UUD6Cp7J7tsM49
zhyB9Y0XvAysE7olkE+LGVnn7zetq6bWN1aoXu/iJCOFHvnfPkfW+Uo7zb3s
IzjVj6fKfx89LgrLP3mEtQv9CJLK060axY1SsharWxlwruQNp8mGFmRmc6cz
XHQcO7223lUuyoTz1z3SuytWj14wK+/XE53A4Sslkkf5mXHhg5X7LJ6UoXNW
FxcFyybwE/G1XL15zHjdhGzV4885yCqelfzd57x8upbiSWasp+I+ZDnoKPdg
nkWQqsvY+ict62uPBLz4NpXUZ89f8Ro1kU55+cGM+kxjVnn/WycFQeqjVL3G
XYPKvlT9xvu2riV1W/vXkBtVr3G6hfZ5qn7jzVmnSd3miJXIp+o17psU6qXq
Nz75Wmk71O2sjvqbVL3GEVmjXlT9xq/Ho0jdFqg2nKPqNU7vPGxJ1W/8++Zy
3X7mPN1A1WvMcHQzu05gA6ZryiF12/OW/EOqXmNtxs+fqfqNI/QXSd1+1BnZ
SPVRLGBcvJvqq9hUfbmfbnrafobqlzjnxiE2qn9ioe13SN/ULh9Kp/olPnSV
Z57qn/j0nyTSN8/72Byi+iX2mO09QvVPzJrsRPpm7soVPlS/xFfpM69Q/RM/
1BonffPo95W6VL/E+fJTSVT/xCXGrKRvytFelqP6Jb7MFr2H6p+4QamV9M1b
0gZNVL/EUwebs6j+iVWV95C+6VKSFdLN2YKnXbtr+m8N4L+W4lu+0nehgKQO
GZqaVuyr0BZmQ53DuLsHLlSXtaBzWkqqymLtWP7rV+2APcP44UyoxTrBevTS
9yKDpGgHxpdE6C9S+/orTAIHFdzLEHtpgqszVU9kLevYlqhzgAWu0m5MyUEx
Syw7dlD15L7cuZksav8zIJM60nvLUY7/16cKf7V4dHqB1V1TLRwlsvR9F5ic
QI6m98t3mxeg+yMzZlsX01HgdDfWfDhB1ZsVFltNKlCS0k5D+vYCdMh/gDY2
cxyJWjJaVqyoR04V5/oeen5Hv6sd1pZ6j6E1p5Ddn8oOxGK8Wblxogb5OOeM
y22izvHMdKPl2t0ot7Vrlj+lHj383rjmQ8cASl1ZOxDu04uK9n2+NS3WhMZD
09rDtfuQWe2ds8VJ/cjnsfitMelmdLCw9cCpi92o5eupqmn1QeSa0uOusaUV
fR899Ms4sh2tWSV36FvMEHrFy3lYOLoNzcnvcp/f3YRGmUUVviWOoH+/tg+e
+tmB6gWblJv8YpHSlfNJ4jOJiD/QIKDsSzaytXPre5w/gZ7/ayizNy1CBYPT
gSlTNYjl9rTMLu5x1J5WopayvRqFmbEf20Pbjk792XZPaXwYNQqa1wgy1aFn
G93uO7p3IY9xjjD5ukG0pok+lyGzAW0flzdVqepBS3se8Xy8Ru2v3vXk3WIz
wk9nZdsPMacgbh52d/mhCfRkz+2TT+nu4QJZjS1cT76hWu3Z9LibE8gt8ulZ
wRhXbFzov5omoQZtXKPYrP5yHGXt4N2zWsIVxza0e7/Q+YGqfjQHDhmNoWOa
8c1efHdwR87fgIbmbhQ5+ePGx+YhVOXrqis644hLNZP2hoX1oTO3h17aPB9A
x18fPRh11QH/GugM6d42iM6VzBsWrO5Dd91EJsbOqmPuHzvn468No2apJflv
rN3ocFwm1R9UcM4Z3t1hiqPIzuDyWNl8G3oYWPxnXb4S1vn9r9Hh6xgSHpSl
PWLTiJZQgM52r+N5DseraWXnJ1DMG5WnH8QjUFqrH+/66GS8o6KW/hxHLnKb
Zk3iSptAMg8+hUwxfsNl7T4cUtK1CP1SOiU2N4aa3nh/uNNQjRssXPXHFNpR
2KufuYV4GEW+nn1x8EMdLgo89S3pTRcq2MVgFhY6iE4PSZWtONmITzPtTwke
7kFuviYD24T6keHeh7uq/FKw11YXszqJKPQhxEdjZdcE6okOzoo7/BWLrhi4
YVqQjiTj22WdLk4gQTeNf7Mc1diK27C47msBUoqjXfHbcRxpHT4bcaKhAb9l
4eNJsPmOzrvarLgiMYb0nl5kjTrbigOZ//kpVFcihnQxhdKnI+g5TW/vg6xO
/Ja/+ExnXw3qseH8uCdoCNFcs6th4+7B74Ms6V7E1CNzPcatqSeoc+0jV3sv
6T4sHPIh4OCeJpTH1ROxMakXae18wrFv/QAOL1B7FuzfjF4XZH6YyOlC8g2N
/xhjB/EmRwM+OtNWFLPv7DaJ423o/VHTFzdHh/Dh93uP/W5vQ2cw64e21Aak
8MtvLLtlGHvIW/9ynGtHI7uv/xT6WImK9Tzuj9wcwRtLPOiyk6nzJ0ucK/O9
fPT0D8eO0NQRrMGQxSG22IHsj3Q57goNQcKPtK9pFhdgtUPec1vTXXHO66EL
jO8m0MMUr2bIpdmvPKQxEXXF++fP0kDuGnRl7buujY143IfJrmDyLjbwcO5z
aBxDiYIKvx63dmGTyl7+5CFHfC3p8Pcun2F0IqHgb+2nXjwcVV5UdtEB58ll
lA2bDKIC/mIv37MDePP9Q/a57rY4MJPOfeVIH7oofEDGuC4NX2+mcYzaG4dF
v3AJmjVOoLbbvWktK79hvyjV3+bx2fg+Hw1fyckJhK8FP+V2qMbZl2TlGdML
sQrvg+OvdMZR17MlzZ9SjfhPCXYV1y3FJ1y9lNVpxxBNBVN6wIdWvOlG27hm
dRVOO3RN69C5EcTevhi+cqATu20Y05kpqMWTnPKG388MoR00nYEiR3rwaqPF
TnbbBpyvk2Wa+KsfRWW/lhDW68Mlk9ZCZR1NmH5b9oVp9V50Y9U6fwM0gIV3
TOpcHW7Ge+bSA+kudaHH4ldvx5QM4hITVuuZ96249IZ47bFHragzqOsaG+0w
bt3t3sCysR0H5ca+DpqoRw92BDQUjQ3j11YV+S1bO7Dx1/WlWTwVyEm6LZLG
ZQQ3qTsPXMrvwCN6LqtXtGJ0ab/z4vW0Eex/ionHZ0UnfjD/q/32cy/01cdk
k5xGMpb78s3+mEQB9mmQ5LQLmkAPYgZa+Ld8xjx7JG/uEK7AeeEL32fqx1G1
qFrRg86v2K/0uOqDgTo8GDl75F/yGFr/95ruYEE1Zi74q/48swMXxy7FJGoN
o8Omce4vwuqwbe4xW7/T3Tj1UUXjoV2DiMXJ+5SqbCOeX30+95ZbL2Z8vLrY
JqIPxXM8ntzq2o92GiiwpUz8QPUP+JSVkrvR6NJf76y9g2iT2OcQ/44WdDa0
j2NUuwM9YpILrPcaQntqQsMXb7Uhur6Na+5Q59rqN4nrnQOH0WArZ0ljfDuy
pLdK9d9ag3DUm4OXlUcQ9glhK3bpQJqcpiuS5L8ioTvnmWVjR9ABxiOJ7OMd
SJfxNO6aeI8uX60XsNeORiZ7CnnnPgSjrrsa1VU/qfNvZMYg1XcRf0OzEtWH
0SujfNJ/44Mdl7DID3Rqyutta0cfCtj+r1c+vgeFmNoi6n6jLYeZA6n7j94L
PgyC+952w0Cdut/oc+EmN+r+I5agC5Vw3zkN9j76MNuKuo1PD+tR+++7q7hK
dTa1oH1e+z5R6wDVbMi1odYFkjpEEw7r4VmRR84tlXZ0Itb01nrFYXT7tEBZ
tkUdsqtcM37xWAdyvLvr5OKGEeo6w5Fcf0tQZwjPGumGDsQvfNZUJWAEVa0U
M9D1zUTqd3zpqfWBWpxoaC3SRtBi/KoOWCfb1xRnnPK6iaLjVh3kCPRAN1mj
ePSpfabloJAR9RwiDu31R6nnEiV5c5Ln0cEnwO23rRaqPLDuFX3GEAoI4B3Q
ou9BKxKXf+c4/9/vHGX/+52jinVVyvYeFeQ9M8qQeXYMNQdlya6I/YG4ttMU
3M1XQkUlaxNHnoyjivFhQ+aRGvQuzalvVbwcsj7nnnrGegLxX4tfpd/+Dc1W
1/gcbhNGWY+DLs4MUs//QdPZNJEUJJpg10EjZIScX9Y/9dwSgUbppk4qUv1K
JqKgQn2UGVlOkn03ipx9SPbbm2ZVbI18f+AEg97Tp+j7URtfr4W5fg9i+dGa
SNVlPKzVQ0/VaWQfYpsM9Xmb8iUFqi5je7GxX1SdRmu8GnihPnN8eZjdcqAN
Wxj8uz5/aAhpqxakSFxuRn2CEkZUvcanvxs+peo3spl0TIK6HcH78I+HczuO
HeE9H3FhGIUKXKFl+1CLtgljj3DjDmx+TdaXfc8I6gm68ukb1Zd0eP5JrO/p
wFfmB7Y9ezGC2Dr/enw3+YQ29XsfoOo4Xj3Vy03VdZSV1UHqOdeewG9u3r6Y
k9/7cW/1MzRioSx+6+8EshJ0vUf1S1yVwM1L9U/ky+ZL+qZ34pwG9f1xwu6R
89R8oMIgT0uYh8MJ/reo74PVvf6GUd8PbZg/mQbfK+AwjQk1bpzi+uUH9T3Q
gSYzMv66fcOB1LjxVtoP16jvgWRkPMn4j9nyC1LjxiMhs1zU90A5xSs9Yfw9
OyeDqfFh24kL76nxImm75XGuylz/gzo/42ajVA/qPI0MHMbJOfqgbhCsMyyk
0c+63k4Lv32l2Q/rjX7LFtjf4L/X1a0rz6ojpTJWBdjnPCkn+xscvrQvf6FL
BW33sSX7nN8dg7D+MEucnIRJjwrO5Fteh81raZqofQ9mzJmKKPqshPyDpZb3
P5YWCdS6xA3lciLfqP1RcVvWJVifSsyqvMBrZEakCsD/9Cy55ws8Qjv/PqxX
7F+pxu4VL4f7qz6RdXuiM+yCXuQEvrRhJk2LfgNSMTje+3jDF9Tr+hzWMT6S
9cbxersw1r2mR9ZztyLZb+Hi0O+RNs06eWYKZ8m+K/XBaVjfOHDDOofVQkb4
f+uc95Uv7Efxw7qdrjfZjNDE6uV96c6e8y+pOoWtXspyfxb5gfu4mfugXsnt
8O6k6g5+GnUxhqpDWFfnTwXUn2qro+ZUfcFKijFtVL3BhqwrS6DOiF7djKj6
gvl1C1gMj3XgL3GpsVBnpnn49Kj6gu+wde6i6g3ui9lO6gzn8DFRqo5godeu
dVRdwf+rJ6q+e/MFqfsr2rWl+hHVp8xzZ7whT2NJujOdPPEDm9GYzVH9Aesh
QdIXfAZeaFLnByxhaKlLnSfwmaObxOEcoWC/z4HqE7jWifUZ1TewsmMLN/QL
Xandl6hzBa6lf9tEnTMwzUzKPJwveue7nKn+gaN6IsOpfoJft4SsgD7iXWa+
kTpvYPtrLxSp8wfWCnnrCueO+kL6WKqv4Ir7QtupPoOPueUlQX+Zd/35i6mq
HbNGe0jlxw9jCRG2Wu4L1Yjuge7UN5cOrJExd4TqP9gwIXQpkeo7ogdS6Y4H
duB9Th9HhHVHcGTyqKJPXCEy7Oh5SPUhnKV1fSPVlzD/HgPSj9jtDfOpcw5+
0WOoQp17sAxrJznvbOYY+fvnQzDu3jckRvUr/L8+1ap24wZ1DsTnRfWbqXMh
ttu6fB6k1dz06HZQP9qX1253mKsZjR7/EtXl2Y28RK5w3UCDCLH4NGX+a0E8
0T56OX/bkYXH5sNaIUOoOoyPgd2vDakGirEYuDehn0NbStLDh5EQV+9D/rx2
ZPut76lHbjWanFpXJak+gnYfPhrI5d2BjuzM1Vd1KEJWBzpDveJHEGMIi7jk
dAeKd97b6I4TUPKjfza3OZvRJ+WrC3PP+tFU7K4Poj7dKOim7qE4ahxXT2gd
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
    "]],
  Boxed->False,
  ImageSize->{360., 409.6472400945772},
  Method->{},
  PlotRange->{{-4.9921340750890835`, 5.}, {-5., 4.9921340750890835`}, {0., 
   5.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.8811829678684101, -3.044116784433944, 1.1861153316040438`},
  ViewVertical->{0.07693280217446505, -0.40091910396508257`, 
   1.8243187500657911`}]], "Output",
 CellChangeTimes->{
  3.476996875197006*^9, 3.477053518700473*^9, {3.477053707839757*^9, 
   3.477053722881621*^9}, {3.4770546994569902`*^9, 3.477054714467792*^9}, 
   3.477066971198316*^9, {3.477067026591288*^9, 3.477067072390177*^9}, 
   3.477096496452991*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]j", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot2", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "*", 
       RowBox[{"Sin", "[", "\[Theta]i", "]"}], 
       RowBox[{"Cos", "[", "\[Phi]j", "]"}]}], ",", " ", 
      RowBox[{"r", "*", 
       RowBox[{"Sin", "[", "\[Theta]i", "]"}], 
       RowBox[{"Sin", "[", "\[Phi]j", "]"}]}], ",", " ", 
      RowBox[{"r", "*", 
       RowBox[{"Cos", "[", "\[Theta]i", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", "Thick"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.476992978951338*^9, 3.476993086459055*^9}, 
   3.477054403718309*^9, {3.477054439866035*^9, 3.477054459840672*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], Line3DBox[CompressedData["
1:eJxNyH0803kAwPExO0/ztOPQg6xm60hd1Cs77PvzIlG3pLqrTi2W1WSXOpFu
RSdPRUpOZVsd2ZTbcUyS6moUxzllrJSH6IiVGhsxWXW/P67vfp/X6/PPm8yO
28gxxuFw69Hx6HH82oBc4iEG7v9EvwxZcwt/YLBDhE+LKN+CT05W0BgK6jow
cT9Z/iOFA31L9RbLc9QI4Hd8vDqCkgA9Xjx2IIkaCyLZZZ4bKOnQjS76SmKo
fKBVpO9dSymAHlL4nMGmZoNb5pNZaygS6Lzz17JZVCEocvNwCqbUQD/6hYts
O1UKevcnH3ph2gQ94ORRtXTtbZDGetlyaUc79CzCfBEwaQR9IdJ6nugRdFWd
5vhVeSvotgtttGD2QPce8pSLMhVgMqSinb5+APpQbKL0p3ElYOokQY+XDkKX
FJkX8y4/Ac0nYsrxxsPQo2ycfFwCe8HfU3tSz4lV0PM+0P04kn7gumnzDrtj
o9C5zE1ukVefg48n+WKNuxp6Q8Tnu56wBkHKxlX7l0ePQ3c2zTtQSXwBaF00
O9ZDDfRpsxXppP5hkN+ykuu/cAK6TWtkGDirAmXVXzecyZuEXjEoc5mKeQUe
5krOLXn3Fvq6woY7RPprcLPLk8xfOw19oc12B7XqDWA6lVf41+qgp/TMObDt
zzEgbgrVyizfQbe8VlW/pm4cSHh9PqIjs9AFEm4brVQDruO7ZtqG9dDLOMn1
tblakG2m3i/z+QBdSXhqW75nApgT9K8srnyEHhjexB7ZOAlKa/OtspNxyCd/
cERnk7n0LQjj9P67gmoE/WniCcljwhRoyy2qc+o1OG1euX/s2BTwjIsffZRu
DP1sscNyTss0YLfWu7T546EjHbY0cY0OLHANPM3VGnyfYi8h/+IMuOPR+X2f
wAT6jUpzMJLwDnhVP6PlhBOgB/v68o9FzoIsjS7MXm9wraSKlOKrB7sXB9cg
JZ9Bn9efcdaT9B4491jPu7LVFPrJe2p78ux7UBE03DdsZAbdIUuoPaz8AJzc
6cWRdQYfmu7ucJR/BNFNgrvV0ebQVSXLMq3W4xCfiGVzpUQL6PO9yc4jdTjk
eSxI6m0w+KTj9iWDS40QnjfrqxGeJfRuHv2NncgI+SdR99LDjQid7Ri5bBfJ
GKmWNQ7Ydxt88ZfXOTkZxghfUuzVlWoF/f1vFaEqrTHibD+T3km3hh6fOl6x
m4tHBPSdK8qGDD7Toqx3fIxHSrboFizKsYF+J0nVXBRggsiTMjJGXW2hux1d
Hf7NdRPElXzBXZZgcIEmKNN9EQGJydzzsEBh8KpbpxgehQSEFZ/UWoRx/sH7
2+iob9p54i8pxoM9Zw+uQd1vlfRuPca7L3Glu1C3GlH/8QbjRqmBTiLUK4MT
z6zuMPiGkBkNUUBApgnp4W8xrlZGS9Sov9IUMHGdBq89JZTrUe/vKw21xPjP
wR09FkIC0lzTHEDGuMMNQKKhLuAQvZgYZwjnpOxE3b8xnyTBeE5U+9Z21JdX
ia0rMf7dHNODz1CnXqyxuIVx107/069Rt0noMlZg/FqQtNFMREAGKHMn9Bjv
oWV4BaCutF0yZqo0uHjgNjMM9Ra93ygJ4/sKJ7g7UJcpWYOLMY63jPr1MOql
8rh+b4y33Tt/MxN14e/HehgYP3/kwaMC1E9fyOsKxXjUSoKmBPW0tMudmzHu
ofYlylD/D0BaPNc=
     "]]}},
  Axes->True,
  ImageSize->{360., 414.8532269944685},
  PlotRange->{{0., 4.207354838175096}, {0., 0.}, {0., 2.7015114742078103`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.5704326752767317`, -1.9208845210057177`, 1.0738149369562424`},
  
  ViewVertical->{0.3030345705657203, -0.2506883412074113, 
   1.2427754461839151`}]], "Output",
 CellChangeTimes->{{3.4769930536883497`*^9, 3.4769930869856052`*^9}, 
   3.476993717646275*^9, 3.4769938422222357`*^9, 3.47705345000681*^9, 
   3.477053732866927*^9, 3.477054404720991*^9, 3.4770544606362753`*^9, 
   3.477054716501346*^9, 3.477067076230932*^9, 3.477096502002933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]j", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nr", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r0", "[", "i_", "]"}], ":=", 
  RowBox[{"Sin", "[", 
   RowBox[{
    FractionBox["\[Pi]", "2"], 
    FractionBox["i", 
     RowBox[{"nr", "-", "1"}]]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "[", "i_", "]"}], ":=", 
  RowBox[{"2", "-", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"\[Pi]", "*", "i"}], 
     RowBox[{"nr", "-", "1"}]], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointtable", "=", 
   RowBox[{"N", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"r1", "[", "i", "]"}], "*", 
         RowBox[{"Sin", "[", "\[Theta]i", "]"}], 
         RowBox[{"Cos", "[", "\[Phi]j", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"r1", "[", "i", "]"}], "*", 
         RowBox[{"Sin", "[", "\[Theta]i", "]"}], 
         RowBox[{"Sin", "[", "\[Phi]j", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"r1", "[", "i", "]"}], "*", 
         RowBox[{"Cos", "[", "\[Theta]i", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"nr", "-", "1"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot3", "=", 
  RowBox[{"ListPointPlot3D", "[", 
   RowBox[{"pointtable", ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Red", ",", " ", 
       RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.476993223833263*^9, 3.47699327685384*^9}, {
   3.4769934351541853`*^9, 3.476993534550844*^9}, {3.476993654666636*^9, 
   3.476993693472632*^9}, 3.47699372949936*^9, {3.476993859353593*^9, 
   3.476993862503978*^9}, {3.47705390053868*^9, 3.477053978455351*^9}, 
   3.4770542757529993`*^9, {3.477054317903866*^9, 3.477054408316766*^9}, {
   3.477054625494341*^9, 3.477054626372374*^9}, {3.477096485527721*^9, 
   3.477096512242893*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[1, 0, 0], PointSize[Large], 
   Point3DBox[{{0.8414709848078965, 0., 0.5403023058681398}, {
    0.9542067202246453, 0., 0.6126890891311605}, {1.2622064772118446`, 0., 
    0.8104534588022096}, {1.682941969615793, 0., 1.0806046117362795`}, {
    2.1036774620197414`, 0., 1.3507557646703494`}, {2.4116772190069407`, 0., 
    1.5485201343413983`}, {2.5244129544236893`, 0., 1.6209069176044193`}}]},
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 287.288535823598},
  PlotRange->{{0.8414709848078965, 2.5244129544236893`}, {0., 0.}, Automatic},
  
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  ViewPoint->{1.7539487371604014`, -1.496565359858313, 2.4766824485762373`},
  ViewVertical->{-0.055634195681035864`, 0.2127908822702208, 
   2.4387815562971005`}]], "Output",
 CellChangeTimes->{{3.476993490514997*^9, 3.476993504888135*^9}, 
   3.476993535765473*^9, {3.476993660835833*^9, 3.476993730593549*^9}, {
   3.476993843433344*^9, 3.476993863820178*^9}, 3.4770534512197027`*^9, 
   3.477053733839767*^9, {3.477053980499185*^9, 3.477053988458219*^9}, 
   3.477054276336597*^9, {3.4770543371732607`*^9, 3.477054409031296*^9}, 
   3.4770546268935623`*^9, 3.477054717334165*^9, 3.477067077197843*^9, {
   3.477096486501726*^9, 3.477096512594976*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", " ", "plot2", ",", " ", "plot3"}], "]"}]], "Input",
 CellChangeTimes->{{3.476993090331663*^9, 3.476993097107442*^9}, {
  3.476993699595626*^9, 3.47699370088925*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyEm3lYTt0X95uLUpF5jAzxyBwK7ROZKfM8JGOPec48D5EpMxkyRwhlSNqn
FIUUDSo0z5pLA5W3Wnut+3qf9/1dnn/uq32f++zv/uy1vmudfTxt7VZOWKii
pKS0pp6Skmr156QPznesW2+3KN89sL3n4A6D3v6p+S+PXUl3DfFy82EXb2T+
eThggcWCLi77t33IYzf3fDh0YssH5qQ2y7tVi3UWR9MDf1/slccMLRZojzaK
ZK0CLjdz+7LN4n1aVcCoPrls9dySLXLAV9bdMS1e/8IeizapZy/7RGSzsXM9
eyzRSGSPn5SM6VXnoEWb4ak2s5v+YNssh2VeLUpmC3T4msIuThZBM+6sfK2W
yeab71h0+Woa2/+uUEet8JhFyAD422w6fO+rtCW5tdsJC5/B8PsVQ+F+d9rN
e2RreNJiti3MNzEZ5l/1u2iG3oxTFt3ngb7MFNB7VFLTMJtw2mIDg/W4pML6
Sou2vPFVP2OxaR+sf4kx8Cjea3t3zpozFoczgVdwJfBr2HxFlfeZMxYHzg1z
q+Hr/Sq9n+vyrRYLN24c2DJ1vgVybtJrc72Cei9ZUuGGgorcaww5/6Nsc2d+
0jvmv3GdtDvsMUPOJZWNqq4WhTMf33pqxdkvGXI2c16SHWEay9bMslzCp/oz
5Pz91rLg8PoJbN79ymOl294w5OzX6/RQ5cgk9tS7/NObme8Yco5d3sjq6MxU
lpJ897p3SghDziuDuo+ZfimdvX6WGfF8fxhDzi+8Kljrk5nMpuyjSULqJ4ac
x+x6Kx/p+4OVqnRMWKIdzpDzsOHbd8zbnc0GrtXKc61eB3LurR3ab/maHNZi
5HB+5WIEQ87KesPbuKvmMpeg/turBTPkXPigz6WadV8b+Sm35vfIeUJnlwxj
p40WVV073hzzdg1x/uM6vG7skqfs6aID7SvjHhHnbRkdo99YvWHy47xx/f39
iLOl+9aCZ9XrjE4K61XDBzkHaZ20ifaKZDbBvScOHPeJOMdMaK3d8EosGzXk
1Y1o80jivDJt972LveLZkojNY1smRhNnteNbw2I8Etnb409PDe/3jThnnhoc
s/pYMnsyc72LS/XvkPO+su0m9bunsof12vyWUxKI88HzAQHbDqWxFdf6BoaV
JxJnB+eF7Wv2a9fz0c9q9hk56/czW9VtQQZLWTKqi/PaZOKs0WTE4W3fMtjU
KVU39oQnE+fnxofb1+h9m7ZhuGu1DuR8tNTVuK3GKgsX00jjXTs3EecfLiN9
3+14wGxzdLaqDX1OnAdHz/R9ZO3LXvoe8StsFUSc+zQd0KSkOi7Hnj11Nr46
fpDz1WyrFV2cQtggn2edO+35QpynjOOHr7T6zObPya3wifhGnIP7jfP7Us39
xZdJ4TV8kLORbcG4ZwbRrNXH1KGycTJxzkpzfGlQvV/DtpteqeGKnFtm/tau
uW/BFEPzHgVpxHnr6F+mJ+/HMenSsD9r7DOI88wNNttr8kttpsnlmjxAzkff
7Dnc9nwCa+iTFLTu3yzi7DTBvYvSj+rrj7SwlLOziLPBrMfvFlfPM+FD5bGa
9SDnQ8ZXT4Z9nGFhnWy6sWrWNuIctGhQm657zrPOk6Oavyp4SZy7BXUxbz7D
jT2Mma3kF/CeON+SPNjOah+5M3hI0eXq/ELOSf9cXjDv2XNmpXtx6r4GX4nz
HuO6Oz2q98tmjHllzTqQ8/FWJtF9q/NkQX+T+BPV8YOc9w0Zfi7TKID96vU2
2E4vjTiv6/j4XmB1fs36Zv+xJu6Q86PbT37lV8dBy/1NXWv4IOdJN3aZObgF
s8fP3/k9bJFNnAcVD9O3q/bDxs7pG2t8Ajm3ynNozavXeX7C7Flz/s0lznoj
828+HfuB9cr5brZAKY84779c4Xms+vu3z081dqnmgpzteyb9Yb9G+XbWjDoS
nqPg3Na8R5/d7o7c2MFzvfMWH+KcmKcbYLLnPI/Kf+/wvHoe5Fy00K9DtY/z
qeFmLlbVfoWcNQqmjlgef4erMCePeucUnD0NNde/3/GAnzaqe7wmLpBzM5vO
YRVxj/hzm4XDa/IROavotF922MqTP139uFOvrQrOdw8dG1vtb7y1bXZkTR4j
56aHrw+uzkOu3edf5Zp4Q85vG26eqRP+gv/YPUdt0i0F5xTj1j2r6xFvbf5p
WI3vIudVPcNVquOM3xts3qaGJ3IeAlx4E9a9dOx5Bedx8Mm7CF7E+dnBLn7t
/vVd+ivPiLfbQpwL84HPQ9BFnLPNrCvsnj3nbxLeJWyqjgvk/F0z/ZrvVH/+
566FQU19Qc4n2tw47Ns0iPcp6nv6tVoMcT76zLrNP04hvI7hu5yaPEbOoy5v
VK72cT4pdfqqGv9Ezg061HO6eS2cr1n5vUGZXQpx3r/L73i1//Ppu1Zrba/2
XeRcVtS0sOOeL3y4zoHAGn9Azv1BB29R1nh2WHkmcW72JU830jSW9y67mlJT
J5Gz04upUnUecuZ43a0m/smfIW5ov5DzH9va+/EfKbBO5LzswJgnKmPW+y6G
T+JcoA3xkwOfxLnf1K0pWUYBvBd8EueA9Dp2L1JC+Cv4JM7IRxc+iXPOP30S
q/2Wp8MncTZqv1uvus7xVvBJnJWVav5L4BW1+uKJc6s759VjPRJ5M/gkzo7m
J5tW+zjfB5/EeT3sE18t9gs5G3ftb1vdz3Aj+CTOpus+P632Kd4DPonzC8gr
7inyCznfBl38mtCHnFdAHPvOhbgmzo9FfmVAXBPnYIhjngRxTZyV79XGMY+C
uCbO/UT8HIC4Js46EMd8D8Q1cZ4CccyHQFwT53WCT12xX8h5JsQx3w5xTZxH
QRzzXIhr4twa4ph3E/mFnPtCHHM9iGviPBjimO+CuCbOuRDH/LcF+CFyzoU4
5sUQ18S5C/iybxfwaeLcWfhPqlmtTxPnL+DL/Bb4NHEWvszfgk8TZ1WRXyFi
v5DzGfBlvgJ8mjgLX+b51rU+TZyfifgJF/mFnNuAL/ON4NPEWQd8mSccqvVp
4pwt+DgJP0TObcCX+S3waeLsDr7Mu4NPE+em4MtcWdQv5PwPcOK64m/kPAb6
DF836Dt8kXMn6DN4KvQdHDnfhz6Dj4a+g1O/AX0G94G+gyPnwdBn8D/Qd3Dk
bA19RvW6avsOjpznQ5/Bb0DfwZFzOfQZ3AX6Do6cZ0CfwY9A38GRcwvoM3gI
9B0cOXtAn8HXQN/BkXND6DP4LOg7OHI+C30GHwR9B0fOPaDP4N2h7+DIORD6
DH4b+g6OnM9B3+x7Cvpo4jwL+mZeCn00cX4OfTO3hj6aOI+GvpkPgj6aOJtB
38zdoY8mznOhb+azoY8mzk+hb+afoY8mzs2hb+Ym0EcT5yHQN/Of0EcT51zo
m7kx9NHEeSD0zfwg9NHEWQn6Zm4HfTRx1oe+mZ+CPpo4K0HfzE9CH02craFv
5s2hjybO5fAc6DsFnguJswc8B3K1a7XPhcTZG54D+W54LiTOYfAcyIfCcyFx
HgnPgfwDPBcSZyt4DuRx8FxInG3hOZCvh+dC4uwLz4FcC54LifNdeA7kOfBc
SJzvwnMgd4TnQuJsD8+B3AmeC4nzVngO5NvguZA4x8NzIG8Ez4XEeTw8B3Jt
eC4kzn7wHMhfwXMhcZ4B5xq+L+GcgzhHw7kGbwrnHIp4hnMN3hXOOYjzfTjX
4KVwzkGc7eFcg4tzDuI8Gc41uDjnIM534FyD+8M5B3GOhHMNLs45iPNLONfg
q+CcgzgPg3MNLs45iHMOnGvwsXDOQZx7wbkGHw7nHMS5Ppxr8D5wzkGcT8C5
BleBcw7ifBbONXgRnHMQ5+bPNGrO6V6JczvibLnmac05na84tyPOLu0715zT
+YpzO+Lc23JizTmdrzi3I87v8jxrzul8xbkdca6b9KLmnM5XnNsRZ6s3G2vO
6XzFuR1xXvDTteaczlec2xHnd+Osa87pfMW5HXHu+qpHzTmdrzi3I84Dtso1
53S+4tyOOP879qO62YTTvuLcjjg7m1vVnNP5inM74uz5vFPNOZ2vOLcjzuEF
fWrO6XzFuR1xjjrjmLVqrDtbr+TraDpwD7vpdPFty6I8tr/M3WzOo20Woa5t
HVp0m0R9yK47X+3ve2ey5f+Yndm+1Y816anrtWlvErs5TPniii9prGd8XNp+
FkPjQ+dH/tnv8oOtef29b/lrf2bZKsRU+hnHVrlHv++9J4MNHbnHeE7TrzR+
0zrOcWuHHDZs3YJudUNfM9e1k+OStkWzYWtycnQTMtkwzZTIX+e/0Xgrnz0/
XcblsvjASV6TLwSwG98Xn3Z/9ol1jziU5ZKZxVyXeO7Zw7/TeGbQbasOzfPY
myGbx481CmR6AwzfRK8KZNYm2tE1OssvtDQdvi+Oxjtfe+rmtCOPySWJ+v2X
BLIs15gdw73cmUvCMytLpzym26ava2z1dcizKrS5t1PJD3bJoGxQcEYcXX/G
w+veYEM3Nt9h1OjywIvEOT2J/cqYn8jMtrRr+Wh9MnEr2Bza86xbEnvhZ1Vg
mJRCfGxevXvY40kyy1+z0XuydhpxmPNt18I521LYuoAZd5xz0mi9iUdSV51W
T2UfxvdZ8GdfOq3L4FPdERHK2cyh7kMty+r7on5rqXB0m1GpTPOxV/9Hn9NJ
f7Be+qYuba+zlDk2f3IX3yT9YalLnR3Kw1n7/Dqdd7fMIP2vvjtOcloZyU40
aT1Gr3rfUP+538tfX7oaxRpePTzCZtwP0h/Vz0aOOviFhS7UPHd1STbpb+LY
32N0h2jmGFkSXBMXqL9xpwXPvSaksvTWOwaP/ZZO+hvUiUpSWxfNLqzw/LZn
bw7pn6FvtiOl7DS7F3t3Qcy+u6Q/Y1XAE3/728zx9wG747pZpD9m6+nRA6v3
K3FK7181+4n6t24fPPJz9e+v9c/yrLk/6v9WMnaL+pl7rJHkOn/tk1zSP1Fl
1En76vyatH5fQE0cof4/I73/JFb/7t6cNwVLj+eQ/mZff3XxcHNnN2bdf2OR
lkf6QxyuTTDzs2f2+44+flb9Peq/0lU+PjDtA29WfjD4p0Em6f/Tf+Dndaqh
fPaQQ+0uVecB6i+s2nfh3zlhvLGF99Iazqi/tZ3X/CUan3jOruyz3ZxySH+0
VbPCMxs/8Z+56VqXqvMM9YdZWf9m1bqWR8z6WKMD9f/evz/N0eMTjzxiNLuG
A+rPcFul8s+7Y3xVrqunTjUn1P9bOSV6VJ84vn7F0lufR6SS/vqXR14s75PA
e/Q9+K7GV1D/yKk/319tkchXTV2lWhNvqF8/Q2N1n/eJxAH1X920aMwOyyTe
OXfc5hrfQv374XtemGF1I5Lnkv4H5VqH1bYlceVb6rNr4gH1pzPfbp9crvJ9
ntMjg6rjBfU7gG5eBOsg/b1BN9eBdZD+daCbW8E6FD4Gurk2rIP0m4BufhHW
QfpLetTOw93H1m1o0CyL9KuDbu4G6yD9B0E3T4Z1kP4WYt5DEEekfw7EDc+A
OCL9TSBueBrEEenPg7jhDSCOSH8pxA1/D3FE+j1ANy+AdZD+LxA3PBfiiPSv
gbjhYRBHpP8g5C1fsbo2jznqT4C85f9uq81jjvpdIW95ox21ecxRf0PIW76l
tDaPOeUv5C0vgTzmqL8Y4oZvEteh/uuQt9wX8pij/iWQt3zepto85qi/Hfgm
jwEfJf3HwTd5EPgo6W8Avsmvg4+S/hDwTZ4IPkr6D4BvciPwUdK/DPKWrx9a
m8eK5zXwTd4afJT0u4Fv8gXgo6S/D9Qtngt1jPQ/gbrFy6COkf4sqFt8KtQx
0r8C6hZfCHWM9L+BusUzoY6RfjfwTa49qtZHSb8y1C0+BeoY6Y+HusXDoI6R
fmPoV/ht6F9I/wDoS/ga6FNI/0DoP/hI6EdI/1noM3gv6DtIfy70E3w89Bek
PxHqFm8NdYz0O0PfwJXDavsI0j8d+gZ+DvoI0m8HfRgXfRnpXwT9Fhf9F+k3
g76Kiz6L9H+G/omLfor0P4c+iYu+ifQvh76BN4Y+gvQ/gT6Ji75JEf/QX3LR
b5J+f+gvfUW/SX2+EvRVXPRZdP+Oa7UMrh0543vnUO3v6f75V+Dzfo+qO7FD
Jlng/YdNrtjS6VoG63LyaPygQZ/I34p3Tdi1ZWUWy/Ed/KPJzs/kb4kXA296
pv9gNlmLIu0OhJO/uS2KedZEI4d12X6i4qNNBPlbX+mrT923Oezx+18dvkRF
kL8Jfcxur2WNXgvqQ1rpOhoa57KPPz0vBDWPJH8bYHrEedCszRZd5ypVWRgt
p367ZM+NHpsWp7ClKX2Hnh6aQPrtb+zWPp+ayur0iDcfvyGR9Hfd1+Wgeat0
FrTG+GHkiiTS/zSow+I1dTPYnhbPTqh0TSb9JeUTy6zuZrCwMMPvG+4lk/6M
Udu9Hv7KYAnaJ9m5H8mkM0fuPN6n/jqLpKS1l9qu30A6gwO3ljUO/MqKTPeb
ajZLI53rzvsaG4d8Z3UtHxyPe5pOOu88OLpqxPp4ppPk/mC2VibpDLU/0bv+
rAT2at6zusPqZJHOhXb+U8KDEtjeS2dPzHqaRToXL5u80+lPApu2aJzWuno/
SGfX3Zub9K232MLunOuQheGK9y+75+4f9tT8LTOJTPh5fLWiXxrUdLWfb04Q
+/KufEp9a0W/1zhVvdv+ce/Y5+mxg+9+VvRLPwY0XXBmzns2yPvLI4dfin7p
c4FxiWPDD2zEuAFTAvwU/VL4w/mGTVZ9YEN36Z7R7qjo67b0cnFoqT7AwuvK
7PUmDbaTzqdrwudPt33GG18N8NTPU+js8Pmud7vGL7jNn6KFPEKhs88/fX4b
b/Hmw8r16kXaKvrS0W89/HMPveRLEkMOTDmq6EuztxS2qzPYh7fTH9V903RF
Xzqki/71Lpd9+IVjqToPuULnuYfph8rdbX0vHo1/Vpq/lXQuNLdxu3wziu88
cvrGqj3ppLPxfp3fvmOj+ZzSdZ3eD1D0/3tS+0xxvR3Dz47tMC3zWhbp9LYc
YZr9IJbHfT/YeLjnD9Jpe12p1Mb2K7eapT9x3bJs0nm9vN2BEy++8vEuRW0M
g7NJ58xOY8JeLl/tO2DCsMNmxx1IZzOTE+4D1iXxRvBJOjPzE5MiQ5J5KnyS
Tn2n1o4P0lO4NnwqdNp8Gmzum8qfwifpPOdnP/uNdRo/CZ+K50qtyB27zqbx
kfBJOi1An+8U0KuIT+DIZwFX0jkPOHId4Eo6zwNHvgm4ks5E4MgfAlfSORw4
8snAlXROAo78HHAlnZdgv30Pw/4r/j0PxCXfCXFKOsdBXPIfn2rjlHQOh7jk
ZV1q45R02kNcch2IU9JpBHHJ70Gcks6LEJdcBeKUdHpC/vg27l2bT1RHukKe
80uQ91QfoyDP+QzIe6qPYZDnvA/kPdXHAZDnXHtgbd5TfRwGec6LIO+pPg6B
POfFkPdUp2zBj3z7gT+RzjzwTR4BPko6NcE3+U7wUdKpBb7JvcBHSecL8E0e
BT5KOneCb/Jl4KOkcxL4Jl8BPko6v4O/+/4Evyedi6AO8V9Ql0inGtQhvhzq
Eul8DXWI94C6RDq3QR3iL6Eukc73UIf4b6hLpDMW6hDPgbpEOttBvfS1gPpJ
OttCvefDof6TzmSo9/wn1H/SaQX1nidB/SedhlDv+V2o/6TzNtR73g/qP+l8
DXWdz4Q6TzrvZL6r6Ut8RZ9C/c/K9yOdvjW9xwIszce7ljjTc82Qu+Msa+rc
ml67XQ938qf3ZS7fEqUaH9z92X/KyPGv6X2Z/vQ6n2r6kP02tmujBgbQ+7Ib
iYbGNXVodctWNwemB9D7srGrB7ao8X39+aXTploH0vuyXtuGnUldfYt1f6z1
sneaK+nZMHJQp5r6XbGtS+NdfWNJz8T4osJ31f7e4I5vjyUpX0lPc/v2y2v6
q1i7I1/29P9Oes5+eaxRU18Txx9pdaRbHOmpN067a009a1nPMm/p6zjSY9N2
kklzp8vMock+szDrO6RHJWWLo7puEmu5I6FSu08K6Zm+POqGYd9klnLvqO/8
Hamkx8r08Rk7wxS2zMas6/59aaRnW9nPvjHBKexpZPHcTkPSSU/XwISfdj1S
2YxP8d9TvNJJz95HnYY7HHFkB01PHFarVJxjPK9rtfebTwTrFbz9Qk0/g3o8
fQsblelHsXc/HuyqqXeo50lR3J06rb+wtsd0Smr6TdSz+cxY1YcJX5j7Gq2p
Nf0G6knoNXDP+inRrEePBPOa+o56rrqO045/uonfsXU6WP+A4lyo1eX114Kr
eT3IqvNxbXVfhHoaOKT8Wv3djV29XqdjTd1EPdcPrTobWR2HVYeNn9X0p6jn
8xWzNpUV99i/SxJ21fQtqEcrs7l+3er5NMouGtT0Cain08FH0zZmnuMrIqJl
h+p5UE/ZWAODXKWPfHFHw5ChdRT/PkdjwO8TSjmhVPdRT8yCyXc7vAjj6/Y0
iqvpu1HP9JEOh4uHfuIbDBudq+m7UI9uVIlLp4ufqM9BPZfj7e+8GHODX4BP
0hOy2LmxPDOe99KXlGv6VdRjnfdhlPrDBOpnUI910tfr6zYn8m5hK11qnidQ
T/q7POMr9ZL46mDVhJp+EvUM3XWnwb1FSdS/oZ5VwIW3Ak6kpy/o4IGgi/Ts
Ff3AKNBFenqBDj4KdJGe9aCDJ4Eu0tNc1GsJdJEeN4gbvhDiiPQsgX3iSbBv
pCdB9BV55rX7RnrWwz7xENg30uMA+8THwL6Rnn9F3VeGfVP8uzXIK34N8ox8
8j7EMXeDuKb3JlcgjvltiGt6b1IJcczZ4dq4pvcm9hDHfO3V2rim9ybqEMfc
HeKa3pusA9/hs8CHSE8PyHPuD3lPeoIhzzmHvCc9bSDPOYe8Jz13Ic/5Psh7
0tMN8pxnQ96Tns7gy7wf+DTpaQI+yOuAL5KeePBBbgu+SHoWgQ/yMeCLpOcR
+CDfC75IeiaBD/I+4IukxxvqFl8FdYz0FEGd4A5QN0iPFtQJPgXqBukJhTrB
W0HdID1foE7wC1A3SE8DqBNcH+oG6VkE9ZKL+knzrod6yUX9pHk3Qb3kon7S
vPOhXnJRP2leFaiXXNRPmvdlYY8d6x7kMrl0dpMJd0KZvTTc8HaKH/Nf3XbH
3mlZbGB9l/2HLyTS+BnjCd8u10tm/drbe5mNz6TxT4caHThtEc70kwub7OiR
S+NOk4wKqla6cMuIhivmuufR+INu5zbuPR/Fh3qY9Ot/IYfGJ+/WdJqxOoV3
/nXlrqNpBo2PXW/vfHbUDz5gcEGnkc0SaFyjqq7vE4M83m1ISHHRiyAa/5Dv
EJs1N4+vd3zU494zP47jvaqCWzzsmM0DG+rObd34O43vnm+ZfDkglQ/UP3Nr
ukY6jVcMHmvNkmJ4uKm7ZbPsbBoPg7+Z5pDa72leU/g9c4T70bg3zMdMYX4a
HwP6WAjopfHhsB6uBuujcQnWz0cBDxo3AV58HPBT3Af48mvAm8bFfnCribX7
Q+O6sH/8O+wnrbcH7De/AvtP430hPvgbiBcafwDxxH0gvmhcPXKi8z+XXZhl
cL+cOzbzWcSzvZpvK/JYL4+xLULi81ipy419PXZ7sWzH7Nvdn7uwbnAdF7/j
eH0iXMfF7zhe3zwqdkq3wJO+PmPG764538M+2UKv/NPhuFO+mvn3Xtecv2Kf
/I+vR/ALz9O+LB3OxbFPDjYc8UJj6Bnf9eWp02rO8bBPNp9j1kVDdbvFwrHn
d2+QrOi5UszHzn7TmVo9vwXOK+ZjD76bfK6e3wLnFfOxI3fTa+a3wHnFfGzs
5p0181vgvHszD+3vPCyP+YcnBu1p7sX+PX0r53lZEKt/4taEb855LKnv4EFD
rb1oH93hOi5+x/H6sTfTBs7c68WNem8yVk1WnE9GegFXo/BnN9edOmOBPFsP
Pv4zfaiV78sDtX8Tf/E3m3j0dc33Fjgu7svmwzz0fmEc8PIV/Oh554bH9pr5
fMX8tI8LO6tpJLR6wrdrjdq6YFI23+Fud+3n3O9sfpcSXZPmnjz2xSCDke9y
+KvWljOTP0extebHX/tHenLb6YOUhiXk8on/RJ26XxbKPgAXLjhRHIr7MgeY
h+H9xX2ZA8zD8P7ivuwgzMPw/kr/3/+0JEcDu47Dd0TS9wd0R3eeE6MptfO0
vOs+K5XG9R6qqP1cqClVbL/cPd8zj8Zv5A1t2f+2hvRJamR+PLyYxifvm7bj
yBV1ycazV28Xx3Iaf6L6TmXYBDXJO+XTxNU5lTT+fFHAWefXKlLMsvgPG8qU
JByPFX/j9zj+Uvwe74fj48R8OD+Ofxb6UC+OV4r14Ppw3EisH3nguNP/xUuL
xuseujzGbNPdgf+L846QjOC1oyLY1YvXRjks8qH7Lut+wf5d5xR2eYpWH7/+
H0jHi9r15bDWC3OvehVEkO5RD+89mnuniD3d/2D1pT1faZ1y+CT/V83L2PxN
vT0d4hKIy+rrj3R3swpW3mW6ekRAMkOOcc49P95VU5K+BF8MOLQ0jSHn1Bt5
zVWfKkvpbwNyDN5lMOTsFfYzako3VWlO0eLYj9FZDDl7DGq0JWuJmhQ2qWNY
ixPZDDnP6p00OnieOq0DObdyrNv4cyMNqYfZ+4rlmbkMOfe8cN/Sb7eGlNC8
77G0XXkMOeO6Me7+xjloVNOQax/DWOjTSQ83fXxHnK84rf156kkCixvtO3ni
9VjijOtEPjjfmKZBk+xG5LMxrfJDppdlEufe9zf1syktYse+vzG3is4jzrq1
9ytlpc4rIyPuFBLn0nFNdIc7/mKNPmy3Wt/5J3HWXH68yz9TKxn+DjkPfdDL
9MKbP6xRrwbKbaeWE+eXt/cfj0tXkmYXZrg9L/lFnNPEfuE+I+eYl1cbGo1W
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
9JzIvc1j2fav73Y8ffObbfzSxehkW2UpebDThRt5hTTe/R/1GQu91KSNo9Qd
Cjt8Y89PttDJ71fKDO5/0FlspyI9ro2fYhqfN33Rnlbf1KUtnkY+h59+Z9p/
VCrt5xSyNUoX7LWXqErGbse3bln7k8Zzg8dHrPfRkL5vLE/Ymh7HVGdsXrX7
ZBYrqrc6w7S7mpQYs7LU1aaExsNL2+m6TNQUzxXxbHvHS1rXGiawbkJnS+cw
r+LkEhr/EHfrjNsVTalozovWxroJrCTqpXLRgUCmc+OyVk83TWmruA7jcK9V
fb/MMjXp+K/rfc90K6Xrh4ZkzPg3UmaFdRuGjIzxJp67Cj5mfG/0ix3d8nWi
Y49K4vZgVtSw+VW/2QfrLL2eE/8Qn0YdpMPBTpVMfcSdljsPKknIodWNiDa6
PlXsVZ7DB5NeyhKuN1Ge/cj24B+mtWX6lB03lCVc17vKQ/ZzldWlp+K+qL//
3KAN3fP+sKDM8Y/V4pQl1L+hk7N1/cynrFmbVx+bDfAn/VNN1nqYluSwi2of
j85rpCKh/hHtyx67GeTTvqF+8JV8tuzpykUDtqqR/tA+XkddbxWwq94HbB2s
1Ul/z7edrcpbFFJcoP4w3X2N61f8YdcvhD0zS1Wm57vOUqGx2tRCts08NMTO
SIP0/3Zo7N60y3VWb7F3qFypyNPHIj/7mg4fm31IlfRXCd/A/UT9NsIXtor7
o/6XIv9n2LQ/fkZDk/T7CV/COEL9+LvizIVfx3XVIP3HhL9YHbjZ8GG2Jum3
vKf9zWjkSb5z3qzjoxYq/Cf/yIsm991TufLqJvPLPir4X/1zyers4HReLPIA
9UfNNTt05UgGvyI4o44xtf6dyWOVFyobddYg/Y8C76va9c7ieSLPUD/qQh2o
/0iz/GUfD2Zx5IDX3fB/0KrJw8f8yQS7gU0XKXz1em09KOHylXTtgTl/KP4D
37ZfsMGmjDsIX0H9L1fNMFntVs4x3lD/Bg336x89fnEVwQH1W9bLyrSw+82b
Ct9C/UrwPbfKHzQkQU+hf++Y3a/3v/zN+4l4QP3veicGNVjry9/DJ+nnoJvf
hHWQfqFbfgProPwVumUfWAfFgRLoljfBOsivhN/KQ2Ad5EtbYR4+6avrpI/O
qqRfxLG8H9ZB+/QYuPNbsA+kX8SNXAxxRPpF3MjXIY5Iv8hPOQbiiPTHQNzI
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
s68NbakpPxDxgPqN772sSJkbzDvDpyL+QbcMdU2F9L8F3fIWWAfpF3kij4B1
kP7JoFvWg3WQfuG3cj1YB+kfCPPILZx6FtyzUZw/iziWW8A6SH8WcOcc9oH0
i7iRr0IckW8L/5TrQByRb4v8lBMgjiiORdyIPuAn+XA+xI3sD3FEftscdMs4
H+oX+SP/gjiiOBNxzxtAHpD++2K9z0VdxfuJvJUPi3qH+oUvyHNE/UT978W8
OqIOo36Rt/IAUR9Rf3+IG1lNXIf6Rd7KzqJuo/5E8B1+EXyI6uw0EQ/NwUdJ
v/BNeT34KOkXvin7go+S/n1iX+6Cj5J+4ZvydfBR0i/ml1+BPnrOFb4mnwEf
Jf3/gO/zvlAHSH851C35JNQx2k8VqFvyMahjMuqfB3VLToU6JqN+C6hbciOo
YzLq14O6Jc+HOiajfuGb8gv4PekfD3VLVoE6JqP+jVB3eUuow6S/HfQrXPQv
pN8e+hJ5I/QppP8q9B+yrdgf1G8OfYYs/Jb0y9BPyBOgvyD9S6BuyUpQx6iP
NYS+QW4u4hf1n4c+jK+Fvoz0p0Ifxp2FT6D+TtBvcdHXkP5d0FdxjAvUXwX9
E8d8Rf3noU/iMdA3kf7GcD9Z9BGkfxb0SRzzhvIXfsfnQN9E18c93vCj2b4w
H4xHvH7ax8Kzj97pSk/W7Ovt5PSTfGlVp6IJ9/fpS7O/BTxoaVhKvnRieaH2
p1X1pRG/Tw82ty8jX9o3orj0o1ED6efwqQv95peTL61UHRi7yKWBZPj+/pHD
Or/Yf/JCwhNL1DMkf8XGhjENpLmhdadumveLfMnjS4eoqbvqSA0XrTf9NUWN
/N866ILHnzna0jil0Uap4erk/4GB9s6OKTqSxS27h4fqapL//9u64TK9erqS
VtsRgSqlmuT/f3Inu0ZF6Ep8olnrSWe0yP+t7ebWnWWmJ111LQnflqZFPr96
85IX3WYqS9/Ph3wecUWb9MwqqLvT7KqKtGW3v+qZG/VIj2FxxeOxbqrS9hdN
09eN0iM9P++45DdaqyZ962l77/1QfdKz2sPhktbv6nU+m/Kq/JGint5Xvaq3
iqlLIQ+dFyzJUNTNBuqzGy6sk8M+PEns8jNE0Z8oG4W87d45j/XVGxb+Tl/R
X5kOdD4xaU0+exUfu+iuqqK/suUZL1q3KGB9l01eethH0Z+cXTizLMqpgF22
buHR3EzRXx1ev66X3psCFjKooM/bjYo+5EqeZ7sV/b/z6IjjDv+aKvq9LY55
T9xmxvPeztPcShco9HS9t+ZpmVMC/1bPrde+WQo9t590HRnRN5FHpiq3KWmq
6PeOhM95ZeWWyE/dqvvmx1mFnl1NDt2OSUrkxi6Xlod8UegpjBrXVcOmgmd5
HEscs6CeQs+3Ps7d5lVx3cOj6/ge0iM9esVWfgFaSnL/4zopn27qk569e0wO
T7yvJAerxWx2H6fon+OnqSb1bKksd8kazoNe1yc9Wxq0i/k1UVlO83rR0rOy
PumZf9Hm8qj6mrL4JD1lzUMWjPbTkn/BJ+kxNzljeqFtXXkAfJKeOuP/fAsy
0ZbrwifpMWvw5vfGJG3ZHD5Jj2fBsaR5g3RkL/hU9C3ARS4GTuQD9YCLvB04
kQ/0Ay5yfeBEeoKAi7wfOJGezsBFTgROpCcVuMjbgBPpEXEju0MckR4RN7Ij
xBHp+QpxI/eBOCJfEnEjP4A4Il8ScSOfhjgiX+oEcSMfgjgi/wmBvJJ1IM+o
fxB5JVe0q80z6h9EXsm9IM+of+gHeSXPgjyj/kHklXwK8oz6hw+QV/JByDPq
E+LBd+QV4ENUj7aC78jTwYeoHgnfkVuDD1E9+g6+IxeCD1E9ksB35BXgQ1SP
hO/I98CHqI40AV+WH4BPk54J4MvyWPBp0iOBL8sB4NOkRxt8WbYHnyY9/uDL
ciX4NOm5Br4sC58mPU+hnvHJUN9Ijy3UM74S6hvpGQ31jIv6RnrKoZ7xvVDf
SE97qGd8BdQ30mMHdYsPhjpGetDHhzXvFrn0URq9z0K/2Bxy5sO5Dhn0Pgvr
ZpspSvXqjMmk91nov6O+VT7UaptF77PQB9f5N6nKdM2i91lYh656feuub6dE
74XR70rdRpyXVyjTe2Gs+/0tymPHD1Gh95VYPyxzw642+a5C7yvRx+u1uBfX
zlyV3lcO8uhsc+CEhtRKo+iJrmUdmrfe0tz+bqpaUqfv6+YNjK9L865YUtd9
i3Ed6Uujw4vSO+rQvLfrDCqxqagjuUw/mJRvUI/mnTjL32jr1rrS+dsnvWdf
r0fzmoz4MKdhdjnbKuosnZeuMknqe/o3Qz/HeX3WFCY5pVYw7Gtw3hHf+Lmv
0ZVUH3Hei1eLnxssq2LCb2je3uK85oOoyzhvnngOR/+nf+8nzv2w38F5U8W5
ich7mneoOI8Q/kTzpmhs33NKLuTYP+C8pYtM9AyLi/g7Uadw3j1hvwJWpBfz
/aJfw3nD+g6dsfrsTy78ieZNLX/9T4FyCY8S9Rfn7fT0TJ1p51XlONH/4Ly7
BvDzb2LV5BxRZ3He2DlXg+rHqMvTRb+J87ZdapWjcUJD/ij6FpxX+/zyj5OV
NOUY0T/gvKLfko1hfpoX69demJ/mnSLy/xvMT/OKPkluD/PTvFh3dGF+mlfw
ldOAN+Wv6APk38Cb8hf94gDwpvwVfZUcAbwpf7FOZQBvyl/028biuRDnFfEk
J4rzBno/K3zHXjy/4LyiP5OjxPMxziv6JNlUPPfjvFgvOkM+0bwif2R3yCea
F33zBeQTzYt1cCjkE80r+jz5LOQTzWsIfiEPAP+g9x2dwS9kHfAPet8RC34h
LwP/oPcdl8Ev5FvgH/S+4xL4hTwO/IPed1wBf5SFX9K8P8EfZX3RB+G8fcEf
5dWijuC8DPxR7if6Aopn8Ee5j+hfcN65UA+4hai3OO9JqAdc1Aea1xzqAdUd
nHch1AN+SfQROO9xqAf8pOh3yK8aXMnWMjGQrIZ0DesZXMRShtoWhc5OY5Ub
bylP3KgvdXU9nWiirCHheLZKC3XNT5rSt2mq0Qdu6tG43dfKJwN0y9jJW+Pn
28Q1oHFVr1fffgX68Vdz2959+d6AxkM9NMensgru8fimyfydiutvlezu9uhI
HTl3bd222YN1afyS6/jAy7r15dN1Hsy72EaNxsffcrAdt8xArjhs22pVRi7p
b9X+4ZvCiwZy4aiaOp3GcTwj02u6ybn6svnhSPtwExUZx/V7Pu/9xlRbfqkU
vD3/rQ6N9yx6nb3IREmeMG5P4TGDBjQu/pb6wvek5xX8XqoH96NxC5hPSof5
aRzOs9JYS9BL4z9gPVysj8adYf2yC/BQ7Avwkm8DPxoXfOUQ4E18fGA/5ArP
2v2hcWfYP3kB7CdxE/sti/0nDiI+5AqIFxqfAvHEe0F80fj+IPMBCT8MpJ2T
vBK8kmKZ9eAnrFmRH7sBf/O98L2M40O2rzXdUvLBB889sE87eVRnhLvzRx88
l8I+rYNGwvFVH0J98LwQ+7Qp6ZplWTZhPuI9EvVpQaIvw/OH/55H/PffU1lu
X8zWzvNj0r8TtlfmujLDC88WVlT+7+sbemXfnhPzimkcivn4oeDJX69f38FH
2eyMF9sVNttW/6HPX6/v31Yp+HHITZbTwWhb0+Z+f71+VduSEyotV3FY9/9z
/c7/Xl8cc69b9AU3/qti2tjSAPmv1689611l2fkZf/l10qbby1/+9Xppdp86
1374cnu7lXXGDXr81+u3m4Q2/3jBj3/wHXfGXdXlf12/E6/XE/6jM6frpZAG
p/jfrq/6XXWhMoVzveAlQ9tt9vjr9SuavzO67vacpwy4H9mxsfdfrx/j2iZ6
9sT7PFo71HKSnfzX65tbj29S1+OIj4hTOofE94lIBvMC32/hOOaFyAcax7zA
96o4jnnR5d+jKrGHDaTFPTa3aD0vlh3T2zs6rW8eWzJa0y/4pYFUlV7na6hr
LPnGIbiOd4bfyXh90y3eQ5amxvI5/6xVScpRnEP+N04x3+fCdVLx5trf0Tn/
whtjLZsdCvMRvyN/mDGruM6E1C98ZtnJb76e9eVrH02Xls9UkXac7aDx2DCG
//Hwfbn8cgO54PnjtIsHKlh5hvuPrtqx3HHQ3NB/xhjIk/UNmi/7XcTaZdSu
h4v1kV+tydnvG5Xkx5QiHMr2Gx2kePsC+8cmw37SeBrEAVsKcUHjBhBP7DfE
F423hLhkuhCnNP4K4puLeKfxxZAnXOQNjXtDvvF1kH80LvKWF0Ee0/hbyH/+
L/gBjWeDj3Bz8BWKz53gR3wd+BONC1/jwudofBz4Ixd+SeOGwJGvBq40LvZP
GgD7yXAflR7V7p80F/aT4T4egv2TomA/Ge7jQfWTftuOh7GLly1avrDbaNGI
jxj+vbovmPzmwTXdoaGsTsKTV92TvBiOK1fV/PvqeDag+Yoq7zP7Le6NmZax
+ekP1ulhn0uj+sSxtyM/5Y42CmQ4nj8KPj1UEsIqj520UK6N3gS2so1f9qeu
Oez/EPbVYVl0z/t0KhKKYnd3i6tn7Raxu1tUbDFAwEJRwMYWEQEVA1BU4CyC
YIsi0iHdISXpD/fMrB/3+r7X7/3jfS6XeWbvmblnZvc8e2ZLN4welb3xGzmn
xnAE/Xzm+iTjLTEd4Bf86W6IdN60ric7BqvEkJyM3RNulURI+n3sPS2Ods8i
Q+dM2n9xXKqk5+vgKL7LzSAywGlIeMOGHyQ9fRc/ebdO7Qux/lDrsKRZnKQn
9KDX3vRtyWTjk5Lnyj1zJD231o69GXbgAeHHN1/ds3O4pMfveo2Pw35/Uud3
zvBq/yRJT68l8w+1sH1Pms/9Vr23fYGkp/8uq32n71+j/pdMCyN2/dVjI74n
9j5d2f3q0YMf/uqZnh2s9fDhS9p45KI2LZ/91VNistb6CPWnQlp1rFHMR0kP
e2/te9oq/eJ1/2/xkp5Gz9fmHf0aS13WX7UbGZMr6Znn/Ci8zCyMzmSfkp5P
w63WXr/5nb5ln5KeeZ177hwRl05nsk9JTzDDQbMYLklPW4aDdmS4JD13GA6q
wnBJegKYX2jBTtFPkp5VzC+UZ36S9DRhfqE6zE+SHsLiRINZ3CjqqWFxojEs
bhT1NGNxotNY3Cjq6cN4Q2MZjyQ9Bxlv6BDGI0nPWsYb+pHxSNIzhfGYhjJe
S3rSGI9pNuO1pKc/4zF9zngt6alLEvOQzmV5KenxZ/lGu7L8k/TksLyi5izP
/tq1XflPngdC3kt6qooH/snnQMhvSc/IKNNpj76cD+wSIMpRWbxI013/xquP
5dKCK/X50Hmvz64z9fmBem6s6eT1Jx/2ngr60rY+P6R8Bx4XyfiToBzT509+
Gq70XbW+Pl9RT+7WIQp/8jPUcMLNjPp8RT2zgcdzZHweVtTrxc36ejGgZPD5
P/UD9czk52+8UF8vhu+ePetYff1APQWAI0iWX5HPHzhPrq9r1Ypp0X/qnIQn
zNgro75++VvqLP9aX89Qjxb4JUCW7zVfdmXk9bzoz/ap/M13Izp6+v/4WdLz
FHgsrz+xDA+tkuFR2Mjibgb1FfVEAY/7yeoh+IfK/cMBD59AfUU9IcDjabL6
nMjiRZvI4rUV8oJCfZXqD/C4Nunf/gL8oS1k/GkBeWoE9RX1II/93M1a/G//
WhcddflP3eg6Qqvfo/r6inoMoG5chPqKetquHdO6UT2eb5MXVfeszzPU87mz
Qv6fOvZ+w5zBtL6+op7rUMdaQX1FPZa2Sqe96/3TfFfvGx/r8x71nJ08IeNP
XR3Q/VnGtfpP1DMZ6upS+EQ9TeLdD3atj5eCVSfNP3UI9RjMuRgUVI8j8kaf
GX9woZ4KP4bDHXChni8TzWZ9rOePSfpe4z91EfU0PTNs48t6v6zfu3z7Hz+h
noX7Dqgk2eWSsvSQMx5f/Qj2a6Pi7cOvqOSSvReM3z30fCMdf6/f2CGzIosU
njDst6RBtHTcIrd2jN6eTHK4RVhE9YEE6TjUbdJCVrddoT+pyvqC651ld05d
SiUTLj+xOV3/iXq+vMlNnjPhB3EZ1WzwI8906Tj0KSLvUxptm9QurMenMCrF
MKseL8pPHV4dM2P6V9IzZMnZxV1zpOM6gEPeN+dcOxx7o94vz8uOdfnjJ5Q/
fyfOfVzaM39P8CMeHwp2NpH1cUvmR4p+lfAzPLS7DM8w6E9GsusKa+Zfug/8
jfIRzD/0psw/wdCfzGTXOa5Mjn4Cv6L8AaaX7pXF0Rf6k/y6C/xIp4FfZfyh
62X82QL9qUJ2HQh+pMyvYf4o78f8Tq+yOFA8jv1J+z3/p1+NRD3gRzoX/Iry
tbzIA6rPeCEdf8HqOC1hdV3Ko2vgn2jwK8qPZrykHoyn0vFBrK/Q+azPSHr2
Qbz2g19RPp3lD/3I8kk6HsT6HC1gfU/Ss/Ff/kjyySxvKeSxdHwb67sU+rCk
J23/g2V/eDbl/EbFmf8Tr9YfD397WM+bK2oTFs39Hz68zhTeVdXzgAwZdfF/
+Xb9U966B/VxdVYcv/R/+Twz2PWpaz0eYZiS4f/my+/vTZourrd3e4/qr5n/
k49922k2/uPPnuxTOr6LydFy9j3peBDTS43YeaTjFxkO+pLhkvzAMdz0C7ND
On6B2UnbM7ul46OYX2g685N0vPJZVdGImbnEfuuGBwecXknnJWOO99W1KCCa
ZxZvivANkfic/3K34ahRWeStnYrH3s+xkrzNyMvFRxrmEmX/le0HZSZI8i+O
jL29Yk8KSdC896HYI02SL/NruMv3Uho5m9rkWvcGmZL8hgPpT5MHRZLbrv3V
t1/OluR77OqZMsI9iiRXHnt0/HSeJH/GfnWL2/HupLnjBz/Te3/jkn+zp8O3
F/fI2A77Dm2M/1tnJoc0uqXy6BNteH6m2aBbf+vS7fFjS9q0+kILTo32u+L9
93pj14SDY5dpJlPLwdY/q5wzJHnFo+Mv/Uz5QR/c39DRbFD23zrG5Og29j1J
/jGTozVHxO9J8o0YDjqA4ZLkixgOepHhkuSNmJ203SnRbimOY5id1P6WaLeU
F7eYH+kO5ldJPpH5kQ5hfpXko1mcaBCLmyR/isWJ1rK4SfKU8YAWMl785dVL
kQf0COOFJH+I8YwC7yT5GieRZxR4J8m/tfH6c78dCPff8jpJchrY/VMnS7LY
9ZAhXB/h8YOLDebn1PvFRTvT7I+f8Dj8m9iyv0t+jrZb7OIfnSWtD89w2F12
p7c6v1bBv937HZlE+zmX67IhnOBxeL+qJH9o2Oje8W9U8D0ppAreW4TH8RPl
lcT//yIVZ25euPZDlV/S2dh48c3661HA8bmxurHa5lSy9mP8cd/qROm8z+D9
oH7wnnfU+3DzqSbpbZT4rb993VZm1Uh6nFZpbRhuHksWcNb93mmmS3pM4P0f
+F4n1JMb6+Md7fmLtEvwuK10S5lHPec7+rpcaBVKln97fXz0sCxJD76/Gd+r
jnpGXNXZP8cljah2XPUo1llN0mMzuOe1DaOe0hn79+QGPPqr5wi8h+Oo+B6x
v3q0k/xavwr+Rpee9GkxR1Nd0pPSrqDmtkMk3b+y0CxiZYak5zO8PxLfY456
lkQ7N0pvVUpn3JxZWJCiIun5vf3wYj+nH1Rhh/gp6cH3dsTAe5BQD23ZrumW
1QqCwD4lPfsYDprGcEl68H2N+N5w1GPCcAjLGC4pXibML9Se+UnSA36h+N4h
1AN+ERozP0l6IE7UkcWNoh58P2JreL8r6oE4CcNY3CjqWch4Q08zHkl6vOG9
G/g+ItTTnvFGyGI8kvRsYDymnxivJT0v4b1+wGtJzzbGYwq8FlCPDstDCnkp
6fnN8o3ie4pQzwqWVxTyTNKz/Vfg5GGnXf0h7yU9x8T31nn74/uTUc+uQKcA
v17B/iZMTpDFC3lNZH4m4GcpXmqQD/0gP1AP8jhFxh/wM773SdLTAfIzDfIV
9SCPgddE5meC9UOyC+rFA6gfqAd5LM+vGqhrrlDnUM9GqF/lUM9Qz3H0iyzf
NcX5fJc5rKOoR6fP6o2Fy2M58LOk5wzwWF5/qiHucjwzIe6VMjwOwOOFsnr4
DHjoJ/PPBuDhE5l/oD7T9bL6DPWUmsji1RbyokgWL+RxQ1l/wTztKOOPCuTp
ZBl/kMejp3ismrr+CievG9ZQX+V1oyiR1Vc5Huh3Ul5APaX4fl7UYwp1bB7U
V9QTDv5ZA3mPeqCeUqyvqOcV1NUA+EQ9ZyFe86EOoZ6vgAPrK+pZDjiwvqIe
Z+DPMqiLqMfp374j6emYMXr2ursqfNGalZZV174S7NeNSmz27xyjwruntfyq
dChFOp4ZY5Oe/1yJn7vdqGSs5k/p+LC3QQ2nOSvyb27csfNvVS4dXwL9rJOs
bgNufpWsL4Q+btg6cnUtCYFP1HMl74uqYm4lSd/hYVB/dcHj8UDoT0GyPrUI
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
J5YST2zb/PDQ3bSV2wTnQz9vnVW3RMF0D7cN8KGftY/ca7n+liXXE+xBPx+y
mvzVOcyGWwz2o58b110nWkpHuZfgL/Rz5GnlwJtlx7kP4F/0czvrvR/jL53k
UA79vBr2m3AynqxjPKH9ZTzZwnhC02U86Qb7TepkPFnIeELnyXjynPGEesh4
AvtMaB8ZT14zntAQGU9aMJ7QRjKeNIf9JjtlPAllPKFhMp7YMZ7QOzKeLIP9
Jq9kPAlmPKH7ZTwxhucbN8vqyVpWTwKNZfWkD/MvNZfVE8hDuktWT6rhOcl+
snoym/mXLpPVk7vMv5TK6kkveK4yXFZPgph/6UdZPQHe0ymTnz92nniGQ7uA
39RtrUts9x4uHOIHftNp31Lbn6zw5BA/8JsOveU46tTTxxziB35TTmHCnel+
vhziB35TXqm3RYedzyX+Ar+pTRuFC2qJ/hzih79Tvf1qt6tyKIf4WzN91M7s
+ssLE4M45Elrdn7ap+PtOO3VrzjkyTuGl765PrDT1LHBHPLkFLOPburb9O6R
jGAOecL2JRXSjv2XtfGaGMIhTyDONNHwtb3dhhAOeTISeLIU8k/yJ/CkO+NJ
IPJkIPBkBeQl+jkDeLIR8hL9jM/Ttoe8lPIReDIX8hL97Ak88YG8RD/3A56E
QF5K+Qg8oZCX6OetYM8wsA/t2g64e4MdiH834E4BOxD/AMBdBXYg/uWAexbY
gfgFwO0GdiD+r4Abnh+W8H8C3Mh3xN8J6kkDVk8o8qQT1JNt8Nwx8uQr1JNg
Vk8o8uQ81JNbrJ5Q5MkmqCeB8Jwy8uQz1JM98Jw78sSjwMq44vo94kFe68ek
3SBHVpd0blpUSMa0LegTSoLJsR3als2Nn5KmLa3tT9oWktt1mxZ8X/CZvLX8
0MnP6BXptNDl6cnHBSTu7qnxB47V41pcZNkq/g0xH1zk8/JAPtm1bPCRRb2S
icPwACN1r6+kwN734JrqbGL62vPsmEspJGvd+NwHeyPJ0OkVrbu+yCR9d899
ND0sjXzP0VcZVBdFLHI+5B/rmU5UNQqMdnlnkHU3jw+2HBxLJrf61i1gYUp9
PbbZcHRuFhF+t1BY3TyeKMSMavDsSiJ5sGmk1Yh72cS9X8eT4bcTyGzL1OQN
baKJS2MdY48HueSDvbLOl7IkktzcI8LsiAeZZnziee23h2QoF/xiuNNLcrfH
rc1mQiEp1T6x0z31NZm9Y6pydulX0rLXzNHlegXE551avt3iL+TZz6uB3fUT
ycGLHxtb/sghoZqmgw3GfCOHhaIjHex/kGUNrwdeDMkivaL7H1qR9Z10fF6d
4/09lehsKYssnZdBLiy+4jqu+RyuvPe5Ott23mTTir35TbMLyZXkHXrhZCNn
eupLbcn7MOLS/+2wPtsKyUytDSW1n3ZyDydYFY5N+EqapbmtbXiu/jqw67PN
hsMPcMKPpWHfLsaQ8ODXC/fNzieqka0eF5Yd5iZNutftrEIqCe2VHz+GZpOF
5k+XjlQ6zrne3+xUGZxOjtIHI7vtyiQm60d2GR10grtzfWvMtFFZxG/Ozzy7
pDSyZlfVuw7dT3GD2mYNtTfPIUMevkp/ppZC9PuPmdNukAO3PO/wpPuT8wif
OLXyRWYCMRqkcDJisyNnNvrYvWdv84neWaUndEUUiTXquajWxYk7cjV617iq
QmIaYN6mrONt0mtg2R1rq8fU71iH8y+nBxLNvr8zmnoXkmkT2y/ucjuUHptV
01S4HEEGhpE1WwvySffH7dSrH3+h/c1P6HV1SyQj3/QrtPfIIUaG3MxnTt/o
78M55iPDfxDjGZ9dttpmkWc9728b3ieKhnxd/71R4zRCO6seW6eTQZwc+LOX
Z3rTA1VfLkWbuBFPw2iviORCUvv1+fqq8tf0mn9Cy7jFz8nmXO7umSX1x/u8
ufyrLpxenrrovN7NYLLVrPPtebsKSHbJgmf+77/TZ+carjo28x3J76Q3VqdH
PiGJXg6tTOKpvpFacJv54eRVgVd0gk0uiQ3UffrgZTJdUtvVa8nMCNKlMLC2
hU02CRnzoTbfKJUyfN9JgIg7k6jprUp9aJxOOdGeaNJWtDON5J1ceduoaSbl
RftjSV/RLz/IsYgjh3p5ZNHW43w3fLOIJ8s71Ew73T+BRF1Z0DAhN5sOFf1Y
f38g+vc7uWC9fYdRXA7ta14+x0spieyaUutMz38mM9t/sk3ekUt1xHgkERMx
TkHkJj9j7XifXNryp1O3nbVJpLWiWezOY84kf2zIoK8GwXSZ3fjoq3MvcQbn
jK0PuRaSpUuKB1k6htO3Aa5rk9vd4T5cejzkz3PhyowXdHGbgS02fnvAbQG+
9Gf8ol7XOhdM/f2UGwq882Z8pAdLlCOa33rBuQNPbRh/6Z63Fw175wdw7sDr
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
Wabh6nzl8XXzAjcmE6UHPw8v2ZpHIm8FPN57So0PCRtW+Ukrh6gcD2h381Q5
UVzjfLx1NxV+/prthVdXF5CpCokrB82sImN1fV5tO6vEz/Ds2X9S72Iyvu+T
3w1f1ZJEtdpTFUEKvNZLh0dr727l4i/+WjH2yQfSvLtG6ZcCdX7thM7P4x7a
cqOmj31SHv2DnFpdtCX1nDrvsuzx0wODHTgLi6xBmVPyyLlu73W1CtX4Doe5
1zN6nuc0dj2xS+pXQpaoe4Qu+q3Kz7Nsdz7T/Aan5p76Jv5QDckLif+x3USZ
3/tu7xcvRRfukePxwdUzFXh7f+OMxIuK/P0eS+4V67pyjeN9tlb1VeKv2+mF
Tjf5Te5uHp91OekO97166LAN35T5NQbVDwy0qknM4nO6Mevucv5fhoxXHKrK
Tx+ao/hhczlpOrXF8gBXd86z2/tPk+ap8ZvKNhw0sSsmxbVmd6ec8ZDmieCc
LItdXbQP7PTkTHafbu5Trc43C3q+ef0zf7IqfYDFKPKOzgpd8VX75Xdy1ce9
2DRUnTec8mP5kqpkatV3ZHqb9flkksbbMxHb1fib04utfp3IoWW7opSv15ST
XxXlT7v9VuY7t1tYfSa2gFqFLfNY4ldFeh5o8eLsSiW+Nt/b2WxVMe352PRt
09Z1pObzhZsfTyjwnwtHb06v/kBpspPWj5cCMdbVD7ueVX/ewEZThlsk0ze2
EQG3VSOIVbmRau+j6nxh1OuDOy2z6UffnulG5glETW10iGK0Gl9yOWj5x2bF
NGOA8aL0gFSyptYzYHKyKr96WoHO3OFlVG/fSNs+h7NI68i1Zp1dVHjH9+Ot
DhtVUqOlHub21Xmks1lztfPtlPmh2s6laW41tFbEV0QUCv7gVuRPOjeOVI/+
TXuJ9vwkvUQ768i2DrdGzDJVFKpF+0uIm+iXKnIo+2CnFEsl4ejuHnOWLSoj
VoaHb+eklxHzI8Wf082VhWmiH8tJC9G/9efp1bzlrI4qwoUrUaFKoyvImSZm
JiaPMon7tftrsy6oCDfFeFQQczFOsUR/2JmPA8Pqj1/u2LZpXQUpPab98Uwn
b3Ki6WC/59fiaYn7vWul/BPOIP/a+uUv1fmNjBd06cXNQ02WhUp8Wc74RVfe
X3vRgnzhooF3zoyPNLvATvvbrwiuCfD0JOOv0HB34JGUbd+5x8Brk85Xciaf
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
gvFXWLHybQjnk8IdBF7HkAf9vl6Mo3vSDQyd4z9Th64Z/qczDPiHebeOXeuU
T30PXR9QEZFML2zT7bn9lAH/boLm4EDdcrroQMmkK/uyaUfzsNmryvT54sMH
VrpOqKU9qc3Gq5lF9JZby8ApbfX5gb/c/DvoKgnqefuNrOJK6Xvv22Yxunr8
mVIrx+mjVYWdkwc34ex/0cGl32zzzjXiz48646vRV0PQE/O/mrK6UH9dZPDd
Lu2zlvBCrBd1dKdYRzT5mk6hzbcaNRQ+i/VFQegk1h1VXjPk7vwpqo2Elsrf
T2VlKQp1Kuv73f5Yf/3Z5kq663hdoYdYp5SEKrF+VROjeY9GjPyuK7wZtHuU
1jZlYWPcwYtvXv8kC8b8Xn+7j56wQax3ysJ7sQ6mkns5/a76mOoJU4u9Ol2u
vw49/CL1aF72Q/L+3Ulh8JcYuux78Wi6KIPGJLafmuVvwC+5HK0f7plOe69P
mOAV/JM2CVgU68Ib8Ppi3S2gLy3IoMatqugcsR7r87Fi/S6nT6JPHj6eqCyc
Euu6Ll8l1vsqSr67b0vPVRM0xT7QkH8o9odaGmbW0WnPQ03htdg3tPjwa7oZ
V2++J2liHadknFjXDfiLLN4kg8WfYNyN32w0cVizkcuD+oL1ZgzLc+rA8l7K
9zdMjn78OrmP47HrUn0qYvWajjJ/pW1k48Vh3Q5iOOhdhosinnmsv9JJrN9S
7LPR60f+mt+2Af9J7IsKvL3YJ9X53q7exQ8G6/DLP/kdv75NkS8+MNu7gZMy
b+LTbnJgbiP+h9hflfjJYr/9TZyKK/eqXqu/Hhf7cX2eiv25nPTYcznqoY4e
f0rs38r8VrGf55JhI7vMMp+kx/MiDmV+nIgvgmTD/MmwhG3Wk4uDSJHKs7ri
CgNpjjXOx8brh7cglwXfQ/lBIt9/kxB1ywS6QJu3EvNAg49iPOYrGa+hj6ry
HRiPeVXGa74G+MzyTInf+jJ+k/GaRvxAMf8UeNaHlfhHjO98GfCc5asSf/z4
/XFdN+nyG8U8riQXxfxW5vMHBmdGFejyVMz7IuIo8kKZrxng3V2F0+PPibxJ
IrMZ73l3lgd82nPGf37XYZ9WwmMO++gj6Kvrx2wdodXCm5PPGb5jXf5551Af
DvuxLvTn1IK5TqGNfblq6N9noZ9nlN0davzAl8N+Hwr9X1VjSlXab1+JZwVw
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
9QBrz16p
    "], {{{}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{562, 1, 551, 227, 16, 349, 2284, 31, 356, 46, 2538, 363, 61,
         370, 2307, 76, 377, 91, 2551, 384, 106, 391, 2330, 121, 398, 136, 
        2564, 405, 151, 412, 2353, 166, 419, 181, 2577, 426, 196, 338, 564, 
        211, 561, 433, 212, 213, 1803, 214, 215, 1804, 216, 217, 218, 219, 
        220, 1930, 547, 221, 548, 222, 549, 1805, 223, 550, 224, 340, 565, 
        225, 559, 339, 210, 335, 2374, 195, 327, 180, 2511, 319, 165, 311, 
        2351, 150, 303, 135, 2491, 295, 120, 287, 2328, 105, 279, 90, 2473, 
        271, 75, 263, 2305, 60, 255, 45, 2454, 247, 30, 239, 563, 15, 560, 
        347, 14, 555, 13, 1931, 554, 12, 553, 11, 552, 1765, 10, 9, 8, 7, 6, 
        1763, 5, 4, 1761, 3, 2, 341, 562}]}, 
      {GrayLevel[0], 
       Line3DBox[{1105, 573, 1106, 588, 1108, 2619, 603, 1110, 618, 2945, 
        1112, 633, 1114, 2642, 648, 1116, 663, 2947, 1118, 678, 1120, 2665, 
        693, 1122, 708, 2950, 1124, 723, 1126, 2688, 738, 1128, 753, 2953, 
        1130, 768, 1132, 783, 1133, 784, 785, 1977, 786, 787, 1978, 788, 789, 
        790, 791, 792, 2104, 1101, 793, 1102, 794, 1103, 1979, 795, 1104, 796,
         923, 1144, 797, 1141, 922, 782, 920, 2709, 767, 912, 752, 2850, 904, 
        737, 896, 2686, 722, 888, 707, 2832, 880, 692, 872, 2663, 677, 864, 
        662, 2815, 856, 647, 848, 2640, 632, 840, 617, 2797, 832, 602, 824, 
        1143, 587, 1142, 929, 586, 1137, 585, 2105, 1136, 584, 1135, 583, 
        1134, 1939, 582, 581, 580, 579, 578, 1937, 577, 576, 1935, 575, 574, 
        1105}]}, 
      {GrayLevel[0], 
       Line3DBox[{1699, 1167, 1700, 1182, 1702, 2961, 1197, 1704, 1212, 3287, 
        1706, 1227, 1708, 2984, 1242, 1710, 1257, 3289, 1712, 1272, 1714, 
        3007, 1287, 1716, 1302, 3292, 1718, 1317, 1720, 3030, 1332, 1722, 
        1347, 3295, 1724, 1362, 1726, 1377, 1727, 1378, 1379, 2151, 1380, 
        1381, 2152, 1382, 1383, 1384, 1385, 1386, 2278, 1695, 1387, 1696, 
        1388, 1697, 2153, 1389, 1698, 1390, 1517, 1738, 1391, 1735, 1516, 
        1376, 1514, 3051, 1361, 1506, 1346, 3192, 1498, 1331, 1490, 3028, 
        1316, 1482, 1301, 3174, 1474, 1286, 1466, 3005, 1271, 1458, 1256, 
        3157, 1450, 1241, 1442, 2982, 1226, 1434, 1211, 3139, 1426, 1196, 
        1418, 1737, 1181, 1736, 1523, 1180, 1731, 1179, 2279, 1730, 1178, 
        1729, 1177, 1728, 2113, 1176, 1175, 1174, 1173, 1172, 2111, 1171, 
        1170, 2109, 1169, 1168, 1699}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
       Line3DBox[{1761, 1806, 1762, 1809, 3351, 1767, 1812, 1770, 3362, 1815, 
        1773, 1818, 3352, 1776, 1821, 1779, 3366, 1824, 1782, 1827, 3353, 
        1785, 1830, 1788, 1833, 3356, 1791, 1836, 3357, 1794, 1839, 1797, 
        1842, 3360, 1800, 1845, 1803}], 
       Line3DBox[{1763, 1807, 1764, 3361, 1810, 1768, 1813, 1771, 3363, 1816, 
        1774, 3365, 1819, 1777, 1822, 1780, 3367, 1825, 1783, 1828, 3354, 
        1786, 1831, 1789, 3369, 1834, 1792, 1837, 3358, 1795, 1840, 1798, 
        3370, 1843, 1801, 1846, 1804}], 
       Line3DBox[{8, 23, 2290, 38, 53, 2298, 68, 2313, 83, 98, 2321, 113, 
        2336, 128, 143, 2344, 158, 2359, 173, 188, 2367, 203, 218}], 
       Line3DBox[{1765, 1847, 1902, 1848, 1889, 1849, 1904, 3379, 1850, 1890, 
        1853, 1906, 1854, 1891, 3374, 1856, 1908, 1857, 1892, 1859, 1910, 
        3380, 1860, 1893, 1862, 1912, 1863, 1894, 3375, 1865, 1914, 1866, 
        1895, 1868, 1916, 1869, 3355, 1896, 1871, 1918, 1872, 1897, 3377, 
        1874, 1920, 1875, 1898, 1877, 1922, 1878, 3359, 1899, 1880, 1924, 
        1881, 1900, 1883, 3373, 1926, 1884, 1901, 1886, 1928, 1887, 1930}], 
       Line3DBox[{1805, 1933, 1932, 1929, 1888, 1802, 1844, 1927, 3382, 1885, 
        1799, 1841, 1925, 1882, 1796, 3378, 1838, 1923, 1879, 1793, 1835, 
        1921, 3381, 1876, 1790, 1832, 1919, 1873, 1787, 3376, 1829, 1917, 
        1870, 1784, 1826, 1915, 1867, 3368, 1781, 1823, 1913, 1864, 1778, 
        1820, 3372, 1911, 1861, 1775, 1817, 1909, 1858, 3364, 1772, 1814, 
        1907, 1855, 1769, 1811, 3371, 1905, 1852, 1766, 1808, 1903, 1851, 
        1934, 1931}], 
       Line3DBox[{1935, 1980, 1936, 1983, 3392, 1941, 1986, 1944, 3384, 1989, 
        1947, 1992, 3394, 1950, 1995, 1953, 3386, 1998, 1956, 2001, 3396, 
        1959, 2004, 1962, 3388, 2007, 1965, 2010, 3398, 1968, 2013, 1971, 
        2016, 3400, 1974, 2019, 1977}], 
       Line3DBox[{1937, 1981, 1938, 3383, 1984, 1942, 1987, 1945, 3385, 1990, 
        1948, 1993, 1951, 1996, 1954, 3387, 1999, 1957, 2002, 3397, 1960, 
        2005, 1963, 3389, 2008, 1966, 2011, 3399, 1969, 2014, 1972, 3390, 
        2017, 1975, 2020, 1978}], 
       Line3DBox[{580, 595, 2625, 610, 625, 2633, 640, 2648, 655, 670, 2656, 
        685, 2671, 700, 715, 2679, 730, 2694, 745, 760, 2702, 775, 790}], 
       Line3DBox[{1939, 2021, 2076, 2022, 2063, 2023, 2078, 3393, 2024, 2064, 
        2027, 2080, 2028, 2065, 3401, 2030, 2082, 2031, 2066, 2033, 2084, 
        3395, 2034, 2067, 2036, 2086, 2037, 2068, 3403, 2039, 2088, 2040, 
        2069, 2042, 2090, 2043, 3408, 2070, 2045, 2092, 2046, 2071, 2048, 
        2094, 2049, 2072, 2051, 2096, 2052, 3410, 2073, 2054, 2098, 2055, 
        2074, 2057, 3412, 2100, 2058, 2075, 2060, 2102, 2061, 2104}], 
       Line3DBox[{1979, 2107, 2106, 2103, 2062, 1976, 2018, 2101, 3391, 2059, 
        1973, 2015, 2099, 2056, 1970, 3405, 2012, 2097, 2053, 1967, 2009, 
        2095, 2050, 3409, 1964, 2006, 2093, 2047, 1961, 3404, 2003, 2091, 
        2044, 1958, 2000, 2089, 2041, 3407, 1955, 1997, 2087, 2038, 1952, 
        3402, 1994, 2085, 2035, 1949, 1991, 2083, 2032, 3406, 1946, 1988, 
        2081, 2029, 1943, 1985, 3411, 2079, 2026, 1940, 1982, 2077, 2025, 
        2108, 2105}], 
       Line3DBox[{2109, 2154, 2110, 2157, 3422, 2115, 2160, 2118, 3414, 2163, 
        2121, 2166, 3424, 2124, 2169, 2127, 3416, 2172, 2130, 2175, 3426, 
        2133, 2178, 2136, 3418, 2181, 2139, 2184, 3428, 2142, 2187, 2145, 
        2190, 3430, 2148, 2193, 2151}], 
       Line3DBox[{2111, 2155, 2112, 3413, 2158, 2116, 2161, 2119, 3415, 2164, 
        2122, 2167, 2125, 2170, 2128, 3417, 2173, 2131, 2176, 3427, 2134, 
        2179, 2137, 3419, 2182, 2140, 2185, 3429, 2143, 2188, 2146, 3420, 
        2191, 2149, 2194, 2152}], 
       Line3DBox[{1174, 1189, 2967, 1204, 1219, 2975, 1234, 2990, 1249, 1264, 
        2998, 1279, 3013, 1294, 1309, 3021, 1324, 3036, 1339, 1354, 3044, 
        1369, 1384}], 
       Line3DBox[{2113, 2195, 2250, 2196, 2237, 2197, 2252, 3423, 2198, 2238, 
        2201, 2254, 2202, 2239, 3431, 2204, 2256, 2205, 2240, 2207, 2258, 
        3425, 2208, 2241, 2210, 2260, 2211, 2242, 3433, 2213, 2262, 2214, 
        2243, 2216, 2264, 2217, 3438, 2244, 2219, 2266, 2220, 2245, 2222, 
        2268, 2223, 2246, 2225, 2270, 2226, 3440, 2247, 2228, 2272, 2229, 
        2248, 2231, 3442, 2274, 2232, 2249, 2234, 2276, 2235, 2278}], 
       Line3DBox[{2153, 2281, 2280, 2277, 2236, 2150, 2192, 2275, 3421, 2233, 
        2147, 2189, 2273, 2230, 2144, 3435, 2186, 2271, 2227, 2141, 2183, 
        2269, 2224, 3439, 2138, 2180, 2267, 2221, 2135, 3434, 2177, 2265, 
        2218, 2132, 2174, 2263, 2215, 3437, 2129, 2171, 2261, 2212, 2126, 
        3432, 2168, 2259, 2209, 2123, 2165, 2257, 2206, 3436, 2120, 2162, 
        2255, 2203, 2117, 2159, 3441, 2253, 2200, 2114, 2156, 2251, 2199, 
        2282, 2279}]}, {
       Line3DBox[{2284, 2453, 2578, 2375, 2283, 2376, 2285, 3351, 2377, 2286, 
        2378, 2287, 3302, 3361, 2288, 2379, 2289, 2380, 2290, 2381, 2291, 
        2447, 2526, 2382, 2579, 3379, 2448, 2527, 2383, 2580, 2449, 2528, 
        2384, 2581, 2450, 2529, 3303, 3371, 2582, 2451, 2530, 2606, 2607, 
        2583, 2452, 2531, 2385, 2454}], 
       Line3DBox[{2305, 2463, 2537, 2462, 2304, 2612, 2613, 2536, 2461, 2303, 
        3313, 3364, 2535, 2460, 2302, 2459, 2534, 2458, 2301, 2457, 2533, 
        3374, 3312, 2300, 2456, 2532, 2455, 2299, 2390, 2298, 2389, 2297, 
        2388, 2296, 3363, 3305, 2295, 2387, 2294, 3362, 3304, 2293, 2386, 
        2292, 2465, 2584, 2464, 2538}], 
       Line3DBox[{2307, 2472, 2585, 2391, 2306, 2392, 2308, 3352, 2393, 2309, 
        2394, 2310, 3306, 3365, 2311, 2395, 2312, 2396, 2313, 2397, 2314, 
        2466, 2539, 2398, 2586, 3380, 2467, 2540, 2399, 2587, 2468, 2541, 
        2400, 2588, 2469, 2542, 3307, 3372, 2589, 2470, 2543, 2608, 2609, 
        2590, 2471, 2544, 2401, 2473}], 
       Line3DBox[{2328, 2482, 2550, 2481, 2327, 2614, 2615, 2549, 2480, 2326, 
        3315, 3368, 2548, 2479, 2325, 2478, 2547, 2477, 2324, 2476, 2546, 
        3375, 3314, 2323, 2475, 2545, 2474, 2322, 2406, 2321, 2405, 2320, 
        2404, 2319, 3367, 3309, 2318, 2403, 2317, 3366, 3308, 2316, 2402, 
        2315, 2484, 2591, 2483, 2551}], 
       Line3DBox[{2330, 2490, 2592, 2407, 2329, 2408, 2331, 3353, 2409, 2332, 
        2410, 2333, 3354, 2411, 2334, 2412, 2335, 2413, 2336, 2414, 2337, 
        2485, 2552, 2415, 2593, 3316, 3355, 2553, 2416, 2594, 2486, 2554, 
        2417, 2595, 2487, 2555, 3376, 2418, 2596, 2488, 2556, 2610, 2419, 
        2597, 2489, 2557, 2420, 2491}], 
       Line3DBox[{2351, 2502, 2563, 2501, 2350, 2616, 2500, 2562, 2499, 2349, 
        3381, 2498, 2561, 2497, 2348, 2496, 2560, 2495, 2347, 2494, 2559, 
        3377, 3317, 2346, 2493, 2558, 2492, 2345, 2426, 2344, 2425, 2343, 
        2424, 2342, 3369, 3310, 2341, 2423, 2340, 2422, 3356, 2339, 2421, 
        2338, 2504, 2598, 2503, 2564}], 
       Line3DBox[{2353, 2510, 2599, 2427, 2352, 2428, 2354, 3357, 2429, 2355, 
        2430, 2356, 3358, 2431, 2357, 2432, 2358, 2433, 2359, 2434, 2360, 
        2505, 2565, 2435, 2600, 3318, 3359, 2566, 2436, 2601, 2506, 2567, 
        2437, 2602, 2507, 2568, 3378, 2438, 2603, 2508, 2569, 2611, 2439, 
        2604, 2509, 2570, 2440, 2511}], 
       Line3DBox[{2374, 2523, 2576, 2522, 2373, 2617, 2521, 2575, 2520, 2372, 
        3382, 2519, 2574, 2518, 2371, 2517, 2573, 2516, 2370, 2515, 2572, 
        2514, 3373, 2369, 2513, 2571, 2512, 2368, 2446, 2367, 2445, 2366, 
        2444, 2365, 3370, 3311, 2364, 2443, 2363, 2442, 3360, 2362, 2441, 
        2361, 2525, 2605, 2524, 2577}], 
       Line3DBox[{2619, 2944, 2782, 2796, 2710, 2618, 2711, 2620, 3392, 2712, 
        2621, 2713, 2622, 3319, 3383, 2623, 2714, 2624, 2715, 2625, 2716, 
        2626, 2790, 2864, 2717, 2912, 3393, 2791, 2865, 2718, 2913, 2792, 
        2866, 2719, 2914, 2793, 2867, 3320, 3411, 2915, 2794, 2868, 2932, 
        2933, 2916, 2795, 2869, 2720, 2797}], 
       Line3DBox[{2640, 2807, 2875, 2806, 2639, 2938, 2939, 2874, 2805, 2638, 
        3329, 3406, 2873, 2804, 2637, 2803, 2872, 2802, 2636, 2801, 2871, 
        3401, 3328, 2635, 2800, 2870, 2799, 2634, 2725, 2633, 2724, 2632, 
        2723, 2631, 3385, 3322, 2630, 2722, 2629, 3384, 3321, 2628, 2721, 
        2627, 2783, 2798, 2955, 2954, 2945}], 
       Line3DBox[{2642, 2946, 2784, 2814, 2726, 2641, 2727, 2643, 3394, 2728, 
        2644, 2729, 2645, 1993, 2646, 2730, 2647, 2731, 2648, 2732, 2649, 
        2808, 2876, 2733, 2917, 3395, 2809, 2877, 2734, 2918, 2810, 2878, 
        2735, 2919, 2811, 2879, 3402, 2736, 2920, 2812, 2880, 2934, 2935, 
        2921, 2813, 2881, 2737, 2815}], 
       Line3DBox[{2663, 2825, 2887, 2824, 2662, 2940, 2941, 2886, 2823, 2661, 
        3331, 3407, 2885, 2822, 2660, 2821, 2884, 2820, 2659, 2819, 2883, 
        3403, 3330, 2658, 2818, 2882, 2817, 2657, 2742, 2656, 2741, 2655, 
        2740, 2654, 3387, 3324, 2653, 2739, 2652, 3386, 3323, 2651, 2738, 
        2650, 2785, 2816, 2957, 2956, 2947}], 
       Line3DBox[{2665, 2948, 2949, 2831, 2743, 2664, 2744, 2666, 3396, 2745, 
        2667, 2746, 2668, 3397, 2747, 2669, 2748, 2670, 2749, 2671, 2750, 
        2672, 2826, 2888, 2751, 2922, 3332, 3408, 2889, 2752, 2923, 2827, 
        2890, 2753, 2924, 2828, 2891, 3404, 2754, 2925, 2829, 2892, 2936, 
        2755, 2926, 2830, 2893, 2756, 2832}], 
       Line3DBox[{2686, 2843, 2899, 2842, 2685, 2942, 2841, 2898, 2840, 2684, 
        3333, 3409, 2897, 2839, 2683, 2838, 2896, 2837, 2682, 2836, 2895, 
        2048, 2681, 2835, 2894, 2834, 2680, 2761, 2679, 2760, 2678, 2759, 
        2677, 3389, 3326, 2676, 2758, 2675, 3388, 3325, 2674, 2757, 2673, 
        2787, 2833, 2786, 2958, 2950}], 
       Line3DBox[{2688, 2951, 2952, 2849, 2762, 2687, 2763, 2689, 3398, 2764, 
        2690, 2765, 2691, 3399, 2766, 2692, 2767, 2693, 2768, 2694, 2769, 
        2695, 2844, 2900, 2770, 2927, 3334, 3410, 2901, 2771, 2928, 2845, 
        2902, 2772, 2929, 2846, 2903, 3405, 2773, 2930, 2847, 2904, 2937, 
        2774, 2931, 2848, 2905, 2775, 2850}], 
       Line3DBox[{2709, 2863, 2911, 2862, 2708, 2943, 2861, 2910, 2860, 2707, 
        3391, 2859, 2909, 2858, 2706, 2857, 2908, 2856, 2705, 2855, 2907, 
        2854, 3412, 2704, 2853, 2906, 2852, 2703, 2781, 2702, 2780, 2701, 
        2779, 2700, 3390, 3327, 2699, 2778, 2698, 2777, 3400, 2697, 2776, 
        2696, 2789, 2851, 2788, 2959, 2953}], 
       Line3DBox[{2961, 3286, 3124, 3138, 3052, 2960, 3053, 2962, 3422, 3054, 
        2963, 3055, 2964, 3335, 3413, 2965, 3056, 2966, 3057, 2967, 3058, 
        2968, 3132, 3206, 3059, 3254, 3423, 3133, 3207, 3060, 3255, 3134, 
        3208, 3061, 3256, 3135, 3209, 3336, 3441, 3257, 3136, 3210, 3274, 
        3275, 3258, 3137, 3211, 3062, 3139}], 
       Line3DBox[{2982, 3149, 3217, 3148, 2981, 3280, 3281, 3216, 3147, 2980, 
        3345, 3436, 3215, 3146, 2979, 3145, 3214, 3144, 2978, 3143, 3213, 
        3431, 3344, 2977, 3142, 3212, 3141, 2976, 3067, 2975, 3066, 2974, 
        3065, 2973, 3415, 3338, 2972, 3064, 2971, 3414, 3337, 2970, 3063, 
        2969, 3125, 3140, 3297, 3296, 3287}], 
       Line3DBox[{2984, 3288, 3126, 3156, 3068, 2983, 3069, 2985, 3424, 3070, 
        2986, 3071, 2987, 2167, 2988, 3072, 2989, 3073, 2990, 3074, 2991, 
        3150, 3218, 3075, 3259, 3425, 3151, 3219, 3076, 3260, 3152, 3220, 
        3077, 3261, 3153, 3221, 3432, 3078, 3262, 3154, 3222, 3276, 3277, 
        3263, 3155, 3223, 3079, 3157}], 
       Line3DBox[{3005, 3167, 3229, 3166, 3004, 3282, 3283, 3228, 3165, 3003, 
        3347, 3437, 3227, 3164, 3002, 3163, 3226, 3162, 3001, 3161, 3225, 
        3433, 3346, 3000, 3160, 3224, 3159, 2999, 3084, 2998, 3083, 2997, 
        3082, 2996, 3417, 3340, 2995, 3081, 2994, 3416, 3339, 2993, 3080, 
        2992, 3127, 3158, 3299, 3298, 3289}], 
       Line3DBox[{3007, 3290, 3291, 3173, 3085, 3006, 3086, 3008, 3426, 3087, 
        3009, 3088, 3010, 3427, 3089, 3011, 3090, 3012, 3091, 3013, 3092, 
        3014, 3168, 3230, 3093, 3264, 3348, 3438, 3231, 3094, 3265, 3169, 
        3232, 3095, 3266, 3170, 3233, 3434, 3096, 3267, 3171, 3234, 3278, 
        3097, 3268, 3172, 3235, 3098, 3174}], 
       Line3DBox[{3028, 3185, 3241, 3184, 3027, 3284, 3183, 3240, 3182, 3026, 
        3349, 3439, 3239, 3181, 3025, 3180, 3238, 3179, 3024, 3178, 3237, 
        2222, 3023, 3177, 3236, 3176, 3022, 3103, 3021, 3102, 3020, 3101, 
        3019, 3419, 3342, 3018, 3100, 3017, 3418, 3341, 3016, 3099, 3015, 
        3129, 3175, 3128, 3300, 3292}], 
       Line3DBox[{3030, 3293, 3294, 3191, 3104, 3029, 3105, 3031, 3428, 3106, 
        3032, 3107, 3033, 3429, 3108, 3034, 3109, 3035, 3110, 3036, 3111, 
        3037, 3186, 3242, 3112, 3269, 3350, 3440, 3243, 3113, 3270, 3187, 
        3244, 3114, 3271, 3188, 3245, 3435, 3115, 3272, 3189, 3246, 3279, 
        3116, 3273, 3190, 3247, 3117, 3192}], 
       Line3DBox[{3051, 3205, 3253, 3204, 3050, 3285, 3203, 3252, 3202, 3049, 
        3421, 3201, 3251, 3200, 3048, 3199, 3250, 3198, 3047, 3197, 3249, 
        3196, 3442, 3046, 3195, 3248, 3194, 3045, 3123, 3044, 3122, 3043, 
        3121, 3042, 3420, 3343, 3041, 3120, 3040, 3119, 3430, 3039, 3118, 
        3038, 3131, 3193, 3130, 3301, 3295}]}}},
    VertexColors->CompressedData["
1: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
9HzRvwDfvlSf
     "],
    VertexNormals->CompressedData["
1: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
LxSj4Wy3B7PWDqIFwnGrIU42r62pKHm3lOm0AKKj/v8+jrewweukbipmi+94
OW+wG+VIz30JcaoermlbtSQNFy5YZ4jLe1Fl30nal4/pPBNYb/caywxqzfms
24+kAz0or2q1Vn0f8EjHPG5pbiduD6BbX3+7Q5wGAx7HZu7LwF03wjZfOTmI
Gm+tTIA4bzzhqt8QkoGXSqpwJ+JB9DLOXxLijJ2zNTw+9TQrUsCM6KXr/+KU
vHz8ZUhUBc6u+xB5wakTCRw6Q/m/R5F7JlaownpynOuKJLtRar4kXb+Ubms5
E/akGotNu67WHd6DRkze0/oae/lIui+hBmfWNyySfdmLNAReUzz3ndgyTUm3
Fl/tdFKyPNeHVtv70TixA89dn7RaXHPu3gqBd33I30yZ6oTG150ZV5wvsr5Z
2cxZyGv7L840tzcvJC1b8I0vt2LIJzryqovm5y7bj92f37fiqS3hjeQThRaf
pHH+dHbzTuhsw9l96i7kE3kgJYon35ib3C5WO27XPSlFPpGg9kHKk6k/6/Xy
FDuwg16COvlE4RzLXkOcTks7XG486MD97VNtySdqVvVUgDhvDP3hIfGxHgcv
TCDx/ovz1pTv0QRHvMzyYCDBFa378o7q4UR/ExGCI/7Pm9XFUqhCfQvtKJ+f
n9mmRXDEM7cfkyG4oqxD0yohTt4Dh5cTHLGC6QdBgus/PF/ovFcnOOJXBfmt
R3Vr/+GpUlu3huCIzx/6fInginwZPEfCgojOuc56pbSV6JzT/+IsY7mkkLzE
g/mYl+Qpymby81jvJyOSl1jCtNuM5CmqYPLz6rml80he4pPLLZ4I271GXyqs
KJ5WCskeJC8x12YOE5KnyIvJz+HIS2IkL3GTyr6PM/Zl/MtPDx+zOSQv8R77
AFmSp6joLTvNz5VGz4iesWcJLtmaLp28+18fSTxY9J3UOe4572RJ6h7HsovR
ea86elqN1Dmuq5j1ldQ9rrtXSNdHGbvU95I6xzkF4Vqk7vEQU+/xAeLPSJ1j
f6nFvqTu8TShb1RfHV2IjpM6x89yONZ7LCrGkVmLab1v5XC4R+ocnwtlP0bq
Hv+td4n7tUS3XGMNKskvb7lm9C9OzY+nRAlv4imzV81dmluLFf3SKC8dldTy
JLyJ19+u2kd4FL+b+4Pm54avgjGEN/EbtgAPwqP4L3++s7OeSngTK82Zspfw
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
EXyyJ0UL8Pk8LZrms/gdnRSyDsRT3a7PA99VJbMePJBe+530Razu9GQB9L2f
L8YozlM0rb+BjytCfv9asi7EXMx6MHrFtzCYr2S3OY4wD8q2PyhvGFffNwT+
N3RvFABeP51zjPbBqam+x8Cn1PDonRP4j8LFbXIA5/49T99CfX33zvsAdWNy
c0Yx4JwcYL0D+M3h0owe4C09Zj1oMnH7M/hw/IxP24O/pv+KSM/BlwqsKxN0
XwNvjqT7HPivfi5TWlIJerjoVXkd6MoI+0mc/8ywTgVe6P0sdgDqS+9AA8X5
6CZF9qG+dNz9RKjz0fAnnBIsTnHuUDwpCXqv7cXsKeBrX87sbzjP3r8R8n7r
xS8NkD/OKZEU59VcnOIwXxuFXsP6F59i9jfqHh+sJzoGW0h7UF1g+nd/Y3la
HcyrPeem64DP+uIblJ/1OS1XQX3lz86zhTztuBdD14NtFaM50K+blT+x3SZ9
T5rZ3yj4KJ4HcX/R0sHgzzo09Qvdn5C8ZesBfCgnKW0LvGI5aPYGcPa7MV8a
+pEF5wxt4HWuN5eGIJ93Np2LJb/D+7+MfAb/UXiDk4dr8xHWwVq6T4dKCui+
HdZk9uuyJ+Ry/oyJSjH7dphNYhLn1/Krk/+MSUtpTO7b4Uhmv45/3S0Wf4ec
FLN/gp8x+ynaPy4edn52VMp1ct8O/92vu/dg+SVRneNSapP7djiW2a9bNrF3
vX6OmhSzP4DHmf0CtV/Z3X7rNaUsJ/ftsACzXzecOzB/tpmWlOLkvh2WYPbr
cP7Nnc7PdKSmTa5/sTazHn75RS3pz5iulMbkvh3OYPbr2lxTDqQt05Mqn9y3
w8+Y/brFe07JwPV9k+s7/I1Z7y1c855+f/Hkvh3ewuzXyR3Xpdd/Te7bYX9m
v26h9rFWM4V4FGYsIyG22wm1dVwqhPdrxo59q6UFYpCjeaTmSG4g8v8xeV0A
OcYKC0ag+Tc3avcZRqHyicnr2Z6ewS2jfmie2g+NCpdY9Ib5/rtCmRrwlWhP
7XR5GROPzvxnSa9zvNwxb12hN7bo/pg0834cWtM1+f11D5eqlQY9wqz9U/fl
GT9B+79PXg+WsFAg/8bB1b8Okr//u+71XTuF/B4HRS8pW1vojYSY+3DE6sJ4
OO5kbQ6ch//IXH/7Nfw4iQ9vd1yWQeLFGUyc7iG3jpPnwef5ZZLJ8+FPzHOt
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
OyeDqfFh24kL76nxImm75XGuylz/gzo/42ajVA/qPI0MHMbJOfqgbhCsMyyk
0c+63k4Lv32l2Q/rjX7LFtjf4L/X1a0rz6ojpTJWBdjnPCkn+xscvrQvf6FL
BW33sSX7nN8dg7D+MEucnIRJjwrO5Fteh81raZqofQ9mzJmKKPqshPyDpZb3
P5YWCdS6xA3lciLfqP1RcVvWJVifSsyqvMBrZEakCsD/9Cy55ws8Qjv/PqxX
7F+pxu4VL4f7qz6RdXuiM+yCXuQEvrRhJk2LfgNSMTje+3jDF9Tr+hzWMT6S
9cbxersw1r2mR9ZztyLZb+Hi0O+RNs06eWYKZ8m+K/XBaVjfOHDDOofVQkb4
f+uc95Uv7Efxw7qdrjfZjNDE6uV96c6e8y+pOoWtXspyfxb5gfu4mfugXsnt
8O6k6g5+GnUxhqpDWFfnTwXUn2qro+ZUfcFKijFtVL3BhqwrS6DOiF7djKj6
gvl1C1gMj3XgL3GpsVBnpnn49Kj6gu+wde6i6g3ui9lO6gzn8DFRqo5godeu
dVRdwf+rJ6q+e/MFqfsr2rWl+hHVp8xzZ7whT2NJujOdPPEDm9GYzVH9Aesh
QdIXfAZeaFLnByxhaKlLnSfwmaObxOEcoWC/z4HqE7jWifUZ1TewsmMLN/QL
Xandl6hzBa6lf9tEnTMwzUzKPJwveue7nKn+gaN6IsOpfoJft4SsgD7iXWa+
kTpvYPtrLxSp8wfWCnnrCueO+kL6WKqv4Ir7QtupPoOPueUlQX+Zd/35i6mq
HbNGe0jlxw9jCRG2Wu4L1Yjuge7UN5cOrJExd4TqP9gwIXQpkeo7ogdS6Y4H
duB9Th9HhHVHcGTyqKJPXCEy7Oh5SPUhnKV1fSPVlzD/HgPSj9jtDfOpcw5+
0WOoQp17sAxrJznvbOYY+fvnQzDu3jckRvUr/L8+1ap24wZ1DsTnRfWbqXMh
ttu6fB6k1dz06HZQP9qX1253mKsZjR7/EtXl2Y28RK5w3UCDCLH4NGX+a0E8
0T56OX/bkYXH5sNaIUOoOoyPgd2vDakGirEYuDehn0NbStLDh5EQV+9D/rx2
ZPut76lHbjWanFpXJak+gnYfPhrI5d2BjuzM1Vd1KEJWBzpDveJHEGMIi7jk
dAeKd97b6I4TUPKjfza3OZvRJ+WrC3PP+tFU7K4Poj7dKOim7qE4ahxXT2gd
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
     "]], {{}, {}, 
    {GrayLevel[0], Thickness[Large], Line3DBox[CompressedData["
1:eJxNyH0803kAwPExO0/ztOPQg6xm60hd1Cs77PvzIlG3pLqrTi2W1WSXOpFu
RSdPRUpOZVsd2ZTbcUyS6moUxzllrJSH6IiVGhsxWXW/P67vfp/X6/PPm8yO
28gxxuFw69Hx6HH82oBc4iEG7v9EvwxZcwt/YLBDhE+LKN+CT05W0BgK6jow
cT9Z/iOFA31L9RbLc9QI4Hd8vDqCkgA9Xjx2IIkaCyLZZZ4bKOnQjS76SmKo
fKBVpO9dSymAHlL4nMGmZoNb5pNZaygS6Lzz17JZVCEocvNwCqbUQD/6hYts
O1UKevcnH3ph2gQ94ORRtXTtbZDGetlyaUc79CzCfBEwaQR9IdJ6nugRdFWd
5vhVeSvotgtttGD2QPce8pSLMhVgMqSinb5+APpQbKL0p3ElYOokQY+XDkKX
FJkX8y4/Ac0nYsrxxsPQo2ycfFwCe8HfU3tSz4lV0PM+0P04kn7gumnzDrtj
o9C5zE1ukVefg48n+WKNuxp6Q8Tnu56wBkHKxlX7l0ePQ3c2zTtQSXwBaF00
O9ZDDfRpsxXppP5hkN+ykuu/cAK6TWtkGDirAmXVXzecyZuEXjEoc5mKeQUe
5krOLXn3Fvq6woY7RPprcLPLk8xfOw19oc12B7XqDWA6lVf41+qgp/TMObDt
zzEgbgrVyizfQbe8VlW/pm4cSHh9PqIjs9AFEm4brVQDruO7ZtqG9dDLOMn1
tblakG2m3i/z+QBdSXhqW75nApgT9K8srnyEHhjexB7ZOAlKa/OtspNxyCd/
cERnk7n0LQjj9P67gmoE/WniCcljwhRoyy2qc+o1OG1euX/s2BTwjIsffZRu
DP1sscNyTss0YLfWu7T546EjHbY0cY0OLHANPM3VGnyfYi8h/+IMuOPR+X2f
wAT6jUpzMJLwDnhVP6PlhBOgB/v68o9FzoIsjS7MXm9wraSKlOKrB7sXB9cg
JZ9Bn9efcdaT9B4491jPu7LVFPrJe2p78ux7UBE03DdsZAbdIUuoPaz8AJzc
6cWRdQYfmu7ucJR/BNFNgrvV0ebQVSXLMq3W4xCfiGVzpUQL6PO9yc4jdTjk
eSxI6m0w+KTj9iWDS40QnjfrqxGeJfRuHv2NncgI+SdR99LDjQid7Ri5bBfJ
GKmWNQ7Ydxt88ZfXOTkZxghfUuzVlWoF/f1vFaEqrTHibD+T3km3hh6fOl6x
m4tHBPSdK8qGDD7Toqx3fIxHSrboFizKsYF+J0nVXBRggsiTMjJGXW2hux1d
Hf7NdRPElXzBXZZgcIEmKNN9EQGJydzzsEBh8KpbpxgehQSEFZ/UWoRx/sH7
2+iob9p54i8pxoM9Zw+uQd1vlfRuPca7L3Glu1C3GlH/8QbjRqmBTiLUK4MT
z6zuMPiGkBkNUUBApgnp4W8xrlZGS9Sov9IUMHGdBq89JZTrUe/vKw21xPjP
wR09FkIC0lzTHEDGuMMNQKKhLuAQvZgYZwjnpOxE3b8xnyTBeE5U+9Z21JdX
ia0rMf7dHNODz1CnXqyxuIVx107/069Rt0noMlZg/FqQtNFMREAGKHMn9Bjv
oWV4BaCutF0yZqo0uHjgNjMM9Ra93ygJ4/sKJ7g7UJcpWYOLMY63jPr1MOql
8rh+b4y33Tt/MxN14e/HehgYP3/kwaMC1E9fyOsKxXjUSoKmBPW0tMudmzHu
ofYlylD/D0BaPNc=
      "]]}}, 
   {RGBColor[1, 0, 0], PointSize[Large], 
    Point3DBox[{{0.8414709848078965, 0., 0.5403023058681398}, {
     0.9542067202246453, 0., 0.6126890891311605}, {1.2622064772118446`, 0., 
     0.8104534588022096}, {1.682941969615793, 0., 1.0806046117362795`}, {
     2.1036774620197414`, 0., 1.3507557646703494`}, {2.4116772190069407`, 0., 
     1.5485201343413983`}, {2.5244129544236893`, 0., 1.6209069176044193`}}]}},
  
  Boxed->False,
  ImageSize->{360., 309.5169623977668},
  Method->{},
  PlotRange->{{-4.9921340750890835`, 5.}, {-5., 4.9921340750890835`}, {0., 
   5.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{1.303005316616216, -2.2955666266562322`, 2.117203581957106},
  ViewVertical->{-0.012504883124804423`, 0.04303198178927117, 
   1.9964192626742807`}]], "Output",
 CellChangeTimes->{
  3.477067084468601*^9, {3.477096489404025*^9, 3.477096513680966*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"0.5", "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "\[Phi]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476538462362924*^9, 3.476538504952145*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
MF8pPQq7rutJThiIoecrKndMaIzAa8rZ9PqPYki3TeYy/dkQqEqJu7tULUaL
1hfLC63+Cf8iOZJbWpegvs5bKQlG7bA6NFT9jLs4elXauVwo9T34tGoEu3iI
I5cEtWEB9fdQtra3zspTHNkFvDy8obgCnCp13XV9xNHMk9td8/Xl8IB3LJV6
QRxZm4zaFfKUAS3QYVnqTXEk7jH1X1JDEfB5b1rUnimOeBybNjy6kAa9dp0d
Br/EUVRW1pahJa+wqJ5NhvNvcaRsLngl/N8rvHVl09ngP+KoyHFfyI0vOTjs
R61o8T9xNNlwr/hOeB5W9yjW3zRJjnd1C+sXtwAHBt1PXkmVQJmnqQcSS95h
qUQb9xkVCVRzBhRc7KuwfkiT5rINEsh4vrVdvqwKnzi2n19LXQLpWhfeurKm
Gr9VNnp0dosEEg1TWrFyqBq75Gh+GdSRQI9uWFdX+9Xg7Aqpze2mEoinOkb6
xPlP2Phn09RrTwn0qvN26LX4ehy0PvLiSy8JNOzKp3qrvB7nehvPZvpIoKGQ
qyYug/V4+dxbnkd+Eqjv1kPzKzoNeHhpulBIsAQabOmH4M4GfNc4QMosUgJF
rX383oLWhHuey27qz5JAA6/i9ezsWrDUWGsu66UE2pj36IJiUAveoxWt0Z4j
geqKH94pfdKC8yoXadW9lkC7DDsaLfpa8I3uYf3cdxJIg5XTy3OqFasuKTcN
/iyBzu0Pbjrm+Q0H+LieWPpXAmmmPRY7ZdqOw/YOH9f+J4E451O3fXFvx3Fr
/I87jZLxqNv/8F9YOy5oDXNLn5BAtY1frntUtuNx7RfHNOckUMXtuC17tTqw
J/+4s/USGhL9e3rfJXonDuq66HxBgoZefVwUXrChE0e8FnBOoNPQs5uF00+N
OvHz40sP90vTUHZ6nVDVhU488Gm7o98qGqovvXavprsTH717+VDsJhqac/WS
+xvbhX1OUw8Vb6Ghc0pWJzpedOEQwxhb5lYakux13xhS0YUTJ1NsFLVpyFBC
v43nbxdmOnywKjCgoVyjiB+F+t3471Zzq45dNDS8rOW834FuPLO4/eCcIQ15
ZMfVD7t24+Xlg5aGe2lISyfFTTSiG9uuXXyg1ZKGjl1Z1zbZ3I1PzMVacK1o
KByO0q/2d2P/byst5GxpqNI2yLWa6MaxNzeZuznQkP7tm/P+Mkzc9PegGecY
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
1b5B0v/ifswueJPO073TpP//PvP/ANfSo4E=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.499999512844876, 1.4999999999999671`}}, {{
     0, 6.283185307179586}, {-0.499999512844876, 1.4999999999999671`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.476538497432095*^9, 3.476538505633318*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kernel", "Section",
 CellChangeTimes->{{3.475880471802393*^9, 3.47588047320273*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]0", "=", "4"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"S0", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"5", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Re", "[", 
              RowBox[{"SphericalHarmonicY", "[", 
               RowBox[{
               "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}],
                "]"}], "]"}], "+", 
             RowBox[{"Im", "[", 
              RowBox[{"SphericalHarmonicY", "[", 
               RowBox[{
               "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}],
                "]"}], "]"}]}], ")"}]}]}], ")"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]", ">", "0"}], ",", " ", 
         RowBox[{"\[Phi]", ">", "0"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S0even", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"5", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"0.2", 
           RowBox[{"Re", "[", 
            RowBox[{"SphericalHarmonicY", "[", 
             RowBox[{
             "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
             "]"}], "]"}]}]}], ")"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]", ">", "0"}], ",", " ", 
         RowBox[{"\[Phi]", ">", "0"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S0odd", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"5", 
        RowBox[{"(", 
         RowBox[{"0.2", 
          RowBox[{"Im", "[", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{
            "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "]"}]}], ")"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]", ">", "0"}], ",", " ", 
         RowBox[{"\[Phi]", ">", "0"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"F0", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"S0odd", "[", 
        RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "\[Alpha]0"], "-", 
      "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"G0", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"S0even", "[", 
        RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "\[Alpha]0"], "-", 
      "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"F0", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Simplify", "[", 
      RowBox[{"G0", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F0", "[", 
    RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", "0"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"G0", "[", 
     RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G0", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "\[Theta]"}], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"3", "*", 
    SuperscriptBox["\[Xi]", "4"]}], "-", 
   RowBox[{"2", "*", 
    SuperscriptBox["\[Xi]", "6"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"5", "*", 
      SuperscriptBox["\[Xi]", "3"]}], "-", 
     RowBox[{"3", "*", 
      SuperscriptBox["\[Xi]", "5"]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.475850143682588*^9, 3.475850144231337*^9}, {
   3.475850182350058*^9, 3.47585018314128*^9}, 3.476391496591877*^9, {
   3.476391532758782*^9, 3.476391629113006*^9}, {3.476391738474806*^9, 
   3.476391741259838*^9}, 3.476397237166329*^9, 3.476467563011018*^9, {
   3.476467727971362*^9, 3.476467735504607*^9}, 3.476469745940345*^9, 
   3.476472457256761*^9, {3.476480775821047*^9, 3.4764807778010883`*^9}, {
   3.476480838156611*^9, 3.4764808437289343`*^9}, {3.4776700991719027`*^9, 
   3.477670103064679*^9}, {3.477670304599758*^9, 3.477670308239944*^9}, {
   3.4777468122251883`*^9, 3.477746822481243*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{"\[Alpha]0", "*", 
   RowBox[{"(", 
    RowBox[{"\[Xi]", "+", 
     RowBox[{
      RowBox[{"A0", "[", "\[Xi]", "]"}], "*", 
      RowBox[{"F0", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"B0", "[", "\[Xi]", "]"}], "*", 
      RowBox[{"G0", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{"R", "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"], "R"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   FractionBox[
    RowBox[{"R", "*", 
     SuperscriptBox[
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]}], "6"], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "4"], 
    RowBox[{"20", "*", "R"}]], "-", 
   RowBox[{
    FractionBox["3", "4"], 
    SuperscriptBox["R", "3"]}]}]}]}], "Input",
 CellChangeTimes->{{3.475850172897689*^9, 3.475850194697434*^9}, {
  3.4758502860251207`*^9, 3.4758503007407513`*^9}, {3.47639166519911*^9, 
  3.476391688952201*^9}, {3.476391726293894*^9, 3.47639185141017*^9}, {
  3.476399751303812*^9, 3.476399769175836*^9}, {3.4764675766746893`*^9, 
  3.476467577792808*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   SuperscriptBox[
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "2"],
    "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"TrigReduce", "[", 
     RowBox[{
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "]"}], "-", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"s", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"f", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.4763918943075743`*^9, 3.476391919593775*^9}, {
  3.476392080231708*^9, 3.4763921041329412`*^9}, {3.4763937335985193`*^9, 
  3.476393737240418*^9}, {3.4764770454021797`*^9, 3.476477049130719*^9}, {
  3.476480887300215*^9, 3.476480894178176*^9}, {3.47648226802778*^9, 
  3.476482273328094*^9}, {3.4769881941627607`*^9, 3.476988262083765*^9}, {
  3.477746888621202*^9, 3.477746888928809*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"16", " ", 
   SuperscriptBox["\[Xi]", "2"]}], "+", 
  RowBox[{"20", " ", 
   SuperscriptBox["\[Xi]", "4"]}], "-", 
  FractionBox[
   RowBox[{"21", " ", 
    SuperscriptBox["\[Xi]", "6"]}], "8"], "-", 
  FractionBox[
   RowBox[{"45", " ", 
    SuperscriptBox["\[Xi]", "8"]}], "4"], "+", 
  FractionBox[
   RowBox[{"27", " ", 
    SuperscriptBox["\[Xi]", "10"]}], "8"], "+", 
  RowBox[{"20", " ", 
   SuperscriptBox["\[Xi]", "4"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{"15", " ", 
   SuperscriptBox["\[Xi]", "8"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["9", "2"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["25", "8"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["15", "4"], " ", 
   SuperscriptBox["\[Xi]", "8"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["9", "8"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.476391906668859*^9, 3.476391920242024*^9}, {
   3.476392087163303*^9, 3.476392104849967*^9}, 3.4763937380044823`*^9, 
   3.4763972481508207`*^9, 3.476398873690857*^9, {3.4764675680781183`*^9, 
   3.476467579257659*^9}, 3.476467739256208*^9, 3.476469750189899*^9, 
   3.4764724600628138`*^9, 3.476477051079698*^9, 3.4764770877397757`*^9, 
   3.476480780039358*^9, 3.476480846489602*^9, 3.4764808947668867`*^9, 
   3.4764822743592997`*^9, 3.4765411838831177`*^9, 3.4769878889994173`*^9, {
   3.476988215668105*^9, 3.47698826321023*^9}, 3.477670105872819*^9, 
   3.477670312753663*^9, 3.477746827457776*^9, 3.477746889644166*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["15", "4"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["9", "4"], " ", 
   SuperscriptBox["\[Xi]", "5"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["5", "4"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["3", "4"], " ", 
   SuperscriptBox["\[Xi]", "5"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.476391906668859*^9, 3.476391920242024*^9}, {
   3.476392087163303*^9, 3.476392104849967*^9}, 3.4763937380044823`*^9, 
   3.4763972481508207`*^9, 3.476398873690857*^9, {3.4764675680781183`*^9, 
   3.476467579257659*^9}, 3.476467739256208*^9, 3.476469750189899*^9, 
   3.4764724600628138`*^9, 3.476477051079698*^9, 3.4764770877397757`*^9, 
   3.476480780039358*^9, 3.476480846489602*^9, 3.4764808947668867`*^9, 
   3.4764822743592997`*^9, 3.4765411838831177`*^9, 3.4769878889994173`*^9, {
   3.476988215668105*^9, 3.47698826321023*^9}, 3.477670105872819*^9, 
   3.477670312753663*^9, 3.477746827457776*^9, 3.477746889648918*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.476391906668859*^9, 3.476391920242024*^9}, {
   3.476392087163303*^9, 3.476392104849967*^9}, 3.4763937380044823`*^9, 
   3.4763972481508207`*^9, 3.476398873690857*^9, {3.4764675680781183`*^9, 
   3.476467579257659*^9}, 3.476467739256208*^9, 3.476469750189899*^9, 
   3.4764724600628138`*^9, 3.476477051079698*^9, 3.4764770877397757`*^9, 
   3.476480780039358*^9, 3.476480846489602*^9, 3.4764808947668867`*^9, 
   3.4764822743592997`*^9, 3.4765411838831177`*^9, 3.4769878889994173`*^9, {
   3.476988215668105*^9, 3.47698826321023*^9}, 3.477670105872819*^9, 
   3.477670312753663*^9, 3.477746827457776*^9, 3.477746889651249*^9}],

Cell[BoxData[
 RowBox[{"10", "-", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox["\[Xi]", "2"]}], "5"], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[Xi]", "4"]}], "+", 
  FractionBox[
   RowBox[{"21", " ", 
    SuperscriptBox["\[Xi]", "6"]}], "80"], "+", 
  FractionBox[
   RowBox[{"9", " ", 
    SuperscriptBox["\[Xi]", "8"]}], "8"], "-", 
  FractionBox[
   RowBox[{"27", " ", 
    SuperscriptBox["\[Xi]", "10"]}], "80"], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[Xi]", "4"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "20"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   SuperscriptBox["\[Xi]", "8"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["9", "20"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["5", "16"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["3", "8"], " ", 
   SuperscriptBox["\[Xi]", "8"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["9", "80"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.476391906668859*^9, 3.476391920242024*^9}, {
   3.476392087163303*^9, 3.476392104849967*^9}, 3.4763937380044823`*^9, 
   3.4763972481508207`*^9, 3.476398873690857*^9, {3.4764675680781183`*^9, 
   3.476467579257659*^9}, 3.476467739256208*^9, 3.476469750189899*^9, 
   3.4764724600628138`*^9, 3.476477051079698*^9, 3.4764770877397757`*^9, 
   3.476480780039358*^9, 3.476480846489602*^9, 3.4764808947668867`*^9, 
   3.4764822743592997`*^9, 3.4765411838831177`*^9, 3.4769878889994173`*^9, {
   3.476988215668105*^9, 3.47698826321023*^9}, 3.477670105872819*^9, 
   3.477670312753663*^9, 3.477746827457776*^9, 3.477746889654501*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "750"}], "+", 
  FractionBox[
   RowBox[{"80", " ", 
    SuperscriptBox["\[Xi]", "2"]}], "3"], "+", 
  FractionBox[
   RowBox[{"2404", " ", 
    SuperscriptBox["\[Xi]", "4"]}], "75"], "-", 
  FractionBox[
   RowBox[{"303", " ", 
    SuperscriptBox["\[Xi]", "6"]}], "40"], "-", 
  FractionBox[
   RowBox[{"2133", " ", 
    SuperscriptBox["\[Xi]", "8"]}], "100"], "+", 
  FractionBox[
   RowBox[{"79", " ", 
    SuperscriptBox["\[Xi]", "10"]}], "10"], "+", 
  FractionBox[
   RowBox[{"80653", " ", 
    SuperscriptBox["\[Xi]", "12"]}], "25600"], "-", 
  FractionBox[
   RowBox[{"339", " ", 
    SuperscriptBox["\[Xi]", "14"]}], "256"], "-", 
  FractionBox[
   RowBox[{"2997", " ", 
    SuperscriptBox["\[Xi]", "16"]}], "2560"], "+", 
  FractionBox[
   RowBox[{"189", " ", 
    SuperscriptBox["\[Xi]", "18"]}], "256"], "-", 
  FractionBox[
   RowBox[{"567", " ", 
    SuperscriptBox["\[Xi]", "20"]}], "5120"], "+", 
  RowBox[{
   FractionBox["100", "3"], " ", 
   SuperscriptBox["\[Xi]", "4"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["71", "30"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["727", "25"], " ", 
   SuperscriptBox["\[Xi]", "8"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["801", "80"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"15713", " ", 
    SuperscriptBox["\[Xi]", "12"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "3200"], "-", 
  RowBox[{
   FractionBox["57", "32"], " ", 
   SuperscriptBox["\[Xi]", "14"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["621", "320"], " ", 
   SuperscriptBox["\[Xi]", "16"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["189", "160"], " ", 
   SuperscriptBox["\[Xi]", "18"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"567", " ", 
    SuperscriptBox["\[Xi]", "20"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "3200"], "+", 
  RowBox[{
   FractionBox["125", "24"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["31", "4"], " ", 
   SuperscriptBox["\[Xi]", "8"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["9", "5"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"13769", " ", 
    SuperscriptBox["\[Xi]", "12"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "6400"], "-", 
  RowBox[{
   FractionBox["123", "320"], " ", 
   SuperscriptBox["\[Xi]", "14"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"3429", " ", 
    SuperscriptBox["\[Xi]", "16"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "3200"], "+", 
  RowBox[{
   FractionBox["189", "320"], " ", 
   SuperscriptBox["\[Xi]", "18"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"567", " ", 
    SuperscriptBox["\[Xi]", "20"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "6400"], "-", 
  RowBox[{
   FractionBox["5", "16"], " ", 
   SuperscriptBox["\[Xi]", "10"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"6", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["47", "128"], " ", 
   SuperscriptBox["\[Xi]", "12"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"6", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["21", "160"], " ", 
   SuperscriptBox["\[Xi]", "14"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"6", " ", "\[Theta]"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"567", " ", 
    SuperscriptBox["\[Xi]", "16"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"6", " ", "\[Theta]"}], "]"}]}], "1600"], "+", 
  RowBox[{
   FractionBox["27", "160"], " ", 
   SuperscriptBox["\[Xi]", "18"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"6", " ", "\[Theta]"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{"81", " ", 
    SuperscriptBox["\[Xi]", "20"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"6", " ", "\[Theta]"}], "]"}]}], "3200"], "-", 
  FractionBox[
   RowBox[{"25", " ", 
    SuperscriptBox["\[Xi]", "12"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"8", " ", "\[Theta]"}], "]"}]}], "1024"], "+", 
  RowBox[{
   FractionBox["15", "256"], " ", 
   SuperscriptBox["\[Xi]", "14"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"8", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["27", "512"], " ", 
   SuperscriptBox["\[Xi]", "16"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"8", " ", "\[Theta]"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"27", " ", 
    SuperscriptBox["\[Xi]", "18"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"8", " ", "\[Theta]"}], "]"}]}], "1280"], "-", 
  FractionBox[
   RowBox[{"81", " ", 
    SuperscriptBox["\[Xi]", "20"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"8", " ", "\[Theta]"}], "]"}]}], "25600"]}]], "Output",
 CellChangeTimes->{{3.476391906668859*^9, 3.476391920242024*^9}, {
   3.476392087163303*^9, 3.476392104849967*^9}, 3.4763937380044823`*^9, 
   3.4763972481508207`*^9, 3.476398873690857*^9, {3.4764675680781183`*^9, 
   3.476467579257659*^9}, 3.476467739256208*^9, 3.476469750189899*^9, 
   3.4764724600628138`*^9, 3.476477051079698*^9, 3.4764770877397757`*^9, 
   3.476480780039358*^9, 3.476480846489602*^9, 3.4764808947668867`*^9, 
   3.4764822743592997`*^9, 3.4765411838831177`*^9, 3.4769878889994173`*^9, {
   3.476988215668105*^9, 3.47698826321023*^9}, 3.477670105872819*^9, 
   3.477670312753663*^9, 3.477746827457776*^9, 3.477746889660924*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"j1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", "\[Xi]"], 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Theta]"], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j3", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Phi]"], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapr", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Theta]"], 
       RowBox[{"r", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], "+", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
       RowBox[{"r", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
     RowBox[{
      SubscriptBox["\[PartialD]", "\[Theta]"], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}],
     "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
       "]"}]}]}]}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"j1", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"j2", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"j3", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.476393296115902*^9, 3.476393323043786*^9}}],

Cell[BoxData[
 RowBox[{"4", "+", 
  FractionBox[
   RowBox[{"15", " ", 
    SuperscriptBox["\[Xi]", "2"]}], "2"], "-", 
  FractionBox[
   RowBox[{"15", " ", 
    SuperscriptBox["\[Xi]", "4"]}], "2"], "+", 
  RowBox[{
   FractionBox["15", "2"], " ", 
   SuperscriptBox["\[Xi]", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["15", "2"], " ", 
   SuperscriptBox["\[Xi]", "4"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.476393298537328*^9, 3.476393323468122*^9}, 
   3.4763950957168407`*^9, 3.476399176017819*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"10", " ", 
    SuperscriptBox["\[Xi]", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
   RowBox[{
    RowBox[{"-", "8"}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[Xi]", "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Xi]", "4"]}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[Xi]", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Xi]", "4"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "-", 
  FractionBox[
   RowBox[{"6", " ", 
    SuperscriptBox["\[Xi]", "4"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
   RowBox[{
    RowBox[{"-", "8"}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[Xi]", "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Xi]", "4"]}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[Xi]", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Xi]", "4"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.476393298537328*^9, 3.476393323468122*^9}, 
   3.4763950957168407`*^9, 3.476399176065979*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.476393298537328*^9, 3.476393323468122*^9}, 
   3.4763950957168407`*^9, 3.476399176120253*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"part1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       FractionBox[
        RowBox[{"r", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        "\[Xi]"], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["2", 
     RowBox[{
      RowBox[{"j1", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]], 
    
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"j1", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "\[Xi]"], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]], 
    RowBox[{"anglapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3a", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"j2", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{"r", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"j3", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3b", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       RowBox[{"anglapr", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      " ", "+", " ", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{"j1", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"j2", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"j3", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"]}], ")"}], 
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{"\[Xi]", ",", " ", "\[Xi]"}]], 
           RowBox[{"r", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"j2", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"j3", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
                "]"}], 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}]}], ")"}]}]}], ")"}]}]}], ")"}], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"part1", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    RowBox[{"part2", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    FractionBox[
     RowBox[{
      RowBox[{"part3a", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "+", 
      RowBox[{"part3b", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.475850234160645*^9, 3.475850235886359*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", 
   RowBox[{"\[Xi]", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{3.476128041305015*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.476128057633772*^9, 3.476393194484304*^9, 
  3.476395107806871*^9, 3.476399179534843*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"residual", "[", 
       RowBox[{"1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
      " ", 
      RowBox[{"\[Theta]", "\[Rule]", "0"}]}], "]"}], "]"}], ",", " ", "18"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.476395111575974*^9, 3.4763951768160973`*^9}, {
   3.476395222849366*^9, 3.476395259872452*^9}, {3.476395322314556*^9, 
   3.476395370299526*^9}, 3.476396155596941*^9, {3.476396245203698*^9, 
   3.4763962551711073`*^9}, 3.476396376826118*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"-3.462666666666666\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"1\"\>"]}],
   -34.626666666666665`,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{
  3.476395260903953*^9, {3.476395327782741*^9, 3.476395371389131*^9}, 
   3.476396156074293*^9, {3.476396251389011*^9, 3.476396255527815*^9}, 
   3.476396400691225*^9, 3.4763991804618*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"residual", "[", 
     RowBox[{
     "7.518398074789773844*^-01", ",", "1.178097245096172418*^00", ",", 
      "1.570796326794896558*^00"}], "]"}], "]"}], ",", " ", "18"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4763962965109463`*^9, 3.476396332854738*^9}, {
  3.476399441359583*^9, 3.4763994733980513`*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"1.963573842892393\"\>",
   1.963573842892393,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{{3.4763963104487057`*^9, 3.476396335418198*^9}, 
   3.476399181920019*^9, 3.476399474883274*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Alpha]", "2"], 
    SuperscriptBox[
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"]], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"j2", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"], "+", 
     SuperscriptBox[
      RowBox[{"j3", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tildelapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Alpha]", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Xi]", ",", "\[Xi]"}]], 
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      "+", 
      RowBox[{
       FractionBox["2", "\[Xi]"], 
       RowBox[{
        SubscriptBox["\[PartialD]", "\[Xi]"], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}], "+", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["\[Xi]", "2"]], 
       RowBox[{"anglapf", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.475850566813445*^9, 3.475850572216497*^9}, 
   3.47585716997964*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pseudospherical", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"tildelapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
   "-", 
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.475850609436595*^9, 3.4758506176906424`*^9}}],

Cell[BoxData[
 RowBox[{"pseudospherical", "[", 
  RowBox[{"0.8", ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475857205299737*^9, 3.4758572063437643`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"r_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["r", "2"], "*", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["r", "2"], "-", "1"}], ")"}], 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.475857413252083*^9, 3.4758574237433357`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"r", ",", "r"}]], 
       RowBox[{"f", "[", 
        RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "+",
       
      RowBox[{
       FractionBox["2", "r"], 
       RowBox[{
        SubscriptBox["\[PartialD]", "r"], 
        RowBox[{"f", "[", 
         RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
      "+", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["r", "2"]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
          RowBox[{"f", "[", 
           RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"f", "[", 
            RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], "+", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
           RowBox[{"f", "[", 
            RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], ")"}]}]}], ")"}], "/.", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.475857440549424*^9}],

Cell[BoxData[
 RowBox[{"lapf", "[", 
  RowBox[{"0.8", ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475857265490102*^9, 3.4758572735077257`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shell", "Section",
 CellChangeTimes->{{3.475850090286294*^9, 3.4758500911907*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", 
     RowBox[{"3", "/", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{"5", "/", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", "0"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"G", "[", 
      RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["2", "3"], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", 
    RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Xi]", "3"], "-", 
     RowBox[{"3", "*", "\[Xi]"}], "+", "2"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[Xi]", "3"]}], "+", 
     RowBox[{"3", "*", "\[Xi]"}], "+", "2"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.4758466719000807`*^9, 3.4758467362869787`*^9}, {
   3.4758467670647087`*^9, 3.475846767525558*^9}, {3.475848517736361*^9, 
   3.475848573996279*^9}, {3.476399624921219*^9, 3.4763996574339647`*^9}, {
   3.476399704782653*^9, 3.4763997331120157`*^9}, 3.476399906383855*^9, {
   3.476472970182078*^9, 3.476472979828086*^9}, {3.477149403006237*^9, 
   3.477149403693389*^9}, {3.477151976951811*^9, 3.477152034128623*^9}, {
   3.477152479894204*^9, 3.47715250562957*^9}, {3.477152605013315*^9, 
   3.47715260906533*^9}, {3.477153128869884*^9, 3.477153234850765*^9}, {
   3.477229933014422*^9, 3.477229936569641*^9}, {3.4772385654391108`*^9, 
   3.477238574541211*^9}, {3.477243599377675*^9, 3.47724360875572*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   RowBox[{"\[Alpha]", "*", 
    RowBox[{"(", 
     RowBox[{"\[Xi]", "+", 
      RowBox[{
       RowBox[{"A", "[", "\[Xi]", "]"}], "*", 
       RowBox[{"F", "[", 
        RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"B", "[", "\[Xi]", "]"}], "*", 
       RowBox[{"G", "[", 
        RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
   "\[Beta]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["R", "2"], "2"]}], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"], "6"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
     
    RowBox[{
     RowBox[{"R", "-", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"], "B"], "\[IndentingNewLine]", 
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], 
        "]"}]}]}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"R", "*", 
        SuperscriptBox[
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]}], "6"], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"r", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        "4"], 
       RowBox[{"20", "*", "R"}]], "-", 
      RowBox[{
       FractionBox["3", "4"], 
       SuperscriptBox["R", "3"]}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.475848883263628*^9, 3.475848895595962*^9}, {
  3.4763998037334423`*^9, 3.476399811251905*^9}, {3.4770684733841677`*^9, 
  3.477068559095956*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"r", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"s", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"f", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.477067531256651*^9, 3.4770675325008383`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["15", "2"], "+", 
  FractionBox[
   RowBox[{"11", " ", "\[Xi]"}], "4"], "-", 
  FractionBox[
   SuperscriptBox["\[Xi]", "3"], "4"], "+", 
  FractionBox[
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", 
  RowBox[{
   FractionBox["3", "4"], " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.476399837182789*^9, 3.4763999094117403`*^9, 3.476473007118647*^9, {
   3.477067506424966*^9, 3.4770675338362503`*^9}, 3.4770688332112827`*^9, 
   3.47707623372505*^9, 3.477149371694169*^9, 3.477149410009556*^9, 
   3.4771496159813004`*^9, 3.477149662398902*^9, 3.4771518535024767`*^9, 
   3.4771525594866*^9, 3.477152616779223*^9, 3.477153252449767*^9, 
   3.4771533500057907`*^9, 3.477229944617201*^9, 3.477237506801363*^9, 
   3.4772385780914097`*^9, 3.477243612668223*^9, 3.477267055038247*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], "-", 
  FractionBox[
   RowBox[{"3", " ", "\[Xi]"}], "8"], "+", 
  FractionBox[
   SuperscriptBox["\[Xi]", "3"], "8"], "+", 
  FractionBox[
   RowBox[{"15", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "2"], "+", 
  RowBox[{
   FractionBox["11", "4"], " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["3", "8"], " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.476399837182789*^9, 3.4763999094117403`*^9, 3.476473007118647*^9, {
   3.477067506424966*^9, 3.4770675338362503`*^9}, 3.4770688332112827`*^9, 
   3.47707623372505*^9, 3.477149371694169*^9, 3.477149410009556*^9, 
   3.4771496159813004`*^9, 3.477149662398902*^9, 3.4771518535024767`*^9, 
   3.4771525594866*^9, 3.477152616779223*^9, 3.477153252449767*^9, 
   3.4771533500057907`*^9, 3.477229944617201*^9, 3.477237506801363*^9, 
   3.4772385780914097`*^9, 3.477243612668223*^9, 3.477267055075881*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.476399837182789*^9, 3.4763999094117403`*^9, 3.476473007118647*^9, {
   3.477067506424966*^9, 3.4770675338362503`*^9}, 3.4770688332112827`*^9, 
   3.47707623372505*^9, 3.477149371694169*^9, 3.477149410009556*^9, 
   3.4771496159813004`*^9, 3.477149662398902*^9, 3.4771518535024767`*^9, 
   3.4771525594866*^9, 3.477152616779223*^9, 3.477153252449767*^9, 
   3.4771533500057907`*^9, 3.477229944617201*^9, 3.477237506801363*^9, 
   3.4772385780914097`*^9, 3.477243612668223*^9, 3.477267055130288*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1949", "48"]}], "+", 
  FractionBox[
   RowBox[{"109", " ", "\[Xi]"}], "16"], "+", 
  FractionBox[
   RowBox[{"251", " ", 
    SuperscriptBox["\[Xi]", "2"]}], "192"], "-", 
  FractionBox[
   RowBox[{"29", " ", 
    SuperscriptBox["\[Xi]", "3"]}], "48"], "-", 
  FractionBox[
   RowBox[{"25", " ", 
    SuperscriptBox["\[Xi]", "4"]}], "96"], "+", 
  FractionBox[
   SuperscriptBox["\[Xi]", "6"], "64"], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "4"], "-", 
  RowBox[{
   FractionBox["17", "12"], " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["11", "16"], " ", 
   SuperscriptBox["\[Xi]", "2"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["7", "12"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["7", "24"], " ", 
   SuperscriptBox["\[Xi]", "4"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "48"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "48"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "16"], " ", "\[Xi]", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["3", "64"], " ", 
   SuperscriptBox["\[Xi]", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "48"], " ", 
   SuperscriptBox["\[Xi]", "3"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "32"], " ", 
   SuperscriptBox["\[Xi]", "4"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "192"], " ", 
   SuperscriptBox["\[Xi]", "6"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.476399837182789*^9, 3.4763999094117403`*^9, 3.476473007118647*^9, {
   3.477067506424966*^9, 3.4770675338362503`*^9}, 3.4770688332112827`*^9, 
   3.47707623372505*^9, 3.477149371694169*^9, 3.477149410009556*^9, 
   3.4771496159813004`*^9, 3.477149662398902*^9, 3.4771518535024767`*^9, 
   3.4771525594866*^9, 3.477152616779223*^9, 3.477153252449767*^9, 
   3.4771533500057907`*^9, 3.477229944617201*^9, 3.477237506801363*^9, 
   3.4772385780914097`*^9, 3.477243612668223*^9, 3.4772670551763277`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"j1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", "\[Xi]"], 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Theta]"], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j3", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Phi]"], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapr", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Theta]"], 
       RowBox[{"r", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], "+", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
       RowBox[{"r", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
     RowBox[{
      SubscriptBox["\[PartialD]", "\[Theta]"], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}],
     "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
       "]"}]}]}]}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"part1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       FractionBox[
        RowBox[{"r", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{"\[Xi]", "+", 
         RowBox[{"\[Beta]", "/", "\[Alpha]"}]}]], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["2", 
     RowBox[{
      RowBox[{"j1", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]], 
    
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"j1", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           
          RowBox[{"\[Xi]", "+", 
           RowBox[{"\[Beta]", "/", "\[Alpha]"}]}]], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]], 
    RowBox[{"anglapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3a", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"j2", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{"r", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"j3", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3b", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"r", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       RowBox[{"anglapr", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      " ", "+", " ", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{"j1", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"j2", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"j3", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"]}], ")"}], 
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{"\[Xi]", ",", " ", "\[Xi]"}]], 
           RowBox[{"r", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"j2", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"j3", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
                "]"}], 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
              RowBox[{"r", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}]}], ")"}]}]}], ")"}]}]}], ")"}], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
    
   RowBox[{
    RowBox[{"part1", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    RowBox[{"part2", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    FractionBox[
     RowBox[{
      RowBox[{"part3a", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "+", 
      RowBox[{"part3b", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.47584678835923*^9, 3.475846789298519*^9}, 
   3.475848748962199*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Alpha]", "2"], 
    SuperscriptBox[
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"]], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"j2", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"], "+", 
     SuperscriptBox[
      RowBox[{"j3", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seff", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  FractionBox[
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    RowBox[{"residual", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
   RowBox[{"a", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
    "]"}]]}]}], "Input",
 CellChangeTimes->{
  3.475848778591878*^9, {3.477151763977003*^9, 3.4771518233190804`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{"a", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.477267185404028*^9, 3.47726718757944*^9}, {
  3.4772672446746397`*^9, 3.477267249950499*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"9349568", "+", 
     RowBox[{"29370336", " ", "\[Xi]"}], "+", 
     RowBox[{"25882964", " ", 
      SuperscriptBox["\[Xi]", "2"]}], "+", 
     RowBox[{"8917052", " ", 
      SuperscriptBox["\[Xi]", "3"]}], "+", 
     RowBox[{"1507441", " ", 
      SuperscriptBox["\[Xi]", "4"]}], "+", 
     RowBox[{"1264220", " ", 
      SuperscriptBox["\[Xi]", "5"]}], "+", 
     RowBox[{"727324", " ", 
      SuperscriptBox["\[Xi]", "6"]}], "-", 
     RowBox[{"47588", " ", 
      SuperscriptBox["\[Xi]", "7"]}], "-", 
     RowBox[{"144922", " ", 
      SuperscriptBox["\[Xi]", "8"]}], "-", 
     RowBox[{"32156", " ", 
      SuperscriptBox["\[Xi]", "9"]}], "+", 
     RowBox[{"3832", " ", 
      SuperscriptBox["\[Xi]", "10"]}], "+", 
     RowBox[{"1800", " ", 
      SuperscriptBox["\[Xi]", "11"]}], "+", 
     RowBox[{"129", " ", 
      SuperscriptBox["\[Xi]", "12"]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"1127144", "+", 
        RowBox[{"3684952", " ", "\[Xi]"}], "+", 
        RowBox[{"3364654", " ", 
         SuperscriptBox["\[Xi]", "2"]}], "+", 
        RowBox[{"1061720", " ", 
         SuperscriptBox["\[Xi]", "3"]}], "+", 
        RowBox[{"76997", " ", 
         SuperscriptBox["\[Xi]", "4"]}], "+", 
        RowBox[{"178246", " ", 
         SuperscriptBox["\[Xi]", "5"]}], "+", 
        RowBox[{"142741", " ", 
         SuperscriptBox["\[Xi]", "6"]}], "-", 
        RowBox[{"1252", " ", 
         SuperscriptBox["\[Xi]", "7"]}], "-", 
        RowBox[{"28835", " ", 
         SuperscriptBox["\[Xi]", "8"]}], "-", 
        RowBox[{"7522", " ", 
         SuperscriptBox["\[Xi]", "9"]}], "+", 
        RowBox[{"685", " ", 
         SuperscriptBox["\[Xi]", "10"]}], "+", 
        RowBox[{"432", " ", 
         SuperscriptBox["\[Xi]", "11"]}], "+", 
        RowBox[{"38", " ", 
         SuperscriptBox["\[Xi]", "12"]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"164064", "+", 
        RowBox[{"176384", " ", "\[Xi]"}], "+", 
        RowBox[{"225100", " ", 
         SuperscriptBox["\[Xi]", "2"]}], "+", 
        RowBox[{"220436", " ", 
         SuperscriptBox["\[Xi]", "3"]}], "+", 
        RowBox[{"46353", " ", 
         SuperscriptBox["\[Xi]", "4"]}], "-", 
        RowBox[{"64670", " ", 
         SuperscriptBox["\[Xi]", "5"]}], "-", 
        RowBox[{"43837", " ", 
         SuperscriptBox["\[Xi]", "6"]}], "-", 
        RowBox[{"6768", " ", 
         SuperscriptBox["\[Xi]", "7"]}], "+", 
        RowBox[{"2071", " ", 
         SuperscriptBox["\[Xi]", "8"]}], "+", 
        RowBox[{"794", " ", 
         SuperscriptBox["\[Xi]", "9"]}], "+", 
        RowBox[{"73", " ", 
         SuperscriptBox["\[Xi]", "10"]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"24", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2424"}], "-", 
        RowBox[{"6952", " ", "\[Xi]"}], "-", 
        RowBox[{"9418", " ", 
         SuperscriptBox["\[Xi]", "2"]}], "-", 
        RowBox[{"6656", " ", 
         SuperscriptBox["\[Xi]", "3"]}], "-", 
        RowBox[{"2059", " ", 
         SuperscriptBox["\[Xi]", "4"]}], "+", 
        RowBox[{"146", " ", 
         SuperscriptBox["\[Xi]", "5"]}], "+", 
        RowBox[{"285", " ", 
         SuperscriptBox["\[Xi]", "6"]}], "+", 
        RowBox[{"72", " ", 
         SuperscriptBox["\[Xi]", "7"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["\[Xi]", "8"]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
     RowBox[{"1728", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"4320", " ", "\[Xi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"2052", " ", 
      SuperscriptBox["\[Xi]", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
     RowBox[{"11988", " ", 
      SuperscriptBox["\[Xi]", "3"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"2565", " ", 
      SuperscriptBox["\[Xi]", "4"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"12204", " ", 
      SuperscriptBox["\[Xi]", "5"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
     RowBox[{"4644", " ", 
      SuperscriptBox["\[Xi]", "6"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
     RowBox[{"5940", " ", 
      SuperscriptBox["\[Xi]", "7"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"1998", " ", 
      SuperscriptBox["\[Xi]", "8"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"1620", " ", 
      SuperscriptBox["\[Xi]", "9"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
     RowBox[{"216", " ", 
      SuperscriptBox["\[Xi]", "10"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
     RowBox[{"216", " ", 
      SuperscriptBox["\[Xi]", "11"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
     RowBox[{"27", " ", 
      SuperscriptBox["\[Xi]", "12"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"24", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"4", "+", "\[Xi]"}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"330", "+", 
        RowBox[{"121", " ", "\[Xi]"}], "-", 
        RowBox[{"90", " ", 
         SuperscriptBox["\[Xi]", "2"]}], "-", 
        RowBox[{"44", " ", 
         SuperscriptBox["\[Xi]", "3"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[Xi]", "5"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "68"}], "-", 
           RowBox[{"66", " ", "\[Xi]"}], "+", 
           RowBox[{"84", " ", 
            SuperscriptBox["\[Xi]", "2"]}], "+", 
           RowBox[{"56", " ", 
            SuperscriptBox["\[Xi]", "3"]}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Xi]", "5"]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "3"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"3", " ", "\[Xi]"}], "+", 
           SuperscriptBox["\[Xi]", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.477267192129973*^9, 3.4772672529309177`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"128", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "452"}], "-", 
      RowBox[{"324", " ", "\[Xi]"}], "-", 
      RowBox[{"65", " ", 
       SuperscriptBox["\[Xi]", "2"]}], "+", 
      RowBox[{"28", " ", 
       SuperscriptBox["\[Xi]", "3"]}], "+", 
      RowBox[{"14", " ", 
       SuperscriptBox["\[Xi]", "4"]}], "-", 
      SuperscriptBox["\[Xi]", "6"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "60"}], "-", 
         RowBox[{"52", " ", "\[Xi]"}], "-", 
         RowBox[{"11", " ", 
          SuperscriptBox["\[Xi]", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Xi]", "3"]}], "+", 
         SuperscriptBox["\[Xi]", "4"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"330", "+", 
      RowBox[{"121", " ", "\[Xi]"}], "-", 
      RowBox[{"90", " ", 
       SuperscriptBox["\[Xi]", "2"]}], "-", 
      RowBox[{"44", " ", 
       SuperscriptBox["\[Xi]", "3"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Xi]", "5"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "68"}], "-", 
         RowBox[{"66", " ", "\[Xi]"}], "+", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[Xi]", "2"]}], "+", 
         RowBox[{"56", " ", 
          SuperscriptBox["\[Xi]", "3"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["\[Xi]", "5"]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "3"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"3", " ", "\[Xi]"}], "+", 
         SuperscriptBox["\[Xi]", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
    "2"]]}]], "Output",
 CellChangeTimes->{3.477267192129973*^9, 3.4772672529374657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{"seff", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Expand", "[", 
    RowBox[{"N", "[", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"Expand", "[", 
         RowBox[{"seff", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Xi]", ",", " ", "0", ",", " ", "15"}], "}"}]}], "]"}], 
     "]"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.477237512989497*^9, 3.477237549269389*^9}, {
  3.477237588148831*^9, 3.477237603635696*^9}, {3.477237658581881*^9, 
  3.477237662627839*^9}, {3.477238189511698*^9, 3.477238285412478*^9}, {
  3.477238347251711*^9, 3.477238348515718*^9}, {3.4772436237447567`*^9, 
  3.477243626177619*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"192", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", "\[Xi]"}], ")"}], "2"]}]], 
  RowBox[{"(", 
   RowBox[{"4622", "-", 
    RowBox[{"116", " ", "\[Xi]"}], "-", 
    RowBox[{"4116", " ", 
     SuperscriptBox["\[Xi]", "2"]}], "-", 
    RowBox[{"1950", " ", 
     SuperscriptBox["\[Xi]", "3"]}], "+", 
    RowBox[{"113", " ", 
     SuperscriptBox["\[Xi]", "4"]}], "+", 
    RowBox[{"216", " ", 
     SuperscriptBox["\[Xi]", "5"]}], "+", 
    RowBox[{"31", " ", 
     SuperscriptBox["\[Xi]", "6"]}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"430", "-", 
       RowBox[{"408", " ", "\[Xi]"}], "-", 
       RowBox[{"1143", " ", 
        SuperscriptBox["\[Xi]", "2"]}], "-", 
       RowBox[{"518", " ", 
        SuperscriptBox["\[Xi]", "3"]}], "+", 
       RowBox[{"57", " ", 
        SuperscriptBox["\[Xi]", "4"]}], "+", 
       RowBox[{"72", " ", 
        SuperscriptBox["\[Xi]", "5"]}], "+", 
       RowBox[{"10", " ", 
        SuperscriptBox["\[Xi]", "6"]}]}], ")"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"14", "+", 
       RowBox[{"88", " ", "\[Xi]"}], "+", 
       RowBox[{"90", " ", 
        SuperscriptBox["\[Xi]", "2"]}], "+", 
       RowBox[{"30", " ", 
        SuperscriptBox["\[Xi]", "3"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Xi]", "4"]}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.477237525176305*^9, 3.477237550746139*^9}, {
   3.477237593379037*^9, 3.4772376044893*^9}, 3.477237664436702*^9, 
   3.477238230540658*^9, {3.4772382636937857`*^9, 3.477238287449481*^9}, {
   3.477238323786139*^9, 3.477238350145933*^9}, 3.4772385860306807`*^9, 
   3.477240910138183*^9, 3.477243630500444*^9, 3.477244420536921*^9, 
   3.477267060835209*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"chebcoeff", "[", "n_", "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["2", 
       RowBox[{"\[Pi]", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"0", ",", " ", "n"}], "]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"seff", "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "]"}], 
        "*", 
        RowBox[{"ChebyshevT", "[", 
         RowBox[{"n", ",", " ", "\[Xi]"}], "]"}]}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[Xi]", "2"]}]]]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Xi]", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.47724080716807*^9, 3.477240894699832*^9}, {
  3.4772409460003443`*^9, 3.4772409492745447`*^9}, {3.477240982026668*^9, 
  3.477240993869726*^9}, {3.477241205685618*^9, 3.477241206933152*^9}, {
  3.477242227053555*^9, 3.477242287961969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"chebcoefftable", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"chebcoeff", "[", "n", "]"}], ",", " ", "18"}], "]"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}], ")"}], 
  "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.4772411741165648`*^9, 3.477241196869231*^9}, {
  3.477241287786715*^9, 3.477241316671378*^9}, {3.4772446999988947`*^9, 
  3.477244704730345*^9}, {3.477244927810069*^9, 3.477244936270582*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"1.03501464246414996404292692855`17.999999999999996", "-", 
       RowBox[{"0.06632715453360329389848824085`18.", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "0.01785878065070864648353163220888936184`17.999999999999996", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.83479018329602686961708331012`18."}], "+", 
       RowBox[{"0.85347607726680164694924412042`18.", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"0.0413511144571877000472494124`18.", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.45302138656413437962651098876`18."}], "+", 
       RowBox[{"0.4719749629489910461123179688`18.", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "0.02590705836823253284290287268448998286`17.999999999999996", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
       "-", "0.01410075965951517767157078199516508416`17.999999999999996"}], 
       "+", 
       RowBox[{
       "0.0129723610157383213551801378427954933`18.000000000000004", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "0.00328075391717869020625243746179987706`17.999999999999996", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
      "0.01645502392657521721567020809683111931`18.000000000000004", "-", 
       RowBox[{
       "0.02149325808684194848679759172541869157`18.000000000000004", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
       "0.00559826996462030314270126251172780006`17.999999999999996", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
      "0.00050212302497519451420741237736958241`18.000000000000004", "-", 
       RowBox[{
       "0.00069251543324975173279258466685978159`18.000000000000004", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
       "0.00011925853440152876863722283853784523`18.000000000000004", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
       "-", "0.00006742310385689275657549841489500585`17.999999999999996"}], 
       "+", 
       RowBox[{
       "0.0001025414627604400581222342567258533`17.999999999999996", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "0.00002608317227289157353701911735224366`18.000000000000004", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
      "9.02684765914838836621017779482754`18.000000000000004*^-6", "-", 
       RowBox[{
       "0.00001487643595057213206383033096449741`17.999999999999996", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
       "4.70196911920636956783580829319351`17.999999999999996*^-6", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
       "-", "1.20536750311505619860692972462581`17.999999999999996*^-6"}], 
       "+", 
       RowBox[{
       "2.12478519141982176610408003417145`18.000000000000004*^-6", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "7.7365094122150053893911577633853`17.999999999999996*^-7", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
      "1.6057128113685800840140208590664`17.999999999999996*^-7", "-", 
       RowBox[{
       "2.9976124224562920802687764378517`17.999999999999996*^-7", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
       "1.2067515666002510094554416869791`17.999999999999996*^-7", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
       "-", "2.134398207747631022950137143789`17.999999999999996*^-8"}], "+", 
       
       RowBox[{
       "4.18696909358856646117987513522`18.000000000000004*^-8", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
       "1.817402035170559350088079967651`17.999999999999996*^-8", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`18.000000000000004", " ", "\[Theta]"}], "]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.477241425794026*^9, 3.477243788406804*^9, 
  3.477244807097821*^9, 3.477244995896439*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rbyxiplusbbya", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"\[Xi]", "+", 
     RowBox[{"\[Beta]", "/", "\[Alpha]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dfdxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", "\[Xi]"], 
    RowBox[{"f", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrdfdxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d2rdxi2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"\[Xi]", ",", " ", "\[Xi]"}]], 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrd2fdthetadxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrd2rdthetadxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrsinthetad2fdphidxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrsinthetad2rdphidxi", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
     RowBox[{"r", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrsqanglaplacef", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]], 
    RowBox[{"anglapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"onebyrsqanglaplacer", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"r", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]], 
    RowBox[{"anglapr", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.477149646333197*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nr", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nt", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"np", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "14"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", "11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Xi]", "=", 
   RowBox[{"N", "[", 
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"\[Pi]", "*", "i"}], 
       RowBox[{"nr", "-", "1"}]], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{"\[Pi]", "*", "j"}], 
     RowBox[{"nt", "-", "1"}]], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", "=", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{"2", "*", "\[Pi]", "*", "k"}], "np"], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4758487921259203`*^9, 3.475848797587862*^9}, {
  3.47707515289635*^9, 3.477075158525483*^9}, {3.4770753040297623`*^9, 
  3.477075343402*^9}, {3.477075649349236*^9, 3.4770756765819893`*^9}, {
  3.477076122504809*^9, 3.477076138755949*^9}, {3.477153274415621*^9, 
  3.477153277421319*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"j1", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"j2", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"j3", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"rbyxiplusbbya", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"dfdxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrdfdxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"d2rdxi2", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrd2fdthetadxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrd2rdthetadxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrsinthetad2fdphidxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrsinthetad2rdphidxi", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrsqanglaplacef", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"onebyrsqanglaplacer", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"2.\"\>",
   2.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153401975815*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402000329*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0\"\>",
   0,
   Editable->False],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.4771534020491533`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"2.\"\>",
   2.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402072278*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"6.666666666666666\"\>",
   6.666666666666666,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402103422*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"6.666666666666666\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"-1\"\>"]}],
   0.6666666666666666,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402132165*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"-3.\"\>",
   -3.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.4771534021660967`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402199004*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402232909*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0\"\>",
   0,
   Editable->False],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402266327*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0\"\>",
   0,
   Editable->False],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402302391*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.477153402335095*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.4771534023923264`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"-2.5\"\>",
   -2.5,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477149675315988*^9, 3.477151861533102*^9, 
  3.477152576692194*^9, 3.477152623568006*^9, 3.477153279334231*^9, 
  3.4771534024243917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"part1", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"part2", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"part3a", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"part3b", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"seff", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", "18"}], "]"}]}], "Input",
 CellChangeTimes->{{3.477151670511694*^9, 3.477151709582161*^9}, {
  3.477151874459433*^9, 3.4771518953965197`*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"1.\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"1\"\>"]}],
   10.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.477153406445588*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"1.\"\>",
   1.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.477153406475156*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.47715340650878*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.477153406549464*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.\"\>",
   0.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.4771534065942497`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"-5.\"\>",
   -5.,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.477153406627633*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"-2.5\"\>",
   -2.5,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.4771534066685038`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"1\"\>",
   1,
   Editable->False],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.4771534067203093`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"-1.5\"\>",
   -1.5,
   AutoDelete->True],
  ScientificForm[#, 18]& ]], "Output",
 CellChangeTimes->{3.477076140762775*^9, 3.4771514385334053`*^9, 
  3.477151715419249*^9, 3.477151896955044*^9, 3.477152578818562*^9, 
  3.477152625148264*^9, 3.4771532810449677`*^9, 3.477153406765979*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tildelapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Alpha]", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Xi]", ",", "\[Xi]"}]], 
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      "+", 
      RowBox[{
       FractionBox["2", 
        RowBox[{"\[Xi]", "+", 
         RowBox[{"\[Beta]", "/", "\[Alpha]"}]}]], 
       RowBox[{
        SubscriptBox["\[PartialD]", "\[Xi]"], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}], "+", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Xi]", "+", 
           RowBox[{"\[Beta]", "/", "\[Alpha]"}]}], ")"}], "2"]], 
       RowBox[{"anglapf", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.4758488004189157`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tildelapf", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.4758488119197903`*^9, 3.4758488150670013`*^9}}],

Cell[BoxData["1.8471243970532207`"], "Output",
 CellChangeTimes->{3.477068915217482*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pseudospherical", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"tildelapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
   "-", 
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.475847407461722*^9, 3.475847413412442*^9}, {
  3.475848644085314*^9, 3.475848651139675*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pseudospherical", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475848690670495*^9, 3.475848729805554*^9}}],

Cell[BoxData["0.9999999999999998`"], "Output",
 CellChangeTimes->{3.477068917762158*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"r_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{
    SuperscriptBox["r", "2"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["r", "2"], "-", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", "1"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4758468764880857`*^9, 3.475846888050375*^9}, {
  3.475848937471758*^9, 3.475848941448749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lapf", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], "=",
   
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"r", ",", "r"}]], 
      RowBox[{"f", "[", 
       RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "+", 
     
     RowBox[{
      FractionBox["2", "r"], 
      RowBox[{
       SubscriptBox["\[PartialD]", "r"], 
       RowBox[{"f", "[", 
        RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
     "+", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["r", "2"]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
         RowBox[{"f", "[", 
          RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
        "+", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
         RowBox[{
          SubscriptBox["\[PartialD]", "\[Theta]"], 
          RowBox[{"f", "[", 
           RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}],
         "+", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
          RowBox[{"f", "[", 
           RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
           "]"}]}]}]}], ")"}]}]}], ")"}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"r", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.475849996125032*^9, 3.475850018363028*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"8", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Xi]", "+", 
           RowBox[{
            FractionBox["1", "8"], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "\[Xi]"}], "+", 
              SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
       ")"}], "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"8", "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"\[Xi]", "+", 
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Xi]"}], "+", 
            SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
     ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"8", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "+", 
                RowBox[{
                 FractionBox["1", "8"], " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", 
                   RowBox[{"3", " ", "\[Xi]"}], "+", 
                   SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
               ")"}]}]}], ")"}], "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"8", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Xi]", "+", 
             RowBox[{
              FractionBox["1", "8"], " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"3", " ", "\[Xi]"}], "+", 
                SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}],
          ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Xi]", "+", 
              RowBox[{
               FractionBox["1", "8"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "\[Xi]"}], "+", 
                 SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
      ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"8", "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"\[Xi]", "+", 
        RowBox[{
         FractionBox["1", "8"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "\[Xi]"}], "+", 
           SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "12"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Xi]", "+", 
              RowBox[{
               FractionBox["1", "8"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "\[Xi]"}], "+", 
                 SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"8", "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Xi]", "+", 
            RowBox[{
             FractionBox["1", "8"], " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"3", " ", "\[Xi]"}], "+", 
               SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"6", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Xi]", "+", 
              RowBox[{
               FractionBox["1", "8"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "\[Xi]"}], "+", 
                 SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"8", "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Xi]", "+", 
            RowBox[{
             FractionBox["1", "8"], " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"3", " ", "\[Xi]"}], "+", 
               SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"8", "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"\[Xi]", "+", 
         RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Xi]"}], "+", 
            SuperscriptBox["\[Xi]", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}]}]}], 
     ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.477068928189158*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lapf", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475849006350732*^9, 3.475849009125833*^9}, {
  3.4758500338671417`*^9, 3.475850034556802*^9}}],

Cell[BoxData[
 RowBox[{"-", "169.7477034240518`"}]], "Output",
 CellChangeTimes->{3.477068930335367*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["External Domain", "Section",
 CellChangeTimes->{{3.4758575133022337`*^9, 3.475857517314334*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"-", "0.02"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Szm1", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"10", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"0.2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{
            "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "]"}], "+", 
          RowBox[{"Im", "[", 
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{
            "2", ",", " ", "1", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "]"}]}], ")"}]}]}], ")"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]", ">", "0"}], ",", " ", 
      RowBox[{"\[Phi]", ">", "0"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"\[Alpha]", "*", 
      RowBox[{"Szm1", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]], "+", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"F", "[", 
   RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Xi]", "3"], "-", 
     RowBox[{"3", "*", "\[Xi]"}], "+", "2"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.4758594667202187`*^9, 3.4758594673780107`*^9}, {
  3.475859508105506*^9, 3.475859509544449*^9}, {3.476129420505269*^9, 
  3.476129426426854*^9}, {3.476129460711232*^9, 3.476129465906559*^9}}],

Cell[BoxData[
 RowBox[{"2", "-", 
  FractionBox["50.`", 
   RowBox[{"10.`", "\[InvisibleSpace]", "+", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2.503342941796705`"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"2.503342941796705`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{
  3.4758644078339148`*^9, 3.475864603495307*^9, {3.47586489102302*^9, 
   3.475864927685117*^9}, 3.4758653259192467`*^9, 3.475865762134107*^9, 
   3.475894907465415*^9, 3.475942648932981*^9, 3.475942701715884*^9, 
   3.4759431179468393`*^9, 3.476118515589238*^9, 3.476118602381287*^9, 
   3.4761260923611393`*^9, 3.4761294278181543`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{"\[Alpha]", "*", 
   RowBox[{"(", 
    RowBox[{"\[Xi]", "+", 
     RowBox[{
      RowBox[{"A", "[", "\[Xi]", "]"}], "*", 
      RowBox[{"F", "[", 
       RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "-", "1"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
    
   RowBox[{
    SuperscriptBox[
     RowBox[{"u", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"u", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
       "2"], "-", "1"}], ")"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
      
     RowBox[{
      SuperscriptBox["\[Xi]", "2"], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Xi]", "2"], "-", "1"}], ")"}], 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.475859505502331*^9, 3.4758595266942244`*^9}, {
  3.475859692842299*^9, 3.475859695621524*^9}, {3.475859983694522*^9, 
  3.475859998409977*^9}, {3.475862094560739*^9, 3.475862097760429*^9}, {
  3.475864595887534*^9, 3.475864598587368*^9}, {3.475864680380591*^9, 
  3.47586470341765*^9}, {3.475865750210885*^9, 3.4758657582360086`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"j1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", "\[Xi]"], 
    RowBox[{"u", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Theta]"], 
     RowBox[{"u", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{"u", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j3", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Phi]"], 
     RowBox[{"u", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapu", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
      RowBox[{"u", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Theta]"], 
       RowBox[{"u", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], "+", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
       RowBox[{"u", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
     RowBox[{
      SubscriptBox["\[PartialD]", "\[Theta]"], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}],
     "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
       "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.475859598954925*^9, 3.475859615739891*^9}, {
  3.475859799191556*^9, 3.475859805154997*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"part1", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       FractionBox[
        RowBox[{"u", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{"\[Xi]", "-", "1"}]], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["2", 
     RowBox[{
      RowBox[{"j1", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"u", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]], 
    
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part2", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"j1", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"u", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           
          RowBox[{"\[Xi]", "-", "1"}]], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"j2", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"], "+", 
         SuperscriptBox[
          RowBox[{"j3", "[", 
           RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}],
           "2"]}], ")"}]}], "-", "1"}], ")"}], 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"u", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]], 
    RowBox[{"anglapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3a", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"j2", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{"u", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"j3", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
         "]"}]}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"part3b", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"u", "[", 
          RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "2"]], 
       RowBox[{"anglapu", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      " ", "+", " ", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"j1", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]], 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{"j1", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"j2", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"j3", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}], "2"]}], ")"}], 
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{"\[Xi]", ",", " ", "\[Xi]"}]], 
           RowBox[{"u", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"j2", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{"u", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Theta]", ",", "\[Xi]"}]], 
              RowBox[{"u", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"j3", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}], 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
                "]"}], 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"\[Phi]", ",", "\[Xi]"}]], 
              RowBox[{"u", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
               "]"}]}]}]}], ")"}]}]}], ")"}]}]}], ")"}], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"part1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "+"}], "*)"}], 
   RowBox[{
    RowBox[{"part2", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], "+", 
    
    FractionBox[
     RowBox[{
      RowBox[{"part3a", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "+", 
      RowBox[{"part3b", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.47585957820792*^9, 3.475859579511887*^9}, {
  3.475859626351746*^9, 3.475859675071598*^9}, {3.475859818124408*^9, 
  3.475859818314739*^9}, {3.475864312688739*^9, 3.475864334102832*^9}, {
  3.475942664126562*^9, 3.475942694094528*^9}, {3.476118548993044*^9, 
  3.476118563738173*^9}, {3.476118617452126*^9, 3.476118628809897*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], ",", 
   " ", 
   RowBox[{"\[Xi]", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476126160990588*^9, 3.4761262365616283`*^9}, {
  3.4761263095530987`*^9, 3.476126332615717*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.476126185831521*^9, 3.476126218324409*^9}, {
   3.4761262991222878`*^9, 3.476126341072935*^9}, 3.476129440111827*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"residual", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475863714294788*^9, 3.4758637163247337`*^9}, 
   3.476126086423959*^9, {3.4761261498241377`*^9, 3.476126152122602*^9}}],

Cell[BoxData[
 RowBox[{"-", "3.4150311726085585`"}]], "Output",
 CellChangeTimes->{
  3.475864413314303*^9, 3.4758646091813507`*^9, 3.4758657103086576`*^9, 
   3.4758657705100517`*^9, 3.475894915554863*^9, 3.475895408397933*^9, 
   3.475942706442706*^9, 3.475943138249155*^9, {3.476118621334676*^9, 
   3.47611863132351*^9}, 3.476126100212943*^9, 3.4761261527815313`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Alpha]", "2"], 
    SuperscriptBox[
     RowBox[{"j1", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
     "2"]], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"j2", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"], "+", 
     SuperscriptBox[
      RowBox[{"j3", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      "2"]}], ")"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.47586372273724*^9, 3.475863722868239*^9}}],

Cell[BoxData["0.3215314299805029`"], "Output",
 CellChangeTimes->{3.4758644177919283`*^9, 3.475864614186613*^9, 
  3.475865718555497*^9, 3.4758657720893183`*^9, 3.475895183935049*^9, 
  3.4758954155005493`*^9, 3.475942715098878*^9, 3.4759431521830463`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tildelapf", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Alpha]", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"\[Xi]", ",", "\[Xi]"}]], 
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
      "+", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Xi]", "-", "1"}], ")"}], "2"]], 
       RowBox[{"anglapf", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "]"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4758629012774763`*^9, 3.475862914382719*^9}, {
  3.475894951552924*^9, 3.47589496195068*^9}, {3.475896557124548*^9, 
  3.475896584779673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tildelapf", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.47586384280142*^9, 3.475863844765708*^9}}],

Cell[BoxData[
 RowBox[{"-", "12.971858017546202`"}]], "Output",
 CellChangeTimes->{3.4758644204316483`*^9, 3.475864617566483*^9, 
  3.475865720826041*^9, 3.475865773819558*^9, 3.4758949654342327`*^9, 
  3.475895421047319*^9, 3.47589646959546*^9, 3.4758965620188217`*^9, 
  3.475942752046818*^9, 3.475943181845635*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pseudospherical", "[", 
   RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=",
   
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    RowBox[{"tildelapf", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
   "-", 
   RowBox[{"residual", "[", 
    RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4758636422288723`*^9, 3.47586365454795*^9}, {
  3.4758638908153667`*^9, 3.475863969056177*^9}, {3.4758640141991587`*^9, 
  3.475864058457789*^9}, {3.4758641423790073`*^9, 3.4758641506244392`*^9}, {
  3.475895003972604*^9, 3.47589502823575*^9}, {3.475895224366469*^9, 
  3.4758952254423313`*^9}, {3.47589646139395*^9, 3.475896581047984*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pseudospherical", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"-", "0.7558288852771229`"}]], "Output",
 CellChangeTimes->{
  3.475864423006878*^9, 3.475864626031926*^9, 3.475865726686387*^9, 
   3.475865776637471*^9, {3.4758950135577517`*^9, 3.475895030147303*^9}, 
   3.475895440313816*^9, {3.475896471597745*^9, 3.475896489976843*^9}, {
   3.475896540190198*^9, 3.4758965761699343`*^9}, 3.475942782400079*^9, 
   3.475943199882473*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{
    SuperscriptBox["u", "2"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["u", "2"], "-", "1"}], ")"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4758599666355343`*^9, 3.4758599705417767`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lapfbyu4", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], 
   "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"u", ",", "u"}]], 
       RowBox[{"f", "[", 
        RowBox[{"u", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], "+",
       
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["u", "2"]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
          RowBox[{"f", "[", 
           RowBox[{"u", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"Tan", "[", "\[Theta]", "]"}]], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"f", "[", 
            RowBox[{"u", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], "+", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]], 
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{"\[Phi]", ",", "\[Phi]"}]], 
           RowBox[{"f", "[", 
            RowBox[{"u", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], ")"}]}]}], ")"}], "/.", 
    RowBox[{"u", "\[Rule]", 
     RowBox[{"u", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.475859859194172*^9, 3.47585989745338*^9}, {
   3.475860101419324*^9, 3.475860113543044*^9}, {3.4758613765174313`*^9, 
   3.475861408003315*^9}, 3.475895257504479*^9, {3.475895297119337*^9, 
   3.475895298740139*^9}, {3.475942794755268*^9, 3.4759428163414907`*^9}, {
   3.475943264826076*^9, 3.475943279956847*^9}, {3.475943317807991*^9, 
   3.47594332337969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.475860086495367*^9, 3.475860087220539*^9}}],

Cell[BoxData["0.09159598654773067`"], "Output",
 CellChangeTimes->{
  3.475864425523693*^9, 3.475864631639307*^9, 3.4758657357679377`*^9, 
   3.475865779272641*^9, 3.475895044306181*^9, 3.475895260120586*^9, 
   3.475895301046462*^9, {3.475896476855022*^9, 3.475896493959085*^9}, 
   3.4758965439184713`*^9, {3.475942797509974*^9, 3.475942818510819*^9}, 
   3.4759432299608793`*^9, {3.475943269665045*^9, 3.475943282259095*^9}, 
   3.475943325911878*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lapfbyu4", "[", 
  RowBox[{
   RowBox[{"-", ".8"}], ",", " ", "2", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.4758600558961143`*^9, 3.475860058901186*^9}, {
  3.475895058201646*^9, 3.475895088880931*^9}, {3.47589526363509*^9, 
  3.475895263998205*^9}, {3.475943328992765*^9, 3.475943330464114*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.7558288852771234`"}]], "Output",
 CellChangeTimes->{
  3.475864426252286*^9, 3.475864632807681*^9, 3.4758657365428867`*^9, 
   3.4758657800982857`*^9, {3.475895045766214*^9, 3.475895089453312*^9}, 
   3.475895265063697*^9, 3.4758953020487843`*^9, {3.475896477732747*^9, 
   3.47589649487265*^9}, 3.47589654491496*^9, 3.475943231007862*^9, {
   3.4759432703507338`*^9, 3.47594328364093*^9}, 3.4759433338527203`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate Laplacian", "Section",
 CellChangeTimes->{{3.475868915589465*^9, 3.475868920513669*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"metric", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "}"}]}], ")"}],
     "//", "MatrixForm"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"metric", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          SuperscriptBox["\[Xi]", "2"], ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"0", ",", " ", "0", ",", " ", 
          RowBox[{
           SuperscriptBox["\[Xi]", "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "}"}]}], "}"}]}],
      ")"}], "//", "MatrixForm"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"metric", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[PartialD]", "\[Xi]"], 
            RowBox[{"R", "[", 
             RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
             "]"}]}], ")"}], "2"], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[PartialD]", "\[Theta]"], 
             RowBox[{"R", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}]}], ")"}], "2"]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"R", "[", 
             RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
             "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[PartialD]", "\[Phi]"], 
             RowBox[{"R", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}]}], ")"}], "2"]}]}], "}"}]}], "}"}]}], ")"}], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.475868317801423*^9, 3.475868508576664*^9}, {
  3.475868561696217*^9, 3.475868561999998*^9}, {3.4758691009220953`*^9, 
  3.475869169924594*^9}, {3.4758780795023737`*^9, 3.475878144824833*^9}, {
  3.475878309093004*^9, 3.475878516205159*^9}, {3.475879217647374*^9, 
  3.4758792319671164`*^9}, {3.475879499085372*^9, 3.4758795640674763`*^9}, {
  3.4758797625613203`*^9, 3.475879794780072*^9}, {3.475880328257957*^9, 
  3.475880337533124*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"R", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], "+", 
       
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"R", "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ",
         
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.475868511499283*^9, 3.475868562939011*^9, {3.4758691711522427`*^9, 
   3.475869192170508*^9}, 3.47587006097473*^9, 3.4758748383100443`*^9, 
   3.4758785241549177`*^9, 3.4758792332980328`*^9, 3.475879567567072*^9, {
   3.4758803097802553`*^9, 3.47588033818602*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"rootmetric", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      SqrtBox[
       RowBox[{"Det", "[", "metric", "]"}]], ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{
        RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], "&&", 
        RowBox[{"\[Xi]", ">", "0"}]}]}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"rootmetric", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"Det", "[", "metric", "]"}]], ",", " ", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], "&&", 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
        ">", "0"}], "&&", 
       RowBox[{
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ">", 
        "0"}]}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4758685787721567`*^9, 3.475868582023118*^9}, {
  3.475878689876396*^9, 3.475878697811593*^9}, {3.475878760837557*^9, 
  3.475878906296864*^9}, {3.475878940039385*^9, 3.4758789450131607`*^9}, {
  3.475878978158289*^9, 3.4758790023325863`*^9}, {3.4758795812044277`*^9, 
  3.4758795916779327`*^9}, {3.4758803452135897`*^9, 3.475880357504792*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"R", "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
  RowBox[{
   SuperscriptBox["R", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.475878870894084*^9, 3.475878907125349*^9, 3.475878945835059*^9, {
   3.475878982484017*^9, 3.4758790052659817`*^9}, 3.475879238697991*^9, {
   3.4758795719212217`*^9, 3.4758795933035517`*^9}, {3.4758803126397533`*^9, 
   3.4758803584716053`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"invmetric", "=", 
    RowBox[{"Inverse", "[", "metric", "]"}]}], ")"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4758687292116127`*^9, 3.475868734773007*^9}, {
  3.475868796205558*^9, 3.475868807160825*^9}, {3.475879192859825*^9, 
  3.4758792115737886`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"R", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"], 
           " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"R", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
           " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["R", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}],
           "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"R", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
           " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["R", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
            "2"]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"R", "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"], " ",
         
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"R", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"R", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"R", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"R", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], 
      "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"R", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["R", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], "0", 
      
      FractionBox[
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], 
       SuperscriptBox[
        RowBox[{"R", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4758687356390467`*^9, 3.4758688078972807`*^9, {3.475869180378653*^9, 
   3.4758692066487303`*^9}, 3.475870073561254*^9, 3.475874874290382*^9, 
   3.475879173907261*^9, {3.475879212370433*^9, 3.475879239883534*^9}, 
   3.475879597201488*^9, 3.4758803139323263`*^9, 3.475880372600956*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partialf", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    ",", " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Theta]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    ",", " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Phi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.475869525405142*^9, 3.475869586053857*^9}, {
  3.4758792527674017`*^9, 3.4758792552539873`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.475869589703939*^9, 3.475870074632893*^9, 
  3.4758748793997583`*^9, 3.4758792562125273`*^9, 3.475879600902248*^9, 
  3.475880314937463*^9, 3.47588037416118*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gijpartialjf", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"invmetric", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", " ", "j"}], "\[RightDoubleBracket]"}], "*", 
       RowBox[{
       "gradf", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], ",",
       " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}], ",", " ", 
    
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4758693715261497`*^9, 3.475869499538217*^9}, {
  3.475869604739502*^9, 3.4758696414411373`*^9}, {3.475879279877576*^9, 
  3.475879286509411*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"], 
          " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
          " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["R", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
         "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"R", "[", 
            RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
          " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["R", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
           "2"]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], ")"}], 
     "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"R", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"], " ", 
       
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["R", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
      ")"}]}], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
     SuperscriptBox[
      RowBox[{"R", "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"R", "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.475869642666766*^9, 3.475870078105348*^9, 
  3.4758748810875893`*^9, 3.475879292029887*^9, 3.4758796089374857`*^9, 
  3.475880316874526*^9, 3.4758803775708017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "gijpartialjf", "]"}]], "Input",
 CellChangeTimes->{{3.47587930032146*^9, 3.475879337298715*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], 
    "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["R", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], 
    "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
     SuperscriptBox[
      RowBox[{"R", "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"R", "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["R", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.475879315473448*^9, 3.475879338299025*^9}, 
   3.4758796142483597`*^9, 3.475880317945279*^9, 3.475880379155723*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"laplacian", "=", 
   RowBox[{
    FractionBox["1", "rootmetric"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Xi]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], ")"}]}], "+", " ", 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Theta]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}]}], ")"}]}], "+", " ", 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Phi]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "3", 
          "\[RightDoubleBracket]"}]}], ")"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.47586968322586*^9, 3.475869709956922*^9}, {
   3.475869741380291*^9, 3.4758697520953836`*^9}, {3.475869800347386*^9, 
   3.475870034902766*^9}, {3.475879355557921*^9, 3.475879392959736*^9}, 
   3.475880455497572*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "laplacian", "]"}]], "Input",
 CellChangeTimes->{{3.475879661299622*^9, 3.475879689384639*^9}, {
  3.475887216370658*^9, 3.4758872192575483`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"R", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"R", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
   SuperscriptBox[
    RowBox[{"R", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    RowBox[{"R", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "-", 
  
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "+", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "+", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "-", 
  
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "3"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "3"]}]], "-", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["R", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["R", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
     "3"]}]]}]], "Output",
 CellChangeTimes->{{3.475879669615614*^9, 3.475879690078464*^9}, 
   3.475880321440688*^9, 3.4758803857230377`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate Laplacian in external domain", "Section",
 CellChangeTimes->{{3.4758856255754013`*^9, 3.47588563813279*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"metric", "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"U", "[", 
       RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
      RowBox[{"-", "4"}]], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[PartialD]", "\[Xi]"], 
            RowBox[{"U", "[", 
             RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
             "]"}]}], ")"}], "2"], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[PartialD]", "\[Theta]"], 
             RowBox[{"U", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}]}], ")"}], "2"]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}]}], "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Xi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Theta]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "\[Phi]"], 
           RowBox[{"U", "[", 
            RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
            "]"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"U", "[", 
             RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
             "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[PartialD]", "\[Phi]"], 
             RowBox[{"U", "[", 
              RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
              "]"}]}], ")"}], "2"]}]}], "}"}]}], "}"}]}]}], ")"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4758866202111063`*^9, 3.475886688622381*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"U", "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], "+",
         
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"U", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
        "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4758866923120317`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rootmetric", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SqrtBox[
     RowBox[{"Det", "[", "metric", "]"}]], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], "&&", 
      RowBox[{
       RowBox[{"U", "[", 
        RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
       ">", "0"}], "&&", 
      RowBox[{
       RowBox[{
        SuperscriptBox["U", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ">", 
       "0"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.47588688963797*^9, 3.4758868970646477`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
   RowBox[{
    SuperscriptBox["U", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
  SuperscriptBox[
   RowBox[{"U", "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]]], "Output",\

 CellChangeTimes->{3.4758869076490917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"invmetric", "=", 
    RowBox[{"Inverse", "[", "metric", "]"}]}], ")"}], "//", 
  "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"U", "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "8"], " ",
         
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"U", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "4"]], 
          "+", 
          FractionBox[
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["U", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
           SuperscriptBox[
            RowBox[{"U", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "6"]], 
          "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["U", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
             "2"]}], 
           SuperscriptBox[
            RowBox[{"U", "[", 
             RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
            "6"]]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"U", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"U", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"U", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]]}], 
      SuperscriptBox[
       RowBox[{"U", "[", 
        RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"U", "[", 
           RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], 
         " ", 
         RowBox[{
          SuperscriptBox["U", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox["U", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]]}], "0", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"U", "[", 
         RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.47588699532546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partialf", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Xi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    ",", " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Theta]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
    ",", " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Phi]"], 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}]}], 
   "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.47588696482789*^9, 3.475887008559719*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gijpartialjf", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"invmetric", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", " ", "j"}], "\[RightDoubleBracket]"}], "*", 
        RowBox[{
        "gradf", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}], ",", " ",
      
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.4758873585892763`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"laplacian", "=", 
   RowBox[{
    FractionBox["1", "rootmetric"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Xi]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], ")"}]}], "+", " ", 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Theta]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}]}], ")"}]}], "+", " ", 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Phi]"], 
       RowBox[{"(", 
        RowBox[{"rootmetric", "*", 
         RowBox[{
         "gijpartialjf", "\[LeftDoubleBracket]", "3", 
          "\[RightDoubleBracket]"}]}], ")"}]}]}], ")"}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  FractionBox["laplacian", 
   SuperscriptBox[
    RowBox[{"U", "[", 
     RowBox[{"\[Xi]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
    "4"]], "]"}]], "Input",
 CellChangeTimes->{{3.475887066226671*^9, 3.4758870794448633`*^9}, {
  3.475887206889784*^9, 3.475887209565999*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"U", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"U", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
   SuperscriptBox[
    RowBox[{"U", "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "-", 
  
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "+", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "+", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"]}]], "-", 
  
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "3"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "3"]}]], "-", 
  
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["U", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"U", "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["U", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
     "3"]}]]}]], "Output",
 CellChangeTimes->{3.475887039957934*^9, 3.475887083383132*^9, 
  3.4758872105439777`*^9, 3.475887363534235*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["other stuff", "Section",
 CellChangeTimes->{{3.476063523893539*^9, 3.4760635261262913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ChebyshevT", "[", 
  RowBox[{"i", ",", " ", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", 
      RowBox[{"(", 
       RowBox[{"i", "-", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}]}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"x", ",", "x"}]], 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{
       RowBox[{"i", "-", "2"}], ",", " ", "x"}], "]"}]}]}], "-", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"i", "+", "1"}], ")"}]}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"x", ",", "x"}]], 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{"i", ",", " ", "x"}], "]"}]}]}], "+", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", 
      RowBox[{"(", 
       RowBox[{"i", "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"i", "+", "2"}], ")"}]}]], 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"x", ",", "x"}]], 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{
       RowBox[{"i", "+", "2"}], ",", " ", "x"}], "]"}]}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.4760635160170383`*^9, 3.476063784619766*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"5", " ", "x"}], "-", 
  RowBox[{"20", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"16", " ", 
   SuperscriptBox["x", "5"]}]}]], "Output",
 CellChangeTimes->{{3.476063697228613*^9, 3.476063784957163*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"5", " ", "x"}], "-", 
  RowBox[{"20", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"16", " ", 
   SuperscriptBox["x", "5"]}]}]], "Output",
 CellChangeTimes->{{3.476063697228613*^9, 3.476063784959618*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"ChebyshevT", "[", 
     RowBox[{"i", ",", " ", "x"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.476104195911005*^9, 3.476104265821374*^9}, {
   3.476105133891786*^9, 3.476105133971106*^9}, 3.476105718802116*^9}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"2", " ", "x"}], "-", 
  RowBox[{"6", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["x", "4"]}]}]], "Output",
 CellChangeTimes->{{3.476104220911158*^9, 3.476104266302928*^9}, 
   3.4761051360353823`*^9, 3.476105719324005*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", 
   RowBox[{"x", ",", "x"}]], 
  RowBox[{"f", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.476104243731628*^9, 3.476104253517531*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "12"}], "+", 
  RowBox[{"24", " ", "x"}], "+", 
  RowBox[{"96", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{{3.476104254626754*^9, 3.47610426714604*^9}, 
   3.476105137817552*^9, 3.476105721519759*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"56", 
    RowBox[{"ChebyshevT", "[", 
     RowBox[{"0", ",", " ", "x"}], "]"}]}], "+", 
   RowBox[{"24", 
    RowBox[{"ChebyshevT", "[", 
     RowBox[{"1", ",", " ", "x"}], "]"}]}], "+", 
   RowBox[{"48", 
    RowBox[{"ChebyshevT", "[", 
     RowBox[{"2", ",", " ", "x"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476104552992921*^9, 3.476104593421515*^9}}],

Cell[BoxData[
 RowBox[{"8", "+", 
  RowBox[{"24", " ", "x"}], "+", 
  RowBox[{"96", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{{3.4761045843918324`*^9, 3.47610459415867*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"1", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.476104685282876*^9, 3.476104702560313*^9}, {
   3.476105010821069*^9, 3.4761050194946747`*^9}, 3.476105396278405*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4761047036012907`*^9, 3.476104951330565*^9, {3.47610501239373*^9, 
   3.4761050206589746`*^9}, 3.476105097008999*^9, 3.476105406420967*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"0", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", "6"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.476104711212224*^9, 3.4761047374374113`*^9}, 
   3.47610508707894*^9, {3.476105400165065*^9, 3.476105402614697*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.476104737992661*^9, 3.476104951976379*^9, 
  3.476105064438879*^9, 3.476105097906039*^9, 3.476105407207013*^9, 
  3.4761056708225603`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cofi", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"4", 
    RowBox[{"(", 
     RowBox[{"i", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"i", "+", "2"}], ")"}], 
    RowBox[{"a", "\[LeftDoubleBracket]", 
     RowBox[{"i", "+", "2"}], "\[RightDoubleBracket]"}]}], "+", 
   RowBox[{
    FractionBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"i", "+", "2"}], ")"}]}], 
     RowBox[{"i", "+", "3"}]], 
    RowBox[{"c", "\[LeftDoubleBracket]", 
     RowBox[{"i", "+", "2"}], "\[RightDoubleBracket]"}]}], "-", 
   RowBox[{
    FractionBox[
     RowBox[{"i", "+", "2"}], 
     RowBox[{"i", "+", 
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"i", ",", " ", "0"}], "]"}]}]], 
    RowBox[{"c", "\[LeftDoubleBracket]", 
     RowBox[{"i", "+", "4"}], "\[RightDoubleBracket]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.476104767019187*^9, 3.476104847559301*^9}, {
  3.4761052636761427`*^9, 3.4761052724913893`*^9}, {3.4761055897182493`*^9, 
  3.476105592051035*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", " ", 
   RowBox[{"i", ">", "0"}], ",", " ", 
   RowBox[{"i", "--"}], ",", " ", 
   RowBox[{
    RowBox[{"c", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "=", 
    
    RowBox[{"cofi", "[", "i", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.476104859791312*^9, 3.4761049476232452`*^9}, {
  3.4761054122537403`*^9, 3.476105412646654*^9}, {3.4761056332106867`*^9, 
  3.476105635520804*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "c", "]"}]], "Input",
 CellChangeTimes->{
  3.4761049379312973`*^9, {3.476105358999758*^9, 3.476105363529566*^9}, {
   3.4761056568301477`*^9, 3.476105660668468*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"24", ",", "48", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.476105661515192*^9, 3.476105673098366*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", ".", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ChebyshevT", "[", 
     RowBox[{"i", ",", " ", "x"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", "6"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4761051539770937`*^9, 3.476105189642701*^9}, {
   3.4761053218498583`*^9, 3.476105321977166*^9}, 3.476105702740817*^9}],

Cell[BoxData[
 RowBox[{"24", "+", 
  RowBox[{"48", " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.476105190889123*^9, 3.476105292304034*^9, 3.476105322423575*^9, {
   3.476105690906918*^9, 3.476105703291514*^9}}]
}, Open  ]]
}, Closed]]
},
WindowSize->{1003, 1004},
WindowMargins->{{Automatic, 244}, {-97, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"6.0 for Mac OS X x86 (32-bit) (June 19, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[590, 23, 259, 5, 27, "Input"],
Cell[852, 30, 281, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1170, 42, 1489, 42, 88, "Input"],
Cell[2662, 86, 422, 7, 27, "Output"],
Cell[3089, 96, 420, 7, 27, "Output"],
Cell[3512, 105, 375, 6, 27, "Output"],
Cell[3890, 113, 939, 24, 30, "Output"],
Cell[4832, 139, 3382, 90, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8251, 234, 473, 13, 43, "Input"],
Cell[8727, 249, 258, 7, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9022, 261, 709, 19, 27, "Input"],
Cell[9734, 282, 66011, 1090, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75782, 1377, 1219, 27, 27, "Input"],
Cell[77004, 1406, 318335, 5143, 447, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395376, 6554, 1211, 25, 27, "Input"],
Cell[396590, 6581, 166596, 2710, 425, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563223, 9296, 995, 24, 73, "Input"],
Cell[564221, 9322, 2511, 47, 430, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566769, 9374, 2159, 57, 161, "Input"],
Cell[568931, 9433, 1384, 27, 302, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570352, 9465, 226, 4, 27, "Input"],
Cell[570581, 9471, 168921, 2749, 325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739539, 12225, 334, 9, 27, "Input"],
Cell[739876, 12236, 15256, 256, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[755169, 12497, 90, 1, 67, "Section"],
Cell[755262, 12500, 5232, 147, 295, "Input"],
Cell[760497, 12649, 1821, 53, 117, "Input"],
Cell[CellGroupData[{
Cell[762343, 12706, 1727, 41, 94, "Input"],
Cell[764073, 12749, 2125, 56, 84, "Output"],
Cell[766201, 12807, 1343, 30, 44, "Output"],
Cell[767547, 12839, 677, 9, 27, "Output"],
Cell[768227, 12850, 2180, 58, 84, "Output"],
Cell[770410, 12910, 6156, 181, 200, "Output"]
}, Open  ]],
Cell[776581, 13094, 3235, 99, 182, "Input"],
Cell[CellGroupData[{
Cell[779841, 13197, 640, 16, 58, "Input"],
Cell[780484, 13215, 644, 19, 47, "Output"],
Cell[781131, 13236, 1371, 41, 51, "Output"],
Cell[782505, 13279, 144, 2, 27, "Output"]
}, Open  ]],
Cell[782664, 13284, 7675, 219, 301, "Input"],
Cell[CellGroupData[{
Cell[790364, 13507, 263, 7, 27, "Input"],
Cell[790630, 13516, 139, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[790806, 13523, 603, 14, 27, "Input"],
Cell[791412, 13539, 433, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[791882, 13555, 403, 10, 43, "Input"],
Cell[792288, 13567, 270, 7, 27, "Output"]
}, Open  ]],
Cell[792573, 13577, 665, 21, 52, "Input"],
Cell[793241, 13600, 1023, 31, 49, "Input"],
Cell[794267, 13633, 566, 15, 27, "Input"],
Cell[794836, 13650, 181, 3, 27, "Input"],
Cell[795020, 13655, 545, 15, 33, "Input"],
Cell[795568, 13672, 1842, 55, 67, "Input"],
Cell[797413, 13729, 170, 3, 27, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[797620, 13737, 88, 1, 67, "Section"],
Cell[797711, 13740, 2622, 71, 245, "Input"],
Cell[800336, 13813, 2393, 72, 155, "Input"],
Cell[CellGroupData[{
Cell[802754, 13889, 889, 23, 73, "Input"],
Cell[803646, 13914, 1012, 23, 47, "Output"],
Cell[804661, 13939, 1444, 37, 48, "Output"],
Cell[806108, 13978, 550, 8, 27, "Output"],
Cell[806661, 13988, 2615, 74, 84, "Output"]
}, Open  ]],
Cell[809291, 14065, 3235, 99, 182, "Input"],
Cell[812529, 14166, 7840, 223, 301, "Input"],
Cell[820372, 14391, 1244, 37, 91, "Input"],
Cell[CellGroupData[{
Cell[821641, 14432, 500, 12, 43, "Input"],
Cell[822144, 14446, 7229, 197, 173, "Output"],
Cell[829376, 14645, 2182, 64, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[831595, 14714, 981, 24, 43, "Input"],
Cell[832579, 14740, 2056, 56, 69, "Output"]
}, Open  ]],
Cell[834650, 14799, 1135, 31, 59, "Input"],
Cell[CellGroupData[{
Cell[835810, 14834, 591, 15, 27, "Input"],
Cell[836404, 14851, 5394, 131, 213, "Output"]
}, Open  ]],
Cell[841813, 14985, 4651, 139, 344, "Input"],
Cell[846467, 15126, 1319, 37, 213, "Input"],
Cell[CellGroupData[{
Cell[847811, 15167, 2833, 70, 223, "Input"],
Cell[850647, 15239, 282, 8, 39, "Output"],
Cell[850932, 15249, 282, 8, 39, "Output"],
Cell[851217, 15259, 281, 8, 39, "Output"],
Cell[851501, 15269, 282, 8, 39, "Output"],
Cell[851786, 15279, 312, 8, 39, "Output"],
Cell[852101, 15289, 380, 10, 42, "Output"],
Cell[852484, 15301, 286, 8, 39, "Output"],
Cell[852773, 15311, 282, 8, 39, "Output"],
Cell[853058, 15321, 282, 8, 39, "Output"],
Cell[853343, 15331, 279, 8, 39, "Output"],
Cell[853625, 15341, 279, 8, 39, "Output"],
Cell[853907, 15351, 282, 8, 39, "Output"],
Cell[854192, 15361, 284, 8, 39, "Output"],
Cell[854479, 15371, 288, 8, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[854804, 15384, 1865, 47, 148, "Input"],
Cell[856672, 15433, 397, 10, 42, "Output"],
Cell[857072, 15445, 330, 8, 39, "Output"],
Cell[857405, 15455, 329, 8, 39, "Output"],
Cell[857737, 15465, 330, 8, 39, "Output"],
Cell[858070, 15475, 332, 8, 39, "Output"],
Cell[858405, 15485, 332, 8, 39, "Output"],
Cell[858740, 15495, 336, 8, 39, "Output"],
Cell[859079, 15505, 329, 8, 39, "Output"],
Cell[859411, 15515, 334, 8, 39, "Output"]
}, Open  ]],
Cell[859760, 15526, 1154, 35, 49, "Input"],
Cell[CellGroupData[{
Cell[860939, 15565, 195, 4, 27, "Input"],
Cell[861137, 15571, 88, 1, 27, "Output"]
}, Open  ]],
Cell[861240, 15575, 613, 16, 27, "Input"],
Cell[CellGroupData[{
Cell[861878, 15595, 197, 4, 27, "Input"],
Cell[862078, 15601, 88, 1, 27, "Output"]
}, Open  ]],
Cell[862181, 15605, 551, 17, 33, "Input"],
Cell[CellGroupData[{
Cell[862757, 15626, 1793, 54, 67, "Input"],
Cell[864553, 15682, 8056, 243, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[872646, 15930, 237, 5, 27, "Input"],
Cell[872886, 15937, 104, 2, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[873039, 15945, 102, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[873166, 15950, 1862, 54, 129, "Input"],
Cell[875031, 16006, 932, 22, 48, "Output"]
}, Open  ]],
Cell[875978, 16031, 2054, 59, 68, "Input"],
Cell[878035, 16092, 3350, 101, 182, "Input"],
Cell[881388, 16195, 8057, 226, 263, "Input"],
Cell[CellGroupData[{
Cell[889470, 16425, 340, 8, 27, "Input"],
Cell[889813, 16435, 170, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[890020, 16442, 266, 5, 27, "Input"],
Cell[890289, 16449, 371, 6, 27, "Output"]
}, Open  ]],
Cell[890675, 16458, 665, 21, 52, "Input"],
Cell[CellGroupData[{
Cell[891365, 16483, 182, 4, 27, "Input"],
Cell[891550, 16489, 256, 3, 27, "Output"]
}, Open  ]],
Cell[891821, 16495, 921, 27, 49, "Input"],
Cell[CellGroupData[{
Cell[892767, 16526, 190, 4, 27, "Input"],
Cell[892960, 16532, 317, 5, 27, "Output"]
}, Open  ]],
Cell[893292, 16540, 861, 19, 27, "Input"],
Cell[CellGroupData[{
Cell[894178, 16563, 131, 3, 27, "Input"],
Cell[894312, 16568, 398, 7, 27, "Output"]
}, Open  ]],
Cell[894725, 16578, 573, 16, 33, "Input"],
Cell[895301, 16596, 1968, 53, 49, "Input"],
Cell[CellGroupData[{
Cell[897294, 16653, 183, 4, 27, "Input"],
Cell[897480, 16659, 454, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[897971, 16671, 335, 6, 27, "Input"],
Cell[898309, 16679, 445, 7, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[898803, 16692, 103, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[898931, 16697, 5718, 151, 107, "Input"],
Cell[904652, 16850, 5557, 165, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[910246, 17020, 1502, 39, 66, "Input"],
Cell[911751, 17061, 697, 18, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[912485, 17084, 326, 8, 27, "Input"],
Cell[912814, 17094, 6648, 192, 127, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[919499, 17291, 719, 20, 29, "Input"],
Cell[920221, 17313, 968, 30, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[921226, 17348, 735, 19, 27, "Input"],
Cell[921964, 17369, 7576, 231, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[929577, 17605, 135, 2, 27, "Input"],
Cell[929715, 17609, 7922, 245, 139, "Output"]
}, Open  ]],
Cell[937652, 17857, 1145, 31, 47, "Input"],
Cell[CellGroupData[{
Cell[938822, 17892, 184, 3, 27, "Input"],
Cell[939009, 17897, 15270, 499, 265, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[954328, 18402, 123, 1, 37, "Section"],
Cell[CellGroupData[{
Cell[954476, 18407, 4363, 118, 73, "Input"],
Cell[958842, 18527, 6749, 197, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[965628, 18729, 801, 23, 39, "Input"],
Cell[966432, 18754, 492, 16, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[966961, 18775, 158, 5, 27, "Input"],
Cell[967122, 18782, 6273, 182, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[973432, 18969, 600, 18, 29, "Input"],
Cell[974035, 18989, 848, 28, 33, "Output"]
}, Open  ]],
Cell[974898, 19020, 647, 19, 27, "Input"],
Cell[975548, 19041, 906, 27, 47, "Input"],
Cell[CellGroupData[{
Cell[976479, 19072, 327, 8, 50, "Input"],
Cell[976809, 19082, 14624, 478, 222, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[991482, 19566, 98, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[991605, 19571, 1376, 46, 79, "Input"],
Cell[992984, 19619, 247, 7, 30, "Output"],
Cell[993234, 19628, 247, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[993518, 19640, 416, 10, 27, "Input"],
Cell[993937, 19652, 363, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[994337, 19667, 194, 5, 29, "Input"],
Cell[994534, 19674, 265, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[994836, 19686, 428, 12, 27, "Input"],
Cell[995267, 19700, 200, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[995504, 19710, 321, 7, 27, "Input"],
Cell[995828, 19719, 267, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[996132, 19729, 320, 7, 27, "Input"],
Cell[996455, 19738, 286, 6, 27, "Output"]
}, Open  ]],
Cell[996756, 19747, 1017, 29, 49, "Input"],
Cell[997776, 19778, 483, 12, 27, "Input"],
Cell[CellGroupData[{
Cell[998284, 19794, 204, 4, 27, "Input"],
Cell[998491, 19800, 194, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[998722, 19809, 393, 9, 27, "Input"],
Cell[999118, 19820, 214, 5, 27, "Output"]
}, Open  ]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
