(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    583989,      12760]
NotebookOptionsPosition[    570757,      12331]
NotebookOutlinePosition[    571096,      12346]
CellTagsIndexPosition[    571053,      12343]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ChebyshevT", "[", 
   RowBox[{"27", ",", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.445628935096191*^9, 3.44562894061461*^9}, {
  3.445628986374013*^9, 3.445628996614316*^9}, {3.445629032827803*^9, 
  3.445629042408303*^9}, {3.445629174236144*^9, 3.445629194204489*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Sin", "[", 
   RowBox[{"27", " ", "\[Theta]"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.445628999187977*^9, 3.445629043196523*^9, {3.445629174688014*^9, 
   3.4456291946672*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Sin", "[", 
   RowBox[{"7", "\[Theta]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.445629004752862*^9, 3.445629028600183*^9}}],

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"7", " ", "\[Theta]"}], "]"}]], "Output",
 CellChangeTimes->{{3.445629015207516*^9, 3.445629029385994*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"LegendreP", "[", 
   RowBox[{"3", ",", " ", "2", ",", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.445629241419864*^9, 3.445629247193019*^9}, {
  3.445629284681457*^9, 3.445629314821322*^9}}],

Cell[BoxData[
 RowBox[{"15", " ", 
  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.445629315803514*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "FourierSeries`"}]], "Input",
 CellID->892036778],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", 
  RowBox[{"LegendreP", "[", 
   RowBox[{"4", ",", " ", "4", ",", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.445860803327014*^9, 3.445860844649209*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["105", "8"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "\[Theta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.445860822744751*^9, 3.445860846654381*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   RowBox[{"LegendreP", "[", 
    RowBox[{"5", ",", " ", "3", ",", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], ",", 
   RowBox[{"\[Theta]", ">", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.445800434470006*^9, 3.445800532230233*^9, {3.445800957952153*^9, 
   3.445801039334736*^9}, {3.445801070826923*^9, 3.445801073751837*^9}, {
   3.445801362780586*^9, 3.445801382568759*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["105", "2"], " ", 
  SqrtBox[
   RowBox[{"1", "-", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"9", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.445800435067679*^9, 3.445800533438719*^9, {3.445800961960335*^9, 
   3.445800983337316*^9}, {3.445801013841738*^9, 3.445801040271652*^9}, 
   3.445801074725265*^9, {3.445801366767778*^9, 3.445801383577436*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"LegendreP", "[", 
   RowBox[{"20", ",", " ", "13", ",", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.44580039002331*^9, 3.445800419763473*^9}, 
   3.445800521832263*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2110886623587616875", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"8091", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"5481", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{"2331", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"5", " ", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{"481", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"7", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "12"], " ", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}], "1024"]}]], "Output",
 CellChangeTimes->{
  3.445800360569915*^9, {3.445800403526075*^9, 3.445800420821581*^9}, 
   3.445800523340982*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{"TrigReduce", "[", 
    RowBox[{"[", 
     RowBox[{"LegendreP", "[", 
      RowBox[{"20", ",", " ", "19", ",", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}], 
        RowBox[{"1", "/", "2"}]]}], "]"}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.445800314675934*^9, 3.445800344983389*^9}, {
  3.445800897003042*^9, 3.445800898585011*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "5.931923895605971`*^22"}], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}], "+", 
  RowBox[{"1.0677463012090749`*^23", " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2.`", " ", "\[Theta]"}], "]"}], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}], "-", 
  RowBox[{"7.765427645156908`*^22", " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4.`", " ", "\[Theta]"}], "]"}], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}], "+", 
  RowBox[{"4.529832793008196`*^22", " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"6.`", " ", "\[Theta]"}], "]"}], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}], "-", 
  RowBox[{"2.0906920583114753`*^22", " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"8.`", " ", "\[Theta]"}], "]"}], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}], "+", 
  RowBox[{"7.466757351112411`*^21", " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"10.`", " ", "\[Theta]"}], "]"}], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}], "-", 
  RowBox[{"1.9911352936299763`*^21", " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"12.`", " ", "\[Theta]"}], "]"}], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}], "+", 
  RowBox[{"3.733378675556206`*^20", " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"14.`", " ", "\[Theta]"}], "]"}], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}], "-", 
  RowBox[{"4.392210206536712`*^19", " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"16.`", " ", "\[Theta]"}], "]"}], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}], "+", 
  RowBox[{"2.4401167814092846`*^18", " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"18.`", " ", "\[Theta]"}], "]"}], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]}]], "Output",
 CellChangeTimes->{3.445800345741137*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{"TrigReduce", "[", 
    RowBox[{"LegendreP", "[", 
     RowBox[{"20", ",", " ", "20", ",", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4456311527365522`*^9, 3.44563117268856*^9}, {
  3.445631357011196*^9, 3.445631359937262*^9}, {3.445631717338843*^9, 
  3.445631732209479*^9}, {3.445799695188446*^9, 3.445799743527265*^9}, {
  3.445799940679094*^9, 3.44580004382761*^9}, {3.445800267926498*^9, 
  3.445800278645967*^9}}],

Cell[BoxData[
 RowBox[{"5.635327700825673`*^22", "-", 
  RowBox[{"1.0246050365137587`*^23", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2.`", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{"7.68453777385319`*^22", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4.`", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{"4.728946322371194`*^22", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"6.`", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{"2.364473161185597`*^22", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"8.`", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{"9.457892644742387`*^21", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"10.`", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{"2.9555914514819963`*^21", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"12.`", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{"6.954332827016461`*^20", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"14.`", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{"1.1590554711694103`*^20", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"16.`", " ", "\[Theta]"}], "]"}]}], "-", 
  RowBox[{"1.2200583907046425`*^19", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"18.`", " ", "\[Theta]"}], "]"}]}], "+", 
  RowBox[{"6.100291953523212`*^17", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"20.`", " ", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.445629812121774*^9, {3.445631158941336*^9, 3.445631174016886*^9}, 
   3.445631361076033*^9, {3.445631718381488*^9, 3.445631732571255*^9}, {
   3.445799699796151*^9, 3.445799744024524*^9}, {3.445799948852924*^9, 
   3.445799967770903*^9}, {3.445800004331223*^9, 3.445800044517674*^9}, {
   3.445800274512276*^9, 3.445800279772415*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierTrigSeries", "[", 
  RowBox[{
   RowBox[{"LegendreP", "[", 
    RowBox[{"3", ",", " ", "2", ",", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], ",", "t", ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.445629545100907*^9, 3.445629561434901*^9}, {
  3.445629663168139*^9, 3.445629677229575*^9}, {3.44562975131215*^9, 
  3.445629792829724*^9}},
 CellID->136445987],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "15"}], " ", 
  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.445629515444863*^9, 3.44562956268427*^9}, 
   3.445629679869848*^9, {3.445629751968469*^9, 3.445629760568402*^9}, 
   3.445629794907516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "14.327"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"2", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "3"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["x2", "2"], ")"}], 
       RowBox[{"3", "/", "2"}]]}], "-", 
     RowBox[{"2", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["x2", "2"], ")"}], 
       RowBox[{"1", "/", "2"}]]}], "+", 
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x2", "/", "2"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "+", "1"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x2", "/", "2"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "-", "1"}]], "]"}]}], ")"}]}], "-", 
  RowBox[{"2", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "3"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["x1", "2"], ")"}], 
       RowBox[{"3", "/", "2"}]]}], "-", 
     RowBox[{"2", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["x1", "2"], ")"}], 
       RowBox[{"1", "/", "2"}]]}], "+", 
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x1", "/", "2"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "+", "1"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x1", "/", "2"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "-", "1"}]], "]"}]}], ")"}]}]}]}], "Input",\

 CellChangeTimes->{{3.445653071451479*^9, 3.445653266043239*^9}}],

Cell[BoxData["1338.2327580144174`"], "Output",
 CellChangeTimes->{3.44565326737093*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LegendreP", "[", 
   RowBox[{"1", ",", "1", ",", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "*", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]]}], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{3.445802248859921*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", "-", 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"j", ",", "0"}], "]"}]}], "\[Pi]"], 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LegendreP", "[", 
         RowBox[{"3", ",", "0", ",", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"j", " ", "\[Theta]"}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
      "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.445711036879391*^9, 3.445711082384294*^9}, {
   3.445711487095994*^9, 3.445711587348022*^9}, {3.445711656599783*^9, 
   3.445711670082853*^9}, 3.445711732758262*^9, {3.445711946739974*^9, 
   3.445712038009984*^9}, {3.445712080411875*^9, 3.445712098425819*^9}, {
   3.445712135085356*^9, 3.445712177606972*^9}, {3.44571405739505*^9, 
   3.445714065471827*^9}, {3.445714123569381*^9, 3.445714129757745*^9}, {
   3.445714256385956*^9, 3.445714264766791*^9}, 3.445714445138985*^9, {
   3.44579451992381*^9, 3.44579453582449*^9}, {3.445796320539719*^9, 
   3.44579632298151*^9}, {3.445796440797765*^9, 3.445796446485937*^9}, {
   3.445796648287475*^9, 3.445796667654862*^9}, {3.445796926637771*^9, 
   3.445796928295516*^9}, {3.445797061755935*^9, 3.445797063289133*^9}, {
   3.445799488361318*^9, 3.445799490963224*^9}, {3.445799560907748*^9, 
   3.44579960491719*^9}, {3.44579963722466*^9, 3.445799639252457*^9}, {
   3.445802172977314*^9, 3.44580223365091*^9}, {3.445802270738613*^9, 
   3.445802303612966*^9}, {3.445804508827788*^9, 3.445804511175698*^9}, {
   3.445804622365279*^9, 3.445804622823642*^9}, {3.445804924697081*^9, 
   3.445804925079514*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.375`", ",", "0.`", ",", "0.625`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.445711088505894*^9, {3.445711543708126*^9, 3.445711589197889*^9}, {
   3.445711664020266*^9, 3.445711670614791*^9}, {3.445711990428638*^9, 
   3.445712043758256*^9}, {3.445712082339884*^9, 3.44571210152274*^9}, {
   3.445712138036386*^9, 3.445712180229732*^9}, 3.44571406638426*^9, 
   3.445714266233769*^9, 3.445714451102886*^9, 3.445794537556373*^9, 
   3.445796324021396*^9, 3.445796447960762*^9, {3.445796653504368*^9, 
   3.445796670573259*^9}, 3.445796931419305*^9, 3.445797064997057*^9, 
   3.445799496580791*^9, {3.445799582384415*^9, 3.445799610865235*^9}, 
   3.445799643412341*^9, {3.445802178202536*^9, 3.445802239886049*^9}, {
   3.445802274699451*^9, 3.44580230521748*^9}, 3.445804513276293*^9, 
   3.445804927918572*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      FractionBox["2", "\[Pi]"], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"3", ",", "1", ",", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"j", " ", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.445714450505455*^9, {3.445804532969532*^9, 3.445804538008946*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"-", "0.375`"}], ",", "0.`", ",", 
   RowBox[{"-", "1.875`"}], ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.445804539335905*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["2", "\[Pi]"], 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"LegendreP", "[", 
      RowBox[{"3", ",", " ", "2", ",", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"1", " ", "\[Theta]"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.445713983021562*^9, 3.445714048175041*^9}}],

Cell[BoxData[
 FractionBox["15", "4"]], "Output",
 CellChangeTimes->{{3.445714024025509*^9, 3.445714051351133*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"LegendreP", "[", 
      RowBox[{"4", ",", " ", "m", ",", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"m", ",", " ", "0", ",", " ", "3"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.445729999757019*^9, 3.445730084702642*^9}, 
   3.445730186491954*^9, {3.445730389726285*^9, 3.445730442638646*^9}, {
   3.445731414594551*^9, 3.445731415613029*^9}, 3.445731506272802*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
gyVMaBCVN+eebjwP2X1zen42NOAr1DpteHoejm8opg150uDQZ+sW8rl5aK8L
P7IUQIO7xX6H+92I9++vxD+/QwO28kKt0IB5OBhqwBP1lAaZgqS0lVvzkKl1
0OjlSxpYnHYX97s3D4NF3Hm73tFgMaP61sTDeQiw16FAAQ1ezsr+c30+D+ta
d5lUldHAxCDwzJ9X83BruVu+upoG0zHtP2zfEfF+aruyv4EGBtsjM4+VzcOO
KPJEGoMGowF9lO/V86D26DMt+jcN4mr0wvQb58ELrPOmB2igI/F0ppg2D7YG
BedbRmjQf27q3O6eeTi0coC6dYKI//3RluzBeainiv1bnKKB5lo6Uvo3D735
3S8OztHglwlbzouFeaCZ8XTwLhLxJ9iul2ZbgNnAR3eMlmmgOlhwL46P0K6a
yasrNKDuFl0UFFsAjZ79MjvWaBBy+6JLmPQCpNgXzHYQWrG5isqyaQF89+3d
tkzopg2yBwNUFuB9nvTnJ4T2dw/4MKWxADBklpq9SgPZoja5S7oLMPfHb0SX
sF/DvSN64OACGHlTnxku0cDrRMTqGdMFyBI4VVozTwPKyz/unVYLMJD22LZy
hgblE7oMizMLMHy1LnzPJA1c9Z4crndegOdvOiyVxmlAuj9ZeNBrAY5KHW6J
HqJBUafJFuy/APNDJtJX+mjgqJgep31zAYzXFR1q/EX0x1VW9ryIBfAXEfB7
3UGDvIrTl7fFLkCr9LmqmWaiH0UKul8lLMDun7dPlNcS/WEvYrrh5QJov6Ua
c36lwdu3biWP3y7AgSmnxsoiGhxfqFQW/bgA5wN7edfe02DZcOPTyJIFIKc/
UfyYQfRDb+vV4B8LoJ9NrnsQR/TDDtW+2fYF2Dv5rKAgggbPg8MtvH4tgGl7
p9nJEBqMUXR3nGMugGNGxTWSE1HfY2mDh0QXoUtKJuL0DqK+iSzWFesWofNj
11cnWaK+w6eq9skvQs6xkC9MERrsuCucqrprEdRePEFBE1RoKvE/LX5iEUy+
BgaFv6GCP1/r9//sFsG/0m04Mp4KsjbbtbmdFsGeV6NNkDjPXlO/xRd9F2Fv
r3RG/CkqiCobN3Q/WQSNzRcLMTsVBriTRWtSFmHD2av89uPtUNQ/eTw3YxEe
ehXoRXe0w/kXCYwbnxahplSw6v3bdvhEGR6U61iE6+z+h6ZN2sGeO4L9vOQS
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
GR8mKIbkNkrEDJ2lwbMPXkfsyWKo6fKh2DlVGnAJm89ZSoohvluB5gpyNPBy
2/nq8DoxlPf4WVI3iaif3OSKxnoxNNhuwOCbocJk1JX3/JvF0PKeX2K7PlIJ
/ra0Z1UUQ9dYetyGU6lQc1CDf05JDH3aUn9ZgzjPicvT53tVCP+3q7/eJM7/
ITdfymcNMfTScJ8p3wYqfKiyqsrWFEOjG+6MneGlwgY5Le9X2mIo6tuR9iPT
7TBFm6t7oCOGlKV0x37XtBP5v3bdyYDw/8Iia+OldpiWDRoQO07s91LPO/XU
NjgTZPuQ10oMTVcPh/OHtUEtTQetWYshqmaS5o2LbZActfJ0+LQYUtFNGtLb
1QZHlkOOfjknhhJGXJQ3lrXCC9rNjx5XxJD4v13+P7+0wECVWnfUVTF0fOZr
ID2xBVQ+dvPm+ImhwNVNF9yvtUBBtO4ZZqAYGt+61ma6owXqDy/weoWKIRHj
ETGF+GaYL/Y6c/mRGPr8Wce20KwJTFPO8PkUiqEswSsXOlZrIS5KaHfcZzG0
g+9y2ERSLXQGlZ75WCyGvkS/Yzrp1cL5k9L501gMec1Z2foGfodrJNqZqzVi
yKmnqddq/Bu8CjXN9+0UQ3GnDwj/+VQJiy66DteWxFC823FyY3cxHClWRldX
xNCvZxzb7gkVwzNBiuzlNeJ9M9aslzpFoJM32e3CLo56r69R5+M/QchS+hkb
fnGkeqWv9blBPrBHkc5oSYujl84PAvcKvQOBD3/tZvaKo4zptsamWy6wfiXm
9OUAcSTwT6ncmb0YH+o9+vlxkDjqjGexVPhXjH2+8UqWhYgj328iHT6/SnBt
zM0WvtviqNxES7WqsAz7brl8+NU9caT3aNPXg+pfcNMxMy3ac3EU/HJsQrq5
Et9KFRLTxeKoWGh5w/mqOvwurNbr3BdxlOf3SPazWj3ucL/bEPFVHMUmb5sP
f1aPVbVWI6jfxNGledaoB54/MKNujMWrSRy5ib+7PyPSiDVm6sdTf4sjSedA
nnvSzXjA6F4tDwcZfZSO97NlacOOxg6ym7nIaE7PyS5HuQ13me723c9DRmMe
ey4kH2/DbSe65QIEyMh+RGXOIr0NV5zbdW1EnIwM/xszGDNqx4nXGYoNm8nI
N2qT0PqrVEy5nRs8rEhGarYr7U1PqDju7p1WLmUyat71eZpUQsyb/+24Dqpk
9JDtZIUeKw37P7tNzdUko0ldYrC+S8PHC7fdeWhERiT0eNO+ax24qYiFkXOY
jCze3c7zetSBjcva1eqNyeiZ6Pt0xfcdWL/q+k8OMzKafcLVKvG3A6u1tu7y
tSG0oO9UPzFvZ1EzImJPkdH76lRv0oVOrEgP7s62JSPvadP0oqBOvOG34r2/
DmT0K7XkZmBmJxZgBvbauJLRIdOjWVlrnTh80kz76kUyetLrde2VGB2zz26O
irlERlbfvtFIinS8uNy4p/YyGRWFHv1tZkLHviyvHwxcISP5uRH7jfZ0/I89
oJ/Nl4yWvqaSHD0JnubbFLMvgIx+8gsy9kfT8XmhhQHrIDKyjuJu7yJ4pVu0
QccnhEz08LvGkWw6plL8B7NukRFLOOPt6To6Npc5qvc9lIw0jTvvlHTQcf1G
+bj+u2S06dpV8//66fjrlnrYcI+MCs5pfw9aIfgpqvuIxH9klBwoM9HNzcBN
M5MnhB6QUeWcpVSlKANb23Gd5Yoho/pfqUNK0gz8q3Kd+2osGfFQs1mFNhH8
qbLdbzaOjL6VsvBcUWHgkYfo1ng8GR0x5HplrcHA847OT34lkFHO8fMGSfoM
HFIb8JL6nIzGZTe8WDvEwJzqUdkNSWRkIGpu0E3w+/2nLz5Xp5BRQvLCLx2C
30ms+ZVlqWTkucC6iULw+xOXmsaCV2Ske/ZAjRfB7xubGPTsNDI6FR52y5Dg
9zQtZn9aBhld+h3B/5Tgd5Vktn9JmWR0dmR+vQvB73lcEsvxWWTU4OPn+4Hg
5z0eW7kfZBP1pSW2BhB8Xd6uQwrLJaM41aWZUoK/DXXN1l/PI/R1iZQggs9/
vDqn5PeRjA788YwvIPRxAb9dngVkdOzFzeSLhKZfidRz/kRGkYZfbj8j1p9l
JB4+U0RGuz+kCBoS9gf13x+3LiGjCLkHvBcJ/x6ZlWeOlRHxblo8yEfsb0a0
w82onIzuJ5s+VCD2H3Rt5CpUkBFH/sLXAoLf2X6v3tCqJM5DtmvWV4LfIw6R
7u+oJqOgX0IKR2wYWCR382PFGjIy9bFlOWLJwPGSe1I31pIRt/n3DV+PMrDM
dZN3kvVkNPyj6VS+EQO/HDjzSbiBqE/wVKzsfgZWNr3ylbuJjPL6C9M59jJw
bv7dhrVmMtq4423gWXUG1lqf0DnXSsTbdHZKU5mBy0Lf9THbychf1X8mVI6B
6yzbFrs7yahl0kE3Uojg/eK/nB0MMnITfHpqPwcDd8gviTR1kVH/yZVcrwU6
Hvgnp1j+m4zoLmENWr107H5yt/qnP2R0MN85uJHg+anyQ7q5/WS0RXxYo7uG
jlmiPS1ThshoVaDhpRPB83fnbtk/GSGjplZjy19JdCx4Jt41eoyMtONeLf14
QMdSqqXXb/wjI2Seq0v2ouPd9XxZDgtk5Kqau9VAmY5Ldm0otFkiI+VZRY0g
STrWf7azwmyFuH/sfAJUOOjYzM2mA7FKILZXouyzjE7sxpPGIccrgXpGJa7s
uNOJ69jC/zvAL4GatNn/aLh3YpUVVwknQQnkoHQp5ZlFJ2b+2670VlQC+Ytf
zf9vfSf2YeQb75aSQBuuDFbwZnXg9vbHbdYyEqjseADnxqgOrNl0zS5ggwQK
F7ih/9izA89X6npieQkUJTFb+F6tAwdnV8Ue3iaBYvZvuhX/loZ/ZaRLu2+X
QDKb1H3rwmkYvYx4FbVDAvH+e1d14QINsz05WtC6SwIZzV/5WSdDw3dvtnfa
6UgQPCBo7BJKxdHH+2W9j0qg7/ocBnpa7fif6bc3ccck0HjkUsQ8Xzu2OPxG
vdBcAtkVnWDZ+KsNk/UuGSyfkEAGF71i82614QTFGee79hJoywFpT/aqVvxq
kSMnwVMCvdN9+O2HagsuTNmk+zVGAsn11R/R0PqBN60ZBH55SOQnAzscq6zH
0XYXPuNHEkitO2t/lFk9dpFK213yVAI1izc2BTnVYak4RdX8FxKow9Ko+0D4
dxwUprwx/b0Esg383F/0qgrre6ix3muWQDvzzOe5nxThhn06VRaikkiNktt6
eOdriPx0dclQTBItnu6LmnmaDka7c3buI0ui41NTnoYcmVCuKp+ksE4S8Ryk
53/qyoYPcjx+07KSyLb48+tb5h/hCXebUryaJMLMoxdVtMvgXOvF+53HJJG/
jP6Ds1rfYd7tmaVDlCTytvDo5h2gwoOAl9zXoyWReH2XoC7BV1si3xYnxkqi
hiJt5pknNDjxpliBEU/4y+w29zzSAXl/GVMnkiVR2HoZs6h3neB+XibOOFcS
CavJJz/z+Ak9doltmi2S6OWlBxd1hnrA79Lr8BNtkujhrOn1G2K/QSj4nY4P
VRIFvfpGT9P9DbrPS1+9p0siC1v+2scxvyGB3uWj8kcScYzWH57X6oXj1hvI
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
u+WkVMFlmoRp1i5e5aJ5+P+/k38z6Rd+
     "]], LineBox[CompressedData["
1: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
Wj2E2fHeIp+VYqPQr5OnVMXHsHd93/SG4tiobqcLq1RxCgsplQ2qf8ZGq5Ru
dZSbT2HHn7tjH4lzXZEyuS7oyhRGspHceyuPjbiK7DJX2qYwi8ZzFmrEvvbi
FRs0uzeNsUoo7m7EuROwqyll38gMVpd0IsuSOAcdnd/br2bMYq+vvJs1WMtB
QRdlmS92zmLm2y0DhbQ56L/Dge2x92axFx9eRby34KDL/w2TNmvMYfuTjF5N
xnDQmYNfZyJs5rHwyvqu6085yPDXS4vAG/PYtyk7aYnXHCSO72lZeDuP7TEO
vLs9j4OYlf8t3Z6bx4yGc/yv/+KgwDJVR4HwBSxEzCib0c1Bura/rbalLWD4
jvqxlCFiXc5VYah6AUNRY6d/MDnIg/5CpkF0ETPYuu4AQ34JJb79eSYnZhEL
tMkJS1m7hNzN4o+NZC1ihTd3lehtXkISxfpWSfWL2PZWW11bwyXEr2P+6xqN
ieleiVdKcVhCB4K63UWCmZhvylprvQtL6Ibl2otrHzOx3LrsuCqvJXQtZMPp
7BwmtlW5TmDi+hLyavKJ1x1kYlsqeOe2JS8hj7Ij2+r3sTCPyTiNqowl5LrJ
2yTBjoW9l1nrYpO/hHZZAtbpw8I2u8GfaxVLSPvEw68fk1iYW1ytjHj9Etpx
7fIhi1wW9q7YxjK5dQkljeDbHSpZmBr98vfvw0sIVXHvqhtnYRf0eSk200vI
x87KcwsXG0s9E2c4zlpCZzjflbnF2ZhKflaOGG0ZlTjOHJ3TZmNrrUeeWasv
I9rLjN0i3mzsTOil1n+6y0i2Ia9z6Cobe5nBI34NLaNtn26VatxlY6tJayJe
H15GOLmdRklhYw4bskp1Ty6jS98Olt3PYmPPj6KlytPLSMr2qvutIja2Ktna
+5/3MurpNrD/Us/GbGuH310NXEaPGcXCi21sLGHBf5Aeuoy+vRi5/qyXjXUo
8Si/vrOMLJ+p+meMsDFZ01gb3bhl9FYj+a3KNBs7eVH5YeWzZVT791iHIJON
PUr48PNUyjKaHWbWnVxhY63lhrR/75fRnwNy5nQqB5OaqN57tWAZBcuKKmoJ
cLBH0djpYWwZufMXqKUKczBp7ewgi8pl1Ls1KvGOGLHe8vrhl/plFLqmxPyP
BLF++WG2StsyijGUFnsuTazLRdZE9yyjpKfMklpZDiZTHDTEHibi+X5B31We
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
     "]], 
    LineBox[CompressedData["
1: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
oMTeuIVMOra6Vyb63ocllBLS8jMtFfdDb9M1/29LyMlSPffGE9wPqir98z+W
UJvY2sukEDr23D/Y0rVrCX2ZOvbFIICO/aXpqp6ZWEIuMHtz7iyur3nysLHw
MnoQFqKxURXXN5btaLn4Mkqpn/HdJIvrO3qichdzGRnv+Pr6tRAdU70jmKCy
fRlVTP8oZExKYfUfvKxFjyyj17ZtwoupUpgXb9OX/2yWkXVD+J+RCClM9piy
Fve5ZYRWw7tO3JTCXGd+iy57LKPS+wcsio9LYcKb99d1Ry0jdV7scSCHFDbI
HSdcHb+MEm3fSXH8lcSKBqYPv09dRrJmeRi1VRJzeBnTeb1gGXmZPnm08FoS
K6CNDjPalhHzmYFq/D5JzJY7hOAgtoK6vh/naPeUwLYP/NxrKrOCVIcTmhOt
JTDip6331BVW0IXL+qZEJIFlBbQJcWmuoOzjYh+fckpgXPMK0slWK6hn7qBC
/z1x7G1/ldZwxAqy3qCfEX6Lht0ol/Crj11Be0b2GvLZ0zCr+EtlBUkraOzI
Uy8momFsJ6l7Q3JXkBVXZqIKfn4fajp7aPOPFeRneqDz61kxbPkj5yVn0VX0
htIGD1SpmHGc3qvJ8FVkHW7JtnxdBLtbXf/r5rNVNLLwr/KKuQhWNWVLoySu
ovPlEZQwughmaOD7n3buKopUeXMvu4CM6Y1ke95sXUVpX8WTP4wKYzrb5U1F
pdZQ5b0Qtse7hbCtn7nnNJPWUJVC1nSXFQ8mNlG7NzD/H5JaVlTn3jlTFvO5
iJ1wkQ2uK7UdJNtxw2TPe+8JZzZ4tqqZ+a2NG4yWk6c6XdngoxQ51PIgEWaV
Hv/O8WIDt4tXorP28IBZuNPHc8FsUKpzkvlShg84bKRu1KSwAU/1Yc6BOhI4
TfuzhQ+ywQ1KLftx/P5SznfVK2CUDcw9h2x/qooATd5x0nGcDexmcwWVz4tA
1VGrHv15NiBthPfbf4iAbIkKNsfFDsa0hoXyd6LQfLc78Lg8O+SpRvUcPkoF
HfqedVkHdui6Tsts8BYH45PN7vYX2KFi7vqZ6nRxOPzs/OArZ3ZYDs6tcfot
Dk7iod82XmOHZ0VdP3ONJCCG0vlM6Q47GK7PuOgLScKiwDUtrVR2KLSI8n0b
JgWcB4hvvd+yw5z2MWWpMikQevBMpvg9O/Qepw8o/5UCBd7yDbsL2aElK3dO
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
     "]], 
    LineBox[CompressedData["
1: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
BhM1e4j/AWVbsJc=
     "]], 
    LineBox[{{1.418886405787544, -15.345528889439755`}, {
     1.4231282797301492`, -14.949929719023254`}, {
     1.4383829896007918`, -13.501926317855148`}, {
     1.4688924093420768`, -10.516026996804634`}, {
     1.529911248824647, -4.280986735898256}, {1.662322812876145, 
     9.476865936665044}, {1.6642533005074198`, 9.670980276573614}, {
     1.6661837881386945`, 9.864736101415897}, {1.6700447634012443`, 
     10.25114381883791}, {1.677766713926344, 11.019345870124495`}, {
     1.6932106149765427`, 12.535731975596443`}, {1.7240984170769407`, 
     15.476213757634977`}, {1.7260289047082156`, 15.65543757055541}, {
     1.7279593923394905`, 15.834086514775338`}, {1.7318203676020403`, 
     16.18963446882456}, {1.7395423181271397`, 16.89355499653265}, {
     1.7549862191773387`, 18.27131504223927}, {1.7682345741297585`, 
     19.39705302772709}}], LineBox[CompressedData["
1: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
Wfn//+3/AFSumYc=
     "]], 
    LineBox[{{4.515203502961408, 19.39705302772709}, {4.54842510077751, 
     16.45876706875901}, {4.615319410089411, 10.033265253099218`}, {
     4.7402476730633065`, -2.9213809966255178`}, {
     4.742161412452412, -3.1214898621500446`}, {
     4.744075151841518, -3.3214844675888826`}, {
     4.747902630619728, -3.721101655959505}, {
     4.755557588176149, -4.518643606274413}, {
     4.770867503288993, -6.105329474747071}, {
     4.801487333514679, -9.232214302224282}, {
     4.803401072903784, -9.425083064465138}, {
     4.80531481229289, -9.617608369087847}, {
     4.8091422910711, -10.00160086073466}, {
     4.8167972486275215`, -10.765160154502354`}, {
     4.832107163740364, -12.273046054345759`}, {
     4.86272699396605, -15.199928632163571`}, {
     4.864287914851963, -15.345528889439755`}}], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->{739., Automatic},
  PlotRange->
   NCache[{{0, 2 Pi}, {-15.345528889439755`, 19.39705302772709}}, {{
     0, 6.283185307179586}, {-15.345528889439755`, 19.39705302772709}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.445730077877487*^9, 3.445730100848174*^9}, 
   3.445730188597285*^9, {3.445730398819803*^9, 3.445730444405996*^9}, 
   3.445731417377592*^9, 3.445731509055568*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzlvXfcbkV16P96Kgc1FuwkHnM1xdxrjeGqBEETwQ7KVeM1isQIKoKKDTtN
wa5YoilGk1hQSQBRaXKoIl1AiiBSz1EQhCMi0nx+8529vvtd+33nKefE+9fv
+Xx4D89+Zs8qs2bNajPz3J3f/OpX7b7zm1/zyp0ftt2eO7/h1a955Zsetu3r
9yyPlt5tbm7J1XNzdzvtYXP8/2huzj8PGpXP3NL6//Hp/2c0Or1+n6uNBm2G
P830/v+vGm3dPRtdeMG1/bO/iWdr164f3XjjrfOdvSd+OP+8ny5qfNNNt46u
vvqm+m2H8fCeEs2vvfbm0TcPv6h+ewl/l4zOPnttbfPeaPKvnz9zERTQ+c//
/GGGskn95x6jNWvWjHbZZRekpf7Ldz6/+c1vRi984QtHL3rRi0Z77LHH6DnP
ec7o3HPPXTYBuTPPuKY0+ek8cuXZlVfeOFpz3GXzzHh3/PDb345Ede7/xrN/
+ecz+k6379BcFT/dfPPNFcXy79yS+mxloerG0VOf+tR+vI499tjRwx/+8NL1
b8sb4/GEEw6QeDIOX//6+Yvx/MUvft2zTjwziwPPAOhnCX+WTcD9zjvvHF12
2WU97nfccUdtc+WVV07EPbOohU79+6744bLLbhidcPxPpuHe4vGKeHbLLbfU
Z9ddd12H13LQ+stGZwL4/L/MYzjA5owzrh6df/7PBo2//KUfjH7969unYdNx
ZPnoq1/9asWIz2c/+9nRtttuOzdJIlv4jeXWkd/50eiaa9YPGp988hWjH138
81nx23nnnUdveMMbRm984xtHb3vb20br169v4rdV9AHpsIBvL52G31e+/IMy
K+8Y4HdVmV5HH31pxq+b2MtGBx10UJ3MgWMI1ej1r3993/2KCahdfNF1o1MK
9Rm1sUObfxC1O++8a/SFfz2rhdptt9022nfffUcrV66cR235aPvttx898IEP
7P/bf//9J3IPwq+66qYBil/8wlmju+767WIUM1tbrH5eh2JL+W6VmkNV7uLQ
/7pg9Isbfj0bvMymGeEt7OLEEy4fXXLJzxfDy4oh0yczZoCX0bOLCy+8dvT9
U6+ajb7vlBm0bt0vp8FTe4CaS8DfxrOf/ezm0beOuHge3jvjh9tvv3P0H/9+
zqAxC+rpp109K7y1ZXIfdeQlgy5uv/2u0b998ezF8H7601+Ovv2tiweN6zJ6
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LegendreP", "[", 
  RowBox[{"8", ",", " ", "8", ",", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.44579701655392*^9, 3.445797018054764*^9}}],

Cell[BoxData[
 RowBox[{"2027025", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], ")"}], "4"]}]], "Output",\

 CellChangeTimes->{3.445733795913865*^9, 3.44579701865503*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["5", "2"]}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"7", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}]}], ")"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.445733824312175*^9, 3.445733847800429*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUWnk8VO8XHjN37NswTCGkvpFECpXkPUkbpY1UttImZMtS1rRQKiJUElqo
SGVLSe4lsmTLlj1kJ/s6M/jd31/zeT7vnXOe8zznPe99P5+70tb5yDkqhULZ
jVEo//+l4YKVf7UD9esu3c+3vJGV999A3jb5hzZocUXOvr6vD3H2R42zTRHO
6I3sZdcnX1/iPUy7uU8RAch8W2zyXE4G3rz7ZkFiRBgyA+UZ4vN3vN4mQvlZ
RDz6NjR7UuBjLX7EcXnz44gP6Jp+R+Cx+39x4S0Ij97zEZ2uYY5+XdONj31x
ZXQWfURCko8ONOPd+KdvDVkeBWlI4tOhy1vHe/CdRQmLcV8zkIxjbNruQ/24
VZ3Wg/HUbJS7x9rj58IwHj5hmREdgSPq7enqFdgkfl8qRo8QIVDo+XX8ew9N
4jVptxS0jxDoJE3jtFLsJG4xaNkj30IgI5WUp10bp3AnCyHXieF8xEid9XK2
nMYjt9vdfiJeiEJmPLvT4mbxpqajDqJmhUjnUMC5gz2zuLwnMrnxpBAdGCvc
GbJuDn/9Xpp5SakI/UsKi6/9NIfnKBTFg9YPdOwRYyiqZB7/w6OU3WdegtI7
g/36fnPw1XEiMZaxJYhH1dCpkcXF7XTnfX91lKAhPtX3ZuZcfMKt2uDrxVIk
UGYoO17HxbFu/8pQnzJ0fRdX9kHZAq76o6VHO74c/S58sfpJ3BLubFtckvy3
HOV8FTdtaVjCMxfTUxRUKpBz8K4zB/goxPbNIa4CaRWofd/mpd36FOLQmy0L
rQWVaMeZhCXptxRiW5GRoMHlaiSF0xhVrjyEeF1S1eaH1eh7K+8J6ds8RHcX
NWp9RjV6v0ZKWiGOhwilfFVYPlmN7ub5Fl4u5SG6tq3THnP7hWyVxLgrV1CJ
bKNgdk/EL5TeZT/qqEkl7p34i7ek/0IWL6VlvXZRCW2vp0bFE78QseQiVuJI
JW6nC52Kc6tBKcXzB80+Uwmr/Av/RUbUoLX5pV0RZVRiY/X3wTvpNWhEsv7D
/VYq0frPx8NjogaJej4WzlmiEhprh0P2u9UiJ9rdqD4DGtEQX57Fdq1DfT98
7S7k0oiU9yo+Y+F1qKAthWlTRiOufbsJvWl1SPqReoF4I41Y26L389d4HaIn
eng9n6ARvtKpHW9c69H4K5uuy6sx4vB/Aklx4fWI+0hx7eYNGLFG65xDZFo9
quu7sDVjG0ZUH14xEzBejzYMTajXH8aIVffvC5m7NqAnf9Wnc70xYu7pQPX+
8AYkItHAt/MmRpQn74o2SGtA0ld7xq7dxwjPkgVF9fEGpORs2LkqHiOMf5/o
XcX4jYhH1Z9vv8YIxd6slOWav5FanT5f4geMKKM56dBdf6PS0m1ZNBwj4iXK
OOwHv1H7ne//dv3ACPeVa/LHPv5G2LjCQVSBEStQu3Hr2G80mG9mZN6MERMH
dBk14o1o3+xwkUcHRvywjG4o3tCIairq1hv3YoSLt8npDJdGZDisHCEzjhFG
Tnpv+B80oqAbWzZwp8n6bFVHrT40othGPbtHbIzgmi3TyahsRETL643DixjR
sI/Xj3+kEQ3Ojt1mU+nEx+1T361EmpC6UuS5Al46EaLZJZih1oT0exiFOwXp
xNn/qg/z729CyhdHE/xF6MT25XmPrRyaEM3r07ybOJ2QFnn3Jz2kCU1dmS5X
lKQTY5SYNfzJTWiDJ5K5LUUnyqaCL1mVNiE9IbWuNyw68arfIzO9vwmttDZf
c2M5nfBvPcPh429GfGK2A9KydMK8+rCBlXIzSlk9rn5Wjk5sKER30nc3I4Pp
VI79Cjoh+Hl9Nd/5ZvSf0G6zdfJ0ojtFlmV1qxnN0R0MEkmcFy9gnf6qGX33
qilrJPHjh7Ov+AqbEeRpzxaR2DW4Z8jybzPa23j4lyOJjXxqN6ZTW5Dj5r4z
FWT81c75V/mUWlDm/S85fWT+RdsPhOWOFuT3KKzrK8mv8dgzvvRTLSi4c+PA
Phk6kW5014TvWgvSv+vcFr6MTtzVvxplGd+COBiz6qE0qd/GC61peS3oQ9lY
5UEmndBfY7aKr70F3ZFpHCli0IllMjvtLRda0J/Xz3bMiNKJCRHNtDS5VmRk
JN3SIUQnEqeFkaVFKyrv9NLpwUi9Bti30rxbUep6kf+WKHTieFt/OW9MK6oI
SM2o5WKEcFHhybTGVoTvPyOVOokRvZ/Tn/POtSKUq7AifQQj8HcJ/RasNhQJ
WupuAxjhFunryXusDf30jO1Y1Y4R+2/bf7PwaENnxW7mSTWS+8n3OJYW2YYc
wwflv//CiKYzWhEWtW1IUG3D0KFCjIBNw6kfD7WjTeZHb+olYYSMcvMU3aUd
tf3gMRCNw4hJmZJtFmHtyJ5952VsFEYkUV+V0ivb0dRrw+nRGxghUmPRc9L4
D+JOT/h7WJF8i/apfbT/gwxitlA0j2IE8WXzZXrIH/TG1/1m8l5y/zyX5PlY
8gdlTtiZN27EiEufz4VSV3Wgr6WLSasxjFDfd1iRR6sDFYqKpBfP0IixJr30
JcMO9O1oNUVhgEa4cyQbuOc7kPTk1uChchrhrV+wYja5A+VrPzXBwmmEXlXq
h+mvHejXWttbhwNpxILNkx1T5R1oWkXQ0syVnE+BLufGRzpQd0yS+vVDNCKo
UD51aGMnGnvQFnlViEbsNRNEgzs7kXhp7b+b81RCoHe6ut+0E/Xweobv6yPn
LV/FVI9nJxIoql1NKaASD4189DpyOhF/9r80NXcqkVD9+2edQRfaXmHZ2PiT
h7A9/d2q9mgX6kuo6E/M4iFWTbwf/XW2C31C6Vc2xvMQSZJBklVBXSjqyfuy
u+T5kHpMy6K0rAtZnbW0MpbkIXJaHwx+O/IX6fyrLLc1phB1/fsEXtt2o8zi
ZyhKaQEffaKy64ZbN+JvOvamdIiLCxrzBdpc70YJ7v/Fvcnk4pBaOMd60Y1C
TS9/uriLi6e4ov7bnd3o3g0ikHGGg19naxXbn+pBj9ccu1oQNo9rCCveUrfu
RTuXx13ckjWNh2jMUD6d6EdyilvuelQN4t5e+9b12vejuts1PDm6g/hFPNZM
2rcf9Q2+eVCWOIDvPbgz2TOuH20L3Vdw0qcf53N+cHTz3370Sunxyhure/Gb
71WTPjsOILXnIRePuHbi/uttjL8GDCLOli89P8SqcSePdI+hB4PIr34oJrG4
Arf6Rk+QfTGIeG/8qNjj8hPXO/BuyqdwEAltfq987PsPnOM4/0xPYAgtnQl6
FPI3B7/y7uHYt4ghRPFp/Ksl+wq5riuJIhKHUUaYi/Cp63Wo+1z3tYRPwyjx
ZCzPueh6dCyB4niteBgFFK0oDH7bgHSlthrAwDBSMdKUZFY0IurS2xFc7R8q
2Pr73g/+NhRRc3cPnvEP/cr0P7L/dRdKv3pw/lv+CHowNin8zHsQrc506H5W
M4LaMrPqVScGUfRIcJXf3xFUZX1TlXpxCHmfIRK300fRMSeTp7dMh5HBAc0j
3/aOouGcQ0ffKo2gWkXJlNyqUWRR/+9ve/kYYp9xeN/mNIYCLt+TPj45iU4x
Jq/keo6hue49yvXyU6goz3vnU/8x9Dv+Qsrgvin0YHlI4/HQMXT6IS25NW4K
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
XG5Kgq2c+JT7uQl87quLjWuUJPz0p2+xbJ3E9ZMVQsIfScKJec+AKwJT+I3H
lZlpTyTB91ntxHqdKVzUQ01w4pkk4Ld50k6FTuGr1Psz3ZIkoTfkOSrfOo2b
JNgIumdLwsJceMaszwweGSqqHflFEiIpoqF6L2bwJt9vNplfyfyCK4uFS2bw
sydks8i3TOipvLB2v8QsflXit41HiSS83u44veH5LJ5HCQqJKpME96gabs73
WRwb1crKKpeETvafnWU9s3jozwjBmWpJKPazSPFQmcNf3TTJ8myShBfBtqzh
13P4oNvCn+gWSdiTRjG892MO1zj9TjC7TRLYBXsV33XP4TnbBU/NdkrCjZdf
je0U5vGqmSLBK4OSsMMqMZUInceZPe7aj4cl4U3v96D9b+fxk7WrTn0eIfWv
ZEgd/T6Pd38IzJqbkIRB5Y88ldPzONtu+6mrHEmoXW/j5WDKxo2+qoLHgiSo
b570NrzIxp+KLFN0XZIErf3qsYl+bFwvfeKPHY0Jq+5pRy++YuP+nNc2x4WY
IPp8vT1lhI1XHohCpiJMmDtmdlBsiY0rJFxXOCTGhMC4CzteinFwwtDqzx5J
JnxLru4/rsHBaaESNptlmSB80549bsfBTTuW9DetYAJz2+yIgicHf7Xxn7yG
AhPWrf5mWX2dg+/+Xdy+ZhUTJoN/B2THcPDotVl5Sv8xYXehwpt/iRy8z+dF
nLwyE86L3dVI/MjBbyv6WUuvY0LWkXrzR4UcvNHNXl9iPROQfLHPrwoOvrbI
XF5UgwkfPtPo9xo4uDdr16KAJhOSS9fk/Gjn4GUXN7bTNzHBRLj+TGAvB5fJ
Vcjj0WbCR/St/Os/Du4gKhK3oEPyE3uS7zHFwXNPsf3mtzDh5cR6xgc2BxfO
6LOa1mVCNq/JvQsULm5Jr98+rseEnNZGejydi6eaF6z4p8+ERwa5R8wEufji
2w8L/cAED+r0vhBRLm7CjW3rNmCCUUxY4XYJLh5nEvKtw5AJ6kNvnjlLcfHR
BK9nrbuZ4NnhlK6wjIvD5Fm/xr1MeC+6suuADBd/sOuIVZ0RE04YMUTZsly8
4xHaXr2fCcd0Xi3///cJmoNqK8pNmKBfdnjwJ4mv68ksFB8i16sTL4yTuCaU
r+37ESactgCfSBIrdU7l4qZMWKbVIJ4lx8Uvb+qK/XqMCZf1NaWPkvELb1X5
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
tkAMrsIHx9eod6a49IRntXn8BxlxqU4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, 2 Pi}, {-2.640065541380794, 2.6400639377449826`}}, {{
     0, 6.283185307179586}, {-2.640065541380794, 2.6400639377449826`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.44573384967802*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
4sWdWJ5jDDo7iR8OdL8EPXqGikeQZFP0zpPTe2DGM9VUDz3f2gU9vyR5IPQt
0vA59ZRJqfNlSc8+627tueHFF9+CQ5rRjcNBmYzceSG+8cY5CVEWfPRwDGQ8
KdIA1F8r0DOoUgUGlj/SAFkPIni6S2zuLBHqohPUY9ArZQ4pIToxV/I4kB/6
NkJeUvML/KnnbmpDm0/K1aPLc/tfdKw/s0o9v5Vq28GsnGyU/oSV35BKPU9X
tmCVjmzn3fKeO6Ze07N6vommBasUKeaJFxI+tn/WwMoVJLN6M2+aAknqwy0g
sPKnfIHk6kM9h5khbeybpv+TSUUvNmpEksQBhs9n1NMkwbUunbLWb5rC3o+C
RG95wt6PeESJ4Mwelzd+v5SR6xe4N71f+uOTJ/SIuX5aOjMlRBj0filt1tCp
j8j6rX7nBJC6qbze7tro90tPDkiRA5tgSSNgaDZgSm+AsQnvlzYh8UUkkPjb
ytTrz+hvyvulIEmbGXpSmo4OJJ5JoZ7f4RbcJ9PLyk0SyStZNMJ9XnSOUos+
ahpY/TggUT3cc9eTFXtYSbd5kgZW/c+nbjQrucaQhdWgB3n8npnECQaKCNHG
biKu69bDoD9Jlp8mmfFMH4Nh2iLXXM6ovsgbda6Y78ThvIoePVquOnh4Dax+
EpAg+SLzRmYCVhqLuOGw8kRLC1YK+wgbYdXJ2q+vsZJFYnqknk/6wVUkvaz8
AtDoEOgFQesxptrCjnPQgpVyHHjAkFD0yDLWhblMZoWRQz1n38DqlFw9yjbJ
+cRuwMpfU6KeL3G8ZzArxb4ou78MSD1YqUWYI+rJEWOfibNKnGCgJXMSd34x
FVHqxblMOoY13tLKUJqGtvw0EBspB6UbOCYBK4VgbCKknliTrth+MCulWPDC
IeFPW8JKYiNIpp58WHqtBSt5ZuTlPLvBlHRJLpM9WL785Vo9SQShNrA6NVeX
NcMRJHsg1ngjsNJLmBzCoJ7yY7gc7x3MSqrMOCfaX7ny1YrspblMqoyVo57q
kD1oYHVaIBii8zPPuKt4Om+FgJXCPnIs1NO6Av7n+4xV4gQD4T7xhNtT+E86
QUfWWAe7LJepvazw+ANHSjuUVj+n1cO2nJ5lrdnf/Jbkr5TB8Ljc6yr+7/+6
pXhiQTJrKeQ++aQJ+s5rRSH1M7J4Re3UUyenPtczxCW5oSvyv8lb1+ytfXZK
bpban9cXQ5Lp78P+Ov8+tNn/ApjfGOs=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
    RowBox[{"LegendreP", "[", 
     RowBox[{"5", ",", " ", "2", ",", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"4", "\[Theta]"}], "]"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.445733685768359*^9, 3.445733690711599*^9}, {
  3.445733768772214*^9, 3.445733783863182*^9}, {3.445734070763576*^9, 
  3.445734096809524*^9}, {3.445796752588303*^9, 3.445796760938737*^9}, {
  3.445888848473451*^9, 3.445888890516352*^9}, {3.445888934010093*^9, 
  3.445888962933972*^9}, {3.446032361233367*^9, 3.446032419840239*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
9eZ95nkzREzF0YnpZKUAPpz6LHt5jogNMP2XxJYlgK/aqJo/WiNiu4ct7nv4
0uevUAp7uEHE2IVkC/OeCOAR23eJOm4RsRZOIelCJwFcJWOuz4bIhPk3J77k
pd8XnmsJZkYcTJjw3X9xgjICODGAx0xpNxOWNeF2vfA3P27Qv6Umv4cJO99/
3d49kx+Pk5vee0SECdN6/fs/lm/0+6694t+BfUzYO4G5X098+HFf0SemAtJM
mJ66Vda6Nj/OmTlqsnCS7v/SvT7fMj7cmLlVlarChFUUXSjdm8WH/7hasmda
jQlLvCwr6B3Dh+usf+4dVmfCQiIgotSTDw/U0DdpOc+EqWUFjQke58P5On4Z
Z15nwp47M3q6hvHiezaCbjg+ZsLI4myy82d4cK3B//I/eTBh4y3ffDyleXDn
CjZSsScTpnEQIw3y8ODVQc+a2F8wYbr3MxQUBrhxlwOO2nFvmOj3E/Egvwc3
3qB7San9MxP2JMC/RC+FC38es4NXFTFh38/Y7xMa246Tz72pZmVixrwb0d09
cSy45QVzUQkWZkysIn7HMVsWvFfnuMtpVrq+1FtD4ygL3nKlT+wxJzMWcf4e
j/MvZrzkpvyjST5mjDjZYsvRyoRHPu0+WCfBjFmxPSgSYSXiBrnS3u/PMWMH
vWfjJdc2UUMBoTtVmxnjOyZlVflmE10obj1ae4EZ2z3ZRf4pvInUy572MF1i
xhyM/ogYwQY62tws72LEjD0qY+DU911DnLPug0Z3mLFMW7V4f6ll9OdALex9
w4ydqt4BQb+o6HxA33mBt8zYmui7bcrmVNSwMHdlxztmLDYNa7jIREX/SgXt
NoOZseaz+/eU/UdBy5bWof/CmbFGt/4psdppJBPFSP2SzIyR0d0Tu66PoQwW
gfWQ78xY9NZfe7m0UXTC/tC2dz+ZMU9hgX0Xto0iTdVLe55mMGOvg+WinuaN
IIvuSG2zAmZsl36VvuTBIRRCOhEjUk3Pv681lXavBwk/vfiDVMuMfbZWoEad
6kaxZLO8nXXMmLacaPUTji6Ulv2qbquRGTuiY+LRk96Oai63rPZ10uPnGVLu
CzYjQqDD5ehx5v9VcOfRWG5dAMAz9LzPW2nWlZSUXC6pNKDy7H0jU7qGyJWx
TMlwM3cVTcosSZEp85zMYwiFTGXKVCjT+4oyR7p8z/fnb6291tlnr733On8d
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
M80ImHTxlzt0IvXMEu2GWu23//9v8H/UK9nq
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, Pi}, {-5.865469628483235, 1.0739906391663685`}}, {{
     0, 3.141592653589793}, {-5.865469628483235, 1.0739906391663685`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.445733770220166*^9, 3.445733784926134*^9}, {
   3.445734075516045*^9, 3.445734097596771*^9}, {3.445796756696721*^9, 
   3.445796761838498*^9}, 3.445888892480375*^9, {3.445888944779283*^9, 
   3.445888964220033*^9}, {3.446032398663754*^9, 3.446032421046561*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzVnXmcVcWVx9tumsYli1EhEw2Q6GTUjCZmMTFGRZOoMxpNxlHHqInEJOoY
1zjqH/oZJSTuRtnEHdQg4IaKC5ssohhWUQFlkUVRWZpFQFmEmvurW9/b576u
d99tkk8+mff50M2tPvf8TlWdOnXq1Kl6P+5+2bm/vqD7Zeed3b3rMZd2v/jc
887+XdejL7o0KWrYoa5uh3Pr6uoWd63T/13y3/DDf87Tj/DQhv938L8a3ezZ
s91xxx3nLr74YnfiiSe6kSNHpnRnWLr27oADDnDDhw/3f3rvvffcrrvu6lav
Xu2fT09Jm/yvBjd37lzJ59asWVNXH8r22WcfN2LECP/k3/lZ+k7yp/R3+qn3
P8I7Y8eO9Xyam5uzss6dO7vx48f7J1/WmLXESVaKJjdp0iT/9oABA/yfp0yZ
4t/euHFjAG1oaUSkOtnyaK8a+Hf69OnjrrjiCveb3/xGtWtX43Xa9swzz3RT
p06FRiLVlX13/fr17rLLLnOXX365O/vss90JJ5wQffeH/mc7t3XrNtf/jlfc
ffdOcauaPxoRij/4YJ17YOA098AD0922be7EFGTXCKMfhDonVK5vn0lu/ryV
iRCb3DX/O8otX77+uSDX4sWr3R96vuA++mizmzrlXeHVWa6eKbzuv2+qmzNn
edYAmzZ94nrd/tKzoTM/+WSrHiV71sHTpr7rxo972z/9uLq0RwVyidGn96Tw
lHzq3SuTljwTnkeNmufeTPHpc9fz9y94YD0dXxtg6JDXfCOmzZmW9es7KaN7
OlIGlKBfeGFBLagjA7la/s7+fwkNnZY999xbbsmSNf7pqVD26qvvuZdfWpyj
u6PfKxm/42pDvTbz/VYs1NkPDJyeg7r+unFesyydGnX+/OayUPfeMyVr7/ah
7I9/GJvRDQtlopHyWrqPP96SiWShPBIA99w9OWPGi2NGz89kBGDy5Hd80zlv
HtKy0Nz+6d+r16VbIJ83d6UbGzoUFmq2QX9+NQelelBn6J5+ak5iOD8sCyWW
Yq2nDqHs7rtaavpEpPZAJePfPf7YG2WhLAugLPzjoez99z90w5+e4592jLz7
b9Whjgjk69ZtcoMfnpljoVEy8cWFOajnnn3Lvfvu2hydjAm6WAIqMQPu9dc/
yLHQ62Jjoe65e0r2LnQvTVzkZs9a1grKIwEw4P5pbvPmT/zTThFmjxUAfPjh
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
KPX/T+tSV7fD/wHSd+Y3\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"4", "\[Theta]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.445730722555615*^9, 3.445730760335342*^9}, {
   3.445731387041799*^9, 3.445731404560143*^9}, {3.445731457392429*^9, 
   3.445731494864306*^9}, {3.445731538274342*^9, 3.44573155819253*^9}, {
   3.445733532315737*^9, 3.445733559659145*^9}, {3.44573359745217*^9, 
   3.445733611109641*^9}, 3.445733658282148*^9, {3.445941477057205*^9, 
   3.445941500331027*^9}, {3.445941597423688*^9, 3.44594161309935*^9}, {
   3.44603216552381*^9, 3.44603218405689*^9}, {3.446033388529668*^9, 
   3.44603340563555*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
7LGTpiNTEec+BjU/hMXNxswX0dG9XUeEzEoIdnFSjzOSpaNomcRn3oVU/RQG
p7WW0hHDZ5Ot2zuCB0MupoutoqPeg0F3hxMItuWY2wmuoaPUHRMLjF4QXL5L
S2xsLR2Vt3tsu0rN56ip4ZNMZToKY0kEhlLzf7eTh8x7LTp6JZviYehHcGap
ZembTXSEdt4JSfYieJmCtlucDh2F6py9wKXWk6H6sa/3dOkowX//i8Vn/uX/
8tXTO6nrv02eEzMlWPT5YWUbAzpy3Xn8vI8hwZemNjea7aajA7P+nv6BCDbK
nNDQM6Ej+eNRR5ZoEjws79M934KOCJqZZbKQ4KM+NuGilnQkV9Lm/20eNb7q
ddGMFR19UjylrC5CcEzIdCTHmo6Wb01Vihnj4T1TfnuLTtCRmHVTzMJ6Hn5e
7591/iIdKYsvOuMdysPdpRv+hLjT0RO1Q4GWATysnPVHNM2Tju4cvKss4cPD
OaF6R8kVOvry33EtuTM8XGk0Lupyk44Wiu8JeryVh/n5LkddH9LRxH8mWiqt
XLzt1fLbYY/oyPCEjmPPTy6+8fh7VnokHUk/YPGulnLxPHfl2YNRdBQ1r3yl
SQoXr1BlZbkl0FHuKZXKA15cbBp7lNpX0JHF2gSp1bO5+EHIvI0P3tMRP6JL
u3KyDzf6FBzNyqcj975PMWbcPnzy8JLsYUzdz+B5Tfzow5el6o+6l9PRpPTU
irLwPhx30zTbo5GOwjdpn7OQ7sMTDnrHLk9S4y9dKKdSoBfvyVdC7tN0JMh8
r5RLOPjpXBl51xk6ytl5ellgKwfrZgz+caALoQyrk2X1+RzsN5l49JCYELpV
0sbXc+dgeojUUe0lQujZnPitKh1sPCezx3ZkixA6tcRfZFEKCy+dDrN29RZC
SV0/TE6PduHdzL3vH/kIIbnCaY2DLV340mfRRR/9hNCa8pBfSiVduCLMv3r2
DSFEQg1Lbod1YY/VrkZxd4QQ7dBJX/n1Xbhq337t+mdCSKDB/HTB4U58/cW8
+XpYCD3yvTNzP56Juw3vVDCEZqGhgVXeJ6Zb8KfVlbDsziy08+/b63udKrET
I0FIQVQYpd01C877EgG5sSv1PoUJo3bU9UkDquH7Vt3SA5IiaMx3n8f9M21w
+537pMF8ETRPeIeV/fU2MNyYpr5VWgQtttjooRjVBoWqitErZEXQwc90xsXq
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
8/8AsA9D3A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, Pi}, {-0.999999512844876, 0.9999999999999671}}, {{
     0, 3.141592653589793}, {-0.999999512844876, 0.9999999999999671}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.445730735170017*^9, 3.445730761001202*^9}, {
   3.445731387799465*^9, 3.445731405665502*^9}, {3.44573145802945*^9, 
   3.445731495244773*^9}, {3.445731541614502*^9, 3.445731559459245*^9}, {
   3.445733533237228*^9, 3.44573356053541*^9}, {3.445733601905483*^9, 
   3.445733612039606*^9}, 3.445733659855286*^9, {3.44594147776186*^9, 
   3.445941500753643*^9}, {3.445941607584182*^9, 3.445941613670417*^9}, {
   3.446032168644714*^9, 3.44603218458621*^9}, {3.446033388936228*^9, 
   3.446033410569813*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{"4", "+", "1"}]], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"0", "\[Theta]"}], "]"}]}], ",", "  ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.445730546269988*^9, 3.445730597026546*^9}, {
  3.445869143051303*^9, 3.445869205819579*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
U3n4Kptb2f8ADu2OZQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, Pi}, {-0.25880390675170234`, 0.258804158201641}}, {{
     0, 3.141592653589793}, {-0.25880390675170234`, 0.258804158201641}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.445730566539406*^9, 3.44573059775389*^9}, {
  3.445869167984462*^9, 3.445869207036178*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
YxX+D8Zbtns=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"j", " ", "\[Theta]"}], "]"}]}], ",", " ", "\[Theta]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.445817510902617*^9, 3.445817524802498*^9}, {
  3.445817598459743*^9, 3.445817600918305*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"j", " ", "\[Theta]"}], "]"}]}], "+", 
   RowBox[{"j", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"j", " ", "\[Theta]"}], "]"}]}]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["j", "2"]}]]], "Output",
 CellChangeTimes->{3.445817527635787*^9, 3.445817601810524*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
    RowBox[{"LegendreP", "[", 
     RowBox[{"6", ",", "4", ",", "  ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "\[Theta]"}], "]"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.445861327323973*^9, 3.445861549500642*^9}, {
   3.445884590456488*^9, 3.445884597780377*^9}, {3.445884751352466*^9, 
   3.445884831061327*^9}, {3.445884880217606*^9, 3.445884910921142*^9}, 
   3.445884974218663*^9, {3.445885047482275*^9, 3.445885066828038*^9}, {
   3.445888102452893*^9, 3.445888111295802*^9}, {3.445888244148371*^9, 
   3.44588825151031*^9}, {3.44588870711207*^9, 3.445888735063577*^9}, {
   3.446032672643584*^9, 3.446032701955118*^9}, {3.446032804867618*^9, 
   3.446032820703798*^9}, 3.446033077943099*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.445861356849094*^9, 3.445861376814394*^9}, {
   3.445861446545024*^9, 3.445861504790996*^9}, 3.445884600228048*^9, {
   3.445884752336517*^9, 3.445884831981409*^9}, {3.445884886693966*^9, 
   3.445884911543897*^9}, 3.445884975685763*^9, {3.445885058871415*^9, 
   3.445885067455604*^9}, 3.445888111908423*^9, {3.445888246244604*^9, 
   3.445888252604605*^9}, {3.445888725840959*^9, 3.445888735850134*^9}, {
   3.446032690140313*^9, 3.446032703931022*^9}, 3.446032828508561*^9, 
   3.446033078982598*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"LegendreP", "[", 
     RowBox[{"6", ",", "4", ",", "  ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "\[Theta]"}], "]"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData["96"], "Output",
 CellChangeTimes->{3.44603270945027*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{
      RowBox[{"2", "j"}], "+", "1"}]], 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "\[Theta]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "\[Element]", "Integers"}], ",", " ", 
      RowBox[{"j", "\[Element]", "Integers"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.445864161559653*^9, 3.445864219347597*^9}, {
  3.445864259300996*^9, 3.445864269879689*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"j", ">", 
    RowBox[{"-", "1"}]}], ",", "0", ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "\[Theta]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "j"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"j", "\[Element]", "Integers"}], "&&", 
       RowBox[{"n", "\[Element]", "Integers"}], "&&", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"-", "1"}]}]}]}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.445864273905719*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"3", "\[Theta]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.445864520986146*^9, 3.445864537414869*^9}, {
  3.445864805438526*^9, 3.445864805605326*^9}, {3.445941123489868*^9, 
  3.445941151850546*^9}, {3.446127534365031*^9, 3.446127548058*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.445864538384284*^9, 3.445864806415666*^9, {3.445941144324839*^9, 
   3.445941154155134*^9}, {3.446127540472003*^9, 3.446127548920867*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "2"}], "3"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["6.757", "2"], ")"}], 
       RowBox[{"3", "/", "2"}]]}], "-", 
     RowBox[{"2", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["6.757", "2"], ")"}], 
       RowBox[{"1", "/", "2"}]]}], "+", 
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"6.757", "/", "2"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "+", "1"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"6.757", "/", "2"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "-", "1"}]], "]"}]}], ")"}]}], "-", 
  RowBox[{"2", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "2"}], "3"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["200", "2"], ")"}], 
       RowBox[{"3", "/", "2"}]]}], "-", 
     RowBox[{"2", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["200", "2"], ")"}], 
       RowBox[{"1", "/", "2"}]]}], "+", 
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"200", "/", "2"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "+", "1"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"200", "/", "2"}], ")"}], 
         RowBox[{"1", "/", "2"}]], "-", "1"}]], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.445873169969353*^9, 3.445873340030697*^9}}],

Cell[BoxData["1359.7393787405604`"], "Output",
 CellChangeTimes->{3.445873345877921*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2000", "-", "6.757", "+", 
  RowBox[{"2", 
   RowBox[{"Log", "[", 
    FractionBox[
     RowBox[{"2000", "-", "2"}], 
     RowBox[{"6.757", "-", "2"}]], "]"}]}], "+", "1359.74"}]], "Input",
 CellChangeTimes->{{3.44587339362815*^9, 3.445873455353315*^9}}],

Cell[BoxData["3365.0635694835164`"], "Output",
 CellChangeTimes->{3.445873457494633*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", 
  RowBox[{
   RowBox[{"LegendreP", "[", 
    RowBox[{"0", ",", " ", "m", ",", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "+", 
   RowBox[{"LegendreP", "[", 
    RowBox[{"1", ",", " ", "m", ",", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "+", 
   RowBox[{"LegendreP", "[", 
    RowBox[{"2", ",", " ", "m", ",", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "+", 
   RowBox[{"LegendreP", "[", 
    RowBox[{"3", ",", " ", "m", ",", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "+", 
   RowBox[{"LegendreP", "[", 
    RowBox[{"4", ",", " ", "m", ",", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "+", 
   RowBox[{"LegendreP", "[", 
    RowBox[{"5", ",", " ", "m", ",", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.446062504696886*^9, 3.446062506062721*^9}, {
  3.446062537588201*^9, 3.446062556619669*^9}, {3.446062588977858*^9, 
  3.44606262780642*^9}, {3.446062665287158*^9, 3.44606267640811*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["105", "16"], " ", 
  RowBox[{"(", 
   RowBox[{"6", "+", 
    RowBox[{"18", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"8", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
    RowBox[{"27", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{"9", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.446062682077169*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Re", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"j", "/", "2"}]], 
        RowBox[{"m", "!"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", "m"}], "-", "1"}], ")"}], "!!"}], "\[Pi]"}], 
       RowBox[{
        SuperscriptBox["2", "m"], 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"m", "+", "j"}], "2"], ")"}], "!"}], 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"m", "-", "j"}], "2"], ")"}], "!"}]}]], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"m", ",", " ", "0", ",", " ", "8", ",", " ", "2"}], "}"}]}], 
     "]"}], "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{3.447956266376458*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.141592653589793`", "4.71238898038469`", "123.70021073509811`", 
      "10205.267385645593`", "1.7412737476757795`*^6"},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "2.356194490192345`"}], 
      RowBox[{"-", "82.46680715673207`"}], 
      RowBox[{"-", "7653.950539234195`"}], 
      RowBox[{"-", "1.3930189981406236`*^6"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "20.61670178918302`", "3061.580215693678`", 
      "696509.4990703118`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "510.26336928227965`"}], 
      RowBox[{"-", "199002.71402008907`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "24875.339252511134`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.447956267968834*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Re", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"2", "-", 
         RowBox[{"KroneckerDelta", "[", 
          RowBox[{"0", ",", " ", "j"}], "]"}]}], "\[Pi]"], 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"j", "/", "2"}]], 
         RowBox[{"m", "!"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "m"}], "-", "1"}], ")"}], "!!"}], "\[Pi]"}], 
        RowBox[{
         SuperscriptBox["2", "m"], 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"m", "+", "j"}], "2"], ")"}], "!"}], 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"m", "-", "j"}], "2"], ")"}], "!"}]}]]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"m", ",", " ", "0", ",", " ", "8", ",", " ", "2"}], "}"}]}], 
     "]"}], "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.447953638563894*^9, 3.447953725025144*^9}, {
  3.447953902596093*^9, 3.447953950220182*^9}, {3.447954076210874*^9, 
  3.447954081306639*^9}, {3.447954312243932*^9, 3.447954338718677*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "1.5`", "39.375`", "3248.4375`", "554264.6484375`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "1.5`"}], 
      RowBox[{"-", "52.5`"}], 
      RowBox[{"-", "4872.65625`"}], 
      RowBox[{"-", "886823.4375`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "13.125`", "1949.0625`", "443411.71875`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "324.84375`"}], 
      RowBox[{"-", "126689.0625`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "15836.1328125`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.447953730862642*^9, 3.447953907777463*^9, 3.447953953105523*^9, 
   3.447954082256364*^9, {3.447954316948031*^9, 3.4479543393346*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"0", ",", " ", "j"}], "]"}]}], "\[Pi]"], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"m", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"m", ",", " ", "0", ",", " ", "8", ",", " ", "2"}], "}"}]}], 
    "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.447953961789472*^9, 3.447953984123163*^9}, {
  3.447954344082692*^9, 3.447954344286557*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "1.5`", "39.375`", "3248.4375`", "554264.6484375`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "1.5`"}], 
      RowBox[{"-", "52.5`"}], 
      RowBox[{"-", "4872.65625`"}], 
      RowBox[{"-", "886823.4375`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "13.125`", "1949.0625`", "443411.71875`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "324.84375`"}], 
      RowBox[{"-", "126689.0625`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "15836.1328125`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.447953990941544*^9, 3.447954345898452*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{
      RowBox[{"2", "*", "n"}], "+", "1"}]], 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", "m"}], "+", "1"}], ")"}], "*", "\[Theta]"}], 
     "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.44802957592957*^9, 3.448029655481539*^9}, {
  3.448030460739711*^9, 3.448030469548063*^9}}],

Cell[BoxData["1.5707963267948983`"], "Output",
 CellChangeTimes->{{3.448029640343211*^9, 3.448029656030484*^9}, 
   3.44803047105658*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"m", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"m", ",", " ", "1", ",", " ", "8", ",", " ", "2"}], "}"}]}], 
     "]"}], ",", " ", "18"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.448028978779609*^9, 3.448029008662344*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {
      RowBox[{"-", "1.57079632679489661923132169164`17.999999999999996"}], 
      RowBox[{"-", "17.67145867644258696635236903095`18.000000000000004"}], 
      RowBox[{"-", "927.75158051323581573349937412467`17.999999999999996"}], 
      RowBox[{
      "-", "116084.91651171863144365410918735035`17.999999999999996"}]},
     {"0", "0", "0", "0"},
     {"0", "5.89048622548086232211745634365`18.", 
      "463.87579025661790786674968706234`17.999999999999996", 
      "69650.94990703117886619246551241021`18."},
     {"0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"-", "92.77515805132358157334993741246`18.000000000000004"}], 
      RowBox[{
      "-", "23216.98330234372628873082183747007`18.000000000000004"}]},
     {"0", "0", "0", "0"},
     {"0", "0", "0", 
      "3316.71190033481804124726026249572`17.999999999999996"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.448029015345275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LegendreP", "[", 
         RowBox[{"l", ",", "m", ",", "  ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
      "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.448031758165239*^9, 3.448031779361957*^9}, {
  3.448031827847493*^9, 3.448031841123169*^9}, {3.448032231275864*^9, 
  3.448032240452766*^9}, {3.448032889183975*^9, 3.448032890167716*^9}, {
  3.448033644077539*^9, 3.448033645352847*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {
      RowBox[{"-", "17.671458676442587`"}], "0.`", 
      RowBox[{"-", "30.925052683774528`"}], "0.`", 
      RowBox[{"-", "43.48835533655793`"}], "0.`"},
     {"0.`", 
      RowBox[{"-", "41.23340357836604`"}], "0.`", 
      RowBox[{"-", "69.58136853849268`"}], "0.`", 
      RowBox[{"-", "95.67438174042744`"}]},
     {"5.890486225480862`", "0.`", 
      RowBox[{"-", "67.0042808148448`"}], "0.`", 
      RowBox[{"-", "113.06972387505061`"}], "0.`"},
     {"0.`", "20.61670178918302`", "0.`", 
      RowBox[{"-", "92.77515805132357`"}], "0.`", 
      RowBox[{"-", "159.4573029007124`"}]},
     {"0.`", "0.`", "46.387579025661786`", "0.`", 
      RowBox[{"-", "116.93535546052243`"}], "0.`"},
     {"0.`", "0.`", "0.`", "85.04389488037995`", "0.`", 
      RowBox[{"-", "138.19632918061743`"}]},
     {"0.`", "0.`", "0.`", "0.`", "138.19632918061743`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "207.29449377092612`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.448031771898857*^9, 3.448031786618464*^9}, {
   3.448031832467465*^9, 3.448031841981975*^9}, 3.448032242458619*^9, 
   3.448032893444854*^9, 3.448033648730027*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"l", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], ",", " ", 
    "25"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.447969789102923*^9, 3.447969794341554*^9}, {
  3.44797049822368*^9, 3.447970507534511*^9}, {3.447970707583676*^9, 
  3.447970758474999*^9}, {3.447970940255329*^9, 3.447970940520839*^9}, {
  3.44797109363323*^9, 3.447971093900106*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", 
      "10205.26738564559397306849311537201015038767`25.", "0", 
      "58042.45825585931572182705459367830773032988`25."},
     {"0", "0", "0", "0", "0", "0", "0", 
      "16583.55950167409020623630131247951649437997`25.", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "7653.95053923419547980136983652900761279075`25."}], "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "29850.40710301336237122534236246312968988394`25."}], 
      "0"},
     {"0", "0", "0", "0", "0", "0", 
      "3061.5802156936781919205479346116030451163`25.", "0", 
      RowBox[{"-", "69650.94990703117886619246551241396927639586`25."}]},
     {"0", "0", "0", "0", "0", "0", "0", 
      "16583.55950167409020623630131247951649437997`25.", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "510.26336928227969865342465576860050751938`25."}], "0", 
      "53067.39040535708865995616419993445278201589`25."},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "3316.71190033481804124726026249590329887599`25."}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "12437.66962625556765467722598435963737078498`25."}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.447969797356291*^9, {3.447970501211253*^9, 3.447970510121703*^9}, 
   3.447970717374767*^9, {3.447970747875691*^9, 3.447970760568543*^9}, 
   3.447970942548018*^9, 3.44797109596921*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"A", "=", 
    RowBox[{"N", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"0", ",", " ", "j"}], "]"}]}], "\[Pi]"], 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"LegendreP", "[", 
            RowBox[{"l", ",", "m", ",", "  ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
         "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"l", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}]}], 
   ")"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.447948642632748*^9, 3.44794865332043*^9}, {
   3.447948701177007*^9, 3.447948702136135*^9}, {3.44794877649593*^9, 
   3.447948784278736*^9}, {3.447948954684696*^9, 3.447948964857037*^9}, {
   3.447949248859921*^9, 3.447949313276952*^9}, 3.447953698610674*^9, 
   3.447953771600685*^9, {3.447964021755379*^9, 3.447964021941555*^9}, {
   3.447964212252049*^9, 3.447964212486144*^9}, {3.447967814985984*^9, 
   3.447967826902108*^9}, 3.447968656667853*^9, {3.447969611631755*^9, 
   3.447969612408532*^9}, {3.447969757374888*^9, 3.44796976357369*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`", "0.`", "0.`", "39.375`", "0.`", "147.65625`", "0.`", 
      "355.2978515625`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "118.125`", "0.`", "406.0546875`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "52.5`"}], "0.`", "73.828125`", "0.`", "406.0546875`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "177.1875`"}], "0.`", 
      RowBox[{"-", "81.2109375`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "13.125`", "0.`", 
      RowBox[{"-", "383.90625`"}], "0.`", 
      RowBox[{"-", "365.44921875`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "59.0625`", "0.`", 
      RowBox[{"-", "676.7578125`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "162.421875`", "0.`", 
      RowBox[{"-", "1055.7421875`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "351.9140625`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "659.8388671875`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.44794891647362*^9, {3.447948959217975*^9, 3.447948968299647*^9}, 
   3.44794932435293*^9, 3.447953774875048*^9, 3.447964025011813*^9, 
   3.447964221604057*^9, {3.447967819924988*^9, 3.447967830003451*^9}, 
   3.447968658890245*^9, 3.447969616784001*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"B", "=", 
    RowBox[{"N", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"2", "*", "l"}], "+", "1"}], "2"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "+", "m"}], ")"}], "!"}]], 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"LegendreP", "[", 
            RowBox[{"l", ",", "m", ",", "  ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"j", "*", "\[Theta]"}], "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}]}], 
   ")"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.447615238714407*^9, 3.447615242991743*^9}, {
   3.447615293412311*^9, 3.447615304000321*^9}, {3.447617434218102*^9, 
   3.447617436679188*^9}, {3.447768806824445*^9, 3.447768829650218*^9}, {
   3.447769510582181*^9, 3.447769511215449*^9}, 3.447772541735712*^9, {
   3.44778085890028*^9, 3.447780859069967*^9}, {3.447780909280227*^9, 
   3.447780940221956*^9}, {3.447781849957594*^9, 3.447781854881389*^9}, {
   3.447782108649698*^9, 3.447782114339406*^9}, {3.447783488586266*^9, 
   3.447783492247963*^9}, {3.447783725804834*^9, 3.447783734968377*^9}, {
   3.447784014995534*^9, 3.447784022298343*^9}, {3.447875205383863*^9, 
   3.447875230403757*^9}, {3.447948970747919*^9, 3.44794897823427*^9}, {
   3.447949170142932*^9, 3.447949207116541*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.0125`", "0.`", 
      RowBox[{"-", "0.008928571428571428`"}], "0.`", "0.002976190476190476`", 
      "0.`", 
      RowBox[{"-", "0.00027056277056277056`"}], "0.`", 
      RowBox[{"-", "0.000020812520812520813`"}]},
     {"0.`", "0.0021825396825396826`", "0.`", 
      RowBox[{"-", "0.0036375661375661374`"}], "0.`", 
      "0.0016534391534391533`", "0.`", 
      RowBox[{"-", "0.00017806267806267807`"}], "0.`"},
     {"0.0010317460317460319`", "0.`", "0.00034391534391534393`", "0.`", 
      RowBox[{"-", "0.0017195767195767196`"}], "0.`", 
      "0.0009980759980759981`", "0.`", 
      RowBox[{"-", "0.00012265512265512266`"}]},
     {"0.`", "0.0003968253968253968`", "0.`", 
      RowBox[{"-", "0.000036075036075036075`"}], "0.`", 
      RowBox[{"-", "0.0009018759018759019`"}], "0.`", "0.000641025641025641`",
       "0.`"},
     {"0.00022486772486772486`", "0.`", "0.0001430976430976431`", "0.`", 
      RowBox[{"-", "0.00010221260221260222`"}], "0.`", 
      RowBox[{"-", "0.000511063011063011`"}], "0.`", 
      "0.00043206793206793207`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.447615285109196*^9, 3.447615314194158*^9}, 
   3.447617542343772*^9, {3.447768816056773*^9, 3.44776883218259*^9}, 
   3.447769516820407*^9, 3.447772555475522*^9, {3.447780923704268*^9, 
   3.447780946437778*^9}, 3.447781859749689*^9, 3.447782115278392*^9, 
   3.447783535196266*^9, 3.447783743866195*^9, 3.447784347070798*^9, 
   3.447875240626866*^9, 3.447948986901017*^9, 3.447949219846891*^9, 
   3.447949329874158*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"A", ".", "B"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.447948988936401*^9, 3.447948994867711*^9}, {
  3.447949025176217*^9, 3.447949028578912*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.72442626953125`", "0.`", 
      RowBox[{"-", "0.24993896484375`"}], "0.`", 
      RowBox[{"-", "0.17303466796875`"}], "0.`", 
      RowBox[{"-", "0.04486083984375`"}], "0.`", "0.13458251953125`"},
     {"0.`", "0.4189453125`", "0.`", 
      RowBox[{"-", "0.4443359375`"}], "0.`", 
      RowBox[{"-", "0.1708984375`"}], "0.`", "0.2392578125`", "0.`"},
     {
      RowBox[{"-", "0.48876953125`"}], "0.`", "0.55224609375`", "0.`", 
      RowBox[{"-", "0.32470703125`"}], "0.`", 
      RowBox[{"-", "0.11962890625`"}], "0.`", "0.16748046875`"},
     {"0.`", 
      RowBox[{"-", "0.4189453125`"}], "0.`", "0.6474609375`", "0.`", 
      RowBox[{"-", "0.2197265625`"}], "0.`", 
      RowBox[{"-", "0.0205078125`"}], "0.`"},
     {
      RowBox[{"-", "0.314208984375`"}], "0.`", 
      RowBox[{"-", "0.301513671875`"}], "0.`", "0.736572265625`", "0.`", 
      RowBox[{"-", "0.199951171875`"}], "0.`", 
      RowBox[{"-", "0.11108398437499999`"}]},
     {"0.`", 
      RowBox[{"-", "0.1396484375`"}], "0.`", 
      RowBox[{"-", "0.1904296875`"}], "0.`", "0.7080078125`", "0.`", 
      RowBox[{"-", "0.4443359375`"}], "0.`"},
     {
      RowBox[{"-", "0.06982421874999997`"}], "0.`", 
      RowBox[{"-", "0.09521484375000001`"}], "0.`", 
      RowBox[{"-", "0.17138671875`"}], "0.`", "0.70166015625`", "0.`", 
      RowBox[{"-", "0.47607421875`"}]},
     {"0.`", "0.1396484375`", "0.`", 
      RowBox[{"-", "0.0126953125`"}], "0.`", 
      RowBox[{"-", "0.3173828125`"}], "0.`", "0.2255859375`", "0.`"},
     {"0.14837646484375`", "0.`", "0.09442138671875`", "0.`", 
      RowBox[{"-", "0.06744384765625`"}], "0.`", 
      RowBox[{"-", "0.33721923828125`"}], "0.`", "0.28509521484375`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.44794899638117*^9, 3.447949030118988*^9, 
  3.447949331511133*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"B", ".", "A"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.447951769264433*^9, 3.447951773931387*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "6.938893903907228`*^-17", "0.`"},
     {"0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "1.`", "0.`"},
     {
      RowBox[{"-", "8.673617379884035`*^-19"}], "0.`", "0.`", "0.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.447951775797954*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"A", "=", 
    RowBox[{"N", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        FractionBox["2", "\[Pi]"], 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"LegendreP", "[", 
            RowBox[{"l", ",", "m", ",", "  ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
           RowBox[{"Sin", "[", 
            RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
         "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"l", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}]}], 
   ")"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.447976403675865*^9, 3.447976415123397*^9}, 
   3.447976669558576*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "590.625`"}], "0.`", 
      RowBox[{"-", "2030.2734375`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "1624.21875`"}], "0.`", 
      RowBox[{"-", "5278.7109375`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "295.3125`", "0.`", 
      RowBox[{"-", "2679.9609375`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1299.375`", "0.`", 
      RowBox[{"-", "3167.2265625`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "59.0625`"}], "0.`", "3492.0703125`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "324.84375`"}], "0.`", "7390.1953125`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "1055.7421875`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2639.35546875`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.44797642097505*^9, 3.4479766744811*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"A", "=", 
    RowBox[{"N", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"0", ",", " ", "j"}], "]"}]}], "\[Pi]"], 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"LegendreP", "[", 
            RowBox[{"l", ",", "m", ",", "  ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
         "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}]}], "]"}], "]"}]}], 
   ")"}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"B", "=", 
    RowBox[{"N", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"2", "*", "l"}], "+", "1"}], "2"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "+", "m"}], ")"}], "!"}]], 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"LegendreP", "[", 
            RowBox[{"l", ",", "m", ",", "  ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"j", "*", "\[Theta]"}], "]"}], 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}]}], 
   ")"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.44795102146875*^9, 3.447951029022007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"%", ",", " ", "18"}], "]"}]], "Input",
 CellChangeTimes->{{3.447784566235165*^9, 3.447784575270258*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1.6585925008490854`*^186", ",", "0.`", ",", 
    RowBox[{"-", "1.626386821220948`*^186"}], ",", "0.`", ",", 
    "1.5334504314368936`*^186", ",", "0.`", ",", 
    RowBox[{"-", "1.3901373070035392`*^186"}], ",", "0.`", ",", 
    "1.2115875611498735`*^186", ",", "0.`", ",", 
    RowBox[{"-", "1.0151139025850292`*^186"}], ",", "0.`", ",", 
    "8.174811073914837`*^185", ",", "0.`", ",", 
    RowBox[{"-", "6.326592918073221`*^185"}], ",", "0.`", ",", 
    "4.7043896057467544`*^185", ",", "0.`", ",", 
    RowBox[{"-", "3.3602782898191103`*^185"}], ",", "0.`", ",", 
    "2.3049842814461665`*^185", ",", "0.`", ",", 
    RowBox[{"-", "1.5179164780255244`*^185"}], ",", "0.`", ",", 
    "9.593232141121313`*^184", ",", "0.`", ",", 
    RowBox[{"-", "5.816369093435757`*^184"}], ",", "0.`", ",", 
    "3.381609938044045`*^184", ",", "0.`", ",", 
    RowBox[{"-", "1.8844085914291244`*^184"}], ",", "0.`", ",", 
    "1.0059624811388559`*^184", ",", "0.`", ",", 
    RowBox[{"-", "5.141586014709708`*^183"}], ",", "0.`", ",", 
    "2.514498269967521`*^183", ",", "0.`", ",", 
    RowBox[{"-", "1.1758445147330135`*^183"}], ",", "0.`", ",", 
    "5.2537733637006985`*^182", ",", "0.`", ",", 
    RowBox[{"-", "2.2411201061940044`*^182"}], ",", "0.`", ",", 
    "9.119040432099741`*^181", ",", "0.`", ",", 
    RowBox[{"-", "3.535954453263165`*^181"}], ",", "0.`", ",", 
    "1.3052180867749938`*^181", ",", "0.`", ",", 
    RowBox[{"-", "4.581229046296336`*^180"}], ",", "0.`", ",", 
    "1.5270763487654454`*^180", ",", "0.`", ",", 
    RowBox[{"-", "4.827531683193988`*^179"}], ",", "0.`", ",", 
    "1.445184644013487`*^179", ",", "0.`", ",", 
    RowBox[{"-", "4.0901452189060956`*^178"}], ",", "0.`", ",", 
    "1.0923990336208825`*^178", ",", "0.`", ",", 
    RowBox[{"-", "2.7477521704574347`*^177"}], ",", "0.`", ",", 
    "6.494686948353937`*^176", ",", "0.`", ",", 
    RowBox[{"-", "1.438942617299974`*^176"}], ",", "0.`", ",", 
    "2.980058674881603`*^175", ",", "0.`", ",", 
    RowBox[{"-", "5.750990425210111`*^174"}], ",", "0.`", ",", 
    "1.0305242958468985`*^174", ",", "0.`", ",", 
    RowBox[{"-", "1.7077259759748602`*^173"}], ",", "0.`", ",", 
    "2.6050057260633464`*^172", ",", "0.`", ",", 
    RowBox[{"-", "3.638276153719757`*^171"}], ",", "0.`", ",", 
    "4.623223841743338`*^170", ",", "0.`", ",", 
    RowBox[{"-", "5.305338834787437`*^169"}], ",", "0.`", ",", 
    "5.448726370862773`*^168", ",", "0.`", ",", 
    RowBox[{"-", "4.953387609875249`*^167"}], ",", "0.`", ",", 
    "3.931260007837499`*^166", ",", "0.`", ",", 
    RowBox[{"-", "2.675726706905104`*^165"}], ",", "0.`", ",", 
    "1.5250255842464322`*^164", ",", "0.`", ",", 
    RowBox[{"-", "7.0385796195989186`*^162"}], ",", "0.`", ",", 
    "2.501018138943778`*^161", ",", "0.`", ",", 
    RowBox[{"-", "6.283965173225573`*^159"}], ",", "0.`", ",", 
    "9.379052497351602`*^157"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.44778457684474*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1.6585925008490854`*^186", ",", "0.`", ",", 
    RowBox[{"-", "1.626386821220948`*^186"}], ",", "0.`", ",", 
    "1.5334504314368936`*^186", ",", "0.`", ",", 
    RowBox[{"-", "1.3901373070035392`*^186"}], ",", "0.`", ",", 
    "1.2115875611498735`*^186", ",", "0.`", ",", 
    RowBox[{"-", "1.0151139025850292`*^186"}], ",", "0.`", ",", 
    "8.174811073914837`*^185", ",", "0.`", ",", 
    RowBox[{"-", "6.326592918073221`*^185"}], ",", "0.`", ",", 
    "4.7043896057467544`*^185", ",", "0.`", ",", 
    RowBox[{"-", "3.3602782898191103`*^185"}], ",", "0.`", ",", 
    "2.3049842814461665`*^185", ",", "0.`", ",", 
    RowBox[{"-", "1.5179164780255244`*^185"}], ",", "0.`", ",", 
    "9.593232141121313`*^184", ",", "0.`", ",", 
    RowBox[{"-", "5.816369093435757`*^184"}], ",", "0.`", ",", 
    "3.381609938044045`*^184", ",", "0.`", ",", 
    RowBox[{"-", "1.8844085914291244`*^184"}], ",", "0.`", ",", 
    "1.0059624811388559`*^184", ",", "0.`", ",", 
    RowBox[{"-", "5.141586014709708`*^183"}], ",", "0.`", ",", 
    "2.514498269967521`*^183", ",", "0.`", ",", 
    RowBox[{"-", "1.1758445147330135`*^183"}], ",", "0.`", ",", 
    "5.2537733637006985`*^182", ",", "0.`", ",", 
    RowBox[{"-", "2.2411201061940044`*^182"}], ",", "0.`", ",", 
    "9.119040432099741`*^181", ",", "0.`", ",", 
    RowBox[{"-", "3.535954453263165`*^181"}], ",", "0.`", ",", 
    "1.3052180867749938`*^181", ",", "0.`", ",", 
    RowBox[{"-", "4.581229046296336`*^180"}], ",", "0.`", ",", 
    "1.5270763487654454`*^180", ",", "0.`", ",", 
    RowBox[{"-", "4.827531683193988`*^179"}], ",", "0.`", ",", 
    "1.445184644013487`*^179", ",", "0.`", ",", 
    RowBox[{"-", "4.0901452189060956`*^178"}], ",", "0.`", ",", 
    "1.0923990336208825`*^178", ",", "0.`", ",", 
    RowBox[{"-", "2.7477521704574347`*^177"}], ",", "0.`", ",", 
    "6.494686948353937`*^176", ",", "0.`", ",", 
    RowBox[{"-", "1.438942617299974`*^176"}], ",", "0.`", ",", 
    "2.980058674881603`*^175", ",", "0.`", ",", 
    RowBox[{"-", "5.750990425210111`*^174"}], ",", "0.`", ",", 
    "1.0305242958468985`*^174", ",", "0.`", ",", 
    RowBox[{"-", "1.7077259759748602`*^173"}], ",", "0.`", ",", 
    "2.6050057260633464`*^172", ",", "0.`", ",", 
    RowBox[{"-", "3.638276153719757`*^171"}], ",", "0.`", ",", 
    "4.623223841743338`*^170", ",", "0.`", ",", 
    RowBox[{"-", "5.305338834787437`*^169"}], ",", "0.`", ",", 
    "5.448726370862773`*^168", ",", "0.`", ",", 
    RowBox[{"-", "4.953387609875249`*^167"}], ",", "0.`", ",", 
    "3.931260007837499`*^166", ",", "0.`", ",", 
    RowBox[{"-", "2.675726706905104`*^165"}], ",", "0.`", ",", 
    "1.5250255842464322`*^164", ",", "0.`", ",", 
    RowBox[{"-", "7.0385796195989186`*^162"}], ",", "0.`", ",", 
    "2.501018138943778`*^161", ",", "0.`", ",", 
    RowBox[{"-", "6.283965173225573`*^159"}], ",", "0.`", ",", 
    "9.379052497351602`*^157"}], "}"}], "}"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"m", "=", "0"}], ",", " ", 
    RowBox[{"m", "<", "1"}], ",", " ", 
    RowBox[{"m", "+=", "2"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"LegendreP", "[", 
             RowBox[{"l", ",", "m", ",", "  ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"j", "*", "\[Theta]"}], "]"}], 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], 
      "//", "MatrixForm"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.448117178183947*^9, 3.448117233891567*^9}, {
  3.448117274443891*^9, 3.448117306568036*^9}, {3.448290598987322*^9, 
  3.448290605006975*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "::", "\<\"gtype\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(MatrixForm\\) is not a type of graphics. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gtype\\\", \
ButtonNote -> \\\"Show::gtype\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.448117312661069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        SqrtBox[
         FractionBox[
          RowBox[{"\[Pi]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "l"}], "+", "1"}], ")"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
        RowBox[{"LegendreP", "[", 
         RowBox[{"l", ",", "m", ",", "  ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"j", "*", "\[Theta]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.448290625854485*^9, 3.448290630414342*^9}, {
  3.448290704594335*^9, 3.448290737012557*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.5449077018110318`", "0.`", 
      RowBox[{"-", "1.1816359006036772`"}], "0.`", 
      RowBox[{"-", "0.23632718012073545`"}], "0.`", 
      RowBox[{"-", "0.1012830771946009`"}], "0.`", 
      RowBox[{"-", "0.056268376219222725`"}]},
     {"0.`", "2.046653415892977`", "0.`", 
      RowBox[{"-", "1.2279920495357863`"}], "0.`", 
      RowBox[{"-", "0.2923790594132824`"}], "0.`", 
      RowBox[{"-", "0.1364435610595318`"}], "0.`"},
     {"0.`", "0.`", "2.1137745587232057`", "0.`", 
      RowBox[{"-", "1.2078711764132604`"}], "0.`", 
      RowBox[{"-", "0.3019677941033151`"}], "0.`", 
      RowBox[{"-", "0.14640862744403157`"}]},
     {"0.`", "0.`", "0.`", "2.143758674210172`", "0.`", 
      RowBox[{"-", "1.1909770412278733`"}], "0.`", 
      RowBox[{"-", "0.3031577923125496`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "2.160705646818153`", "0.`", 
      RowBox[{"-", "1.1785667164462652`"}], "0.`", 
      RowBox[{"-", "0.3021965939605808`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "2.1715908826963592`", "0.`", 
      RowBox[{"-", "1.169318167605732`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "2.179170629590891`", "0.`", 
      RowBox[{"-", "1.1622243357818085`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "2.184751101287877`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "2.1890307353624014`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.448290642341945*^9, {3.448290747859841*^9, 3.448290752549806*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{"l", ",", "m", ",", "  ", "\[Theta]", ",", " ", "0"}], "]"}],
         
        RowBox[{"Cos", "[", 
         RowBox[{"j", "*", "\[Theta]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.44811734304576*^9, 3.448117385368229*^9}, {
   3.448290106039162*^9, 3.448290114679692*^9}, {3.448290156260576*^9, 
   3.448290180207211*^9}, 3.448291048487226*^9, {3.448291138777608*^9, 
   3.448291169040197*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.5449077018110318`", "0.`", 
      RowBox[{"-", "1.1816359006036772`"}], "0.`", 
      RowBox[{"-", "0.23632718012073545`"}], "0.`", 
      RowBox[{"-", "0.1012830771946009`"}], "0.`", 
      RowBox[{"-", "0.056268376219222725`"}]},
     {"0.`", "2.046653415892977`", "0.`", 
      RowBox[{"-", "1.2279920495357863`"}], "0.`", 
      RowBox[{"-", "0.2923790594132824`"}], "0.`", 
      RowBox[{"-", "0.1364435610595318`"}], "0.`"},
     {"0.`", "0.`", "2.1137745587232057`", "0.`", 
      RowBox[{"-", "1.2078711764132604`"}], "0.`", 
      RowBox[{"-", "0.3019677941033151`"}], "0.`", 
      RowBox[{"-", "0.14640862744403157`"}]},
     {"0.`", "0.`", "0.`", "2.143758674210172`", "0.`", 
      RowBox[{"-", "1.1909770412278733`"}], "0.`", 
      RowBox[{"-", "0.3031577923125496`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "2.160705646818153`", "0.`", 
      RowBox[{"-", "1.1785667164462652`"}], "0.`", 
      RowBox[{"-", "0.3021965939605808`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "2.1715908826963592`", "0.`", 
      RowBox[{"-", "1.169318167605732`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "2.179170629590891`", "0.`", 
      RowBox[{"-", "1.1622243357818085`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "2.184751101287877`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "2.1890307353624014`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.448117393855926*^9, 3.448290197585272*^9, 3.448291060770459*^9, {
   3.448291158045548*^9, 3.448291174167601*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.44829130479862*^9, 3.448291338249125*^9}, {
  3.448291401638387*^9, 3.448291459258213*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.5449077018110318`", "0.`", 
      RowBox[{"-", "1.1816359006036772`"}], "0.`", 
      RowBox[{"-", "0.23632718012073545`"}], "0.`", 
      RowBox[{"-", "0.1012830771946009`"}], "0.`", 
      RowBox[{"-", "0.056268376219222725`"}]},
     {"0.`", "2.046653415892977`", "0.`", 
      RowBox[{"-", "1.2279920495357863`"}], "0.`", 
      RowBox[{"-", "0.2923790594132824`"}], "0.`", 
      RowBox[{"-", "0.1364435610595318`"}], "0.`"},
     {"0.`", "0.`", "2.1137745587232057`", "0.`", 
      RowBox[{"-", "1.2078711764132604`"}], "0.`", 
      RowBox[{"-", "0.3019677941033151`"}], "0.`", 
      RowBox[{"-", "0.14640862744403157`"}]},
     {"0.`", "0.`", "0.`", "2.143758674210172`", "0.`", 
      RowBox[{"-", "1.1909770412278733`"}], "0.`", 
      RowBox[{"-", "0.3031577923125496`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "2.160705646818153`", "0.`", 
      RowBox[{"-", "1.1785667164462652`"}], "0.`", 
      RowBox[{"-", "0.3021965939605808`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "2.1715908826963592`", "0.`", 
      RowBox[{"-", "1.169318167605732`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "2.179170629590891`", "0.`", 
      RowBox[{"-", "1.1622243357818085`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "2.184751101287877`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "2.1890307353624014`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.448291351604444*^9, 3.448291464796581*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", 
      RowBox[{"-", "2.8944050182330705`"}], "0.`", "0.5788810036466141`", 
      "0.`", "0.08269728623523058`", "0.`", "0.0275657620784102`", "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "2.5888345500742656`"}], "0.`", "0.7396670143069329`", 
      "0.`", "0.12327783571782217`", "0.`", "0.04482830389738988`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "2.4753992952656763`"}], "0.`", "0.825133098421892`", 
      "0.`", "0.15002419971307127`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2.4157423528265207`"}], "0.`", "0.8784517646641894`", 
      "0.`", "0.16893303166619028`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2.378858624250702`"}], "0.`", "0.9149456247118084`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2.353773297994128`"}], "0.`", "0.9415093191976511`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2.33559717039894`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2.3218177158007927`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.448291351604444*^9, 3.448291469896001*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.236043187592832`", "0.`", 
      RowBox[{"-", "1.9416259125556992`"}], "0.`", "0.27737513036509986`", 
      "0.`", "0.03081945892945554`", "0.`", "0.008405306980760602`"},
     {"0.`", "1.7123531012470745`", "0.`", 
      RowBox[{"-", "2.201596844460524`"}], "0.`", "0.4077031193445415`", 
      "0.`", "0.05188948791657802`", "0.`"},
     {"1.1209982432795857`", "0.`", "1.1209982432795857`", "0.`", 
      RowBox[{"-", "2.2953773552867704`"}], "0.`", "0.4998390435402482`", 
      "0.`", "0.0698057514130145`"},
     {"0.`", "0.8113189636339996`", "0.`", "0.8113189636339996`", "0.`", 
      RowBox[{"-", "2.3356151983403017`"}], "0.`", "0.5692471050205918`", 
      "0.`"},
     {"0.6236658483871396`", "0.`", "0.6236658483871396`", "0.`", 
      "0.6236658483871396`", "0.`", 
      RowBox[{"-", "2.3536480385519325`"}], "0.`", "0.6236658483871396`"},
     {"0.`", "0.4993323044675802`", "0.`", "0.4993323044675802`", "0.`", 
      "0.4993323044675802`", "0.`", 
      RowBox[{"-", "2.3611783516152287`"}], "0.`"},
     {"0.41175996672058207`", "0.`", "0.41175996672058207`", "0.`", 
      "0.41175996672058207`", "0.`", "0.41175996672058207`", "0.`", 
      RowBox[{"-", "2.3633429928639584`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.448291351604444*^9, 3.448291474019414*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", 
      RowBox[{"-", "2.796260905018449`"}], "0.`", "1.1983975307221926`", 
      "0.`", 
      RowBox[{"-", "0.13315528119135472`"}], "0.`", 
      RowBox[{"-", "0.012105025562850431`"}], "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "2.396795061444385`"}], "0.`", "1.5978633742962567`", 
      "0.`", 
      RowBox[{"-", "0.21789046013130775`"}], "0.`", 
      RowBox[{"-", "0.02234773950064695`"}]},
     {"0.`", 
      RowBox[{"-", "0.6624391598489867`"}], "0.`", 
      RowBox[{"-", "1.9873174795469601`"}], "0.`", "1.826726168068418`", 
      "0.`", 
      RowBox[{"-", "0.288755531216225`"}], "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "0.8315544645161861`"}], "0.`", 
      RowBox[{"-", "1.6631089290323722`"}], "0.`", "1.9713074368600498`", 
      "0.`", 
      RowBox[{"-", "0.3489039711256725`"}]},
     {"0.`", 
      RowBox[{"-", "0.2824650068436254`"}], "0.`", 
      RowBox[{"-", "0.8473950205308762`"}], "0.`", 
      RowBox[{"-", "1.412325034218127`"}], "0.`", "2.068117917239691`", 
      "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "0.40547318583389497`"}], "0.`", 
      RowBox[{"-", "0.8109463716677899`"}], "0.`", 
      RowBox[{"-", "1.216419557501685`"}], "0.`", "2.1356144267450397`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.448291351604444*^9, 3.44829147753967*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.965882571858067`", "0.`", 
      RowBox[{"-", "2.1184875513271906`"}], "0.`", "0.7061625171090635`", 
      "0.`", 
      RowBox[{"-", "0.06419659246446033`"}], "0.`", 
      RowBox[{"-", "0.004938199420343101`"}]},
     {"0.`", "1.4052456661582136`", "0.`", 
      RowBox[{"-", "2.3420761102636893`"}], "0.`", "1.0645800501198588`", 
      "0.`", 
      RowBox[{"-", "0.11464708232060017`"}], "0.`"},
     {"1.366383414028933`", "0.`", "0.45546113800964433`", "0.`", 
      RowBox[{"-", "2.2773056900482214`"}], "0.`", "1.321792813104912`", 
      "0.`", 
      RowBox[{"-", "0.16243718908036267`"}]},
     {"0.`", "0.9368304441054757`", "0.`", 
      RowBox[{"-", "0.0851664040095887`"}], "0.`", 
      RowBox[{"-", "2.1291601002397176`"}], "0.`", "1.5133414866319224`", 
      "0.`"},
     {"0.8637149928375872`", "0.`", "0.5496368136239193`", "0.`", 
      RowBox[{"-", "0.3925977240170851`"}], "0.`", 
      RowBox[{"-", "1.9629886200854256`"}], "0.`", "1.6595692026097777`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.448291351604444*^9, 3.448291480072596*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", 
      RowBox[{"-", "2.666266186284331`"}], "0.`", "1.4812589923801838`", 
      "0.`", 
      RowBox[{"-", "0.4039797251945956`"}], "0.`", "0.031075363476507353`", 
      "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "2.13630209970755`"}], "0.`", "1.9420928179159545`", "0.`",
       
      RowBox[{"-", "0.6722628985093689`"}], "0.`", "0.059756702089721676`"},
     {"0.`", 
      RowBox[{"-", "0.9368304441054757`"}], "0.`", 
      RowBox[{"-", "1.4478288681630083`"}], "0.`", "2.1291601002397176`", 
      "0.`", 
      RowBox[{"-", "0.8975228730241271`"}], "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "1.1324249796592485`"}], "0.`", 
      RowBox[{"-", "0.8710961381994219`"}], "0.`", "2.177740345498555`", 
      "0.`", 
      RowBox[{"-", "1.0863081252839848`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.448291351604444*^9, 3.448291481708373*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.7751378327571627`", "0.`", 
      RowBox[{"-", "2.1584405365889046`"}], "0.`", "0.9811093348131383`", 
      "0.`", 
      RowBox[{"-", "0.2264098464953396`"}], "0.`", "0.015093989766355974`"},
     {"0.`", "1.1942291788554038`", "0.`", 
      RowBox[{"-", "2.279892068723953`"}], "0.`", "1.4614692748230467`", 
      "0.`", 
      RowBox[{"-", "0.4092113969504531`"}], "0.`"},
     {"1.4415799855229503`", "0.`", "0.04368424198554396`", "0.`", 
      RowBox[{"-", "1.9993941524152812`"}], "0.`", "1.7641713109546597`", 
      "0.`", 
      RowBox[{"-", "0.5825224485583622`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.448291351604444*^9, 3.448291482904068*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", 
      RowBox[{"-", "2.5533693877516`"}], "0.`", "1.6248714285691999`", "0.`", 
      
      RowBox[{"-", "0.6249505494496923`"}], "0.`", "0.12499010988993847`", 
      "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "1.9141475794397351`"}], "0.`", "2.0613897009350994`", 
      "0.`", 
      RowBox[{"-", "1.0306948504675497`"}], "0.`", "0.24251643540412937`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.448291351604444*^9, 3.448291483529695*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.631952921729636`", "0.`", 
      RowBox[{"-", "2.153416026869702`"}], "0.`", "1.1595317067759934`", 
      "0.`", 
      RowBox[{"-", "0.38651056892533114`"}], "0.`", "0.06820774745741139`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.448291351604444*^9, 3.448291483904554*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.448193565859717*^9, 3.448193690037707*^9}, {
  3.448291199466731*^9, 3.448291222333835*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"5.568327996831707`", "0.`", "3.1127899804827326`", "0.`", 
      "2.349138373663376`", "0.`", "1.9606339952322658`", "0.`", 
      "1.7165854186432425`"},
     {"0.`", "4.822313501860373`", "0.`", "2.7623270808853415`", "0.`", 
      "2.1642251572408666`", "0.`", "1.8428014060748044`", "0.`"},
     {"0.`", "0.`", "4.669184970724099`", "0.`", "2.6101537485148625`", "0.`",
       "2.0586656949938793`", "0.`", "1.7656307163187637`"},
     {"0.`", "0.`", "0.`", "4.603878468142236`", "0.`", "2.5249293501143444`",
       "0.`", "1.9902255185607887`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "4.56776905990101`", "0.`", 
      "2.470398833992655`", "0.`", "1.9421937879506401`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "4.54487283020582`", "0.`", 
      "2.432497856018742`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "4.5290645289865346`", "0.`", 
      "2.40462088031984`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "4.517496018320521`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "4.5086641505997`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.448193585473849*^9, 3.448193601827181*^9}, 
   3.448193699305916*^9, 3.448291232656235*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {
      RowBox[{"-", "3.4098905781729165`"}], "0.`", 
      RowBox[{"-", "0.7974151418694725`"}], "0.`", 
      RowBox[{"-", "0.39513164604699597`"}], "0.`", 
      RowBox[{"-", "0.246254696192757`"}], "0.`"},
     {"0.`", 
      RowBox[{"-", "3.8123735643153513`"}], "0.`", 
      RowBox[{"-", "1.1672962426810247`"}], "0.`", 
      RowBox[{"-", "0.6353180263791874`"}], "0.`", 
      RowBox[{"-", "0.41616315086008643`"}]},
     {"0.`", "0.`", 
      RowBox[{"-", "3.9870757093473626`"}], "0.`", 
      RowBox[{"-", "1.3829607611644859`"}], "0.`", 
      RowBox[{"-", "0.7978652156645327`"}], "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "4.085536849383587`"}], "0.`", 
      RowBox[{"-", "1.5247632633100499`"}], "0.`", 
      RowBox[{"-", "0.9155589318921902`"}]},
     {"0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "4.148882283493458`"}], "0.`", 
      RowBox[{"-", "1.6252809948721962`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "4.193098974102637`"}], "0.`", 
      RowBox[{"-", "1.7003237306569245`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "4.22573058666771`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "4.250809326642312`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.448193585473849*^9, 3.448193601827181*^9}, 
   3.448193699305916*^9, 3.448291240448968*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.8123735643153513`", "0.`", "2.4762092665599913`", "0.`", 
      "2.0090520019211695`", "0.`", "1.740935364205522`"},
     {"0.`", "2.5216480890138318`", "0.`", "2.090840141143899`", "0.`", 
      "1.809595057309038`", "0.`"},
     {
      RowBox[{"-", "1.9061867821576757`"}], "0.`", "1.650806177706661`", 
      "0.`", "1.707694201632994`", "0.`", "1.591712332987906`"},
     {"0.`", 
      RowBox[{"-", "2.5216480890138318`"}], "0.`", "1.0454200705719494`", 
      "0.`", "1.375292243554869`", "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "2.8889108109866566`"}], "0.`", "0.6027156005763508`", 
      "0.`", "1.0943022289291853`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "3.1362602117158485`"}], "0.`", "0.26540727507199224`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "3.3149358031699294`"}], "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "3.4502945759358994`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "3.5564822440198522`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.448193585473849*^9, 3.448193601827181*^9}, 
   3.448193699305916*^9, 3.448291246984738*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {
      RowBox[{"-", "3.0883755644740916`"}], "0.`", 
      RowBox[{"-", "1.2803728698828278`"}], "0.`", 
      RowBox[{"-", "0.7677461617349279`"}], "0.`"},
     {"0.`", 
      RowBox[{"-", "3.0883755644740916`"}], "0.`", 
      RowBox[{"-", "1.8081468017290525`"}], "0.`", 
      RowBox[{"-", "1.2122936364681045`"}]},
     {"1.0294585214913639`", "0.`", 
      RowBox[{"-", "2.7741412180794605`"}], "0.`", 
      RowBox[{"-", "1.9961400205108126`"}], "0.`"},
     {"0.`", "1.5441877822370458`", "0.`", 
      RowBox[{"-", "2.410862402305403`"}], "0.`", 
      RowBox[{"-", "2.0204893941135076`"}]},
     {"0.`", "0.`", "1.9205593048242418`", "0.`", 
      RowBox[{"-", "2.0643841237761396`"}], "0.`"},
     {"0.`", "0.`", "0.`", "2.2099572021132863`", "0.`", 
      RowBox[{"-", "1.7510908082317065`"}]},
     {"0.`", "0.`", "0.`", "0.`", "2.4397266917354377`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "2.6266362123475595`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.448193585473849*^9, 3.448193601827181*^9}, 
   3.448193699305916*^9, 3.448291252940369*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.2757169567356925`", "0.`", "2.200806201306274`", "0.`", 
      "1.8259084140710766`"},
     {"0.`", "1.8107206774828573`", "0.`", "1.6975506351401788`", "0.`"},
     {
      RowBox[{"-", "2.1838113044904617`"}], "0.`", "0.5502015503265685`", 
      "0.`", "1.0433762366120438`"},
     {"0.`", 
      RowBox[{"-", "2.716081016224286`"}], "0.`", 
      RowBox[{"-", "0.33951012702803574`"}], "0.`"},
     {"0.5459528261226154`", "0.`", 
      RowBox[{"-", "2.8610480616981557`"}], "0.`", 
      RowBox[{"-", "0.9390386129508395`"}]},
     {"0.`", "0.9053603387414286`", "0.`", 
      RowBox[{"-", "2.829251058566965`"}], "0.`"},
     {"0.`", "0.`", "1.2104434107184505`", "0.`", 
      RowBox[{"-", "2.712778215191314`"}]},
     {"0.`", "0.`", "0.`", "1.4712105504548216`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "1.6954863844945711`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.448193585473849*^9, 3.448193601827181*^9}, 
   3.448193699305916*^9, 3.448291256940162*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`", "0.`", "0.`"},
     {
      RowBox[{"-", "2.8630007736044965`"}], "0.`", 
      RowBox[{"-", "1.4146255292834824`"}], "0.`"},
     {"0.`", 
      RowBox[{"-", "2.5806740227310203`"}], "0.`", 
      RowBox[{"-", "1.8809732603526859`"}]},
     {"1.4315003868022482`", "0.`", 
      RowBox[{"-", "1.8673056986541967`"}], "0.`"},
     {"0.`", "2.064539218184816`", "0.`", 
      RowBox[{"-", "1.1285839562116116`"}]},
     {
      RowBox[{"-", "0.28630007736044966`"}], "0.`", "2.4331559103675895`", 
      "0.`"},
     {"0.`", 
      RowBox[{"-", "0.516134804546204`"}], "0.`", "2.63336256449376`"},
     {"0.`", "0.`", 
      RowBox[{"-", "0.7356052752274108`"}], "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "0.9404866301763429`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.448193585473849*^9, 3.448193601827181*^9}, 
   3.448193699305916*^9, 3.448291260672923*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.979905683428858`", "0.`", "2.0316833268307626`"},
     {"0.`", "1.4426406356485995`", "0.`"},
     {
      RowBox[{"-", "2.2349292625716433`"}], "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "2.5967531441674794`"}], "0.`"},
     {"0.8939717050286573`", "0.`", 
      RowBox[{"-", "2.438019992196915`"}]},
     {"0.`", "1.4426406356485995`", "0.`"},
     {
      RowBox[{"-", "0.1489952841714429`"}], "0.`", "1.85753904167384`"},
     {"0.`", 
      RowBox[{"-", "0.2885281271297199`"}], "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "0.43536071289230627`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.448193585473849*^9, 3.448193601827181*^9}, 
   3.448193699305916*^9, 3.448291263324277*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`"},
     {
      RowBox[{"-", "2.6989334954174184`"}], "0.`"},
     {"0.`", 
      RowBox[{"-", "2.2255975756246986`"}]},
     {"1.619360097250451`", "0.`"},
     {"0.`", "2.2255975756246986`"},
     {
      RowBox[{"-", "0.5397866990834836`"}], "0.`"},
     {"0.`", 
      RowBox[{"-", "0.9538275324105852`"}]},
     {"0.07711238558335481`", "0.`"},
     {"0.`", "0.1589712554017642`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.448193585473849*^9, 3.448193601827181*^9}, 
   3.448193699305916*^9, 3.448291264579594*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.7819969695308733`"},
     {"0.`"},
     {
      RowBox[{"-", "2.2255975756246986`"}]},
     {"0.`"},
     {"1.1127987878123493`"},
     {"0.`"},
     {
      RowBox[{"-", "0.3179425108035284`"}]},
     {"0.`"},
     {"0.03974281385044105`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.448193585473849*^9, 3.448193601827181*^9}, 
   3.448193699305916*^9, 3.448291265347704*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LegendreP", "[", 
         RowBox[{"l", ",", "m", ",", "  ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"j", "*", "\[Theta]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.447772516751288*^9, 3.447772544052559*^9}, 
   3.447781845194467*^9, {3.447782137205741*^9, 3.44778214313968*^9}, {
   3.447783749951258*^9, 3.447783773801336*^9}, {3.447783808238743*^9, 
   3.447783809129448*^9}, {3.447944293661128*^9, 3.447944294838288*^9}, {
   3.447946107555552*^9, 3.447946107773772*^9}, {3.447946525938642*^9, 
   3.447946544957688*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", 
      RowBox[{"-", "1.3333333333333333`"}], "0.`", "0.26666666666666666`", 
      "0.`", "0.0380952380952381`", "0.`", "0.012698412698412698`", "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "1.6`"}], "0.`", "0.45714285714285713`", "0.`", 
      "0.0761904761904762`", "0.`", "0.027705627705627706`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "1.8285714285714285`"}], "0.`", "0.6095238095238096`", 
      "0.`", "0.11082251082251082`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2.0317460317460316`"}], "0.`", "0.7388167388167388`", 
      "0.`", "0.14208014208014208`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2.2164502164502164`"}], "0.`", "0.8524808524808525`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2.386946386946387`"}], "0.`", "0.9547785547785548`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2.546076146076146`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2.6958453311394486`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.447772523462797*^9, 3.447772548880406*^9}, 
   3.447781862795366*^9, 3.447782144357849*^9, {3.447783760165058*^9, 
   3.447783781101473*^9}, 3.447783817306807*^9, 3.447944306596664*^9, 
   3.447946114353149*^9, {3.447946532064845*^9, 3.447946556355778*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"LegendreP", "[", 
     RowBox[{"l", ",", "m", ",", "  ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"j", "*", "\[Theta]"}], "]"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"LegendreP", "[", 
      RowBox[{"101", ",", "101", ",", "  ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"101", "*", "\[Theta]"}], "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.447947108705255*^9, 3.447947154880651*^9}, {
  3.447947269123809*^9, 3.44794732642995*^9}}],

Cell[BoxData[
 RowBox[{"-", "9.472381000034608`*^159"}]], "Output",
 CellChangeTimes->{{3.447947147552368*^9, 3.447947159849155*^9}, {
  3.447947319890729*^9, 3.447947329029401*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        RowBox[{"LegendreP", "[", 
         RowBox[{"l", ",", "m", ",", "  ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"j", "*", "\[Theta]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "m", ",", " ", "16"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "16"}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.447679289348005*^9, 3.447679293987946*^9}, 
   3.447679407224232*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "::", "\<\"slwcon\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.447679408570062*^9}]
}, Open  ]],

Cell[RawData[""], "Message"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "::", "\<\"ncvb\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(9\\) recursive bisections in \\!\\(\[Theta]\\) near \\!\\({\[Theta]}\\) \
= \\!\\({1.8837772330272884`}\\). NIntegrate obtained \
\\!\\(1.071365218763276`*^-14\\) and \\!\\(1.2988836984573926`*^-15\\) for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.447679408957201*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "::", "\<\"ncvb\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(9\\) recursive bisections in \\!\\(\[Theta]\\) near \\!\\({\[Theta]}\\) \
= \\!\\({2.215019432203144`}\\). NIntegrate obtained \
\\!\\(-1.7208456881689926`*^-15\\) and \\!\\(2.7077422545606724`*^-15\\) for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.447679409238906*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"General", "::", "\<\"stop\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(NIntegrate :: \\\"ncvb\\\"\\) will \
be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.447679409381986*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "16.000000000000014`", "1.071365218763276`*^-14", 
      RowBox[{"-", "26.666666666726588`"}], "0.`", "12.121212121152292`", 
      "1.2101430968414206`*^-14", 
      RowBox[{"-", "1.3053613054210325`"}], "0.`", 
      RowBox[{"-", "0.11188811194546847`"}], "0.`", 
      RowBox[{"-", "0.02413273001508131`"}], 
      RowBox[{"-", "7.993605777301127`*^-15"}], 
      RowBox[{"-", "0.00750539450229646`"}], "3.552713678800501`*^-15", 
      RowBox[{"-", "0.0028866901931895207`"}], 
      RowBox[{"-", "1.1102230246251565`*^-15"}]},
     {"144.00000000000014`", "0.`", 
      RowBox[{"-", "48.000000000290434`"}], "0.`", 
      RowBox[{"-", "65.45454545483486`"}], "0.`", "48.67132867104067`", "0.`",
       
      RowBox[{"-", "6.377622377622378`"}], 
      RowBox[{"-", "2.808864252301646`*^-14"}], 
      RowBox[{"-", "0.6120937885643778`"}], 
      RowBox[{"-", "4.6074255521944`*^-15"}], 
      RowBox[{"-", "0.1423715603282218`"}], "0.`", 
      RowBox[{"-", "0.046764381129695304`"}], "1.684763439868675`*^-14", 
      RowBox[{"-", "0.018750935428817884`"}]},
     {"0.`", "192.00000000000017`", "0.`", 
      RowBox[{"-", "191.999999511242`"}], "0.`", 
      RowBox[{"-", "100.69930069930061`"}], "6.683542608243442`*^-14", 
      "122.18181866903056`", "0.`", 
      RowBox[{"-", "18.71822295351702`"}], 
      RowBox[{"-", "7.105427357601002`*^-14"}], 
      RowBox[{"-", "1.9661824243867612`"}], 
      RowBox[{"-", "1.0125233984581428`*^-13"}], 
      RowBox[{"-", "0.48634956374891436`"}], "0.`", 
      RowBox[{"-", "0.1671770146665616`"}], "0.`"},
     {"351.9999999983611`", "0.`", "159.99999999836564`", "0.`", 
      RowBox[{"-", "415.9999999999999`"}], "0.`", 
      RowBox[{"-", "115.69230769230654`"}], "0.`", "245.4298642533936`", 
      "0.`", 
      RowBox[{"-", "42.775899023575775`"}], 
      RowBox[{"-", "2.8421709430404007`*^-13"}], 
      RowBox[{"-", "4.839247439866401`"}], 
      RowBox[{"-", "9.270362255620057`*^-14"}], 
      RowBox[{"-", "1.2600929828000642`"}], "1.580957587066223`*^-13", 
      RowBox[{"-", "0.4501610114207961`"}]},
     {"0.`", "432.0000000000004`", "0.`", "48.00000000000067`", "0.`", 
      RowBox[{"-", "719.9999999999999`"}], "0.`", 
      RowBox[{"-", "92.74208144796421`"}], "0.`", "431.4512979280784`", "0.`",
       
      RowBox[{"-", "83.87139795189242`"}], 
      RowBox[{"-", "3.214095656289828`*^-13"}], 
      RowBox[{"-", "10.098801992192382`"}], 
      RowBox[{"-", "1.5987211554602254`*^-13"}], 
      RowBox[{"-", "2.746989448833356`"}], "2.1371793224034263`*^-13"},
     {"624.0000012283804`", "0.`", "432.00000122520385`", "0.`", 
      RowBox[{"-", "143.99999999998795`"}], "0.`", 
      RowBox[{"-", "1104.0000000004798`"}], "0.`", 
      RowBox[{"-", "13.226006191938607`"}], "0.`", "693.5479876156205`", 
      RowBox[{"-", "4.725109192804666`*^-13"}], 
      RowBox[{"-", "148.13514604925433`"}], "2.7711166694643907`*^-13", 
      RowBox[{"-", "18.813622291499577`"}], "0.`", 
      RowBox[{"-", "5.3140934176769585`"}]},
     {"0.`", "736.0000000000007`", "0.`", "351.9999999959882`", "0.`", 
      RowBox[{"-", "416.0000000041323`"}], "0.`", 
      RowBox[{"-", "1568.0000000039486`"}], "0.`", "142.36532507321172`", 
      "0.`", "1045.2916947060398`", "3.3217872896784684`*^-13", 
      RowBox[{"-", "242.4548122266113`"}], 
      RowBox[{"-", "1.3802292642139946`*^-12"}], 
      RowBox[{"-", "32.250406070135085`"}], 
      RowBox[{"-", "1.0516032489249483`*^-12"}]},
     {"959.9999999999998`", "0.`", "768.0000000000174`", "0.`", 
      "191.9999999983572`", "0.`", 
      RowBox[{"-", "768.0000000533332`"}], "0.`", 
      RowBox[{"-", "2112.000000001637`"}], "0.`", "394.389554395533`", 
      "1.9326762412674725`*^-12", "1500.5256158282275`", 
      "1.3766765505351941`*^-12", 
      RowBox[{"-", "374.4305829041408`"}], 
      RowBox[{"-", "2.547295707699959`*^-12"}], 
      RowBox[{"-", "51.86928764792761`"}]},
     {"0.`", "1104.0000000000027`", "0.`", "719.9999999978867`", "0.`", 
      RowBox[{"-", "47.999999999998735`"}], "0.`", 
      RowBox[{"-", "1200.0000000024882`"}], "0.`", 
      RowBox[{"-", "2736.000000000883`"}], "0.`", "764.0186296915929`", 
      "5.115907697472721`*^-13", "2073.3643828235868`", 
      RowBox[{"-", "2.48334686148155`*^-12"}], 
      RowBox[{"-", "552.3365524695502`"}], 
      RowBox[{"-", "3.630873379734112`*^-12"}]},
     {"1360.0000000000002`", "0.`", "1167.9999999983447`", "0.`", 
      "591.9999999999999`", "0.`", 
      RowBox[{"-", "368.00000000000614`"}], "0.`", 
      RowBox[{"-", "1712.0000000443683`"}], "0.`", 
      RowBox[{"-", "3439.9999971820916`"}], "5.307754236127948`*^-12", 
      "1273.2086448004102`", "0.`", "2778.1930255997386`", 
      RowBox[{"-", "3.1086244689504383`*^-12"}], 
      RowBox[{"-", "785.0870418034306`"}]},
     {"0.`", "1535.999999999979`", "0.`", "1152.0000000000177`", "0.`", 
      "383.99999999999307`", "0.`", 
      RowBox[{"-", "768.0000000000235`"}], "0.`", 
      RowBox[{"-", "2303.9999944233004`"}], "0.`", 
      RowBox[{"-", "4223.99998965419`"}], "1.0864198429771932`*^-11", 
      "1944.672806087388`", 
      RowBox[{"-", "4.04298816647497`*^-12"}], "3629.665223763348`", 
      RowBox[{"-", "1.8453683026109502`*^-11"}]},
     {"1823.9999999999768`", "0.`", "1631.9999999290849`", "0.`", 
      "1056.000000000011`", "0.`", "96.00000000004016`", "0.`", 
      RowBox[{"-", "1247.999999999965`"}], "0.`", 
      RowBox[{"-", "2976.000000000001`"}], 
      RowBox[{"-", "1.1397105481592007`*^-11"}], 
      RowBox[{"-", "5087.999999999996`"}], "0.`", "2801.85698118684`", 
      RowBox[{"-", "1.5134560271690134`*^-11"}], "4642.701063544426`"},
     {"0.`", "2032.0000000000011`", "0.`", "1648.0000000000364`", "0.`", 
      "879.9999999999866`", "0.`", 
      RowBox[{"-", "271.99999999992815`"}], "0.`", 
      RowBox[{"-", "1807.9999999999059`"}], "0.`", 
      RowBox[{"-", "3728.0000000000136`"}], 
      RowBox[{"-", "4.652100926705316`*^-11"}], 
      RowBox[{"-", "6032.000000000072`"}], 
      RowBox[{"-", "2.241762331323116`*^-11"}], "3868.917552953753`", 
      "5.2452264753810596`*^-11"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.447679401203443*^9, 3.447679414281763*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}], "2"], 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"l", "-", "m"}], ")"}], "!"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"l", "+", "m"}], ")"}], "!"}]], 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LegendreP", "[", 
         RowBox[{"l", ",", "m", ",", "  ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"j", "*", "\[Theta]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", " ", "m", ",", " ", "9"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", "9"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.446052950852665*^9, 3.446053064796983*^9}, {
   3.446053141048189*^9, 3.446053201173195*^9}, {3.446053259943717*^9, 
   3.446053264387656*^9}, {3.446053303366397*^9, 3.446053395253961*^9}, 
   3.446060959862541*^9, {3.446061000918301*^9, 3.446061013724595*^9}, 
   3.446062164218604*^9, 3.446062214490493*^9, {3.446065143063759*^9, 
   3.446065145381072*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "80"], "0", 
      RowBox[{"-", 
       FractionBox["1", "112"]}], "0", 
      FractionBox["1", "336"], "0", 
      RowBox[{"-", 
       FractionBox["1", "3696"]}], "0", 
      RowBox[{"-", 
       FractionBox["1", "48048"]}], "0"},
     {"0", 
      FractionBox["11", "5040"], "0", 
      RowBox[{"-", 
       FractionBox["11", "3024"]}], "0", 
      FractionBox["5", "3024"], "0", 
      RowBox[{"-", 
       FractionBox["1", "5616"]}], "0", 
      RowBox[{"-", 
       FractionBox["1", "65520"]}]},
     {
      FractionBox["13", "12600"], "0", 
      FractionBox["13", "37800"], "0", 
      RowBox[{"-", 
       FractionBox["13", "7560"]}], "0", 
      FractionBox["83", "83160"], "0", 
      RowBox[{"-", 
       FractionBox["17", "138600"]}], "0"},
     {"0", 
      FractionBox["1", "2520"], "0", 
      RowBox[{"-", 
       FractionBox["1", "27720"]}], "0", 
      RowBox[{"-", 
       FractionBox["5", "5544"]}], "0", 
      FractionBox["1", "1560"], "0", 
      RowBox[{"-", 
       FractionBox["179", "2042040"]}]},
     {
      FractionBox["17", "75600"], "0", 
      FractionBox["17", "118800"], "0", 
      RowBox[{"-", 
       FractionBox["17", "166320"]}], "0", 
      RowBox[{"-", 
       FractionBox["17", "33264"]}], "0", 
      FractionBox["173", "400400"], "0"},
     {"0", 
      FractionBox["19", "166320"], "0", 
      FractionBox["19", "432432"], "0", 
      RowBox[{"-", 
       FractionBox["19", "196560"]}], "0", 
      RowBox[{"-", 
       FractionBox["19", "61776"]}], "0", 
      FractionBox["3709", "12252240"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.446053184015801*^9, 3.446053202092359*^9}, 
   3.44605326521629*^9, {3.446053304472003*^9, 3.446053340016206*^9}, 
   3.446053372772658*^9, 3.446053428233078*^9, 3.446060980165704*^9, 
   3.446061022344367*^9, 3.446062182445641*^9, 3.446062224248434*^9, 
   3.446065150876076*^9}]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.447617188358232*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}], "2"], 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"l", "-", "m"}], ")"}], "!"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"l", "+", "m"}], ")"}], "!"}]], 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LegendreP", "[", 
         RowBox[{"l", ",", "m", ",", "  ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"j", "*", "\[Theta]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", " ", "m", ",", " ", "9"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", "9"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.446065344358056*^9, 3.446065352594504*^9}, 
   3.447426386837826*^9, 3.447426434416336*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", 
       FractionBox["11", "8400"]}], "0", 
      FractionBox["11", "15120"], "0", 
      RowBox[{"-", 
       FractionBox["1", "5040"]}], "0", 
      FractionBox["1", "65520"], "0", 
      FractionBox["1", "982800"]},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox["13", "37800"]}], "0", 
      FractionBox["13", "41580"], "0", 
      RowBox[{"-", 
       FractionBox["1", "9240"]}], "0", 
      FractionBox["1", "103950"], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", "15120"]}], "0", 
      RowBox[{"-", 
       FractionBox["17", "166320"]}], "0", 
      FractionBox["5", "33264"], "0", 
      RowBox[{"-", 
       FractionBox["137", "2162160"]}], "0", 
      FractionBox["233", "36756720"]},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox["17", "415800"]}], "0", 
      RowBox[{"-", 
       FractionBox["17", "540540"]}], "0", 
      FractionBox["17", "216216"], "0", 
      RowBox[{"-", 
       FractionBox["53", "1351350"]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["19", "1940400"]}], "0", 
      RowBox[{"-", 
       FractionBox["323", "15135120"]}], "0", 
      RowBox[{"-", 
       FractionBox["19", "2162160"]}], "0", 
      FractionBox["19", "432432"], "0", 
      RowBox[{"-", 
       FractionBox["359", "14137200"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.446065361703945*^9, 3.447426396336912*^9, 
  3.447426438170514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ArcCos", "[", 
   RowBox[{"-", 
    RowBox[{"Cos", "[", "x", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.446419094233082*^9, 3.446419121321351*^9}}],

Cell[BoxData[
 RowBox[{"ArcCos", "[", 
  RowBox[{"-", 
   RowBox[{"Cos", "[", "x", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.446419110676684*^9, 3.446419122268879*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LegendreP", "[", 
  RowBox[{"0", ",", "0", ",", "  ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.447424807474075*^9, 3.44742480937692*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.447424810144257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"LegendreP", "[", 
        RowBox[{"l", ",", "m", ",", "  ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"j", "*", "\[Theta]"}], "]"}], 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", " ", "m", ",", " ", "9"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", "9"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.447426450206403*^9, 3.447426466213859*^9}, {
   3.447426523375105*^9, 3.447426563886621*^9}, 3.447440067487052*^9, {
   3.447617572813649*^9, 3.447617588135582*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", "0", 
      RowBox[{"-", 
       FractionBox["12", "5"]}], "0", 
      FractionBox["12", "35"], "0", 
      FractionBox["4", "105"], "0", 
      FractionBox["4", "385"], "0"},
     {"0", "4", "0", 
      RowBox[{"-", 
       FractionBox["36", "7"]}], "0", 
      FractionBox["20", "21"], "0", 
      FractionBox["4", "33"], "0", 
      FractionBox["36", "1001"]},
     {"4", "0", "4", "0", 
      RowBox[{"-", 
       FractionBox["172", "21"]}], "0", 
      FractionBox["412", "231"], "0", 
      FractionBox["68", "273"], "0"},
     {"0", "4", "0", "4", "0", 
      RowBox[{"-", 
       FractionBox["380", "33"]}], "0", 
      FractionBox["1204", "429"], "0", 
      FractionBox["60", "143"]},
     {"4", "0", "4", "0", "4", "0", 
      RowBox[{"-", 
       FractionBox["6476", "429"]}], "0", "4", "0"},
     {"0", "4", "0", "4", "0", "4", "0", 
      RowBox[{"-", 
       FractionBox["13524", "715"]}], "0", 
      FractionBox["65004", "12155"]},
     {"4", "0", "4", "0", "4", "0", "4", "0", 
      RowBox[{"-", 
       FractionBox["55812", "2431"]}], "0"},
     {"0", "4", "0", "4", "0", "4", "0", "4", "0", 
      RowBox[{"-", 
       FractionBox["114276", "4199"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.447426478817698*^9, {3.44742653062259*^9, 3.447426571823351*^9}, 
   3.447440080610728*^9, {3.447617578214761*^9, 3.447617600772751*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"LegendreP", "[", 
     RowBox[{"0", ",", "0", ",", "  ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"0", "*", "\[Theta]"}], "]"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.447523318914599*^9, 3.447523323663167*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.447523326079242*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"LegendreP", "[", 
       RowBox[{"m", ",", "m", ",", "  ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"j", "*", "\[Theta]"}], "]"}], 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", " ", "0", ",", " ", "20", ",", " ", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"j", "/", "2"}]], "2", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "+", "1"}], ")"}], "!"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "m"}], "-", "1"}], ")"}], "!!"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "-", "j", "+", "1"}], ")"}], "!!"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "+", "j", "+", "1"}], ")"}], "!!"}]}]], ",", " ", 
   RowBox[{"{", 
    RowBox[{"j", ",", " ", "0", ",", " ", "20", ",", " ", "2"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.44742381235201*^9, 3.447423837358665*^9}, {
   3.447423905263775*^9, 3.447423953414512*^9}, {3.447424323908957*^9, 
   3.447424330162079*^9}, {3.447424922199922*^9, 3.447424944339*^9}, {
   3.447424986976633*^9, 3.447425057141931*^9}, {3.447439799872214*^9, 
   3.447439956832295*^9}, {3.447439992791048*^9, 3.447440051446283*^9}, {
   3.447440109514372*^9, 3.447440181650615*^9}, 3.447454893277886*^9, {
   3.447457859944556*^9, 3.447457860278304*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "951930160480635893432024489903786418968370408556220707740133097472000000000\
000", ",", 
   RowBox[{
   "-", "916008267632310010661004697831945422026167751629570869712203546624000\
000000000"}], ",", 
   "81608009298151255495253145806846046689604036054270859301632679608320000000\
0000", ",", 
   RowBox[{
   "-", "672908146844405089171385588231888455159892928868549190732760691507200\
000000000"}], ",", 
   "51323502725420727140190426221076238105415562371330023021990222233600000000\
0000", ",", 
   RowBox[{
   "-", "361788625769359224102981693033816104677519538027408359007472058368000\
000000000"}], ",", 
   "23544974058005917759082935578391206812346509617656734475089451417600000000\
0000", ",", 
   RowBox[{
   "-", "141269844348035506554497613470347240874079057705940406850536708505600\
000000000"}], ",", 
   "78014690162347966306215099976161909139416793061489478409997883801600000000\
000", ",", 
   RowBox[{
   "-", "395726689229301278364859202777632872446317066253932136862308106240000\
00000000"}], ",", 
   "18392930626150622797239934776988570127786567868140507769656573952000000000\
000"}], "}"}]], "Output",
 CellChangeTimes->{
  3.447423956309968*^9, 3.447424946381252*^9, {3.447425033415788*^9, 
   3.447425057935714*^9}, {3.447439906010606*^9, 3.447439957568524*^9}, 
   3.447440055634905*^9, 3.44744014775129*^9, 3.447440182792379*^9, 
   3.447454895950585*^9, 3.447457872827078*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "951930160480635893432024489903786418968370408556220707740133097472000000000\
000", ",", 
   RowBox[{
   "-", "916008267632310010661004697831945422026167751629570869712203546624000\
000000000"}], ",", 
   "81608009298151255495253145806846046689604036054270859301632679608320000000\
0000", ",", 
   RowBox[{
   "-", "672908146844405089171385588231888455159892928868549190732760691507200\
000000000"}], ",", 
   "51323502725420727140190426221076238105415562371330023021990222233600000000\
0000", ",", 
   RowBox[{
   "-", "361788625769359224102981693033816104677519538027408359007472058368000\
000000000"}], ",", 
   "23544974058005917759082935578391206812346509617656734475089451417600000000\
0000", ",", 
   RowBox[{
   "-", "141269844348035506554497613470347240874079057705940406850536708505600\
000000000"}], ",", 
   "78014690162347966306215099976161909139416793061489478409997883801600000000\
000", ",", 
   RowBox[{
   "-", "395726689229301278364859202777632872446317066253932136862308106240000\
00000000"}], ",", 
   "18392930626150622797239934776988570127786567868140507769656573952000000000\
000"}], "}"}]], "Output",
 CellChangeTimes->{
  3.447423956309968*^9, 3.447424946381252*^9, {3.447425033415788*^9, 
   3.447425057935714*^9}, {3.447439906010606*^9, 3.447439957568524*^9}, 
   3.447440055634905*^9, 3.44744014775129*^9, 3.447440182792379*^9, 
   3.447454895950585*^9, 3.447457872853592*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l", "=", "64"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"j", "/", "2"}]], "2", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m", "+", "1"}], ")"}], "!"}], " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "m"}], "-", "1"}], ")"}], "!!"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m", "-", "j", "+", "1"}], ")"}], "!!"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m", "+", "j", "+", "1"}], ")"}], "!!"}]}]], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", "64", ",", " ", "2"}], "}"}]}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{3.447458226362085*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.519301604806359`*^77", ",", 
   RowBox[{"-", "9.160082676323101`*^77"}], ",", "8.160800929815126`*^77", 
   ",", 
   RowBox[{"-", "6.729081468444051`*^77"}], ",", "5.132350272542073`*^77", 
   ",", 
   RowBox[{"-", "3.6178862576935925`*^77"}], ",", "2.354497405800592`*^77", 
   ",", 
   RowBox[{"-", "1.412698443480355`*^77"}], ",", "7.801469016234797`*^76", 
   ",", 
   RowBox[{"-", "3.957266892293013`*^76"}], ",", "1.8392930626150623`*^76", 
   ",", 
   RowBox[{"-", "7.810696567269443`*^75"}], ",", "3.020136006010851`*^75", 
   ",", 
   RowBox[{"-", "1.0590087293804284`*^75"}], ",", "3.3512934474064187`*^74", 
   ",", 
   RowBox[{"-", "9.516018430907115`*^73"}], ",", "2.4076673138439688`*^73", 
   ",", 
   RowBox[{"-", "5.3818445838865186`*^72"}], ",", "1.0516248037479405`*^72", 
   ",", 
   RowBox[{"-", "1.7724013546313603`*^71"}], ",", "2.5320019351876575`*^70", 
   ",", 
   RowBox[{"-", "2.9948409986090574`*^69"}], ",", "2.837217788155949`*^68", 
   ",", 
   RowBox[{"-", "2.0474767543393446`*^67"}], ",", "1.0340791688582548`*^66", 
   ",", 
   RowBox[{"-", "3.07152228373739`*^64"}], ",", "2.982060469647952`*^62", ",",
    "2.840057590140907`*^60", ",", "7.962778290114691`*^58", ",", 
   "3.6526505917957304`*^57", ",", "2.3034733461774874`*^56", ",", 
   "1.8346247889909192`*^55", ",", "1.754858493817401`*^54"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.447458227335116*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"l", "+", "m", "-", "1"}], 
      RowBox[{"l", "-", "m"}]], 
     SqrtBox[
      FractionBox[
       RowBox[{"\[Pi]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "l"}], "+", "1"}], ")"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"j", "/", "2"}]], "2", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", "+", "1"}], ")"}], "!"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "m"}], "-", "1"}], ")"}], "!!"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", "-", "j", "+", "1"}], ")"}], "!!"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", "+", "j", "+", "1"}], ")"}], "!!"}]}]]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", "64", ",", " ", "2"}], "}"}]}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.447457961835548*^9, 3.447458065109579*^9}, {
  3.447458104719167*^9, 3.447458106169403*^9}, {3.447500088441473*^9, 
  3.447500122574242*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.391170974550633`", ",", 
   RowBox[{"-", "1.7079792675361662`"}], ",", "0.5693264225120553`", ",", 
   RowBox[{"-", "0.05175694750109595`"}], ",", 
   RowBox[{"-", "0.003981303653930458`"}], ",", 
   RowBox[{"-", "0.0007962607307860916`"}], ",", 
   RowBox[{"-", "0.00023419433258414457`"}], ",", 
   RowBox[{"-", "0.00008628212253100062`"}], ",", 
   RowBox[{"-", "0.00003697805251328599`"}], ",", 
   RowBox[{"-", "0.00001768515554983243`"}], ",", 
   RowBox[{"-", "9.196280885912861`*^-6"}], ",", 
   RowBox[{"-", "5.109044936618257`*^-6"}], ",", 
   RowBox[{"-", "2.994957376638288`*^-6"}], ",", 
   RowBox[{"-", "1.835619037294435`*^-6"}], ",", 
   RowBox[{"-", "1.168121205551004`*^-6"}], ",", 
   RowBox[{"-", "7.676225065049454`*^-7"}], ",", 
   RowBox[{"-", "5.186638557465848`*^-7"}], ",", 
   RowBox[{"-", "3.5907497705532793`*^-7"}], ",", 
   RowBox[{"-", "2.5397986181962225`*^-7"}], ",", 
   RowBox[{"-", "1.8310176084670437`*^-7"}], ",", 
   RowBox[{"-", "1.3427462462091654`*^-7"}], ",", 
   RowBox[{"-", "9.99917417389804`*^-8"}], ",", 
   RowBox[{"-", "7.550396825188316`*^-8"}], ",", 
   RowBox[{"-", "5.7738328663204764`*^-8"}], ",", 
   RowBox[{"-", "4.466549953191312`*^-8"}], ",", 
   RowBox[{"-", "3.492029963404116`*^-8"}], ",", 
   RowBox[{"-", "2.7568657605821972`*^-8"}], ",", 
   RowBox[{"-", "2.1961473008027675`*^-8"}], ",", 
   RowBox[{"-", "1.764118323595666`*^-8"}], ",", 
   RowBox[{"-", "1.4280957857679197`*^-8"}], ",", 
   RowBox[{"-", "1.1644473330107654`*^-8"}], ",", 
   RowBox[{"-", "9.558896017252552`*^-9"}], ",", 
   RowBox[{"-", "7.896479318599936`*^-9"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.44745804617813*^9, 3.447458066302023*^9}, 
   3.447458106990814*^9, 3.447500092737097*^9, 3.447500123063055*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LegendreP", "[", 
  RowBox[{"0", ",", " ", "0", ",", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.447440744877438*^9, 3.447440757773739*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.447440748271913*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"-", "3"}], ")"}], "!!"}]], "Input",
 CellChangeTimes->{{3.447425132695374*^9, 3.447425181762213*^9}, {
   3.44742526282371*^9, 3.4474252761945*^9}, 3.447435801274037*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.447425135911578*^9, 3.44742518219145*^9}, {
   3.447425264148133*^9, 3.447425276861725*^9}, 3.447435801821633*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}]], 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "*", "m", "*", "\[Theta]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "m"], "2", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}], ")"}], "!"}], " "}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "n"}], "-", 
      RowBox[{"2", "m"}], "+", "1"}], ")"}], "!!"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "n"}], "+", 
      RowBox[{"2", "m"}], "+", "1"}], ")"}], "!!"}]}]]}], "Input",
 CellChangeTimes->{{3.447426870542915*^9, 3.447426890269373*^9}, {
  3.447428703269102*^9, 3.447428725841109*^9}, {3.447432228721219*^9, 
  3.447432230095406*^9}, {3.447502661948384*^9, 3.447502771398671*^9}}],

Cell[BoxData[
 FractionBox["4096", "52003"]], "Output",
 CellChangeTimes->{
  3.447426892836173*^9, {3.447428707174743*^9, 3.447428718057367*^9}, 
   3.447432230833112*^9, {3.447502734540425*^9, 3.447502772137032*^9}}],

Cell[BoxData[
 FractionBox["4096", "52003"]], "Output",
 CellChangeTimes->{
  3.447426892836173*^9, {3.447428707174743*^9, 3.447428718057367*^9}, 
   3.447432230833112*^9, {3.447502734540425*^9, 3.447502772163713*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "42"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "76"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{"m", "+", "1"}]], 
    RowBox[{"Cos", "[", 
     RowBox[{"j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"j", "/", "2"}]], "2", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m", "+", "1"}], ")"}], "!"}], " "}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m", "-", "j", "+", "1"}], ")"}], "!!"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m", "+", "j", "+", "1"}], ")"}], "!!"}]}]]}], "Input",
 CellChangeTimes->{{3.447502885894775*^9, 3.447502947159077*^9}}],

Cell[BoxData[
 FractionBox["1099511627776", 
  "33065127017439632095839040926967124296395"]], "Output",
 CellChangeTimes->{{3.44750293427845*^9, 3.447502949525406*^9}}],

Cell[BoxData[
 FractionBox["1099511627776", 
  "33065127017439632095839040926967124296395"]], "Output",
 CellChangeTimes->{{3.44750293427845*^9, 3.447502949554759*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "42"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "76"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"LegendreP", "[", 
     RowBox[{"m", ",", " ", "m", ",", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"j", "*", "\[Theta]"}], "]"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"j", "/", "2"}]], "2", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m", "+", "1"}], ")"}], "!"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "m"}], "-", "1"}], ")"}], "!!"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m", "-", "j", "+", "1"}], ")"}], "!!"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m", "+", "j", "+", "1"}], ")"}], "!!"}]}]]}], "Input",
 CellChangeTimes->{{3.447502989832249*^9, 3.447503039061235*^9}}],

Cell[BoxData[
 FractionBox["2110982479196835571458450778962385698816000000000", 
  "118361117944981"]], "Output",
 CellChangeTimes->{3.447503040575646*^9}],

Cell[BoxData[
 FractionBox["2110982479196835571458450778962385698816000000000", 
  "118361117944981"]], "Output",
 CellChangeTimes->{3.447503040587818*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "7"], 
    RowBox[{"Cos", "[", 
     RowBox[{"10", "*", "\[Theta]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.447432424176036*^9, 3.44743243212651*^9}}],

Cell[BoxData[
 FractionBox["32", "109395"]], "Output",
 CellChangeTimes->{3.44743243290186*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{
     RowBox[{"2", "k"}], "+", "1"}]], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"k", "\[Element]", "Integers"}], "&&", " ", 
     RowBox[{"k", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.447429537317045*^9, 3.447429540738633*^9}, {
  3.447429570992967*^9, 3.447429588388882*^9}, {3.447429628781213*^9, 
  3.447429641317019*^9}, {3.44742992818406*^9, 3.447429963372495*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"1", "+", "k"}], "]"}]}], 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["3", "2"], "+", "k"}], "]"}]], "]"}]], "Input",
 CellChangeTimes->{{3.447429970638046*^9, 3.447429984678602*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "k"}], "]"}]}], 
  RowBox[{"Gamma", "[", 
   RowBox[{
    FractionBox["3", "2"], "+", "k"}], "]"}]]], "Output",
 CellChangeTimes->{{3.447429979074924*^9, 3.447429985349408*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"-", "1"}], ")"}], "!!"}]], "Input",
 CellChangeTimes->{{3.447430216242844*^9, 3.447430219923209*^9}, {
  3.447453040511062*^9, 3.447453042667648*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.447430220892286*^9, 3.447453043336138*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{
      RowBox[{"2", "k"}], "+", "1"}]], 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "*", "j", "*", "\[Theta]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Element]", "Integers"}], ",", " ", 
      RowBox[{"j", "\[Element]", "Integers"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.447432866096803*^9, 3.447432907954077*^9}, {
  3.447432984198835*^9, 3.447432988179351*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"k", ">", 
    RowBox[{"-", "1"}]}], ",", "0", ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "j", " ", "\[Theta]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "k"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"j", "\[Element]", "Integers"}], "&&", 
       RowBox[{"k", "\[Element]", "Integers"}], "&&", 
       RowBox[{"k", "\[LessEqual]", 
        RowBox[{"-", "1"}]}]}]}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.447432909552756*^9, 3.447432990269391*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}]], 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "*", "m", "*", "\[Theta]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.447432931171455*^9, {3.447434625099491*^9, 3.447434629865991*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", "n", "]"}], ">", 
    RowBox[{"-", "1"}]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"2", " ", "n"}]}]], " ", "\[Pi]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"m", " ", "\[Pi]"}], "]"}], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", "n"}]}], "]"}]}], 
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["3", "2"], "-", "m", "+", "n"}], "]"}], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["3", "2"], "+", "m", "+", "n"}], "]"}]}]], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "m", " ", "\[Theta]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"Re", "[", "n", "]"}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.447432935724551*^9, 3.447434637731419*^9, 
  3.447786960419055*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"2", " ", "n"}]}]], " ", "\[Pi]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"m", " ", "\[Pi]"}], "]"}], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", "n"}]}], "]"}]}], 
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["3", "2"], "-", "m", "+", "n"}], "]"}], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["3", "2"], "+", "m", "+", "n"}], "]"}]}]], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Element]", "Integers"}], ",", " ", 
      RowBox[{"j", "\[Element]", "Integers"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.447786978298569*^9, 3.447786988166835*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "n"}]}]], " ", "\[Pi]", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"m", " ", "\[Pi]"}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"2", "+", 
     RowBox[{"2", " ", "n"}]}], "]"}]}], 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["3", "2"], "-", "m", "+", "n"}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["3", "2"], "+", "m", "+", "n"}], "]"}]}]]], "Output",
 CellChangeTimes->{3.447786990041082*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "n"], 
    RowBox[{"Cos", "[", 
     RowBox[{"m", "*", "\[Theta]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.447786418383737*^9, 3.447786422464519*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", "n", "]"}], ">", 
    RowBox[{"-", "1"}]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"-", "n"}]], " ", "\[Pi]", " ", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"m", " ", "\[Pi]"}], "2"], "]"}], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "+", "n"}], "]"}]}], 
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", "m", "+", "n"}], ")"}]}], "]"}], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "m", "+", "n"}], ")"}]}], "]"}]}]], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"m", " ", "\[Theta]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "n"]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"Re", "[", "n", "]"}], "\[LessEqual]", 
       RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.447786426135616*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "n"], 
    RowBox[{"Sin", "[", 
     RowBox[{"m", "*", "\[Theta]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.447785317072505*^9, 3.447785322573099*^9}, {
  3.447785520588813*^9, 3.447785538635647*^9}, {3.447786382199662*^9, 
  3.447786387554089*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", "n", "]"}], ">", 
    RowBox[{"-", "2"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "m", "+", "n"}], ")"}]}], "]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"-", "n"}]], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", "m", " ", 
           "\[Pi]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"m", "+", 
                RowBox[{"3", " ", "n"}]}], ")"}], " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["m", "2"], "-", 
              SuperscriptBox["n", "2"]}], ")"}], " ", "\[Pi]", " ", 
            RowBox[{"Gamma", "[", 
             FractionBox[
              RowBox[{"m", "-", "n"}], "2"], "]"}], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "m"}], "+", "n"}], ")"}]}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Gamma", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "m", "+", "n"}], ")"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
                 RowBox[{"(", 
                  RowBox[{"m", "+", 
                   RowBox[{"3", " ", "n"}]}], ")"}], " ", "\[Pi]"}]], " ", 
               RowBox[{"(", 
                RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]", " ", 
               RowBox[{"Gamma", "[", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["m", "2"]}], "-", 
                 FractionBox["n", "2"]}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                  "2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]]}], 
                ")"}], " ", 
               RowBox[{"Gamma", "[", 
                RowBox[{"-", "n"}], "]"}], " ", 
               RowBox[{"Gamma", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "m"}], "+", "n"}], ")"}]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"m", "-", "n"}], ")"}], " ", 
                  RowBox[{"Hypergeometric2F1", "[", 
                   RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "m"}], "-", "n"}], ")"}]}], ",", 
                    RowBox[{"-", "n"}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "m", "-", "n"}], ")"}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"m", "+", "n"}], ")"}], " ", 
                  RowBox[{"Hypergeometric2F1", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"m", "-", "n"}], "2"], ",", 
                    RowBox[{"-", "n"}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "m", "-", "n"}], ")"}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]]}], 
          ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["m", "2"]}], "+", 
           SuperscriptBox["n", "2"]}], ")"}], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{"-", "n"}], "]"}], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "m"}], "+", "n"}], ")"}]}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"m", "+", "n"}], ")"}], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{"-", "m"}], "]"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "m", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"m", " ", "\[Pi]"}], "2"], "]"}], " ", 
          RowBox[{"Gamma", "[", 
           RowBox[{"-", "m"}], "]"}], " ", 
          RowBox[{"Gamma", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "m", "+", "n"}], ")"}]}], "]"}], " ", 
          RowBox[{"HypergeometricPFQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               FractionBox["1", "2"], "-", 
               FractionBox["m", "2"]}], ",", 
              RowBox[{"1", "-", 
               FractionBox["m", "2"]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              FractionBox["3", "2"], ",", 
              RowBox[{"1", "-", 
               FractionBox["m", "2"], "-", 
               FractionBox["n", "2"]}]}], "}"}], ",", "1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"m", "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"m", " ", "\[Pi]"}], "+", 
               FractionBox[
                RowBox[{"n", " ", "\[Pi]"}], "2"]}], "]"}], " ", 
             RowBox[{"Gamma", "[", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "m", "-", "n"}], "]"}], " ", 
             RowBox[{"Gamma", "[", 
              RowBox[{"1", "+", "n"}], "]"}], " ", 
             RowBox[{"Gamma", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "m", "+", "n"}], ")"}]}], "]"}], " ", 
             RowBox[{"Hypergeometric2F1", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"1", "+", "n"}], "2"], ",", 
               FractionBox[
                RowBox[{"2", "+", "n"}], "2"], ",", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "+", "m", "+", "n"}], ")"}]}], ",", "1"}], 
              "]"}]}], "+", 
            RowBox[{
             SqrtBox["\[Pi]"], " ", 
             RowBox[{"Gamma", "[", 
              RowBox[{"-", "m"}], "]"}], " ", 
             RowBox[{"Gamma", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "m", "+", "n"}], ")"}]}], "]"}], " ", 
             RowBox[{"Hypergeometric2F1", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"1", "-", "m"}], "2"], ",", 
               RowBox[{"-", 
                FractionBox["m", "2"]}], ",", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "m", "-", "n"}], ")"}]}], ",", "1"}], 
              "]"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"m", " ", "\[Pi]"}], "2"], "]"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "n"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"m", " ", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"Re", "[", "n", "]"}], "\[LessEqual]", 
       RowBox[{"-", "2"}]}]}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.447785540015444*^9, {3.44778637845494*^9, 3.447786408228341*^9}, 
   3.447786552268941*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "m", "+", "n"}], ")"}]}], "]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"-", "n"}]], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", "m", " ", 
           "\[Pi]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"m", "+", 
                RowBox[{"3", " ", "n"}]}], ")"}], " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["m", "2"], "-", 
              SuperscriptBox["n", "2"]}], ")"}], " ", "\[Pi]", " ", 
            RowBox[{"Gamma", "[", 
             FractionBox[
              RowBox[{"m", "-", "n"}], "2"], "]"}], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "m"}], "+", "n"}], ")"}]}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Gamma", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "m", "+", "n"}], ")"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
                 RowBox[{"(", 
                  RowBox[{"m", "+", 
                   RowBox[{"3", " ", "n"}]}], ")"}], " ", "\[Pi]"}]], " ", 
               RowBox[{"(", 
                RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]", " ", 
               RowBox[{"Gamma", "[", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["m", "2"]}], "-", 
                 FractionBox["n", "2"]}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                  "2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]]}], 
                ")"}], " ", 
               RowBox[{"Gamma", "[", 
                RowBox[{"-", "n"}], "]"}], " ", 
               RowBox[{"Gamma", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "m"}], "+", "n"}], ")"}]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"m", "-", "n"}], ")"}], " ", 
                  RowBox[{"Hypergeometric2F1", "[", 
                   RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "m"}], "-", "n"}], ")"}]}], ",", 
                    RowBox[{"-", "n"}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "m", "-", "n"}], ")"}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"m", "+", "n"}], ")"}], " ", 
                  RowBox[{"Hypergeometric2F1", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"m", "-", "n"}], "2"], ",", 
                    RowBox[{"-", "n"}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "m", "-", "n"}], ")"}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]]}], 
          ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["m", "2"]}], "+", 
           SuperscriptBox["n", "2"]}], ")"}], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{"-", "n"}], "]"}], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "m"}], "+", "n"}], ")"}]}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"m", "+", "n"}], ")"}], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{"-", "m"}], "]"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "m", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"m", " ", "\[Pi]"}], "2"], "]"}], " ", 
          RowBox[{"Gamma", "[", 
           RowBox[{"-", "m"}], "]"}], " ", 
          RowBox[{"Gamma", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "m", "+", "n"}], ")"}]}], "]"}], " ", 
          RowBox[{"HypergeometricPFQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               FractionBox["1", "2"], "-", 
               FractionBox["m", "2"]}], ",", 
              RowBox[{"1", "-", 
               FractionBox["m", "2"]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              FractionBox["3", "2"], ",", 
              RowBox[{"1", "-", 
               FractionBox["m", "2"], "-", 
               FractionBox["n", "2"]}]}], "}"}], ",", "1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"m", "+", "n"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"m", " ", "\[Pi]"}], "+", 
               FractionBox[
                RowBox[{"n", " ", "\[Pi]"}], "2"]}], "]"}], " ", 
             RowBox[{"Gamma", "[", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "m", "-", "n"}], "]"}], " ", 
             RowBox[{"Gamma", "[", 
              RowBox[{"1", "+", "n"}], "]"}], " ", 
             RowBox[{"Gamma", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "m", "+", "n"}], ")"}]}], "]"}], " ", 
             RowBox[{"Hypergeometric2F1", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"1", "+", "n"}], "2"], ",", 
               FractionBox[
                RowBox[{"2", "+", "n"}], "2"], ",", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "+", "m", "+", "n"}], ")"}]}], ",", "1"}], 
              "]"}]}], "+", 
            RowBox[{
             SqrtBox["\[Pi]"], " ", 
             RowBox[{"Gamma", "[", 
              RowBox[{"-", "m"}], "]"}], " ", 
             RowBox[{"Gamma", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "m", "+", "n"}], ")"}]}], "]"}], " ", 
             RowBox[{"Hypergeometric2F1", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"1", "-", "m"}], "2"], ",", 
               RowBox[{"-", 
                FractionBox["m", "2"]}], ",", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "m", "-", "n"}], ")"}]}], ",", "1"}], 
              "]"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"m", " ", "\[Pi]"}], "2"], "]"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "\[Element]", "Integers"}], ",", " ", 
      RowBox[{"n", "\[Element]", "Integers"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.447786619649266*^9, 3.447786643675681*^9}, {
  3.447786872016894*^9, 3.447786910322007*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "::", "\<\"infd\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Expression \\!\\(\\(2\\^\\(-n\\)\\\\ \\(\\(\[LeftSkeleton] \
1 \[RightSkeleton]\\)\\)\\\\ \\(\\((\\(\\(\[ImaginaryI]\\\\ \
\[ExponentialE]\\^\\(1\\/2\\\\ \[ImaginaryI]\\\\ \\(\\((m + \\(\\(3\\\\ \
n\\)\\))\\)\\)\\\\ \[Pi]\\)\\\\ \\(\\((m\\^2 - n\\^2)\\)\\)\\\\ \[Pi]\\\\ \\(\
\\(Gamma[\\(\\(\\(m - n\\)\\/2\\)\\)]\\)\\)\\\\ \\(\\(Gamma[\\(\\(1\\/2\\\\ \
\\(\\((\\(\\(-m\\)\\) + n)\\)\\)\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(Gamma[\\(\\(1\\/2\\\\ \\(\\((2 + m + n)\\)\\)\\)\\)]\\)\\)\\\\ \
\\(\\((\\(\\(2\\\\ \\(\\(\[LeftSkeleton] 4 \[RightSkeleton]\\)\\)\\\\ \
\\(\\(Gamma[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\
\\)\\) + \\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)]\\)\\)\\)\\) + \
\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\))\\)\\)\\)\\))\\)\\)\\)\\/\\(\\(\\((\\(\\(-1\\)\\) + \
\[ExponentialE]\\^\\(2\\\\ \[ImaginaryI]\\\\ n\\\\ \[Pi]\\))\\)\\)\\\\ \
\\(\\((\\(\\(-m\\^2\\)\\) + n\\^2)\\)\\)\\\\ \
\\(\\(Gamma[\\(\\(-n\\)\\)]\\)\\)\\\\ \\(\\(Gamma[\\(\\(1\\/2\\\\ \
\\(\\((\\(\\(-m\\)\\) + n)\\)\\)\\)\\)]\\)\\)\\)\\) simplified to \
\\!\\(ComplexInfinity\\). \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FullSimplify/infd\\\", ButtonNote -> \
\\\"FullSimplify::infd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.44778691189065*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "::", "\<\"infd\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Expression \\!\\(\\(2\\^\\(-n\\)\\\\ \\(\\(\[LeftSkeleton] \
1 \[RightSkeleton]\\)\\)\\\\ \\(\\((\\(\\(\[ImaginaryI]\\\\ \
\[ExponentialE]\\^\\(1\\/2\\\\ \[ImaginaryI]\\\\ \\(\\((m + \
\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\))\\)\\)\\\\ \
\[Pi]\\)\\\\ \\(\\((m\\^2 - n\\^2)\\)\\)\\\\ \[Pi]\\\\ \
\\(\\(Gamma[\\(\\(1\\/2\\\\ \\(\\((m + \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\))\\)\\)\\)\\)]\\)\\)\\\\ \\(\\(Gamma[\\(\\(1\\/2\
\\\\ \\(\\((\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) \
+ n)\\)\\)\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(Gamma[\\(\\(1\\/2\\\\ \\(\\((\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\))\\)\\)\\)\\)]\\)\\)\\\\ \\(\\((\\(\
\[LeftSkeleton] 1 \
\[RightSkeleton]\\))\\)\\)\\)\\))\\)\\)\\)\\/\\(\\(\\((\\(\\(-1\\)\\) + \
\[ExponentialE]\\^\\(2\\\\ \[ImaginaryI]\\\\ n\\\\ \[Pi]\\))\\)\\)\\\\ \
\\(\\((\\(\\(-m\\^2\\)\\) + n\\^2)\\)\\)\\\\ \
\\(\\(Gamma[\\(\\(-n\\)\\)]\\)\\)\\\\ \\(\\(Gamma[\\(\\(1\\/2\\\\ \
\\(\\((\\(\\(-m\\)\\) + n)\\)\\)\\)\\)]\\)\\)\\) + \\(\\(\\(2\\\\ \\(\\(\
\[LeftSkeleton] 4 \[RightSkeleton]\\)\\)\\\\ \\(\\(HypergeometricPFQ[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) + \\(\\(\[LeftSkeleton] \
1 \[RightSkeleton]\\)\\)\\)\\/\\(\\(\\((m + n)\\)\\)\\\\ \\(\\(Gamma[\\(\\(-m\
\\)\\)]\\)\\)\\)\\) simplified to \\!\\(ComplexInfinity\\). \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FullSimplify/infd\\\", \
ButtonNote -> \\\"FullSimplify::infd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.447786912180227*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "::", "\<\"infd\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Expression \\!\\(\\(\\(2\\^\\(-n\\)\\\\ \[ExponentialE]\\^\
\\(\\(\\(-\\(\\(1\\/2\\)\\)\\)\\)\\\\ \[ImaginaryI]\\\\ m\\\\ \[Pi]\\)\\\\ \
\\(\\((\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\))\\)\\)\\)\\/\\(\\(\\((\\(\\(-1\\)\\) + \[ExponentialE]\\^\
\\(2\\\\ \[ImaginaryI]\\\\ n\\\\ \[Pi]\\))\\)\\)\\\\ \
\\(\\((\\(\\(-m\\^2\\)\\) + n\\^2)\\)\\)\\\\ \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)\\\\ \\(\\(Gamma[\\(\\(1\\/2\\\\ \\(\\((\\(\\(Times[\\(\
\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + n)\\)\\)\\)\\)]\\)\\)\\) \
+ \\(\\(\\(2\\\\ \\(\\(\[LeftSkeleton] 4 \[RightSkeleton]\\)\\)\\\\ \\(\\(\\(\
\\(\[LeftSkeleton] 17 \[RightSkeleton]\\)\\)[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\) + \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)\\)\\/\\(\\(\\((m + n)\\)\\)\\\\ \
\\(\\(Gamma[\\(\\(-m\\)\\)]\\)\\)\\)\\)\\/\\(2\\\\ \
\\(\\(Gamma[\\(\\(1\\/2\\\\ \\(\\((2 + m + n)\\)\\)\\)\\)]\\)\\)\\)\\) \
simplified to \\!\\(ComplexInfinity\\). \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FullSimplify/infd\\\", ButtonNote -> \
\\\"FullSimplify::infd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.447786912192162*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"General", "::", "\<\"stop\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(FullSimplify :: \\\"infd\\\"\\) \
will be suppressed during this calculation. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.447786912199246*^9}],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{3.447786633604741*^9, 3.447786859471082*^9, 
  3.447786912204731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"j", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"SphericalHarmonicY", "[", 
     RowBox[{"l", ",", " ", "m", ",", " ", "\[Theta]", ",", " ", "0"}], "]"}],
     
    RowBox[{"Cos", "[", 
     RowBox[{"j", " ", "\[Theta]"}], "]"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "  ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"SphericalHarmonicY", "[", 
      RowBox[{"l", ",", " ", "m", ",", " ", "\[Theta]", ",", " ", "0"}], 
      "]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"j", " ", "\[Theta]"}], "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "  ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{"\[Pi]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"l", "-", "m"}], ")"}], "!"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"l", "+", "m"}], ")"}], "!"}]]], 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"j", "/", "2"}]], "2", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "+", "1"}], ")"}], "!"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "m"}], "-", "1"}], ")"}], "!!"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "-", "j", "+", "1"}], ")"}], "!!"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "+", "j", "+", "1"}], ")"}], "!!"}]}]]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.447458668517796*^9, 3.447458780772308*^9}, {
   3.447458832860019*^9, 3.447458901526578*^9}, {3.447458964650241*^9, 
   3.447459025689054*^9}, 3.447459093108841*^9, 3.447459199750411*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVl3c81d8bwI2MjEpKyEpWyWxI7r2PEJLIJrLToIzC18hKSMgqIXuT7N39
fOy9996uzb2S1fDz++ec1/N6P/M853Vez7lgbqv5mIKMjMz5aPn/TonSdc5d
t8eFfYosojF3vsK/jMhwRajDopo7D8trROogX8xyJNwEfAMiFD/ZhtxcOPN0
rzTcFkYYCn4bPzOWHlX0rU0L9wSvyISil7qitwZMwgXjwj9C1J2mqVbGf7c0
bdhGv4QnQPU4+ZjaZrtM2JZR0efwPAifesZOjP+CCT4bg6lmzIfLM+WUDpbx
mN6Cd9zXNfNB8P5nC7r8ZIzhitEC11g+YMzxmqnbOZh53ms5tJYFcPaqa8z7
hGLMS0N6+621Agjja3+WRItginZ3tJ5IFMJABlyIO16L2YuYvTHuWAhxx297
9Uc3YDDinWwalYXgsL26vtjagvFur/jT8K8Qlk0Sq2tKOjGNT9OmbskXQaSC
N+t9mV4MHVVYbZ5/EczOsLhmfR7AqCe5p/G1F0FW6O9j6x4jmEjs04DoU8Vw
vpP6z13aSczIiJb1CZ1iUOFZelKUOoPhcgK1t9HFcLnjyauO3HmM+Wlhib2J
YujV0U2LElnCZHxnOfOCtwRWxTy+9lxdw6ypUOzOWJWA6t4n3r9PiRjxxfUR
3ZwSGGew+lXJ+BPj+HbkR9tmCZAuOR8fO72DqeRuSJC9VgplOsI+Er77mH9V
+T4l/5WC5fXXz+pe/sXI6399fBlfCo+WfWxfEsmwAdv+ygnkZTDyOH2J2ZES
2x76SviMYhmMR3QFzdynxjKJmJx4H1gGvdNxhCu+x7G6LSqkv51l8LOVdIeT
lxEb8/hGvwNzObzgbUw2jD6FnSLnLVvUK4fQzdBj29OnsXzxjDFGX8vBNZvm
mPLLs9int/bde6bLIdJUKFpRmRWbOzhvoshfAYtmLOfNnc5jtxy65aqeVcBx
mgjNSDJu7I2TP/jFv1fALY4Pq/nOF7BuORm0aVsVwJ70THEj7SK2WililU2q
EuIevwzsPSmAPTbv0RniVgly1gFvHCuFsHe9nhdQVleClE5l0fUcYWwIh27k
f8eqID35zPGyRVFsb/lt53XlKtA/689AvCWBPacj8tA8uAqK9mrurIpcxRqR
WLFDPVVgTtdG9Vf9OjYx+BiPKssPWJ5gH3+ZKoW93Di2cD3hB1AfBnQfkjBY
W/Om5uy5HxBnPPGQdguwxf8Kc7iF8OD61ZXpfPRt7F5MfEikDR6UrJUHDh/K
Y7FSgfbHC/Bwl67Y/bHsHaxPn6O2xy880K1ZVxNVlLCNtmZSP6UReG3fRy/h
fhf7IPPm3/FaBE7odRs46KthPynwTWvQoBD7hDNqzecBdnT6ZF3jPRQsfOy4
dTY1sBZsiwH5/ShsBJwwwdHpYPsfLpeEM1SDQkzUYm25LnZHyESwQ7QaCrh+
CGy562NlGlTo5F5VgxLKP+Mkb4Q91Z/eJRVRDRb4vTqKC8bY+VmKTyJF1TCr
y3KigtoUG0JWxc32sxrE1N+YJlGZYy1Onls4wVwD+RVzs330FtibXK+yj12t
gfOtX4NenLHEzsoIXyc61EADl6MdwmeFLVPxP1gIrwGtA7HwAMEn2CCDOXSs
sAZm1l75tvE+xZo+hXc9vTXwNMq6koz5Gfa6c6xK01YNyLnYRXJvP8PS+e2e
xJ+uBdlWF8rQmufYyUitgULJWvAuuMbC4WSNLUrJi8nUrIXat0GPpultsAGF
9KbxDrUwNOV6VsbdBvuo5gl/ZHgtMFKS/atAbbCS3XUr7wtr4cLLi13UnTZY
minufM/eWuho6JPojbPBjq+7OTpu1cJI7nMBPJ8NtuDP0C3r03WQdvimWlbP
GutHf43MTLIOHETfckUKPcc+ZA9t0NWsg6aKWJ/QwKdYsUtrgaoOdTApnm0X
8cIKe+ym8gO58Dr4/Tqk2LjaAjusmHr2ZmEdVL3glNyxNcXm6pCNifTWgUq1
ELLTqY/1sTRKvLhVBzL2WefYZNWweq/KH7OdrgdV0rdNhEYEe8XnjPBJyXpY
xBV1ObfK48nD7IjHNOvhJgu7R+J3A/xgQnvJgX09hPlKxVv+e4zP+S7kRgyr
h00ZG6+OO3Z4L7yvLKGgHngID66TNJ3w2u3TVOM99fCETCW9VeYN/tIYpq2H
VA+k31uW3z/44P8tfwltYmoAQ2ZVQY1DP3zv3rYOXqIB9JCSLn3qIHwGjcb5
Io0G8GC4WVc+FIp3Z8mdzrRvAK1muvs4qki8Bv/x9PiwBpjW+bepGRmFF7j2
2DqyoAHqowoFsSGx+N9yNeKBPQ2wRXmwdfgnAd+twbnjSWqANn3uiiLHZHya
qUuVI1MjTMYQOD5IpuFdbQe8rCUagWuHPP+uTCZezUNC0UyjEcKp+zK+fc7B
XwwOptezb4SIumdFW/fy8Huxy92qYY2wLjPK7lBQgG/PvvNZrqAR6Nxf7a6T
ivBJFUmGN3saIeD0FMOSdSneqfkvjyipEeaci8hE+Srw94YMCBeZmuAruNAt
cP/A8xBKctgkmkB1sgD30RLF/9pmsj+p0QRPdGdCaN1r8K2UL29Q2TcBKaq0
2NCuDp9wuvX3QWgTsMY0JcWHN+BfXxCoIeY3gc9LN9VnhCa8sriPH6G7CS4I
R74Is23Fc8LkvXFiE1hIUlCLSnbgt+7fYuo91Qy3Lkb632frxjcafR5sEm+G
THxQDlLZg7dzVTMrsmuGqMtvSo2sB/AqLzGZtKHNIPZlIoTdcQh/0fzy5qO8
ZqhSIDGIZI3g/+iw3ijqbIZxe+W+ILpx/OBd6je0G83QqVcSZfp1Ep+P3a57
xNgCFjvD1Yf50/hAiVm6oist4KzM2eMiNovHsiFfHlm3QG0nI4nWfwHPwvht
qjCwBf6+IhO7armIJ5LFCNBmt0CUvBDm+uNlfOu2/4tHLS0wSrzb8CRoFZ+6
5FhcuNQCvU1PHe+Mr+M9xi1+09C2gnoI171SYSJer1tD7pFgKyD6j0wfeJHw
dOUi3TRWraCYOzvu/XobP59z/tyjd61gLfREUu7cDh5JOG5cmNoKXt3vBoyG
dvFfInZTaepbIc9dKze+dB9v77+wajTXCm9+iJ5cL/2NV3HrkyykaIMKO/cB
xdG/eD7bGhca3jaYu8ZZbc5EhgzrxtEUmrbBSb+QeabPFEihygc1Gq82mBE0
EJ7bo0Q+4Fw+GSW0gbRbKiv9KyrEUvLJeAHSBuzZa5KzVDQITkDnIs1kG4j8
WOftLaRFWNnlnxv9bYMmXMQzXTc6ZItRoqCAox2aqvDn/5oyIGm/GMDIsB0e
BvI38N85hXgsH7wrcG0HhhS6pIqnTIj+xFI7dUw70MqKeprEn0YkewaZjSra
IVxcpPH0IjPC0FD/sGC4HZTOq8SMyp9FCOWFSdR77bAvIK/RWsKCoN8SlwzP
dcANFc9lchwr4hDp7kSt2wEGQl4LdJ/PI6oBz/GGjh3w30YxyeQpJyLgrn+s
ILIDFs4E3aDS5UZGLK6FG/Z1QL6yf4hj/QWkUI93JH+rAy6tf/WMXOJFgu6d
4qE+3Qn3i66YGHDyIbJX13LzH3SCgye/iPgPAYRdcHSbyq4T8AonUqiFhJCf
7M0yhh87AddMW8aQeQlJp0htoershDT9WouvS1cQr52wU4brnbDYLeJ4K0cU
ebjiqZfP0AX9NMRZVnlxhLHXcOHhvS6QS85vX1SQRAgNd6/kP+8CautfNQ4P
ryLVFVKvqAK7IIL7GleMxzXkdRIzeX5zF6hg1Hscft1A1D6RK1MtdYHNruj9
j3dvIpH1zkq5lN2AYYMZrjxp5EX54xCKi93wkf8tvqoAg4je1eAhv9YNXXwO
lO9e4xDiCKbwUKEbjKpLnhIEZZHXv5kH/1h1w+bCl1eyl+WQG0GHT347dwP+
fNwrMVl5ZJdjdX8/oBscyxSbuywVEFdcLedudjdwZ9lojY4rIpiu3LxfVd2Q
NqI1myehjPw1ib693d4Nvw73+hi/3EW8vO0ekza6wWG36/u7r6qI3Gmj3c3D
bmgYrQB5jBpCmaL0fuNUDzjvkc13E9URv3qu3FXJHlh0/HDqT4cGoqxDByvy
PcCszDcj3aqJHCf86l7S7oEp9spfNb1aSBBNx/aCUw8k41xf1tDpImpfyv3m
/XvA32WKT1VGDzl1KZV17ksP5E/x7yi56iMRKm6Y6coeGHRdMFrjN0S0x6w6
J9t6oCRZtrwjwghhsdE0nRjvgT0l4bWw08ZITPAl39F/PbDjYFRbkmyKGHGd
ZRk52Qs5pn+47d+YIZx5ZJlDPL0wPhGuf2hmjiR2D7X1y/VCD3+uFrOKJWJu
VveoT6sXnsTQBpqoPUYubn3f7LHshcBFx2h6YyskndmPucuvF8K7R6rFkp4i
T1Pt0zqieoHg3uX6buAZcvn6I6n2zF6QiC16vMNijeTqXjNsae2FoQ5hK+q6
F8jLRe71prFeuKHjGhAraouI/0fv2bjWC7e+l1J81bZDiqNnk+tO9EG7VPBu
K8EeqRwPXcFr9kGztvkNcntHxP2Fu/sPiz64Hsr+0ea5E4L99+RE1es++Kz9
rCjyhTNSzQ2S5Z/74DauRVAv3AXxyb9cX5rRB2cl/npEFLsiCrdZdEvK+6Dm
VN737hk3pMl83aVwtA/sOQtrU4w9kICfw/QFq33QOn+7e+m7J6LiWx+X96cP
SGYq3o3vvJDOtNiab1z9YBiWaFXwyxvpX7p7PMO8H85t+2kPCL5DNqOF7rx1
6IdGju8zfrvvELp7NN4mPv2gHy39ZKXDD5HNrd87l9wP2r8rfth+DEAMjVOu
bRf0g+rboh2C63vE6aSPXXdNPxxURPysfBGI5NjDUsBMP2A+bZBfeh6ENPJy
8T0m9UPuYMvf86+Dkem+Pya3yQfgmkCSL6dfCMJyo3Jon2cAFnU4DrzMQhGf
g2tNz00HgH3vGM+33nAkLoeZUsluABTsRp6Yu0Yg5UZbuIteA3Car65nWCAS
WUfySscSBuCVxk6bRcgnRP/t5XTVqQHgjU1z9I75gry6dnxWaHMAIiJqfJue
RyMhC4ucVIcDUP/QbMFfNgapV0r7hOcaBDoBjQe9f2IRMQaed6LGgzB0ed/w
oDIBUcH/q6Z7OQg9pG3FaqNExPLlxB/Cm0F4066pd24qEYnpjnmdEDcI1Kje
itB6EkL96azlqYlBwGn8Fp8US0UuKG4nrK0NQpNI6EJjcyqC2e0da/4zCB+u
xeLoHqch9gahWt4cQ/DxhUX+j4x0ZJyTXn7LcAjct9jVnHSzkN3OZY9O6yF4
yq7ePU6XjZz2aq7MdhuCoVI8T1NtNqI8+07SInYI3l0INhPDfkOK0sl4+0eH
YN5N3uGhUR4SKLZDVmowDNHkS9O5PEWIq/NdYcLzYZDMlXVyTixCnqFfdVjc
h+HER/4WHt5iRFldPtspfhhWve24li+XIDS2oVpSc8MQUK36fv1BGeL7/XJ6
uc0I8DW/NTedqkJe77zpXnozAnm+GTOpjj8QC1zPAevHEVgLzXnqx4BH5Dqd
1V0KRiD8vf7sJxkEId+o35PeGYE/lbxXte5XIx4iJveqPEdhT9Ch0j66Fnnp
WOi4GjoK9Icv/h1O1iKP8FSJ55NHIWLjwTDmYh2Cuf9t261+FKiDsieFMuqQ
K58Oub4NjIIT6zS7P6EO4ZjQvDtOGAU68bafpIv1yG+b/TjM8TGgsdH7LfWl
HlkpVm22YR+D6zkdhUWd9cjon4Str8JjEOCm88+dogFpVfjJ0YEZg2XDUTGT
qw1IZZCi0t/7Y/CfhrrfRbMGJLs/2l7EZAyU7wxyh31oQKI51mMf2Y2BQHrJ
qk1hAxJgKdsY7D0GiwMcX10GGpD/vkUQ8eFjMLRdFuW83YA83Sawb6SMwaVc
5lW+k42IHubWHa6SMZD91iON5W9EFH2DbdUaj7jf9zyXG43IjfbpaI+hMUjv
NCCFyjUiAmeu1X9fGgNt2QuMUncbkbNG/huT+2MAo7bWnCqNyLHUUdaT9OMw
uHoB3VJoRLZXReSBYxyCzub9MpduROaver+wFRkHBR1hwXOCjUifW39UAm4c
iu7w+JUwNiK1dYK1XerjoN4M6jNrDUghvdvaoek4eJiRym/VNyDJWp0s4g7j
oJdcNWsc0YCEx164bfp2HGZoP9QvGjQgPnOvrUMjxyFuYIjT5lwDYi/c/Kk6
bRwOLb5ZerbVI/OP570SS8ehyyY/zsC5HtFNJLPxahqH4G1bydts9UjzKIee
6fA4cIUtdDbk1yG3zkrLyS6PQ/ij/p5X2Drkm7qOCM/BOHAYDmD6kVqEK9Ce
lYx+As6raKbaXKtFKA6zNtArE2DasySlclCNvJZuHEnATkDW3vhIwN1qhPBq
tt5TbQLuzQv5z59FEf3v//JMTCZg9cBx5acbHmldYo8FuwnQJr90m7u+CsFc
lPLj9p4AXMNDCdx6BfL9kZb9YdgEWJOffsuzU4aE935QQosmoIKXXkMxuQg5
xpgpmVA/AVdH7GbI5AsQJ6V6Ts+BCZAJ4nMccc9FHv748xO3OwGw7RTR55mM
tO+wTnHRTkIETfbNcoZoBCdxvfUf6ySQdTuj98YDEN70F4nIrUk4ILBnFvYF
4yKn33+IvzcJVmt5Z2Py4nDU59OdPIwmYRr/y7fvazpu5eOkKs5jEuoXOFZu
5RbhjFoPpLg+TsLSCAlZvlKO6zx27uK/hEk4M8NS8GL+B67QRX0fXzMJvpNU
DUzedTi+Yuv5uN4jWceRmvJGI+7zhn/Xm7lJaE4h+/iRrgXnalGdhqWaAvsL
MmsWLF24tbjxUE6WKbgUVzM4KNiDMx7ec/srMAXMthna9wZ7cXL3JTTxylOQ
tWmRXvt8EFfsfx8bZzAFlDGCTOMawziB2mdCb55PgWpdveaW6iiOTir5HyZo
CvirOC+YeU/i+niYc350TcH4f7af/+zP4RQNxT5/nZ4C37Gc4LY7C7jyT/e8
3UlH8ZPDxo/HE3BqVLXC8cen4ZimfpCQ4zLOn/fBhROnpyH3rGNq6fYKrhom
WTzYp+EzQ/S7kz5rOEnXA3Jj4Wk4WyhuF9y0ibOOCtjtuDoN9mc4Tt6oJuJS
i1nWsZhpcLE/tFVIJeFYNiWHOe9PA8vqyg0y35+4Awvr7xMvp8EDJT2wztjF
mTL9/O+H0zTsZWrYFRfu4RoQV/lYj2m4EDVj969hHxfKFjisHzINIcPmmXeo
/uAEuzIp+nOnoWOtTqjVkQyC3MU7CkumgalenbjMSQ5bl8qjwvDTYHDi+F5N
Kzkgvk1X1DumwZh8YO63JCVo3yLotq5Ng7NnSt19WWqoXHxxIWt7Gto/pkjP
n6IB7k+/Vv3/HOV3wf3nbwINrGwe877DMAPVP+R9WFOPg3faxZxq4RkYjOPy
3LZkBIJmjmPC1RnQk3Zs8LY8AapkV2U9ZGbgVOD77afPTwKrodyAzL0ZyBo0
qB2tPwXfT5kdlj6fAZv9K+2FDMxwBllq+eQwA9yh609sM5jBxdou8rXrDBCr
30y03TkDCo2elyQDZ6DJvMU0IfgsjLnFa+VmzcD9rzJjGvdYQfaSAFdQwQyc
X8c35R5jg/TB3KXnFTMQhzGQu1DLBg4S+DdCLTNQpGWb++HueaBdHMtIWZoB
B0Z6L7YgLngZaeHgQ5yBZpq9/PEn3NB3exVjtjcDlEYn2lj5eCD+60EPF+0s
bPcN9VvRX4Drmmx/ogVnofPVm4MfO7xgjtd9EGo1C5oHcq9XFAVBspT1NJvt
LLR8iC3MWRYEirzRviTnWbA1UijL+igEyYnGekUBs/C2yWXbc+ESzL61Mh7M
noWjMVYssOIKFLoL8ZgUzYJrjJeIoLMI+DiuzCxWzQJ9fcqnOzdFgffJy8f7
7bNAZZsiL9AgBuYqTjYcm7NwbztYkf+dBEjK3xRN2z2Kb3Txu8WWBFBgDjZF
yOagL6By39NMEpJFPF4B0xxM//zQYXznKsye8nM1vzoHx2UCpKn5roP50KeA
TOc5EKoWETkO0iDZraci4TUH/jtnsNpt0kDRwsZQGTAHjhdP3Io3uAXJlXEf
26LnQEwh6Ze4uwzMxqV93qiag+gXHNOaI1gwtyxJvUY2D+RrMkUWLrdB8pGz
FZ52HoZmWflMum4Dha60kCLTPHDuB39VF5CDZCV8jh7vPPQ5ZFPTDsnB7OWG
QleFeVAtvkP2RV4BLEj91dUB82A24WKYrqgEpq6heuWh89C22VREmaoERpSq
G3lf5kHwdj96nEIZdM/WnU/InIfv4QHph6gyKEsXOL1pnofFxKJsFnkVEPUO
vnKLdgFWOrm8X5vdh71Til+K/BfgdoozOeeSBmxHk4vlfFwAA3YhJOC8JpB4
8Q3JUQvAsZ0UP6CmCSvXrv0My1gAd8Z0hz/FmjChz6tm17QAf5pVDEc9tKA2
8R+lCA0BAsfja2UpdQC5VBnDd5IAV/jfvhqU0IGqQkcJjnMEwLayvZ0z0YHi
+jVjekEChPcpcStU6kDG0mjFsiIB8iJabko/0YVU+88PZtQIQDwpOJkaqguJ
BxqLw7oE8Nf4+FGhQhdiGFrONFsRwMbE5fFvGj0IEi+zTfcjwIubK/OYGD1o
lRwiOIYQ4NJLTqeoKj2gvb776M5nAgweckXPjemBr7SU6nwaAWjyNE5eYtOH
Whm9uqJcAryJL8ecuKEPZDjnW29LCPCPnTf/h4Y+uMmVCfE2EMDyT7fVvXf6
UK4wlEBqP+LNswoscfqwo7jLUtNPgJVnL+I9i/Th2t1zIaHjBPjmZmfk3qwP
DvekqEznCXAakwvk4/qQf1/PXWyNACmCCdMUG/qwoe78899PAtgFOuc5/tOH
K5pRzzt/E8CYmWP7PqMBPNcum4mjXARtZ6FOT3YDyNQd0n9BvwgU135eO+Q3
AIL+bheGeRGovD7tomIGwGd4Tonh/CIkOu38KJEyALNHUsgY7yIUBY9Q9mMN
IN5E73rO5UUgWhJ5T8gZwLiZ8zdXyUUI+b2prKdgAOyWURdVbi3CG8Ms9+Qj
Wd+qLIZNbhHsmvnjZo/0Pz8dYlq+uwi9Xo1mdGAA/c93A8o1FmGV6+lDBmkD
OP3iHFmAwSLgMt9vjoobwANbKWc9s0XwMnA2fypgACH2ehsCzxaBDOvSkc5m
AO2vnB/v2C3C22gqvgA6A6Bzihpv+G8RfJR2Jf/t6YPSf2Van7yO8jtoSjyY
1wdf16FWy4BFGAvqXH/ZedQ/993b10IXYd7A+7VqyVH/PM9VUH5ZhMbSH898
o/UB5y0l3pewCAWRjBM0bvrg/lYvIzljEVwNySqaDPSh8p0zl0PeIrAef11X
fF0fbgSWMTChi4Cho20cnteD10FDb6cbF2FT4tsnYpkeFIbsHuR1LoLtWJz8
rr8eiERILatNLoJc6uiTMC49eP5Jz5SLsAhMNx4nHFvQhcwo56H19UW4kZt2
UyBTF/i+ljUE/V2Er3Q1qZJ8umAeP4QxolqCoHZxiT/jOpCYuFskzLgEP4s/
RkiE6wBHmlRyK8cSnBg7sRNL0oaHGXpsMXxLwIowV3yP1YYvWc6hz64sQeYJ
2pGl29rA/L3MgxazBEOF3v8F+2jBg/yhX0PyS2A78W2on0MLQgp3bTLuHfFJ
B+2/hZpAVyZlqGi4BMw5qGJ2rwZQVJdJ+bougYWD+t2dSnXIZjyd/tdnCa78
/FXwJ0wNNA1tzjh/WAK6diP6nUf3IWWHh/Ts6xK8Fr7NdaxfBVQV3EzmUpfg
gcZcSsWbu7AdNtBhlLsEq58x5SnnlUFBJDBbHVmCbxyKSjpX78Ca6zxrS+MS
aC9n3/7xTR4im3H+cl1H9YFt92c2OViw+GlxfXoJXowXZTRHY8EvxojzPMUy
nO7CpIlqioLoUumHSLplGDPeDVkNFYDB60wHjMzLsJ8H0hWinCDY0zBIxrcM
PGulbKlYItJMIxZKuLMMvLo5Tu+orqJ2Ou//magtw6/Ih23He6VQ1pQ5mxHd
Zdipeq1Ug8egz3Bf7rY/WQa3vn1bAVd5lM6RnLLw/TIwmZMri7xWQwtrDe2F
w5fhfO3BE/j+AH14qnQqNWYZXNYkLm1f1kRzcp7/iMpZBskrdVQmOB1UdbbP
8U3HkX+X+BNolyG6LSY6vzOwDHw5Sn4dgY/Qr28CNO0mlyEcz/CIS90EXWfF
illsLoP/kpjaposZGqKevqTMtAKKxkPUrPqP0RtxZHq1bCvwVoq+q9/QCp1c
edggw7sC+z6Ha36WT1Axv5PJoldXgELWNGDL9xna/eM/wzM6KyCULeNConiJ
Ml2+1zn1ZQXeI2MdSX9foQSaBKbmxBVgN1oZK417jVYubGnnZ67AFO28tJis
I2qZFDPmVb4C6LsQb+0gJ7ScdWXpwvAKcJslD5TcdkGNad5TWp5bBZ0bw4lf
eT3Rqwvjiqrcq1BansextuyJ0taJB14TXAUF9azbkwZeaKHH8CkqqVX4HkQX
bi/ojVLtCHKl665CrBz19+weH/TbfOPNpU+rYPzy4kUTcz/Uu5bdvTtuFViG
qd+dHfVDdRNfouVpqyA7da/7uJY/SmbEovi+ZBUabA5SM5UDUK2+x1qXB1ah
6cSJtiS5QPSg5thLmzNrQOo0M1KyC0GVE+RSiOFrcDnB4Hx8TwTq39w94RO7
BuoXKWr5BCLRRpIx69nUNchuKyi96RaJ3lFwC5YuWQNm2djwvwKfULnlImef
oTWoenTRO8v3M4q5yq96hmP9aF7OWyzSiUbFm2h+SaWtQ/AVH4HzVxNQW+In
sdbcdZDzimJQDU9Av7PxPTcqXQdOhfrHfqQEVMRGdsqraR3Wce+0yPQT0ctM
Li0ty+sgMHsPd5UlCeUzXIkzFN0AQxMzIhqSjJ7bbFf0LNuAmrLza9z6aeiX
MNRsGd0AKpEvgRe901DWa4XuWs0bIBzuso/POpJdogoFRzZA8AQFTcZ+GspO
ac7VfbABuCcfTg5GpKMxadrStyg3IYlDK4WjIh09r6yknUq/CTFWT6KGJ9JR
juArgf9xbILWMxG5BP4MlOvc7i8e3CYMvPqstJabgcZXLJ/6oLgJ4//cUPPO
DJTbaFz4l9omqG2dYRTeyEB5kmrMWkw2AY+1GIwXzkQT5Yvdrz7dhFjfz+du
381ELxDSo+LsNoFXc6KC1yoT5RUO6rD33oRIF0arsLhMNLnDY2ns/SYU7QtT
ni3PRC/a2VMqhm9CNt91oYaeTJSvRFeaPWUT3jxi/xlFkYWm6t3V9s3ZBPkr
+WQFbFko/4GM7UbRJsj5sFnNiWWhAnAhrbZ+E75NuPZ7GWSh6TPM1Vc6NoGI
UF+YtTnivtRjnwc24cxX+vt3PY+4wP4vsslN+Leyb1cQmoUKtqyesiZswuC7
/aSzSVlopvWk8MDGJgTzXtmyy89ChU70KMLuJpzsItohyBHPrzPLOtwE2ZdC
wvttWWjkJUPk+DEi4K67CXMMZ6H9rv1tOFoiLAskuPLOZaFn2u+PvGIggndg
AjfNehaqzdlEyDxFhCIjfp6GX1nop5ey2xNniPCorNpL728WOohWkDOzEWFV
9OqdCspslIXp6kllTiKUXKiyW6DNRnXNv3G8uUCEmV0T6iGGbPRzEf/lQn4i
/FSH4+9PZqODxxKkFi8RIYVlzH3n1JG9LusdDlEiTL97+pid6cg+I0xTQ/KI
0/I0bx7pR+3RmfrdIEIDWUiOPWM2OnzX90XVLSL8ez5/LvZ4Nsoa+9eViCPC
TeP7554cy0b115wC+OWJcMsCV9p9lO8XLPHTQyUiSCW2U/Yd1TMc8izl4z0i
zA2Qn362loWyTs/mH339QPeS5E7wTBaqL2GE7Gsd1Vem2YIZyEKjfQbaRPWJ
EE58kGnXlIWO9qmNWBgRQT7veTFfeRbKzt9M+GJKhKaz/szaGVnoQ6fb2x2W
RHjJFUrcj8xCY5oqySmfEcF1vt2NyTsLJU7nu2zaEEEm4rHa2RdZqNJBOmnM
jgiMorUZpXpZ6PaViJni/4hw28c+tFYoC1VRfG+Q5H50fhcT3/CfzEKTTDx7
gr2IwNvcmcuynYmqhVvXWAUQITu9oyeyIhNNzTGT1goigqhAqCZ7TCb6u16v
AEKJYP4fIs7tkolm7sonsX4hwlfn2mdfJDNRikcc3q0ZRJgQWxObD89A9Z1O
75fmEOH8ZULnoVUGmveR1j4ljwiq9inGHtIZqFHttql7GRHwfeQ/Po+ko4Vj
K8NPq47ul77Y0KWMdPT4r+kHOigRJJobPU6/SkdLBTtkRZuIcPpGk/sQVTrK
cLuunL2NCKQNL4fc9jTU4mGFOE0XEYLZBq62h6Whp4LTeKYHiRCilt87xJKG
Wm+9IQsnECGrVFmknz4VraV//Z/HChFq+AMmv9anoKz8z4nPN4ggRPabPsot
BW3U052W3yGCZLDV5bPzySgPXrT6FxUJGJj4S4nxSajTIN/N2eMksPLLvPJX
OQnt2GTP72QkwbkHb68LkhJRV16axIyzJCAwR19uk0lE+/2nPA34SZBA+WBc
/HUcejlpYPfOJRL0v2z7lpv1FfWubLOVFCGBsXVT2Z2xWFR0vcyE/joJPMzr
uColY9AAzVDAK5AgWsK60rjw6P3mvH3IY0kCjj7F7IH5YFTZqN/B/CkJfixs
W6infEC1Y58QUmxIUPEpq+ie/nvUmi2kQ8CRBEsBlIL1ab5ozNmx2Ct+JLDh
OUwQj3NE9xgdb97MJMEGT8Jit5ojHLtP+83lGwloqcOPaZC7wamgWO6q/CP/
2i1uKhZeIEhXS42rIIFIk71PjIIf6FKfHJBvJcGdULHUezJhUPwv0159jQS+
z7BGqFI8VGMxC6FEEnwebTfS/psA7e5d+r3bJGj2mQxLHkuEuYNfoPOXBHo3
YlkZvybD6V25E4YntuAByYpR40Y62G2OZ1uJb8Gx0V8b6u25IDx9av7N6y3I
PemqPXCpDNQWeWqd/tuCbQPFSJecMrDbEE+0dd+C0iaZP2Ui5VD854GRme8W
nPhLGb59tQIwbGH9CpFbYLOnlEqhVAWqmkwN9MVbcH6KtLX5FgWbeqb06J9b
cBofJH2Msx5qmpybruxuAU0LhOsY1cP/ACRE9vc=
     "]], 
    LineBox[{{1.3769120630412606`, 0.15906781807968448`}, {
     1.3795822513992682`, 0.14924446297848615`}, {1.3805447038412106`, 
     0.14554542985525257`}, {1.3815071562831531`, 0.14181234416812483`}, {
     1.383432061167038, 0.13424543626890623`}, {1.3872818709348083`, 
     0.11871898774225845`}, {1.3949814904703484`, 0.08618343101249257}, {
     1.4103807295414286`, 0.015966350182139617`}, {1.4114242279606084`, 
     0.010997140625927911`}, {1.412467726379788, 0.006004801005828933}, {
     1.4145547232181475`, -0.004046517358975306}, {
     1.4187287168948661`, -0.024396099450684033`}, {
     1.4270767042483037`, -0.06592118353736531}, {
     1.4434887727390158`, -0.1494663907710086}}], 
    LineBox[{{1.6981022679137332`, -0.1494663907710086}, {
     1.69887376817065, -0.1455166210305147}, {
     1.6998407371501063`, -0.1405663728690648}, {
     1.7017746751090188`, -0.1306692078793517}, {
     1.7056425510268436`, -0.11090632049261123`}, {
     1.7133783028624932`, -0.0716493257639825}, {1.7288498065337923`, 
     0.004684792611230873}, {1.7298978214904857`, 0.009704701169462116}, {
     1.7309458364471788`, 0.014701457859962084`}, {1.7330418663605656`, 
     0.024622761647798384`}, {1.737233926187339, 0.04415763765399141}, {
     1.745618045840886, 0.0818513882270559}, {1.7466660607975795`, 
     0.08642203079817755}, {1.7477140757542728`, 0.09095935078890367}, {
     1.7498101056676596`, 0.09993175448246644}, {1.754002165494433, 
     0.11745221074028148`}, {1.7623862851479801`, 0.15067978759191347`}, {
     1.7634343001046735`, 0.15465379590410894`}, {1.7644823150613669`, 
     0.15858642220691838`}, {1.7646126893514298`, 0.15906781807968448`}}], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, Pi}, {-0.1494663907710086, 0.15906781807968448`}}, {{
     0, 3.141592653589793}, {-0.1494663907710086, 0.15906781807968448`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.447458827178708*^9, 3.447458847098261*^9}, {
   3.447458892507908*^9, 3.447458906044438*^9}, 3.447458968768429*^9, 
   3.447459030971324*^9, 3.44745909686599*^9, 3.447459203327693*^9, 
   3.4474592841819*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzlXWuQVdWVvtBAA1FjHjMkYzJgyMM/ccY/pixLy0cV82OMjzE6Y5gkdkhQ
KyKPOIOJSZVxrDJRfAQjosYoJvIMBI1voJGXzUOFFlqUV/NoRB4tIIJAd7Pn
fPuu79x17l1nn9O3G0hVukrau+8+a31rr7XXXmvtvU9/u+7WG388ou7Wm4bV
Dfq3MXWjbrxp2E8HDRk5Jmqq6VEo9LixUCg0Dirg/130v/KP/7kJ/8iHjP8f
7H/VlJ6NPvl/Ly1+39f/6u3Wr1/vrrzySjdq1Ch3xRVXuI0bNxZ6+u9Od2ed
dZabMmUKn3fz5893w4cPByD/G5/xc/jwYXfNNde4a6+91t1yyy3usssuc42N
jb1yQjj33HNjUnPmzHHnn3++QKhx06dPdy0tLf4T2w4cOOAhRL+lrdbt3bvX
XXzxxTHUuXPnusGDB7tjx45FT4RxSAf+9PT/CN3m5mbXr18/19HR4R9pb2/3
nyNMhT4BPOgXDWWMp62tzffZsmVLJp5aoVtfX+8GDhyYkB2fFy5cKCNXyZ+Y
Dh486Nt27dpV5NcL7O6Tb99p2umOHm33nwZI2xsrWmI0j3QdSI18M3XqVA8G
PxMnTnRDhgwpWIZxv9B45k8r3aFDRxPQJj31pg2t1m3evNnUz/bt2039EFZd
XZ03+dGjR7uxY8e6/fv3B2E9PakEgbCe/MMb5bBo0uedd17CpC+44AKB08uN
Hz/efyeQxBrcyJEjY2p9Akie+P2KziCBEV511VVeWPyODDpGcuTIEXfnnXe6
2traEpLe3g0MGDAg/u+uu+4Kjo3mTkS/f3xFOSLLI4VI6CHXJDwFPviHJ3KN
Roi3tq4qSWhpqyTx9KS3KkhgLhw50p6XxOOPLa8gMWP62+7jj4/kJfHHpytR
zP5Lk/uw9VBXULz4wrvugw8OVJBIqNIagTlz1rutW/bm5W3pYeGC5mgStOYl
YVlDw+tb3Dvv7MxLwrLJN9/c7t5u3JGXhDUf8Pjy5du6QuK993Z7YUw9cHH4
5JM2b3n49AVpwwDOr9+YxZskYHEz/7w6QWJ7y36vzpwkdu/62FueJgETev6v
a/OSQPdXX1mXILF//ycx2RwkNm1qjUGTBISbOqUxL4kNG1rjMSeJ9vaOeIhT
9QB9L23Y6j99Udq0gU/I5r3yrZLVkYSe4jlIeNtv2pkgoad4DhJ6BgZQZEek
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\
\>"]],

Cell[BoxData[
 RowBox[{"-", "0.007433636055253272`"}]], "Output",
 CellChangeTimes->{{3.447458827178708*^9, 3.447458847098261*^9}, {
   3.447458892507908*^9, 3.447458906044438*^9}, 3.447458968768429*^9, 
   3.447459030971324*^9, 3.44745909686599*^9, 3.447459203327693*^9, 
   3.447459284392854*^9}],

Cell[BoxData[
 RowBox[{"-", "0.04670691284128777`"}]], "Output",
 CellChangeTimes->{{3.447458827178708*^9, 3.447458847098261*^9}, {
   3.447458892507908*^9, 3.447458906044438*^9}, 3.447458968768429*^9, 
   3.447459030971324*^9, 3.44745909686599*^9, 3.447459203327693*^9, 
   3.447459284428658*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"j", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"LegendreP", "[", 
     RowBox[{"l", ",", " ", "m", ",", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"j", " ", "\[Theta]"}], "]"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "  ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"LegendreP", "[", 
      RowBox[{"l", ",", " ", "m", ",", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"j", " ", "\[Theta]"}], "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "  ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"j", "/", "2"}]], "2", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "+", "1"}], ")"}], "!"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "m"}], "-", "1"}], ")"}], "!!"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "-", "j", "+", "1"}], ")"}], "!!"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "+", "j", "+", "1"}], ")"}], "!!"}]}]], "]"}]}], "Input",
 CellChangeTimes->{{3.447501782074519*^9, 3.447501784810049*^9}, {
   3.44750182897185*^9, 3.447501835766741*^9}, {3.447501902551147*^9, 
   3.447501916407153*^9}, {3.44750195063726*^9, 3.447501954298332*^9}, 
   3.447502335247453*^9, {3.447503245439782*^9, 3.447503255723948*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
VvV/9Vu9Fg==
     "]], 
    LineBox[{{1.3769120630412606`, 8.883213225492088*^10}, {
     1.3795822513992682`, 8.334623579848274*^10}, {1.3805447038412106`, 
     8.128049425763988*^10}, {1.3815071562831531`, 7.919573591065775*^10}, {
     1.383432061167038, 7.496996245516542*^10}, {1.3872818709348083`, 
     6.6299148046449104`*^10}, {1.3949814904703484`, 
     4.8129521321839066`*^10}, {1.4103807295414286`, 8.916479449650223*^9}, {
     1.4114242279606084`, 6.141402216374266*^9}, {1.412467726379788, 
     3.353407895788596*^9}, {1.4145547232181475`, -2.2597956616482744`*^9}, {
     1.4187287168948661`, -1.3624110515061829`*^10}, {
     1.4270767042483037`, -3.681397887446125*^10}, {
     1.4434887727390155`, -8.347017236374397*^10}}], 
    LineBox[{{1.6981022679137332`, -8.347017236374397*^10}, {
     1.69887376817065, -8.126440584101288*^10}, {
     1.6998407371501063`, -7.849991768318634*^10}, {
     1.7017746751090188`, -7.297280176540503*^10}, {
     1.7056425510268436`, -6.193612918592333*^10}, {
     1.7133783028624932`, -4.001288544143859*^10}, {1.7288498065337923`, 
     2.6162433221989837`*^9}, {1.7298978214904857`, 5.419633639208432*^9}, {
     1.7309458364471788`, 8.21009469245427*^9}, {1.7330418663605656`, 
     1.3750691029677061`*^10}, {1.737233926187339, 2.4660029637039593`*^10}, {
     1.745618045840886, 4.5710272712688545`*^10}, {1.7466660607975795`, 
     4.826276843601875*^10}, {1.7477140757542728`, 5.079665501574889*^10}, {
     1.7498101056676596`, 5.5807333864388405`*^10}, {1.754002165494433, 
     6.559171078141579*^10}, {1.7623862851479801`, 8.414779922864708*^10}, {
     1.7634343001046735`, 8.63671018898193*^10}, {1.7644823150613669`, 
     8.856329458333664*^10}, {1.7646126893514298`, 8.883213225492088*^10}}], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, Pi}, {-8.347017236374397*^10, 8.883213225492088*^10}}, {{
     0, 3.141592653589793}, {-8.347017236374397*^10, 8.883213225492088*^10}}],
  
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.447501938268245*^9, 3.447501955342427*^9}, 
   3.447502336209433*^9, 3.44750325857178*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNXQmQVcUV/QjMMIgbUdGggkuIVUmsQisYY2mpVZpUglsMJKhJRMKigiAa
BCsVDTHBqKBgFMUVF1ZZ3BeQZQCHHUYYh20YhmHYhgFZhmUAO+/079P/vv/7
vd/zh2B+lcP8nn733K1v377d/byx60O9uvfp+tA93bq2/UX/rv163dPtwbY3
9O0fNDVulEg06pVIJArbJvC7Cn41P36qgk+isf7dfJK/tNe/Jr6Lv/8r2aZW
fLXFtp1h2qq371Pbg//w7ZnsJF59ZVEGia+Kt6hFiyp9Sbzx+pIMEqtKt6ui
Lyt8Sbz+2uIMEmVlNWrunPIMEppCtgenTVvbEPa3bNlTHxIuJW7duld9+GGp
L4nRb2Ry8c03B9TUKSW+JF55OZOLffsOqXFji31JvDl6aQaJo0e/Ve+8vcyX
xMujFtq2Mx1tw7KTePutZRkkZJsHiZdeXJBBYtRLC+pDwsXFW28urQ8Jly5e
edmtC03hn6aT1Hkr0/bm6CXOB9OwSUJaniSkn3qQkP5HEnK0eJDQo+CD0hAJ
OWY9SGzatNuOxRxJICLMnrW+IYKUioCWozoRVpcsqQqRqKdRFy6s1GQkiSiH
iiABIVavrg6R8HRrkpgxo0yrVJKIGlwht4YZN2/eE3oQbg5398R+772vtVNJ
EmPHLNfu7kkCLr1376EQCbTt3n3AlwSYJiJJwM3JmQcJGV5IAvqBu3uSkOGF
JODmtI0hka//yVMHDx5UnTp1Up07d1b333+/6tixoyouLj5R/7mpmjlzpurR
oweyHv1v8D1xgvnb2rVr1S233KL69eunbr755gChLHFaDGdyHiFncLyvv96W
yVmB2rVrl7r22mv5iJo+fbq68MIL1bffJv0Cn8YOONMWWHOvZjv417Q1VR06
dNAi4TNt2jR15ZVXxrIsZ0+yvHRplR1uIZbz1ZEjR6AFy/Lhw4c1CxUVFUZr
Fkazn+dg9QRDq7y8XBUUFATD4KimBdr4vmnTpsSpMSzLnIEsg92FCyoly0Yl
/Jwg2amtrdXsbN++3anhppFsIwzMUG3atNHf2IbvhYWF+tspMazL0EnW167Z
YUOsYb2ZYWLcuHGaVXxefPFFdcMNN6Szm0XLnuw2AZXHzV/lFEEmMba+mL7O
xWTXrl31AHnggQfUww8/HMST3RxAUgeW2WjdtlAbNmxwukRVlZ4/1JgxY9Tl
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
F1GJypk=\
\>"]],

Cell[BoxData[
 RowBox[{"-", "4.1513472`*^9"}]], "Output",
 CellChangeTimes->{{3.447501938268245*^9, 3.447501955342427*^9}, 
   3.447502336209433*^9, 3.447503259003008*^9}],

Cell[BoxData[
 RowBox[{"-", "4.1513472`*^9"}]], "Output",
 CellChangeTimes->{{3.447501938268245*^9, 3.447501955342427*^9}, 
   3.447502336209433*^9, 3.447503259014004*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{"\[Pi]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "m"}], "+", "1"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "m"}], ")"}], "!"}]]], 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"j", "/", "2"}]], "2", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "+", "1"}], ")"}], "!"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "m"}], "-", "1"}], ")"}], "!!"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "-", "j", "+", "1"}], ")"}], "!!"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "+", "j", "+", "1"}], ")"}], "!!"}]}]]}], "]"}]], "Input",\

 CellChangeTimes->{{3.447504300750916*^9, 3.447504315435343*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.04670691284128777`"}]], "Output",
 CellChangeTimes->{3.447504316491994*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LegendreP", "[", 
         RowBox[{"m", ",", "m", ",", "  ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"j", "*", "\[Theta]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", " ", "0", ",", " ", "10", ",", " ", "2"}], "}"}], ",",
      " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "10", ",", " ", "2"}], "}"}]}], 
    "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.44754309396974*^9, 3.44754312167485*^9}, {
  3.44754352126808*^9, 3.447543524831022*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.`", 
      RowBox[{"-", "0.6666666666666666`"}], 
      RowBox[{"-", "0.13333333333333333`"}], 
      RowBox[{"-", "0.05714285714285714`"}], 
      RowBox[{"-", "0.031746031746031744`"}], 
      RowBox[{"-", "0.020202020202020204`"}]},
     {"4.`", 
      RowBox[{"-", "2.4`"}], "0.34285714285714286`", "0.0380952380952381`", 
      "0.01038961038961039`", "0.003996003996003996`"},
     {"112.`", 
      RowBox[{"-", "80.`"}], "26.666666666666668`", 
      RowBox[{"-", "2.4242424242424243`"}], 
      RowBox[{"-", "0.1864801864801865`"}], 
      RowBox[{"-", "0.037296037296037296`"}]},
     {"9504.`", 
      RowBox[{"-", "7392.`"}], "3360.`", 
      RowBox[{"-", "775.3846153846154`"}], "51.69230769230769`", 
      "3.0407239819004523`"},
     {"1.64736`*^6", 
      RowBox[{"-", "1.34784`*^6"}], "725760.`", 
      RowBox[{"-", "241920.`"}], "42691.76470588235`", 
      RowBox[{"-", "2246.9349845201236`"}]},
     {"4.837248`*^8", 
      RowBox[{"-", "4.093056`*^8"}], "2.4558336`*^8", 
      RowBox[{"-", "1.0112256`*^8"}], "2.66112`*^7", 
      RowBox[{"-", "3.8016`*^6"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.447543136190142*^9, 3.447543526826292*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"j", "/", "2"}]], "2", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", "+", "1"}], ")"}], "!"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "m"}], "-", "1"}], ")"}], "!!"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", "-", "j", "+", "1"}], ")"}], "!!"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", "+", "j", "+", "1"}], ")"}], "!!"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", " ", "0", ",", " ", "10", ",", " ", "2"}], "}"}], ",",
      " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "10", ",", " ", "2"}], "}"}]}], 
    "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.447543175201474*^9, 3.447543182217271*^9}, {
  3.447543307940051*^9, 3.447543309104376*^9}, {3.447543370580473*^9, 
  3.447543370686435*^9}, {3.447543533268783*^9, 3.447543537985549*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.`", 
      RowBox[{"-", "0.6666666666666666`"}], 
      RowBox[{"-", "0.13333333333333333`"}], 
      RowBox[{"-", "0.05714285714285714`"}], 
      RowBox[{"-", "0.031746031746031744`"}], 
      RowBox[{"-", "0.020202020202020204`"}]},
     {"4.`", 
      RowBox[{"-", "2.4`"}], "0.34285714285714286`", "0.0380952380952381`", 
      "0.01038961038961039`", "0.003996003996003996`"},
     {"112.`", 
      RowBox[{"-", "80.`"}], "26.666666666666668`", 
      RowBox[{"-", "2.4242424242424243`"}], 
      RowBox[{"-", "0.1864801864801865`"}], 
      RowBox[{"-", "0.037296037296037296`"}]},
     {"9504.`", 
      RowBox[{"-", "7392.`"}], "3360.`", 
      RowBox[{"-", "775.3846153846154`"}], "51.69230769230769`", 
      "3.0407239819004523`"},
     {"1.64736`*^6", 
      RowBox[{"-", "1.34784`*^6"}], "725760.`", 
      RowBox[{"-", "241920.`"}], "42691.76470588235`", 
      RowBox[{"-", "2246.9349845201236`"}]},
     {"4.837248`*^8", 
      RowBox[{"-", "4.093056`*^8"}], "2.4558336`*^8", 
      RowBox[{"-", "1.0112256`*^8"}], "2.66112`*^7", 
      RowBox[{"-", "3.8016`*^6"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.447543183572409*^9, 3.447543312889356*^9, 
  3.447543371779957*^9, 3.447543538876011*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"j", "/", "2"}]], "2", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "+", "1"}], ")"}], "!"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "m"}], "-", "1"}], ")"}], "!!"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "-", "j", "+", "1"}], ")"}], "!!"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "+", "j", "+", "1"}], ")"}], "!!"}]}]], "]"}]}], "Input",
 CellChangeTimes->{{3.447604552389933*^9, 3.447604577480145*^9}, {
  3.447604627852043*^9, 3.447604632389853*^9}}],

Cell[BoxData["4.`"], "Output",
 CellChangeTimes->{{3.447604563903535*^9, 3.447604578362958*^9}, 
   3.447604633341142*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         RowBox[{"LegendreP", "[", 
          RowBox[{
           RowBox[{"m", "+", "1"}], ",", "m", ",", "  ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"j", "*", "\[Theta]"}], "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", " ", "0", ",", " ", "10", ",", " ", "2"}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "0", ",", " ", "10", ",", " ", "2"}], "}"}]}], 
     "]"}], ",", " ", "18"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.447611926483601*^9, 3.447611943220667*^9}, {
  3.44761210223276*^9, 3.447612104148044*^9}, {3.447612538491557*^9, 
  3.447612549332557*^9}, {3.44761258522577*^9, 3.447612585536811*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.66666666666666666666666666667`18.000000000000004", 
      "0.13333333333333333333333333333`18.000000000000004", 
      RowBox[{"-", "0.24761904761904761904761904762`18.000000000000004"}], 
      RowBox[{"-", "0.06984126984126984126984126984`18.000000000000004"}], 
      RowBox[{
      "-", "0.0352092352092352092352092352110856743`18.000000000000004"}], 
      RowBox[{
      "-", "0.02153402153402153402153402153402153402`18.000000000000004"}]},
     {"4.`18.000000000000004", 
      RowBox[{"-", "0.57142857142857142857142857143`18.000000000000004"}], 
      RowBox[{"-", "2.09523809523809523809523809524`18.000000000000004"}], 
      "0.53679653679653679653679653679`18.000000000000004", 
      "0.07858807858807858807858807858`18.000000000000004", 
      "0.02530802530802530802530802530802530802`18.000000000000004"},
     {"144.`18.000000000000004", 
      RowBox[{"-", "48.`18.000000000000007"}], 
      RowBox[{"-", "65.45454545454545454545454545454`18.000000000000007"}], 
      "48.67132867132867132867132867133`18.000000000000004", 
      RowBox[{"-", "6.37762237762237762237762237762`18.000000000000007"}], 
      RowBox[{"-", "0.61209378856437679967091731798`18.000000000000004"}]},
     {"13728.`18.000000000000004", 
      RowBox[{"-", "6240.`18.000000000000007"}], 
      RowBox[{"-", "4704.`18.000000000000004"}], "6048.`18.000000000000004", 
      RowBox[{"-", "2174.11764705882352941176470588235`18.000000000000007"}], 
      "189.32507739938080495356037151703`18.000000000000004"},
     {"2.54592`18.000000000000004*^6", 
      RowBox[{"-", "1.37088`18.000000000000004*^6"}], 
      RowBox[{"-", "587520.`18.000000000000004"}], 
      "1.2096`18.000000000000004*^6", 
      RowBox[{
      "-", "674829.47368421052631578947368421052`18.000000000000004"}], 
      "161886.31578947368421052631578947368`18.000000000000004"},
     {"7.814016`18.000000000000004*^8", 
      RowBox[{"-", "4.6884096`18.000000000000004*^8"}], 
      RowBox[{"-", "1.0112256`18.000000000000004*^8"}], 
      "3.6723456`18.000000000000004*^8", 
      RowBox[{"-", "2.7143424`18.000000000000004*^8"}], 
      "1.0065975652173913043478260869565217392`18.000000000000004*^8"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.447611928381022*^9, 3.447611954370521*^9}, 
   3.447612110115613*^9, 3.4476125570935*^9, 3.447612587750445*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], 
       RowBox[{"LegendreP", "[", 
        RowBox[{
         RowBox[{"m", "+", "1"}], ",", "m", ",", "  ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"j", "*", "\[Theta]"}], "]"}], 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", " ", "0", ",", " ", "10", ",", " ", "2"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", "10", ",", " ", "2"}], "}"}]}], 
   "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.44761212142989*^9, 3.447612130023174*^9}, {
  3.447612502281966*^9, 3.447612530631558*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.6666666666666671`", "0.13333333333333336`", 
      RowBox[{"-", "0.24761904761904777`"}], 
      RowBox[{"-", "0.06984126984126997`"}], 
      RowBox[{"-", "0.035209235209235294`"}], 
      RowBox[{"-", "0.021534021534021636`"}]},
     {"4.0000000000000036`", 
      RowBox[{"-", "0.5714285714285766`"}], 
      RowBox[{"-", "2.0952380952381007`"}], "0.5367965367965297`", 
      "0.07858807858807332`", "0.02530802530802559`"},
     {"144.00000000000014`", 
      RowBox[{"-", "48.000000000290434`"}], 
      RowBox[{"-", "65.45454545483486`"}], "48.67132867104067`", 
      RowBox[{"-", "6.377622377622378`"}], 
      RowBox[{"-", "0.6120937885643778`"}]},
     {"13728.000000000015`", 
      RowBox[{"-", "6240.000000000009`"}], 
      RowBox[{"-", "4704.`"}], "6047.999999999993`", 
      RowBox[{"-", "2174.117647058824`"}], "189.3250773993737`"},
     {"2.5459200000000023`*^6", 
      RowBox[{"-", "1.3708800000000019`*^6"}], 
      RowBox[{"-", "587519.9999999984`"}], "1.20959999999994`*^6", 
      RowBox[{"-", "674829.4736842092`"}], "161886.31578941355`"},
     {"7.81401600000001`*^8", 
      RowBox[{"-", "4.688409600000006`*^8"}], 
      RowBox[{"-", "1.0112255999999058`*^8"}], "3.6723456000022167`*^8", 
      RowBox[{"-", "2.714342399999906`*^8"}], "1.0065975652196045`*^8"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.447612131569486*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LegendreP", "[", 
         RowBox[{"m", ",", "m", ",", "  ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"j", "*", "\[Theta]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", " ", "1", ",", " ", "10", ",", " ", "2"}], "}"}], ",",
      " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "0", ",", " ", "10", ",", " ", "1"}], "}"}]}], 
    "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.447615157038822*^9, 3.44761518332536*^9}, {
  3.447877160377574*^9, 3.447877176856746*^9}, {3.447877263087974*^9, 
  3.447877335131438*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", 
      RowBox[{"-", "1.3333333333333333`"}], "0.`", "0.26666666666666666`", 
      "0.`", "0.0380952380952381`", "0.`", "0.012698412698412698`", "0.`", 
      "0.005772005772005772`", "0.`"},
     {"0.`", 
      RowBox[{"-", "16.`"}], "0.`", "6.857142857142857`", "0.`", 
      RowBox[{"-", "0.7619047619047619`"}], "0.`", 
      RowBox[{"-", "0.06926406926406926`"}], "0.`", 
      RowBox[{"-", "0.015984015984015984`"}], "0.`"},
     {"0.`", 
      RowBox[{"-", "864.`"}], "0.`", "480.`", "0.`", 
      RowBox[{"-", "130.9090909090909`"}], "0.`", "10.06993006993007`", "0.`",
       "0.6713286713286714`", "0.`"},
     {"0.`", 
      RowBox[{"-", "109824.`"}], "0.`", "69888.`", "0.`", 
      RowBox[{"-", "26880.`"}], "0.`", "5376.`", "0.`", 
      RowBox[{"-", "316.2352941176471`"}], "0.`"},
     {"0.`", 
      RowBox[{"-", "2.54592`*^7"}], "0.`", "1.76256`*^7", "0.`", 
      RowBox[{"-", "8.22528`*^6"}], "0.`", "2.4192`*^6", "0.`", 
      RowBox[{"-", "381978.94736842107`"}], "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.447877278605813*^9, 3.447877321004149*^9, 
  3.44787735217229*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "+", "1"}], ")"}], "/", "2"}]], 
        SuperscriptBox["2", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"m", "+", "3"}], ")"}], "/", "2"}]], 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"m", "+", "1"}], "2"], ")"}], "!"}], " ", 
        RowBox[{"m", "!!"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "m"}], "-", "1"}], ")"}], "!!"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"m", "-", "j", "+", "1"}], ")"}], "!!"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"m", "+", "j", "+", "1"}], ")"}], "!!"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", " ", "1", ",", " ", "10", ",", " ", "2"}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "0", ",", " ", "10", ",", " ", "1"}], "}"}]}], 
     "]"}], ",", " ", "8"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.447877378380609*^9, 3.447877462510461*^9}, {
  3.447890660017771*^9, 3.447890670529931*^9}, {3.447890708921345*^9, 
  3.447890709890678*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1.`7.999999999999999", " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "1.3333333333333333333`8."}], 
      RowBox[{
       RowBox[{"-", "0.5`7.999999999999999"}], " ", "\[ImaginaryI]"}], 
      "0.2666666666666666667`8.", "0", 
      "0.0380952380952380953`8.000000000000002", "0", 
      "0.0126984126984126984126984127`8.", "0", 
      "0.00577200577200577200577200577`8.", "0"},
     {
      RowBox[{"11.25`8.", " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "16.`7.999999999999999"}], 
      RowBox[{
       RowBox[{"-", "7.5`8."}], " ", "\[ImaginaryI]"}], 
      "6.8571428571428571429`8.", 
      RowBox[{"1.875`8.", " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "0.7619047619047619048`8.000000000000002"}], "0", 
      RowBox[{"-", "0.0692640692640692641`8.000000000000002"}], "0", 
      RowBox[{"-", "0.0159840159840159840021200921`7.999999999999999"}], 
      "0"},
     {
      RowBox[{"590.625`8.000000000000002", " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "864.`7.999999999999999"}], 
      RowBox[{
       RowBox[{"-", "442.96875`7.999999999999999"}], " ", "\[ImaginaryI]"}], 
      "480.`8.", 
      RowBox[{"177.1875`8.000000000000002", " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "130.9090909090909090909`8."}], 
      RowBox[{
       RowBox[{"-", "29.53125`8."}], " ", "\[ImaginaryI]"}], 
      "10.0699300699300699301`8.", "0", 
      "0.6713286713286713287`8.000000000000002", "0"},
     {
      RowBox[{"73901.953125`8.000000000000002", " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "109824.`8."}], 
      RowBox[{
       RowBox[{"-", "59121.5625`7.999999999999999"}], " ", "\[ImaginaryI]"}], 
      "69888.`7.999999999999999", 
      RowBox[{"29560.78125`7.999999999999999", " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "26880.`8.000000000000002"}], 
      RowBox[{
       RowBox[{"-", "8445.9375`8.000000000000002"}], " ", "\[ImaginaryI]"}], 
      "5376.`7.999999999999999", 
      RowBox[{"1055.7421875`8.000000000000002", " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "316.2352941176470588235`8."}], "0"},
     {
      RowBox[{"1.69604982421875`7.999999999999999*^7", " ", "\[ImaginaryI]"}],
       
      RowBox[{"-", "2.54592`8.*^7"}], 
      RowBox[{
       RowBox[{"-", "1.413374853515625`7.999999999999999*^7"}], " ", 
       "\[ImaginaryI]"}], "1.76256`8.000000000000002*^7", 
      RowBox[{"8.076427734375`7.999999999999999*^6", " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "8.22528`7.999999999999999*^6"}], 
      RowBox[{
       RowBox[{"-", "3.028660400390625`8.*^6"}], " ", "\[ImaginaryI]"}], 
      "2.4192`8.000000000000002*^6", 
      RowBox[{"673035.64453125`7.999999999999999", " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "381978.9473684210526315789`7.999999999999999"}], 
      RowBox[{
       RowBox[{"-", "67303.564453125`8.000000000000002"}], " ", 
       "\[ImaginaryI]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.447877501977429*^9, 3.447890671243166*^9, 
  3.44789071065021*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing functions", "Section",
 CellChangeTimes->{{3.4596838993622*^9, 3.4596839062308683`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SphericalHarmonicY", "[", 
  RowBox[{"0", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SphericalHarmonicY", "[", 
  RowBox[{"1", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SphericalHarmonicY", "[", 
  RowBox[{"1", ",", "1", ",", "\[Theta]", ",", "\[Phi]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SphericalHarmonicY", "[", 
  RowBox[{"2", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SphericalHarmonicY", "[", 
  RowBox[{"2", ",", "1", ",", "\[Theta]", ",", "\[Phi]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SphericalHarmonicY", "[", 
  RowBox[{"2", ",", "2", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.459685294797254*^9, 3.459685308577281*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"]}]]], "Output",
 CellChangeTimes->{3.459685309254032*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox[
   FractionBox["3", "\[Pi]"]], " ", 
  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{3.459685309255806*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
  SqrtBox[
   FractionBox["3", 
    RowBox[{"2", " ", "\[Pi]"}]]], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{3.459685309261446*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SqrtBox[
   FractionBox["5", "\[Pi]"]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.459685309263865*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
  SqrtBox[
   FractionBox["15", 
    RowBox[{"2", " ", "\[Pi]"}]]], " ", 
  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{3.459685309266138*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
  SqrtBox[
   FractionBox["15", 
    RowBox[{"2", " ", "\[Pi]"}]]], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.459685309268251*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"0", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "+", 
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"1", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "+", 
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"1", ",", "1", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "+", 
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"2", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "+", 
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"2", ",", "1", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "+", 
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"2", ",", "2", ",", "\[Theta]", ",", "\[Phi]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4596839259995537`*^9, 3.459684060116787*^9}, {
  3.459685268772838*^9, 3.459685272850773*^9}, {3.459685563677423*^9, 
  3.45968558671665*^9}, {3.459685709144127*^9, 3.459685743381772*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", 
  RowBox[{"Re", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{"f", "[", 
     RowBox[{"\[Theta]", ",", " ", "\[Phi]"}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.459685599071228*^9, 3.459685642326741*^9}, {
  3.459685681945359*^9, 3.459685684213565*^9}, {3.459685715237361*^9, 
  3.459685794037664*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"8", " ", 
    SqrtBox["\[Pi]"]}]], 
  RowBox[{"(", 
   RowBox[{"4", "-", 
    RowBox[{"2", " ", 
     SqrtBox["5"]}], "+", 
    RowBox[{"2", " ", 
     SqrtBox["6"], " ", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     SqrtBox["30"], " ", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "]"}]}], "-", 
    RowBox[{
     SqrtBox["30"], " ", 
     RowBox[{"Im", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "]"}]}], "+", 
    RowBox[{"8", " ", 
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         FractionBox["3", "\[Pi]"]], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        FractionBox["3", "4"], " ", 
        SqrtBox[
         FractionBox["5", "\[Pi]"]], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         FractionBox["3", 
          RowBox[{"2", " ", "\[Pi]"}]]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         FractionBox["15", 
          RowBox[{"2", " ", "\[Pi]"}]]], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        SqrtBox[
         FractionBox["15", 
          RowBox[{"2", " ", "\[Pi]"}]]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.459685617793584*^9, 3.4596856429456797`*^9}, 
   3.459685684673654*^9, {3.459685720385455*^9, 3.459685794748294*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"], "]"}]], "Input",
 CellChangeTimes->{{3.459874613166429*^9, 3.459874614063776*^9}, {
  3.4600452916622677`*^9, 3.4600453023300753`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{"3", "-", 
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "\[Theta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.459874614724943*^9, {3.460045292747916*^9, 3.460045303124992*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", 
  RowBox[{"4", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.4600442914929867`*^9, 3.460044294147434*^9}, 
   3.460045306778644*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "\[Theta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.460044296016348*^9, 3.460045307165246*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "\[Theta]", "]"}], 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}], "]"}]], "Input",
 CellChangeTimes->{{3.459685818818459*^9, 3.459685846673649*^9}, {
  3.459854813918572*^9, 3.459854818177154*^9}, {3.459855466193222*^9, 
  3.459855468713389*^9}, {3.459856338330016*^9, 3.459856340823859*^9}, {
  3.4598583330678453`*^9, 3.459858342552719*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "16"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"3", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"5", " ", "\[Theta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.45968582170986*^9, 3.4596858473544617`*^9}, 
   3.459854819372521*^9, 3.459855469535368*^9, 3.459856341306212*^9, 
   3.45985834349612*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}], "+", 
   RowBox[{"4", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.459857117438114*^9, 3.459857119392555*^9}, {
  3.459858978312357*^9, 3.459859031523898*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "16"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"6", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", " ", "\[Theta]"}], "]"}], "-", 
    RowBox[{"5", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.459857119919414*^9, 3.4598590435940123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SphericalHarmonicY", "[", 
  RowBox[{"6", ",", "6", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]], "Input",
 CellChangeTimes->{{3.459855326298896*^9, 3.4598553821688232`*^9}, {
  3.459856318347103*^9, 3.459856320024637*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "64"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"6", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
  SqrtBox[
   FractionBox["3003", "\[Pi]"]], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "6"]}]], "Output",
 CellChangeTimes->{
  3.4598553104188213`*^9, {3.459855345950588*^9, 3.459855382703747*^9}, 
   3.459856321183578*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"SphericalHarmonicY", "[", 
     RowBox[{"l", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", " ",
     
    RowBox[{"{", 
     RowBox[{"m", ",", " ", "0", ",", " ", "6"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"l", ",", " ", "m", ",", " ", "6"}], " ", "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.459855208787225*^9, 3.459855267870914*^9}, {
  3.45986915964635*^9, 3.459869183817546*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["\[Pi]"]}]], 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       FractionBox["3", "\[Pi]"]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      FractionBox["1", "4"], " ", 
      SqrtBox[
       FractionBox["5", "\[Pi]"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "4"], " ", 
      SqrtBox[
       FractionBox["7", "\[Pi]"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}]}], ")"}]}], 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"30", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{"35", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}]}], 
      RowBox[{"16", " ", 
       SqrtBox["\[Pi]"]}]], 
     RowBox[{
      FractionBox["1", "16"], " ", 
      SqrtBox[
       FractionBox["11", "\[Pi]"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"15", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"70", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
        RowBox[{"63", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "32"], " ", 
      SqrtBox[
       FractionBox["13", "\[Pi]"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "+", 
        RowBox[{"105", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
        RowBox[{"315", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
        RowBox[{"231", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}]}], ")"}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["3", 
        RowBox[{"2", " ", "\[Pi]"}]]], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["15", 
        RowBox[{"2", " ", "\[Pi]"}]]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "8"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["21", "\[Pi]"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "8"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["5", "\[Pi]"]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"7", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "16"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["165", 
        RowBox[{"2", " ", "\[Pi]"}]]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"14", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{"21", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "16"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["273", 
        RowBox[{"2", " ", "\[Pi]"}]]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"5", "-", 
        RowBox[{"30", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{"33", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "\<\"\"\>"},
    {
     RowBox[{
      FractionBox["1", "4"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["15", 
        RowBox[{"2", " ", "\[Pi]"}]]], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
     RowBox[{
      FractionBox["1", "4"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["105", 
        RowBox[{"2", " ", "\[Pi]"}]]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
     RowBox[{
      FractionBox["3", "8"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["5", 
        RowBox[{"2", " ", "\[Pi]"}]]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"7", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
     RowBox[{
      FractionBox["1", "8"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["1155", 
        RowBox[{"2", " ", "\[Pi]"}]]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
     RowBox[{
      FractionBox["1", "64"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["1365", "\[Pi]"]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"18", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{"33", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       "2"]}], "\<\"\"\>", "\<\"\"\>"},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "8"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["35", "\[Pi]"]], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "8"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["35", "\[Pi]"]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "32"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["385", "\[Pi]"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "32"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["1365", "\[Pi]"]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"11", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       "3"]}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {
     RowBox[{
      FractionBox["3", "16"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["35", 
        RowBox[{"2", " ", "\[Pi]"}]]], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}], 
     RowBox[{
      FractionBox["3", "16"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["385", 
        RowBox[{"2", " ", "\[Pi]"}]]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}], 
     RowBox[{
      FractionBox["3", "32"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["91", 
        RowBox[{"2", " ", "\[Pi]"}]]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"11", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       "4"]}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "32"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["77", "\[Pi]"]], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "5"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "32"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["1001", "\[Pi]"]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       "5"]}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {
     RowBox[{
      FractionBox["1", "64"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      SqrtBox[
       FractionBox["3003", "\[Pi]"]], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       "6"]}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{
    Rational[1, 2] Pi^Rational[-1, 2], Rational[1, 2] (3/Pi)^Rational[1, 2] 
     Cos[$CellContext`\[Theta]], 
     Rational[1, 4] (5/Pi)^Rational[1, 2] (-1 + 
      3 Cos[$CellContext`\[Theta]]^2), 
     Rational[1, 4] (7/Pi)^Rational[1, 2] ((-3) Cos[$CellContext`\[Theta]] + 
      5 Cos[$CellContext`\[Theta]]^3), Rational[3, 16] 
     Pi^Rational[-1, 2] (3 - 30 Cos[$CellContext`\[Theta]]^2 + 
      35 Cos[$CellContext`\[Theta]]^4), 
     Rational[1, 16] (11/Pi)^Rational[1, 2] (15 Cos[$CellContext`\[Theta]] - 
      70 Cos[$CellContext`\[Theta]]^3 + 63 Cos[$CellContext`\[Theta]]^5), 
     Rational[1, 32] (13/Pi)^Rational[1, 2] (-5 + 
      105 Cos[$CellContext`\[Theta]]^2 - 315 Cos[$CellContext`\[Theta]]^4 + 
      231 Cos[$CellContext`\[Theta]]^6)}, {
    Rational[-1, 2] 
     E^(Complex[0, 1] $CellContext`\[Phi]) (Rational[3, 2]/Pi)^Rational[1, 2] 
     Sin[$CellContext`\[Theta]], Rational[-1, 2] 
     E^(Complex[0, 1] $CellContext`\[Phi]) (Rational[15, 2]/Pi)^
      Rational[1, 2] Cos[$CellContext`\[Theta]] Sin[$CellContext`\[Theta]], 
     Rational[-1, 8] 
     E^(Complex[0, 1] $CellContext`\[Phi]) (21/Pi)^Rational[1, 2] (-1 + 
      5 Cos[$CellContext`\[Theta]]^2) Sin[$CellContext`\[Theta]], 
     Rational[-3, 8] 
     E^(Complex[0, 1] $CellContext`\[Phi]) (5/Pi)^Rational[1, 2] 
     Cos[$CellContext`\[Theta]] (-3 + 7 Cos[$CellContext`\[Theta]]^2) 
     Sin[$CellContext`\[Theta]], Rational[-1, 16] 
     E^(Complex[0, 1] $CellContext`\[Phi]) (Rational[165, 2]/Pi)^
      Rational[1, 2] (1 - 14 Cos[$CellContext`\[Theta]]^2 + 
      21 Cos[$CellContext`\[Theta]]^4) Sin[$CellContext`\[Theta]], 
     Rational[-1, 16] 
     E^(Complex[0, 1] $CellContext`\[Phi]) (Rational[273, 2]/Pi)^
      Rational[1, 2] 
     Cos[$CellContext`\[Theta]] (5 - 30 Cos[$CellContext`\[Theta]]^2 + 
      33 Cos[$CellContext`\[Theta]]^4) Sin[$CellContext`\[Theta]]}, {
    Rational[1, 4] 
     E^(Complex[0, 2] $CellContext`\[Phi]) (Rational[15, 2]/Pi)^
      Rational[1, 2] Sin[$CellContext`\[Theta]]^2, Rational[1, 4] 
     E^(Complex[0, 2] $CellContext`\[Phi]) (Rational[105, 2]/Pi)^
      Rational[1, 2] Cos[$CellContext`\[Theta]] Sin[$CellContext`\[Theta]]^2, 
     Rational[3, 8] 
     E^(Complex[0, 2] $CellContext`\[Phi]) (Rational[5, 2]/Pi)^
      Rational[1, 2] (-1 + 7 Cos[$CellContext`\[Theta]]^2) 
     Sin[$CellContext`\[Theta]]^2, Rational[1, 8] 
     E^(Complex[0, 2] $CellContext`\[Phi]) (Rational[1155, 2]/Pi)^
      Rational[1, 2] 
     Cos[$CellContext`\[Theta]] (-1 + 3 Cos[$CellContext`\[Theta]]^2) 
     Sin[$CellContext`\[Theta]]^2, Rational[1, 64] 
     E^(Complex[0, 2] $CellContext`\[Phi]) (1365/Pi)^Rational[1, 2] (1 - 18 
      Cos[$CellContext`\[Theta]]^2 + 33 Cos[$CellContext`\[Theta]]^4) 
     Sin[$CellContext`\[Theta]]^2}, {
    Rational[-1, 8] 
     E^(Complex[0, 3] $CellContext`\[Phi]) (35/Pi)^Rational[1, 2] 
     Sin[$CellContext`\[Theta]]^3, Rational[-3, 8] 
     E^(Complex[0, 3] $CellContext`\[Phi]) (35/Pi)^Rational[1, 2] 
     Cos[$CellContext`\[Theta]] Sin[$CellContext`\[Theta]]^3, 
     Rational[-1, 32] 
     E^(Complex[0, 3] $CellContext`\[Phi]) (385/Pi)^Rational[1, 2] (-1 + 
      9 Cos[$CellContext`\[Theta]]^2) Sin[$CellContext`\[Theta]]^3, 
     Rational[-1, 32] 
     E^(Complex[0, 3] $CellContext`\[Phi]) (1365/Pi)^Rational[1, 2] 
     Cos[$CellContext`\[Theta]] (-3 + 11 Cos[$CellContext`\[Theta]]^2) 
     Sin[$CellContext`\[Theta]]^3}, {
    Rational[3, 16] 
     E^(Complex[0, 4] $CellContext`\[Phi]) (Rational[35, 2]/Pi)^
      Rational[1, 2] Sin[$CellContext`\[Theta]]^4, Rational[3, 16] 
     E^(Complex[0, 4] $CellContext`\[Phi]) (Rational[385, 2]/Pi)^
      Rational[1, 2] Cos[$CellContext`\[Theta]] Sin[$CellContext`\[Theta]]^4, 
     Rational[3, 32] 
     E^(Complex[0, 4] $CellContext`\[Phi]) (Rational[91, 2]/Pi)^
      Rational[1, 2] (-1 + 11 Cos[$CellContext`\[Theta]]^2) 
     Sin[$CellContext`\[Theta]]^4}, {
    Rational[-3, 32] 
     E^(Complex[0, 5] $CellContext`\[Phi]) (77/Pi)^Rational[1, 2] 
     Sin[$CellContext`\[Theta]]^5, Rational[-3, 32] 
     E^(Complex[0, 5] $CellContext`\[Phi]) (1001/Pi)^Rational[1, 2] 
     Cos[$CellContext`\[Theta]] Sin[$CellContext`\[Theta]]^5}, {
    Rational[1, 64] 
     E^(Complex[0, 6] $CellContext`\[Phi]) (3003/Pi)^Rational[1, 2] 
     Sin[$CellContext`\[Theta]]^6}}]]], "Output",
 CellChangeTimes->{
  3.4598552690825157`*^9, {3.459869168210636*^9, 3.4598691857046328`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 752},
WindowMargins->{{195, Automatic}, {Automatic, 113}},
FrontEndVersion->"6.0 for Mac OS X x86 (32-bit) (June 19, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[590, 23, 380, 7, 27, "Input"],
Cell[973, 32, 222, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1232, 43, 187, 4, 27, "Input"],
Cell[1422, 49, 153, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1612, 57, 299, 6, 27, "Input"],
Cell[1914, 65, 202, 5, 30, "Output"]
}, Open  ]],
Cell[2131, 73, 78, 2, 27, "Input",
 CellID->892036778],
Cell[CellGroupData[{
Cell[2234, 79, 248, 5, 27, "Input"],
Cell[2485, 86, 392, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2914, 103, 448, 10, 27, "Input"],
Cell[3365, 115, 723, 21, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4125, 141, 277, 6, 27, "Input"],
Cell[4405, 149, 842, 24, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5284, 178, 551, 15, 35, "Input"],
Cell[5838, 195, 2995, 91, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8870, 291, 563, 12, 27, "Input"],
Cell[9436, 305, 1619, 37, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11092, 347, 411, 10, 27, "Input",
 CellID->136445987],
Cell[11506, 359, 412, 11, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11955, 375, 1762, 61, 82, "Input"],
Cell[13720, 438, 87, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13844, 444, 200, 5, 27, "Input"],
Cell[14047, 451, 253, 8, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14337, 464, 1918, 39, 48, "Input"],
Cell[16258, 505, 961, 17, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17256, 527, 781, 22, 64, "Input"],
Cell[18040, 551, 275, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18352, 562, 501, 14, 47, "Input"],
Cell[18856, 578, 115, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19008, 585, 660, 15, 27, "Input"],
Cell[19671, 602, 115234, 1905, 472, 82798, 1372, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134942, 2512, 208, 4, 27, "Input"],
Cell[135153, 2518, 283, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135473, 2532, 611, 18, 46, "Input"],
Cell[136087, 2552, 34411, 572, 232, 23299, 388, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170535, 3129, 814, 18, 27, "Input"],
Cell[171352, 3149, 38060, 631, 240, 27266, 453, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209449, 3785, 750, 15, 27, "Input"],
Cell[210202, 3802, 24348, 407, 231, 15162, 255, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234587, 4214, 499, 14, 33, "Input"],
Cell[235089, 4230, 25973, 434, 225, 19322, 323, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261099, 4669, 338, 9, 27, "Input"],
Cell[261440, 4680, 468, 14, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261945, 4699, 1011, 21, 27, "Input"],
Cell[262959, 4722, 554, 8, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263550, 4735, 417, 12, 27, "Input"],
Cell[263970, 4749, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264077, 4755, 675, 18, 34, "Input"],
Cell[264755, 4775, 775, 22, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265567, 4802, 438, 10, 27, "Input"],
Cell[266008, 4814, 191, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266236, 4822, 1629, 56, 51, "Input"],
Cell[267868, 4880, 88, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267993, 4886, 278, 7, 47, "Input"],
Cell[268274, 4895, 88, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268399, 4901, 1066, 23, 27, "Input"],
Cell[269468, 4926, 638, 19, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270143, 4950, 1018, 32, 61, "Input"],
Cell[271164, 4984, 1354, 33, 163, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272555, 5022, 1372, 39, 61, "Input"],
Cell[273930, 5063, 1312, 33, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275279, 5101, 1012, 27, 48, "Input"],
Cell[276294, 5130, 1217, 31, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277548, 5166, 719, 22, 63, "Input"],
Cell[278270, 5190, 137, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278444, 5197, 840, 22, 27, "Input"],
Cell[279287, 5221, 1485, 36, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280809, 5262, 1043, 26, 43, "Input"],
Cell[281855, 5290, 1719, 39, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283611, 5334, 1090, 27, 43, "Input"],
Cell[284704, 5363, 1975, 42, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286716, 5410, 1615, 37, 64, "Input"],
Cell[288334, 5449, 1785, 40, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290156, 5494, 2009, 47, 64, "Input"],
Cell[292168, 5543, 2052, 43, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294257, 5591, 197, 4, 27, "Input"],
Cell[294457, 5597, 2328, 52, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296822, 5654, 148, 3, 27, "Input"],
Cell[296973, 5659, 865, 22, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297875, 5686, 1020, 28, 63, "Input"],
Cell[298898, 5716, 1580, 35, 157, "Output"]
}, Open  ]],
Cell[300493, 5754, 2279, 64, 101, "Input"],
Cell[CellGroupData[{
Cell[302797, 5822, 149, 3, 27, "Input"],
Cell[302949, 5827, 2999, 54, 143, "Output"]
}, Open  ]],
Cell[305963, 5884, 2957, 53, 193, "Input"],
Cell[CellGroupData[{
Cell[308945, 5941, 1256, 31, 58, "Input"],
Cell[310204, 5974, 399, 8, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310640, 5987, 1302, 37, 71, "Input"],
Cell[311945, 6026, 2036, 44, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314018, 6075, 1073, 27, 43, "Input"],
Cell[315094, 6104, 2084, 45, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317215, 6154, 10870, 326, 559, "Input"],
Cell[328088, 6482, 2009, 43, 157, "Output"],
Cell[330100, 6527, 1706, 37, 141, "Output"],
Cell[331809, 6566, 1827, 37, 125, "Output"],
Cell[333639, 6605, 1848, 45, 109, "Output"],
Cell[335490, 6652, 1606, 36, 93, "Output"],
Cell[337099, 6690, 1406, 35, 77, "Output"],
Cell[338508, 6727, 1204, 28, 61, "Output"],
Cell[339715, 6757, 991, 25, 45, "Output"],
Cell[340709, 6784, 816, 20, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341562, 6809, 10430, 317, 559, "Input"],
Cell[351995, 7128, 1748, 36, 157, "Output"],
Cell[353746, 7166, 1987, 46, 157, "Output"],
Cell[355736, 7214, 1711, 39, 157, "Output"],
Cell[357450, 7255, 1657, 38, 157, "Output"],
Cell[359110, 7295, 1512, 35, 157, "Output"],
Cell[360625, 7332, 1428, 37, 157, "Output"],
Cell[362056, 7371, 1238, 32, 157, "Output"],
Cell[363297, 7405, 1070, 30, 157, "Output"],
Cell[364370, 7437, 916, 28, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365323, 7470, 1205, 29, 43, "Input"],
Cell[366531, 7501, 1913, 40, 141, "Output"]
}, Open  ]],
Cell[368459, 7544, 422, 12, 27, "Input"],
Cell[CellGroupData[{
Cell[368906, 7560, 580, 15, 27, "Input"],
Cell[369489, 7577, 182, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369708, 7585, 965, 26, 43, "Input"],
Cell[370676, 7613, 557, 10, 23, "Message"]
}, Open  ]],
Cell[371248, 7626, 28, 0, 20, "Message"],
Cell[371279, 7628, 675, 12, 41, "Message"],
Cell[371957, 7642, 676, 12, 42, "Message"],
Cell[372636, 7656, 458, 9, 23, "Message"],
Cell[373097, 7667, 6734, 131, 260, "Output"],
Cell[CellGroupData[{
Cell[379856, 7802, 1451, 39, 64, "Input"],
Cell[381310, 7843, 2429, 71, 169, "Output"]
}, Open  ]],
Cell[383754, 7917, 69, 1, 27, "Input"],
Cell[CellGroupData[{
Cell[383848, 7922, 1183, 35, 64, "Input"],
Cell[385034, 7959, 1955, 59, 143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387026, 8023, 215, 5, 27, "Input"],
Cell[387244, 8030, 175, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387456, 8039, 204, 4, 27, "Input"],
Cell[387663, 8045, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387770, 8051, 963, 25, 43, "Input"],
Cell[388736, 8078, 1898, 53, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390671, 8136, 488, 13, 27, "Input"],
Cell[391162, 8151, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391269, 8157, 1841, 51, 85, "Input"],
Cell[393113, 8210, 1447, 34, 178, "Output"],
Cell[394563, 8246, 1447, 34, 178, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396047, 8285, 940, 31, 85, "Input"],
Cell[396990, 8318, 1442, 32, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398469, 8355, 1517, 49, 86, "Input"],
Cell[399989, 8406, 1799, 35, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401825, 8446, 209, 4, 27, "Input"],
Cell[402037, 8452, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402144, 8458, 222, 5, 27, "Input"],
Cell[402369, 8465, 182, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402588, 8473, 1236, 39, 101, "Input"],
Cell[403827, 8514, 218, 4, 45, "Output"],
Cell[404048, 8520, 218, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404303, 8529, 977, 32, 106, "Input"],
Cell[405283, 8563, 168, 3, 45, "Output"],
Cell[405454, 8568, 168, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405659, 8576, 1152, 37, 100, "Input"],
Cell[406814, 8615, 155, 3, 45, "Output"],
Cell[406972, 8620, 155, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407164, 8628, 389, 11, 33, "Input"],
Cell[407556, 8641, 95, 2, 45, "Output"]
}, Open  ]],
Cell[407666, 8646, 638, 15, 33, "Input"],
Cell[CellGroupData[{
Cell[408329, 8665, 336, 10, 59, "Input"],
Cell[408668, 8677, 291, 9, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408996, 8691, 202, 5, 27, "Input"],
Cell[409201, 8698, 92, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409330, 8704, 690, 18, 33, "Input"],
Cell[410023, 8724, 807, 22, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410867, 8751, 472, 14, 33, "Input"],
Cell[411342, 8767, 1319, 40, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412698, 8812, 892, 26, 57, "Input"],
Cell[413593, 8840, 585, 19, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414215, 8864, 389, 11, 33, "Input"],
Cell[414607, 8877, 1261, 39, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415905, 8921, 487, 13, 33, "Input"],
Cell[416395, 8936, 9290, 247, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425722, 9188, 8952, 235, 327, "Input"],
Cell[434677, 9425, 1474, 24, 71, "Message"],
Cell[436154, 9451, 1734, 27, 93, "Message"],
Cell[437891, 9480, 1341, 22, 80, "Message"],
Cell[439235, 9504, 460, 9, 23, "Message"],
Cell[439698, 9515, 131, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439866, 9522, 2205, 69, 131, "Input"],
Cell[442074, 9593, 37150, 616, 224, 29606, 491, "CachedBoxData", "BoxData", \
"Output"],
Cell[479227, 10211, 298, 5, 27, "Output"],
Cell[479528, 10218, 297, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479862, 10228, 1946, 56, 130, "Input"],
Cell[481811, 10286, 38908, 646, 209, 31774, 527, "CachedBoxData", "BoxData", \
"Output"],
Cell[520722, 10934, 171, 3, 30, "Output"],
Cell[520896, 10939, 171, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521104, 10947, 883, 33, 54, "Input"],
Cell[521990, 10982, 106, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522133, 10989, 904, 24, 27, "Input"],
Cell[523040, 11015, 1708, 42, 115, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524785, 11062, 1131, 33, 53, "Input"],
Cell[525919, 11097, 1755, 43, 115, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527711, 11145, 819, 27, 85, "Input"],
Cell[528533, 11174, 122, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528692, 11181, 1131, 28, 27, "Input"],
Cell[529826, 11211, 2863, 55, 115, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532726, 11271, 935, 25, 27, "Input"],
Cell[533664, 11298, 1896, 42, 115, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535597, 11345, 955, 25, 27, "Input"],
Cell[536555, 11372, 1646, 38, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538238, 11415, 1388, 42, 58, "Input"],
Cell[539629, 11459, 3470, 79, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543136, 11543, 102, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[543263, 11548, 844, 18, 103, "Input"],
Cell[544110, 11568, 130, 4, 49, "Output"],
Cell[544243, 11574, 198, 6, 53, "Output"],
Cell[544444, 11582, 331, 10, 53, "Output"],
Cell[544778, 11594, 321, 11, 53, "Output"],
Cell[545102, 11607, 379, 11, 53, "Output"],
Cell[545484, 11620, 348, 10, 53, "Output"]
}, Open  ]],
Cell[545847, 11633, 1018, 20, 43, "Input"],
Cell[CellGroupData[{
Cell[546890, 11657, 369, 9, 27, "Input"],
Cell[547262, 11668, 2381, 71, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549680, 11744, 244, 5, 33, "Input"],
Cell[549927, 11751, 376, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550340, 11767, 308, 8, 33, "Input"],
Cell[550651, 11777, 247, 7, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550935, 11789, 444, 9, 33, "Input"],
Cell[551382, 11800, 513, 14, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551932, 11819, 502, 14, 33, "Input"],
Cell[552437, 11835, 417, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552891, 11852, 243, 4, 27, "Input"],
Cell[553137, 11858, 403, 11, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553577, 11874, 508, 13, 27, "Input"],
Cell[554088, 11889, 16641, 438, 319, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
